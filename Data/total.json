[
    {
        "idx": 0,
        "db": "tvshow",
        "interaction": [
            {
                "User": "Can we add a new TV series to the database? The values for id, Episode, Air_Date, Rating, Share, 18_49_Rating_Share, Viewers_m, Weekly_Rank, and Channel can be 13, 'Mystery of the Lost', 'March 10, 2023', '7.2', 12, '4.5/11', '11.5', 20, '703'",
                "Answer": "INSERT INTO TV_series (id, Episode, Air_Date, Rating, Share, `18_49_Rating_Share`, Viewers_m, Weekly_Rank, Channel) VALUES (13, 'Mystery of the Lost', 'March 10, 2023', '7.2', 12, '4.5/11', '11.5', 20, '703');"
            },
            {
                "User": "I'd like to update the air date for the cartoon with id 2 to 'December 1, 2008'. Can you do that?",
                "Answer": "UPDATE Cartoon SET Original_air_date = 'December 1, 2008' WHERE id = 2;"
            },
            {
                "User": "Can we create a new table to track the genres of TV series?",
                "Answer": "CREATE TABLE TV_series_genres (SeriesId number, Genre text, FOREIGN KEY (SeriesId) REFERENCES TV_series(id));"
            },
            {
                "User": "Let's add a column for the number of seasons to the TV_series table.",
                "Answer": "ALTER TABLE TV_series ADD Seasons number;"
            },
            {
                "User": "Can we insert a new genre for the TV series with id 1? The genre is 'Drama'.",
                "Answer": "INSERT INTO TV_series_genres (SeriesId, Genre) VALUES (1, 'Drama');"
            },
            {
                "User": "We need to update the package option for the TV channel with id 700 to 'Sky Premium'. Can you update it?",
                "Answer": "UPDATE TV_Channel SET Package_Option = 'Sky Premium' WHERE id = '700';"
            },
            {
                "User": "How can I list all TV series along with their genres?",
                "Answer": "SELECT T1.Episode, T2.Genre FROM TV_series AS T1 JOIN TV_series_genres AS T2 ON T1.id = T2.SeriesId;"
            },
            {
                "User": "Is it possible to track the number of episodes for each TV series? We should add a column for it.",
                "Answer": "ALTER TABLE TV_series ADD Episodes_count number;"
            },
            {
                "User": "Can we record a new season for the TV series with id 3? Let's set the number of seasons to 4.",
                "Answer": "UPDATE TV_series SET Seasons = 4 WHERE id = 3;"
            },
            {
                "User": "Can you show me the top 5 TV series by viewers in millions?",
                "Answer": "SELECT Episode, Viewers_m FROM TV_series ORDER BY CAST(Viewers_m AS FLOAT) DESC LIMIT 5;"
            },
            {
                "User": "I want to add a new cartoon. Its id, Title, Directed_by, Written_by, Original_air_date, Production_code, and Channel are 13, 'The Great Adventure', 'Jane Smith', 'John Doe', 'January 20, 2023', 201, '702'.",
                "Answer": "INSERT INTO Cartoon (id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel) VALUES (13, 'The Great Adventure', 'Jane Smith', 'John Doe', 'January 20, 2023', 201, '702');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 1,
        "db": "car_1",
        "interaction": [
            {
                "User": "Can we add a new continent named 'Oceania' to the database?",
                "Answer": "INSERT INTO continents (ContId, Continent) VALUES (6, 'Oceania');"
            },
            {
                "User": "I'd like to add a new country called 'Australia' in the continent 'Oceania'.",
                "Answer": "INSERT INTO countries (CountryId, CountryName, Continent) VALUES (16, 'Australia', 4);"
            },
            {
                "User": "Let's create a new table to keep track of car features like sunroof and navigation system.",
                "Answer": "CREATE TABLE car_features (FeatureId number PRIMARY KEY, ModelId number, Sunroof boolean, Navigation boolean, FOREIGN KEY (ModelId) REFERENCES model_list(ModelId));"
            },
            {
                "User": "Can we add a new feature record for ModelId 15 indicating it has a sunroof but no navigation system?",
                "Answer": "INSERT INTO car_features (FeatureId, ModelId, Sunroof, Navigation) VALUES (1, 15, TRUE, FALSE);"
            },
            {
                "User": "Let's update the country for maker id 2 to be 'Australia'.",
                "Answer": "UPDATE CAR_MAKERS SET Country = '16' WHERE Id = 2;"
            },
            {
                "User": "I noticed we don't have a column for the number of doors in cars_data. Can we add that?",
                "Answer": "ALTER TABLE cars_data ADD Doors number;"
            },
            {
                "User": "For car data id 1, can we set the number of doors to 4?",
                "Answer": "UPDATE cars_data SET Doors = 4 WHERE Id = 1;"
            },
            {
                "User": "Can we create a table to track car maintenance records with fields for maintenance id, car id, date, and description?",
                "Answer": "CREATE TABLE maintenance_records (MaintenanceId number PRIMARY KEY, CarId number, MaintenanceDate date, Description text, FOREIGN KEY (CarId) REFERENCES cars_data(Id));"
            },
            {
                "User": "Let's insert a maintenance record for car id 2 with today's date and a description of 'oil change'.",
                "Answer": "INSERT INTO maintenance_records (MaintenanceId, CarId, MaintenanceDate, Description) VALUES (1, 2, CURRENT_DATE, 'oil change');"
            },
            {
                "User": "How can we list all models that have a sunroof according to our new car_features table?",
                "Answer": "SELECT T1.Model FROM model_list AS T1 JOIN car_features AS T2 ON T1.ModelId = T2.ModelId WHERE T2.Sunroof = TRUE;"
            },
            {
                "User": "Can we add a new model for maker id 3 named 'iX3'?",
                "Answer": "INSERT INTO model_list (ModelId, Maker, Model) VALUES (37, 3, 'iX3');"
            },
            {
                "User": "Let's update the MPG of car data id 3 to be '22'.",
                "Answer": "UPDATE cars_data SET MPG = '22' WHERE Id = 3;"
            },
            {
                "User": "Can we add a column 'ReleaseDate' to the car_names table to track when each model was first released?",
                "Answer": "ALTER TABLE car_names ADD ReleaseDate date;"
            },
            {
                "User": "For the car with MakeId 1, can we set the release date to January 1, 1970?",
                "Answer": "UPDATE car_names SET ReleaseDate = '1970-01-01' WHERE MakeId = 1;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 2,
        "db": "flight_2",
        "interaction": [
            {
                "User": "Can we add a new airline to the database? The values for the new airline of uid, Airline, Abbreviation, Country are 13, 'SkyHigh', 'SKH', 'Netherlands'",
                "Answer": "INSERT INTO airlines (uid, Airline, Abbreviation, Country) VALUES (13, 'SkyHigh', 'SKH', 'Netherlands');"
            },
            {
                "User": "I'd like to update the abbreviation of 'United Airlines'. Can we change it from 'UAL' to 'UNITD'?",
                "Answer": "UPDATE airlines SET Abbreviation = 'UNITD' WHERE uid = 1;"
            },
            {
                "User": "Can we create a table to track the baggage policies of each airline?",
                "Answer": "CREATE TABLE baggage_policies (PolicyId number PRIMARY KEY, AirlineId number, CheckedBaggage number, CarryOn number, ExcessBaggageFee number, FOREIGN KEY (AirlineId) REFERENCES airlines(uid));"
            },
            {
                "User": "How about adding a column to track the number of terminals in each airport?",
                "Answer": "ALTER TABLE airports ADD Terminals number;"
            },
            {
                "User": "Can we insert the baggage policy data for 'SkyHigh' airline? PolicyId, AirlineId, CheckedBaggage, CarryOn, ExcessBaggageFee can be assigned to 101, 13, 2, 1, 50",
                "Answer": "INSERT INTO baggage_policies (PolicyId, AirlineId, CheckedBaggage, CarryOn, ExcessBaggageFee) VALUES (101, 13, 2, 1, 50);"
            },
            {
                "User": "Let's update the number of terminals for 'Phillips AAF' airport in Aberdeen. Can we set it to 3?",
                "Answer": "UPDATE airports SET Terminals = 3 WHERE AirportName = 'Phillips AAF';"
            },
            {
                "User": "How can I list all airlines along with their baggage policies?",
                "Answer": "SELECT T1.Airline, T2.CheckedBaggage, T2.CarryOn, T2.ExcessBaggageFee FROM airlines AS T1 JOIN baggage_policies AS T2 ON T1.uid = T2.AirlineId;"
            },
            {
                "User": "I need to correct the country abbreviation for 'Phillips AAF' airport. It should be 'USA', not 'US '.",
                "Answer": "UPDATE airports SET CountryAbbrev = 'USA' WHERE AirportName = 'Phillips AAF';"
            },
            {
                "User": "Can we track which flights are international? I want to add a column to mark international flights.",
                "Answer": "ALTER TABLE flights ADD IsInternational boolean;"
            },
            {
                "User": "Mark the flight with FlightNo 28 from 'APG' to 'ASY' as international.",
                "Answer": "UPDATE flights SET IsInternational = true WHERE FlightNo = 28 AND SourceAirport = 'APG' AND DestAirport = 'ASY';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 3,
        "db": "voter_1",
        "interaction": [
            {
                "User": "Can we add a new state area code to the database? The values for area_code and state are 204, 'TX'",
                "Answer": "INSERT INTO AREA_CODE_STATE (area_code, state) VALUES (204, 'TX');"
            },
            {
                "User": "I'd like to correct the state name for area code 203 to 'Connecticut'.",
                "Answer": "UPDATE AREA_CODE_STATE SET state = 'Connecticut' WHERE area_code = 203;"
            },
            {
                "User": "Can we create a table to track the judges of the contest?",
                "Answer": "CREATE TABLE JUDGES (judge_id number PRIMARY KEY, judge_name text);"
            },
            {
                "User": "How about adding a column to track the email addresses of the contestants?",
                "Answer": "ALTER TABLE CONTESTANTS ADD email text;"
            },
            {
                "User": "Can we insert a new contestant into the CONTESTANTS table? contestant_number and contestant_name can be 12, 'Jamie Smith'",
                "Answer": "INSERT INTO CONTESTANTS (contestant_number, contestant_name) VALUES (12, 'Jamie Smith');"
            },
            {
                "User": "Let's update the phone number for the vote_id 1 to be 7182887234.",
                "Answer": "UPDATE VOTES SET phone_number = 7182887234 WHERE vote_id = 1;"
            },
            {
                "User": "Can we add a new column to track the time zone of each state in the AREA_CODE_STATE table?",
                "Answer": "ALTER TABLE AREA_CODE_STATE ADD time_zone text;"
            },
            {
                "User": "I need to add a judge to the JUDGES table. The judge_id and judge_name are 101, 'Alicia Keys'",
                "Answer": "INSERT INTO JUDGES (judge_id, judge_name) VALUES (101, 'Alicia Keys');"
            },
            {
                "User": "How can I list all contestants along with their email addresses?",
                "Answer": "SELECT contestant_name, email FROM CONTESTANTS;"
            },
            {
                "User": "Can we update the email address for contestant number 3 to 'kelly.clauss@example.com'?",
                "Answer": "UPDATE CONTESTANTS SET email = 'kelly.clauss@example.com' WHERE contestant_number = 3;"
            },
            {
                "User": "Let's create a new table to store the vote counts for each contestant.",
                "Answer": "CREATE TABLE CONTESTANT_VOTES (contestant_number number, vote_count number, FOREIGN KEY (contestant_number) REFERENCES CONTESTANTS(contestant_number));"
            },
            {
                "User": "Can you insert a record in the CONTESTANT_VOTES table for contestant number 2 with 150 votes?",
                "Answer": "INSERT INTO CONTESTANT_VOTES (contestant_number, vote_count) VALUES (2, 150);"
            },
            {
                "User": "How about updating the vote count for contestant number 2 to 200 in the CONTESTANT_VOTES table?",
                "Answer": "UPDATE CONTESTANT_VOTES SET vote_count = 200 WHERE contestant_number = 2;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 4,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? The values for the new city of ID, Name, CountryCode, District, and Population are 4080, 'New Atlantis', 'OCE', 'Fantasy District', 50000",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'New Atlantis', 'OCE', 'Fantasy District', 50000);"
            },
            {
                "User": "I'd like to update the population for the city of Kabul. Can we change it to 1800000?",
                "Answer": "UPDATE city SET Population = 1800000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Can we create a table to track the largest cities in each country?",
                "Answer": "CREATE TABLE largest_cities (CountryCode text, CityName text, Population number, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "How about adding a column to track the date of independence for each country?",
                "Answer": "ALTER TABLE country ADD IndependenceDate text;"
            },
            {
                "User": "Let's insert the independence date for Afghanistan. The date is 1919-08-19.",
                "Answer": "UPDATE country SET IndependenceDate = '1919-08-19' WHERE Code = 'AFG';"
            },
            {
                "User": "Can we update the government form of Angola to be 'Presidential Republic'?",
                "Answer": "UPDATE country SET GovernmentForm = 'Presidential Republic' WHERE Code = 'AGO';"
            },
            {
                "User": "How can I list all languages spoken in Aruba along with their percentage?",
                "Answer": "SELECT Language, Percentage FROM countrylanguage WHERE CountryCode = 'ABW';"
            },
            {
                "User": "Can we insert a new official language for Angola? The language is 'English' and its percentage is 5.",
                "Answer": "INSERT INTO countrylanguage (CountryCode, Language, IsOfficial, Percentage) VALUES ('AGO', 'English', 'F', 5);"
            },
            {
                "User": "I want to add a new country to the database. The values for the new country of Code, Name, Continent, Region, SurfaceArea, Population, LifeExpectancy, GNP, LocalName, GovernmentForm, HeadOfState, Capital, Code2 are 'XYZ', 'Utopia', 'Fantasy', 'Dreamland', 5000.0, 100000, 100.0, 10000.0, 'Utopia', 'Monarchy', 'King Arthur', 4080, 'XY'",
                "Answer": "INSERT INTO country (Code, Name, Continent, Region, SurfaceArea, Population, LifeExpectancy, GNP, LocalName, GovernmentForm, HeadOfState, Capital, Code2) VALUES ('XYZ', 'Utopia', 'Fantasy', 'Dreamland', 5000.0, 100000, 100.0, 10000.0, 'Utopia', 'Monarchy', 'King Arthur', 4080, 'XY');"
            },
            {
                "User": "Can we list all cities with a population greater than 1 million in Asia?",
                "Answer": "SELECT Name, Population FROM city WHERE Population > 1000000 AND CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 5,
        "db": "concert_singer",
        "interaction": [
            {
                "User": "Can we add a new stadium to the database with the following details: Stadium_ID 11, Location 'Glasgow', Name 'Glasgow Arena', Capacity 50000, Highest 25000, Lowest 1500, Average 10000?",
                "Answer": "INSERT INTO stadium (Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average) VALUES (11, 'Glasgow', 'Glasgow Arena', 50000, 25000, 1500, 10000);"
            },
            {
                "User": "I'd like to update the capacity of 'Stark's Park' stadium to 15000. Can you make this change?",
                "Answer": "UPDATE stadium SET Capacity = 15000 WHERE Name = 'Stark''s Park';"
            },
            {
                "User": "Can we create a new table to track the ticket prices for each concert?",
                "Answer": "CREATE TABLE concert_ticket_prices (Price_ID number PRIMARY KEY, Concert_ID number, Stadium_ID number, Price_Category text, Price number, FOREIGN KEY (Concert_ID) REFERENCES concert(Concert_ID), FOREIGN KEY (Stadium_ID) REFERENCES stadium(Stadium_ID));"
            },
            {
                "User": "Is it possible to add a column to track the genre of music each singer performs?",
                "Answer": "ALTER TABLE singer ADD Genre text;"
            },
            {
                "User": "Let's insert ticket price data for concert ID 2. Price_ID can be 101, Stadium_ID 2, Price_Category 'VIP', and Price 200.",
                "Answer": "INSERT INTO concert_ticket_prices (Price_ID, Concert_ID, Stadium_ID, Price_Category, Price) VALUES (101, 2, 2, 'VIP', 200);"
            },
            {
                "User": "We need to set the genre for singer 'Timbaland' to 'Hip Hop'. How do we update this?",
                "Answer": "UPDATE singer SET Genre = 'Hip Hop' WHERE Name = 'Timbaland';"
            },
            {
                "User": "Can you show me all the concerts with their ticket prices?",
                "Answer": "SELECT T1.concert_Name, T2.Price_Category, T2.Price FROM concert AS T1 JOIN concert_ticket_prices AS T2 ON T1.concert_ID = T2.Concert_ID;"
            },
            {
                "User": "I want to record the number of songs each singer has. Can we add a column for this in the singer table?",
                "Answer": "ALTER TABLE singer ADD Song_Count number;"
            },
            {
                "User": "Let's update the song count for 'Joe Sharp' to 5. How can we do that?",
                "Answer": "UPDATE singer SET Song_Count = 5 WHERE Name = 'Joe Sharp';"
            },
            {
                "User": "How can I find the average ticket price for each stadium?",
                "Answer": "SELECT T1.Name, AVG(T2.Price) AS Average_Price FROM stadium AS T1 JOIN concert_ticket_prices AS T2 ON T1.Stadium_ID = T2.Stadium_ID GROUP BY T1.Name;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 6,
        "db": "orchestra",
        "interaction": [
            {
                "User": "Can we add a new conductor to the database? The values of the new conductor of Conductor_ID, Name, Age, Nationality, Year_of_Work are 13, 'Leonard Bernstein', 55, 'USA', 16",
                "Answer": "INSERT INTO conductor (Conductor_ID, Name, Age, Nationality, Year_of_Work) VALUES (13, 'Leonard Bernstein', 55, 'USA', 16);"
            },
            {
                "User": "I'd like to update the record company name for the 'London Symphony Orchestra'. Can we change it from 'Mercury Records' to 'Decca Records'?",
                "Answer": "UPDATE orchestra SET Record_Company = 'Decca Records' WHERE Orchestra = 'London Symphony Orchestra';"
            },
            {
                "User": "Can we create a table to keep track of ticket sales for each performance?",
                "Answer": "CREATE TABLE ticket_sales (Sale_ID number PRIMARY KEY, Performance_ID number, Tickets_Sold number, Sale_Date text, FOREIGN KEY (Performance_ID) REFERENCES performance(Performance_ID));"
            },
            {
                "User": "How about adding a column to track the genre of music each orchestra specializes in?",
                "Answer": "ALTER TABLE orchestra ADD Genre text;"
            },
            {
                "User": "Can we insert the ticket sales data for a specific performance? Sale_ID, Performance_ID, Tickets_Sold, Sale_Date can be assigned to 101, 1, 500, '2023-04-01'",
                "Answer": "INSERT INTO ticket_sales (Sale_ID, Performance_ID, Tickets_Sold, Sale_Date) VALUES (101, 1, 500, '2023-04-01');"
            },
            {
                "User": "Let's update the genre for the 'Columbia Symphony Orchestra' to be 'Classical'.",
                "Answer": "UPDATE orchestra SET Genre = 'Classical' WHERE Orchestra = 'Columbia Symphony Orchestra';"
            },
            {
                "User": "How can I list all orchestras along with their genres?",
                "Answer": "SELECT Orchestra, Genre FROM orchestra;"
            },
            {
                "User": "Can we add a new performance to the database? The values for Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share are 12, 2, 'Charity Concert', '2023-05-15', 2.5, '5', '18.0%'",
                "Answer": "INSERT INTO performance (Performance_ID, Orchestra_ID, Type, Date, `Official_ratings_(millions)`, Weekly_rank, Share) VALUES (12, 2, 'Charity Concert', '2023-05-15', 2.5, '5', '18.0%');"
            },
            {
                "User": "I noticed that the attendance for the first show at 'Glebe Park' seems incorrect. Can we update the attendance to 1126?",
                "Answer": "UPDATE show SET Attendance = 1126 WHERE Show_ID = 1 AND If_first_show = 'T';"
            },
            {
                "User": "Could we have a view that lists performances and their corresponding orchestras and conductors?",
                "Answer": "CREATE VIEW performance_details AS SELECT p.Performance_ID, o.Orchestra, c.Name AS Conductor_Name FROM performance p JOIN orchestra o ON p.Orchestra_ID = o.Orchestra_ID JOIN conductor c ON o.Conductor_ID = c.Conductor_ID;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 7,
        "db": "flight_2",
        "interaction": [
            {
                "User": "I need to add a new airline. Can we insert 'Global Air' with abbreviation 'GLO' and country 'USA'?",
                "Answer": "INSERT INTO airlines (uid, Airline, Abbreviation, Country) VALUES ((SELECT MAX(uid) + 1 FROM airlines), 'Global Air', 'GLO', 'USA');"
            },
            {
                "User": "Can we update the abbreviation for 'US Airways' to 'USAirways'?",
                "Answer": "UPDATE airlines SET Abbreviation = 'USAirways' WHERE Airline = 'US Airways';"
            },
            {
                "User": "Is it possible to create a new table to track the maintenance schedule of the flights?",
                "Answer": "CREATE TABLE maintenance_schedule (MaintenanceId number PRIMARY KEY, Airline number, FlightNo number, ScheduledDate text, FOREIGN KEY (Airline) REFERENCES flights(Airline), FOREIGN KEY (FlightNo) REFERENCES flights(FlightNo));"
            },
            {
                "User": "Let's add a new column to airports to record the number of runways they have.",
                "Answer": "ALTER TABLE airports ADD NumberOfRunways number;"
            },
            {
                "User": "Can we insert a maintenance record? The MaintenanceId, Airline, FlightNo, ScheduledDate can be 101, 1, 28, '2023-04-15'",
                "Answer": "INSERT INTO maintenance_schedule (MaintenanceId, Airline, FlightNo, ScheduledDate) VALUES (101, 1, 28, '2023-04-15');"
            },
            {
                "User": "Update the number of runways for the airport with code 'ABR' to 3.",
                "Answer": "UPDATE airports SET NumberOfRunways = 3 WHERE AirportCode = 'ABR';"
            },
            {
                "User": "How can I find the total number of flights each airline operates?",
                "Answer": "SELECT T1.Airline, count(*) AS TotalFlights FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid GROUP BY T1.Airline;"
            },
            {
                "User": "Could you provide a list of airports and their respective countries?",
                "Answer": "SELECT AirportName, Country FROM airports;"
            },
            {
                "User": "I want to record the date when a flight is retired. Can we add a 'RetiredDate' column to the flights table?",
                "Answer": "ALTER TABLE flights ADD RetiredDate text;"
            },
            {
                "User": "Let's retire a flight. Update the 'RetiredDate' for Airline 2, FlightNo 29 to '2023-05-01'.",
                "Answer": "UPDATE flights SET RetiredDate = '2023-05-01' WHERE Airline = 2 AND FlightNo = 29;"
            },
            {
                "User": "Can you show me all the flights that have been retired?",
                "Answer": "SELECT * FROM flights WHERE RetiredDate IS NOT NULL;"
            },
            {
                "User": "I'd like to see a report of airlines and the number of airports they fly to.",
                "Answer": "SELECT T2.Airline, count(DISTINCT T1.DestAirport) AS NumberOfAirports FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid GROUP BY T2.Airline;"
            },
            {
                "User": "Please add a new column 'FoundedYear' to the airlines table to track the year each airline was founded.",
                "Answer": "ALTER TABLE airlines ADD FoundedYear number;"
            },
            {
                "User": "Update the 'FoundedYear' for 'United Airlines' to 1926.",
                "Answer": "UPDATE airlines SET FoundedYear = 1926 WHERE Airline = 'United Airlines';"
            },
            {
                "User": "Let's create a table for tracking customer feedback with columns FeedbackId, Airline, FlightNo, Rating, Comments.",
                "Answer": "CREATE TABLE customer_feedback (FeedbackId number PRIMARY KEY, Airline number, FlightNo number, Rating number, Comments text, FOREIGN KEY (Airline) REFERENCES flights(Airline), FOREIGN KEY (FlightNo) REFERENCES flights(FlightNo));"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 8,
        "db": "pets_1",
        "interaction": [
            {
                "User": "Can we add a new student to the database with the following details: StuID 1051, LastName 'Brown', FirstName 'Kevin', Age 20, Sex 'M', Major 601, Advisor 7712, city_code 'NYC'?",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1051, 'Brown', 'Kevin', 20, 'M', 601, 7712, 'NYC');"
            },
            {
                "User": "I'd like to update the city code for student with StuID 1001 to 'NYC'.",
                "Answer": "UPDATE Student SET city_code = 'NYC' WHERE StuID = 1001;"
            },
            {
                "User": "Can we create a table to track the vaccination status of each pet?",
                "Answer": "CREATE TABLE pet_vaccination (VaccinationID number PRIMARY KEY, PetID number, VaccinationStatus text, VaccinationDate date, FOREIGN KEY (PetID) REFERENCES Pets(PetID));"
            },
            {
                "User": "How about adding a column to track the breed of each dog?",
                "Answer": "ALTER TABLE Pets ADD Breed text;"
            },
            {
                "User": "Let's insert the vaccination data for a pet. VaccinationID, PetID, VaccinationStatus, VaccinationDate can be set to 3001, 2002, 'Complete', '2023-04-01'",
                "Answer": "INSERT INTO pet_vaccination (VaccinationID, PetID, VaccinationStatus, VaccinationDate) VALUES (3001, 2002, 'Complete', '2023-04-01');"
            },
            {
                "User": "Can we update the pet weight for PetID 2003 to 10.5?",
                "Answer": "UPDATE Pets SET weight = 10.5 WHERE PetID = 2003;"
            },
            {
                "User": "How can I find the names of all students who have a pet with a complete vaccination status?",
                "Answer": "SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN pet_vaccination AS T3 ON T2.PetID = T3.PetID WHERE T3.VaccinationStatus = 'Complete';"
            },
            {
                "User": "Can we add a new pet to the database? The values for PetID, PetType, pet_age, weight are 2004, 'parrot', 2, 0.3",
                "Answer": "INSERT INTO Pets (PetID, PetType, pet_age, weight) VALUES (2004, 'parrot', 2, 0.3);"
            },
            {
                "User": "I want to assign the new pet with PetID 2004 to the student with StuID 1002. How can I do that?",
                "Answer": "INSERT INTO Has_Pet (StuID, PetID) VALUES (1002, 2004);"
            },
            {
                "User": "Let's update the major for student Linda Smith to 601. What's the SQL statement for that?",
                "Answer": "UPDATE Student SET Major = 601 WHERE LName = 'Smith' AND Fname = 'Linda';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 9,
        "db": "poker_player",
        "interaction": [
            {
                "User": "Can we add a new poker player with the following details: Poker_Player_ID 6, People_ID 8, Final_Table_Made 5, Best_Finish 2, Money_Rank 50, and Earnings 250000?",
                "Answer": "INSERT INTO poker_player (Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings) VALUES (6, 8, 5, 2, 50, 250000);"
            },
            {
                "User": "I'd like to correct the earnings for the player with Poker_Player_ID 2. Can we update it to 200000?",
                "Answer": "UPDATE poker_player SET Earnings = 200000 WHERE Poker_Player_ID = 2;"
            },
            {
                "User": "Can we create a new table to track the number of tournaments each player has participated in?",
                "Answer": "CREATE TABLE tournament_participation (Participation_ID number PRIMARY KEY, Poker_Player_ID number, Tournaments_Participated number, FOREIGN KEY (Poker_Player_ID) REFERENCES poker_player(Poker_Player_ID));"
            },
            {
                "User": "How about adding a column for email addresses to the people table?",
                "Answer": "ALTER TABLE people ADD Email text;"
            },
            {
                "User": "Let's insert the tournament participation data for a specific player. Participation_ID, Poker_Player_ID, Tournaments_Participated can be assigned to 101, 3, 15",
                "Answer": "INSERT INTO tournament_participation (Participation_ID, Poker_Player_ID, Tournaments_Participated) VALUES (101, 3, 15);"
            },
            {
                "User": "Can we update the nationality of People_ID 3 to 'USA'?",
                "Answer": "UPDATE people SET Nationality = 'USA' WHERE People_ID = 3;"
            },
            {
                "User": "How can I get a list of all poker players along with their names and nationalities?",
                "Answer": "SELECT pp.Poker_Player_ID, p.Name, p.Nationality FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID;"
            },
            {
                "User": "Can we add a new person to the database? The values for People_ID, Nationality, Name, Birth_Date, Height are 8, 'Canada', 'Jordan Smith', 'March 5, 1990', 175",
                "Answer": "INSERT INTO people (People_ID, Nationality, Name, Birth_Date, Height) VALUES (8, 'Canada', 'Jordan Smith', 'March 5, 1990', 175);"
            },
            {
                "User": "Could you show me the top 3 players with the highest earnings?",
                "Answer": "SELECT * FROM poker_player ORDER BY Earnings DESC LIMIT 3;"
            },
            {
                "User": "What if we want to track the cities where each tournament was held? Can we add a new table for that?",
                "Answer": "CREATE TABLE tournament_locations (Location_ID number PRIMARY KEY, City text, Country text);"
            },
            {
                "User": "Please add a record for a tournament held in Las Vegas, USA to the tournament_locations table.",
                "Answer": "INSERT INTO tournament_locations (Location_ID, City, Country) VALUES (301, 'Las Vegas', 'USA');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 10,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? The values for ID, Name, CountryCode, District, Population are 4080, 'Newtown', 'XYZ', 'New District', 50000",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'Newtown', 'XYZ', 'New District', 50000);"
            },
            {
                "User": "I want to update the population of Kabul to reflect the latest census. The new population is 1800000. Can we do that?",
                "Answer": "UPDATE city SET Population = 1800000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Can we create a new table to keep track of the mayors of each city?",
                "Answer": "CREATE TABLE city_mayors (MayorId number PRIMARY KEY, CityId number, Name text, TermStartYear number, FOREIGN KEY (CityId) REFERENCES city(ID));"
            },
            {
                "User": "Let's add a column to the country table to track the national animal for each country.",
                "Answer": "ALTER TABLE country ADD NationalAnimal text;"
            },
            {
                "User": "Can we insert information about the national animal of Afghanistan? The national animal is the 'Snow Leopard'.",
                "Answer": "UPDATE country SET NationalAnimal = 'Snow Leopard' WHERE Code = 'AFG';"
            },
            {
                "User": "We need to update the government form of Angola to 'Presidential Republic'. How can we do that?",
                "Answer": "UPDATE country SET GovernmentForm = 'Presidential Republic' WHERE Code = 'AGO';"
            },
            {
                "User": "Can we list all the cities in Afghanistan along with their population?",
                "Answer": "SELECT Name, Population FROM city WHERE CountryCode = 'AFG';"
            },
            {
                "User": "I'd like to add a new language spoken in Aruba. The language is 'Japanese' with a percentage of 12.5. Is it official? No.",
                "Answer": "INSERT INTO countrylanguage (CountryCode, Language, IsOfficial, Percentage) VALUES ('ABW', 'Japanese', 'F', 12.5);"
            },
            {
                "User": "Let's create a table to store information about each country's currency.",
                "Answer": "CREATE TABLE country_currency (CountryCode text PRIMARY KEY, CurrencyName text, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "Can we insert the currency data for Angola? The currency is 'Kwanza'.",
                "Answer": "INSERT INTO country_currency (CountryCode, CurrencyName) VALUES ('AGO', 'Kwanza');"
            },
            {
                "User": "How about adding a column to the city table to indicate whether it's a capital city or not?",
                "Answer": "ALTER TABLE city ADD IsCapital boolean;"
            },
            {
                "User": "Can we set Kabul as the capital city in the updated city table?",
                "Answer": "UPDATE city SET IsCapital = TRUE WHERE Name = 'Kabul';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 11,
        "db": "concert_singer",
        "interaction": [
            {
                "User": "Can we add a new stadium to the database with ID 12, located in 'New York', named 'Liberty Stadium', with a capacity of 50000, highest price of 8000, lowest price of 500, and an average price of 2000?",
                "Answer": "INSERT INTO stadium (Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average) VALUES (12, 'New York', 'Liberty Stadium', 50000, 8000, 500, 2000);"
            },
            {
                "User": "I'd like to update the capacity of 'Stark's Park' to 15000. Can we do that?",
                "Answer": "UPDATE stadium SET Capacity = 15000 WHERE Name = 'Stark''s Park';"
            },
            {
                "User": "Can we create a table to track the ticket sales for each concert?",
                "Answer": "CREATE TABLE ticket_sales (Sale_ID number PRIMARY KEY, Concert_ID number, Stadium_ID number, Tickets_Sold number, FOREIGN KEY (Concert_ID) REFERENCES concert(concert_ID), FOREIGN KEY (Stadium_ID) REFERENCES stadium(Stadium_ID));"
            },
            {
                "User": "Let's add a column to record the genre of each singer. Can we do that?",
                "Answer": "ALTER TABLE singer ADD Genre text;"
            },
            {
                "User": "Can we insert the ticket sales data for the concert with ID 1? Let's say Sale_ID is 101, Stadium_ID is 1, and Tickets_Sold is 7500.",
                "Answer": "INSERT INTO ticket_sales (Sale_ID, Concert_ID, Stadium_ID, Tickets_Sold) VALUES (101, 1, 1, 7500);"
            },
            {
                "User": "Let's update the genre of singer with ID 2 to 'Hip-Hop'.",
                "Answer": "UPDATE singer SET Genre = 'Hip-Hop' WHERE Singer_ID = 2;"
            },
            {
                "User": "How can I find the total number of tickets sold for each concert?",
                "Answer": "SELECT T1.concert_Name, SUM(T2.Tickets_Sold) AS Total_Tickets_Sold FROM concert AS T1 JOIN ticket_sales AS T2 ON T1.concert_ID = T2.Concert_ID GROUP BY T1.concert_Name;"
            },
            {
                "User": "Can we add a new singer to the database with ID 7, named 'Alicia Keys', from 'United States', who sang 'Fallin', released in 2001, age 40, and is female?",
                "Answer": "INSERT INTO singer (Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male) VALUES (7, 'Alicia Keys', 'United States', 'Fallin', '2001', 40, 'F');"
            },
            {
                "User": "I noticed a mistake in the song name for singer ID 1. It should be 'You Are', not 'You'. Can we fix that?",
                "Answer": "UPDATE singer SET Song_Name = 'You Are' WHERE Singer_ID = 1;"
            },
            {
                "User": "Can we link the singer with ID 7 to the concert with ID 2?",
                "Answer": "INSERT INTO singer_in_concert (concert_ID, Singer_ID) VALUES (2, 7);"
            },
            {
                "User": "Let's create a new table to track the setlist for each concert. Each concert can have multiple songs.",
                "Answer": "CREATE TABLE concert_setlist (Setlist_ID number PRIMARY KEY, Concert_ID number, Singer_ID number, Song text, FOREIGN KEY (Concert_ID) REFERENCES concert(concert_ID), FOREIGN KEY (Singer_ID) REFERENCES singer(Singer_ID));"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 12,
        "db": "poker_player",
        "interaction": [
            {
                "User": "Can we add a new poker player to the database? The new player's Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, and Earnings are 6, 8, 5, 1, 50, 250000.",
                "Answer": "INSERT INTO poker_player (Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings) VALUES (6, 8, 5, 1, 50, 250000);"
            },
            {
                "User": "I'd like to update the earnings of a player. Can we set the earnings of Poker_Player_ID 2 to 200000?",
                "Answer": "UPDATE poker_player SET Earnings = 200000 WHERE Poker_Player_ID = 2;"
            },
            {
                "User": "Can we create a table to track the sponsors for each poker player?",
                "Answer": "CREATE TABLE player_sponsors (Sponsor_ID number PRIMARY KEY, Poker_Player_ID number, Sponsor_Name text, Sponsorship_Amount number, FOREIGN KEY (Poker_Player_ID) REFERENCES poker_player(Poker_Player_ID));"
            },
            {
                "User": "Let's add a column to track the number of tournaments played by each poker player.",
                "Answer": "ALTER TABLE poker_player ADD Tournaments_Played number;"
            },
            {
                "User": "Can we insert sponsor data for a player? Sponsor_ID, Poker_Player_ID, Sponsor_Name, Sponsorship_Amount can be assigned to 101, 1, 'PokerStars', 50000",
                "Answer": "INSERT INTO player_sponsors (Sponsor_ID, Poker_Player_ID, Sponsor_Name, Sponsorship_Amount) VALUES (101, 1, 'PokerStars', 50000);"
            },
            {
                "User": "Can we update the nationality of a player in the people table? Let's change the nationality of People_ID 3 to 'USA'.",
                "Answer": "UPDATE people SET Nationality = 'USA' WHERE People_ID = 3;"
            },
            {
                "User": "How can I list all poker players along with their nationality and earnings?",
                "Answer": "SELECT p.People_ID, pe.Nationality, p.Earnings FROM poker_player AS p JOIN people AS pe ON p.People_ID = pe.People_ID;"
            },
            {
                "User": "Can we add a new person to the people table? The values for People_ID, Nationality, Name, Birth_Date, and Height are 8, 'Canada', 'Jordan Smith', 'March 10, 1990', 175.",
                "Answer": "INSERT INTO people (People_ID, Nationality, Name, Birth_Date, Height) VALUES (8, 'Canada', 'Jordan Smith', 'March 10, 1990', 175);"
            },
            {
                "User": "Let's update the height for player Aleksey Ostapenko. Can we set it to 210 cm?",
                "Answer": "UPDATE people SET Height = 210 WHERE Name = 'Aleksey Ostapenko';"
            },
            {
                "User": "How can I find out which players have made more than 20 final tables?",
                "Answer": "SELECT Poker_Player_ID, People_ID FROM poker_player WHERE Final_Table_Made > 20;"
            },
            {
                "User": "Can we update the best finish for Poker_Player_ID 3 to be 2nd place?",
                "Answer": "UPDATE poker_player SET Best_Finish = 2 WHERE Poker_Player_ID = 3;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 13,
        "db": "dog_kennels",
        "interaction": [
            {
                "User": "Can we add a new breed to the Breeds table? Let's add a breed with code 'LAB' and name 'Labrador'.",
                "Answer": "INSERT INTO Breeds (breed_code, breed_name) VALUES ('LAB', 'Labrador');"
            },
            {
                "User": "I need to correct the weight of the dog named Kacey, it should be 75.7 instead of 7.57.",
                "Answer": "UPDATE Dogs SET weight = '75.7' WHERE name = 'Kacey';"
            },
            {
                "User": "Let's create a table to keep track of the dog's dietary preferences.",
                "Answer": "CREATE TABLE Dog_Diets (diet_id number PRIMARY KEY, dog_id number, diet_type text, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id));"
            },
            {
                "User": "We should add a column for the professional's last employment date in the Professionals table.",
                "Answer": "ALTER TABLE Professionals ADD last_employment_date time;"
            },
            {
                "User": "Can we insert a new charge type for grooming with an amount of 150?",
                "Answer": "INSERT INTO Charges (charge_id, charge_type, charge_amount) VALUES ((SELECT MAX(charge_id) + 1 FROM Charges), 'Grooming', 150);"
            },
            {
                "User": "Let's update the email address for the owner named Nora Haley to 'nora.haley@example.com'.",
                "Answer": "UPDATE Owners SET email_address = 'nora.haley@example.com' WHERE first_name = 'Nora' AND last_name = 'Haley';"
            },
            {
                "User": "Can we add a new treatment type for dental care?",
                "Answer": "INSERT INTO Treatment_Types (treatment_type_code, treatment_type_description) VALUES ('DENT', 'Dental Care');"
            },
            {
                "User": "How about adding a column to track whether the dog is neutered in the Dogs table?",
                "Answer": "ALTER TABLE Dogs ADD neutered_yn text;"
            },
            {
                "User": "Can we insert a dietary preference for dog_id 1? The diet type is 'Grain-Free'.",
                "Answer": "INSERT INTO Dog_Diets (diet_id, dog_id, diet_type) VALUES ((SELECT MAX(diet_id) + 1 FROM Dog_Diets), 1, 'Grain-Free');"
            },
            {
                "User": "Let's update the size description for code 'MED' to be 'Medium Size'.",
                "Answer": "UPDATE Sizes SET size_description = 'Medium Size' WHERE size_code = 'MED';"
            },
            {
                "User": "Can we list all the treatments along with their descriptions and costs?",
                "Answer": "SELECT T1.treatment_type_description, T2.date_of_treatment, T2.cost_of_treatment FROM Treatment_Types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code = T2.treatment_type_code;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 14,
        "db": "car_1",
        "interaction": [
            {
                "User": "Can we record the headquarters location of each car maker in a new column?",
                "Answer": "ALTER TABLE car_makers ADD Headquarters text;"
            },
            {
                "User": "Let's add the headquarters for American Motor Company as 'Detroit, USA'.",
                "Answer": "UPDATE car_makers SET Headquarters = 'Detroit, USA' WHERE FullName = 'American Motor Company';"
            },
            {
                "User": "Can we create a new table to keep track of the features of each car?",
                "Answer": "CREATE TABLE car_features (FeatureId number PRIMARY KEY, CarId number, FeatureName text, FeatureValue text, FOREIGN KEY (CarId) REFERENCES cars_data(Id));"
            },
            {
                "User": "Insert a new feature for the car with id 1, indicating it has 'Leather Seats'.",
                "Answer": "INSERT INTO car_features (FeatureId, CarId, FeatureName, FeatureValue) VALUES (101, 1, 'Interior', 'Leather Seats');"
            },
            {
                "User": "Can we update the MPG of the car with id 2 to '16'?",
                "Answer": "UPDATE cars_data SET MPG = '16' WHERE Id = 2;"
            },
            {
                "User": "How can I see all models with their maker's country and continent?",
                "Answer": "SELECT T3.Model, T2.FullName, T1.CountryName, C.Continent FROM countries AS T1 JOIN car_makers AS T2 ON T1.CountryId = T2.Country JOIN continents AS C ON T1.Continent = C.ContId JOIN model_list AS T3 ON T2.Id = T3.Maker;"
            },
            {
                "User": "Add a new car maker called 'Future Motors' from France to the database, with car id is 24",
                "Answer": "INSERT INTO car_makers (Id, Maker, FullName, Country) VALUES (24, 'future', 'Future Motors', '3');"
            },
            {
                "User": "Create a table to log changes made to car models.",
                "Answer": "CREATE TABLE model_log (LogId number PRIMARY KEY, ModelId number, ChangeType text, ChangeDescription text, ChangeDate date, FOREIGN KEY (ModelId) REFERENCES model_list(ModelId));"
            },
            {
                "User": "Can we log a change for model id 3, stating 'Model name updated' on today's date?",
                "Answer": "INSERT INTO model_log (LogId, ModelId, ChangeType, ChangeDescription, ChangeDate) VALUES (201, 3, 'Update', 'Model name updated', CURRENT_DATE);"
            },
            {
                "User": "Let's add a column to keep track of the number of seats for each car in the cars_data table.",
                "Answer": "ALTER TABLE cars_data ADD Seats number;"
            },
            {
                "User": "Update the number of seats for the car with id 3 to 5.",
                "Answer": "UPDATE cars_data SET Seats = 5 WHERE Id = 3;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 15,
        "db": "concert_singer",
        "interaction": [
            {
                "User": "Can we add a new stadium with the following details: Stadium_ID 11, Location 'Glasgow', Name 'Glasgow Arena', Capacity 50000, Highest 30000, Lowest 2000, Average 15000?",
                "Answer": "INSERT INTO stadium (Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average) VALUES (11, 'Glasgow', 'Glasgow Arena', 50000, 30000, 2000, 15000);"
            },
            {
                "User": "I'd like to update the capacity of Stark's Park to 15000. Can you do that?",
                "Answer": "UPDATE stadium SET Capacity = 15000 WHERE Name = 'Stark''s Park';"
            },
            {
                "User": "Can we create a new table to keep track of ticket sales for each concert with columns: Sale_ID, Concert_ID, Tickets_Sold, and Revenue?",
                "Answer": "CREATE TABLE ticket_sales (Sale_ID number PRIMARY KEY, Concert_ID number, Tickets_Sold number, Revenue number, FOREIGN KEY (Concert_ID) REFERENCES concert(concert_ID));"
            },
            {
                "User": "Let's add a new column to the singer table to track the number of albums released. Can you add that column?",
                "Answer": "ALTER TABLE singer ADD Albums_Released number;"
            },
            {
                "User": "Can we insert a record of ticket sales for the concert with ID 2? Let's say Sale_ID 101, Tickets_Sold 5000, and Revenue 250000.",
                "Answer": "INSERT INTO ticket_sales (Sale_ID, Concert_ID, Tickets_Sold, Revenue) VALUES (101, 2, 5000, 250000);"
            },
            {
                "User": "Update the song name of the singer with ID 2 to 'Apologize'.",
                "Answer": "UPDATE singer SET Song_Name = 'Apologize' WHERE Singer_ID = 2;"
            },
            {
                "User": "I need a list of all concerts with their respective stadium names and locations.",
                "Answer": "SELECT T2.concert_Name, T1.Name AS Stadium_Name, T1.Location FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID;"
            },
            {
                "User": "Can we add a new singer to the database? Their details are: Singer_ID 7, Name 'Adele', Country 'UK', Song_Name 'Hello', Song_release_year '2015', Age 33, Is_male 'F', Albums_Released 3.",
                "Answer": "INSERT INTO singer (Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male, Albums_Released) VALUES (7, 'Adele', 'UK', 'Hello', '2015', 33, 'F', 3);"
            },
            {
                "User": "How can we track the highest ticket sales for each stadium? Can we create a view for that?",
                "Answer": "CREATE VIEW highest_ticket_sales AS SELECT T1.Stadium_ID, T1.Name, MAX(T3.Revenue) AS Highest_Revenue FROM stadium AS T1 JOIN concert AS T2 ON T1.Stadium_ID = T2.Stadium_ID JOIN ticket_sales AS T3 ON T2.concert_ID = T3.Concert_ID GROUP BY T1.Stadium_ID, T1.Name;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 16,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new student to the database with the following details: student_id 16, current_address_id 5, permanent_address_id 10, first_name 'Alice', middle_name 'B', last_name 'Johnson', cell_mobile_number '555-1234', email_address 'alice.johnson@example.edu', ssn '987-65-4321', date_first_registered '2023-01-15', date_left '2023-12-15'?",
                "Answer": "INSERT INTO Students (student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left) VALUES (16, 5, 10, 'Alice', 'B', 'Johnson', '555-1234', 'alice.johnson@example.edu', '987-65-4321', '2023-01-15', '2023-12-15');"
            },
            {
                "User": "I'd like to update the course description for the course with course_id 2 to 'Advanced Mathematics'.",
                "Answer": "UPDATE Courses SET course_description = 'Advanced Mathematics' WHERE course_id = 2;"
            },
            {
                "User": "Can we create a table to store grades for each student_course_id?",
                "Answer": "CREATE TABLE Grades (grade_id number PRIMARY KEY, student_course_id number, grade text, FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses(student_course_id));"
            },
            {
                "User": "Let's add a column to track the enrollment status in the Student_Enrolment table. The status should be a text field.",
                "Answer": "ALTER TABLE Student_Enrolment ADD enrollment_status text;"
            },
            {
                "User": "Can we insert a new semester into the Semesters table? Semester_id 16, semester_name 'Winter 2023', semester_description 'January to April 2023'.",
                "Answer": "INSERT INTO Semesters (semester_id, semester_name, semester_description) VALUES (16, 'Winter 2023', 'January to April 2023');"
            },
            {
                "User": "Update the enrollment status for student_enrolment_id 1 to 'completed'.",
                "Answer": "UPDATE Student_Enrolment SET enrollment_status = 'completed' WHERE student_enrolment_id = 1;"
            },
            {
                "User": "Can we insert a grade record for student_course_id 1 with grade 'A-'?",
                "Answer": "INSERT INTO Grades (grade_id, student_course_id, grade) VALUES ((SELECT MAX(grade_id) + 1 FROM Grades), 1, 'A-');"
            },
            {
                "User": "Let's update the address for student_id 2 to a new current_address_id 8.",
                "Answer": "UPDATE Students SET current_address_id = 8 WHERE student_id = 2;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 17,
        "db": "battle_death",
        "interaction": [
            {
                "User": "Can we add a record of a new battle that just took place?",
                "Answer": "INSERT INTO battle (id, name, date, bulgarian_commander, latin_commander, result) VALUES (9, 'Battle of Klokotnitsa', '9 March 1230', 'Ivan Asen II', 'Theodore Komnenos Doukas', 'Bulgarian victory');"
            },
            {
                "User": "I need to correct the date for the Battle of Adrianople. Can we change it to '13 April 1205'?",
                "Answer": "UPDATE battle SET date = '13 April 1205' WHERE id = 1;"
            },
            {
                "User": "Let's create a table to track the number of ships captured or sunk in each battle.",
                "Answer": "CREATE TABLE battle_ships (battle_id number, ship_id number, status text, FOREIGN KEY (battle_id) REFERENCES battle(id), FOREIGN KEY (ship_id) REFERENCES ship(id));"
            },
            {
                "User": "We should add a column for the country of origin for each ship. Can you do that?",
                "Answer": "ALTER TABLE ship ADD country_of_origin text;"
            },
            {
                "User": "Insert a new ship that was sunk yesterday. The ship's id, name, tonnage, ship_type, location, disposition_of_ship, and country_of_origin are 15, 'HMS Victory', 't', 'Ship of the line', 'Atlantic Ocean', 'Sunk', 'United Kingdom'",
                "Answer": "INSERT INTO ship (id, name, tonnage, ship_type, location, disposition_of_ship, country_of_origin) VALUES (15, 'HMS Victory', 't', 'Ship of the line', 'Atlantic Ocean', 'Sunk', 'United Kingdom');"
            },
            {
                "User": "Update the tonnage of the ship named 'Mary' to 'u'.",
                "Answer": "UPDATE ship SET tonnage = 'u' WHERE name = 'Mary';"
            },
            {
                "User": "Can we add a new death record related to the ship named 'Lettice'?",
                "Answer": "INSERT INTO death (caused_by_ship_id, id, note, killed, injured) VALUES ((SELECT id FROM ship WHERE name = 'Lettice'), 14, 'Battle of the Atlantic', 120, 30);"
            },
            {
                "User": "Let's link the ship 'Bon Accord' to the Battle of Serres as a captured ship.",
                "Answer": "INSERT INTO battle_ships (battle_id, ship_id, status) VALUES (2, (SELECT id FROM ship WHERE name = 'Bon Accord'), 'Captured');"
            },
            {
                "User": "Show me all the battles where the Bulgarian commander was 'Kaloyan'.",
                "Answer": "SELECT name FROM battle WHERE bulgarian_commander = 'Kaloyan';"
            },
            {
                "User": "How can we list the names of ships that have been captured?",
                "Answer": "SELECT name FROM ship WHERE disposition_of_ship = 'Captured';"
            },
            {
                "User": "Can we track the ship's captain names in the ship table? We need to add a new column for that.",
                "Answer": "ALTER TABLE ship ADD captain_name text;"
            },
            {
                "User": "Update the captain name for the ship 'Lettice' to 'John Hawkins'.",
                "Answer": "UPDATE ship SET captain_name = 'John Hawkins' WHERE name = 'Lettice';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 18,
        "db": "wta_1",
        "interaction": [
            {
                "User": "Can we add a new player to the database with the following details: player_id 220673, first_name 'Naomi', last_name 'Osaka', hand 'R', birth_date '19971016', country_code 'JPN'?",
                "Answer": "INSERT INTO players (player_id, first_name, last_name, hand, birth_date, country_code) VALUES (220673, 'Naomi', 'Osaka', 'R', 19971016, 'JPN');"
            },
            {
                "User": "I want to correct the hand used by player id 200002 from 'R' to 'L'. Can you update this record?",
                "Answer": "UPDATE players SET hand = 'L' WHERE player_id = 200002;"
            },
            {
                "User": "Let's create a new table to keep track of injuries. The table should have columns for injury_id, player_id, injury_date, injury_type, and recovery_date.",
                "Answer": "CREATE TABLE injuries (injury_id number PRIMARY KEY, player_id number, injury_date time, injury_type text, recovery_date time, FOREIGN KEY (player_id) REFERENCES players(player_id));"
            },
            {
                "User": "Can we add a column to the matches table to indicate if it was played indoors or outdoors?",
                "Answer": "ALTER TABLE matches ADD indoor_outdoor text;"
            },
            {
                "User": "Please insert a new match record with the following details: best_of 3, draw_size 32, loser_age 25.3, loser_hand 'R', loser_ht 180, loser_id 200010, loser_ioc 'FRA', loser_name 'Doe, Jane', loser_rank 50, loser_rank_points 1234, loser_seed NULL, match_num 101, minutes 120, round 'QF', score '6-4 6-4', surface 'Clay', tourney_date 20230101, tourney_id '2023-01A', tourney_level 'G', tourney_name 'French Open', winner_age 22.5, winner_hand 'R', winner_ht 175, winner_id 200004, winner_ioc 'JPN', winner_name 'Osaka, Naomi', winner_rank 3, winner_rank_points 5678, winner_seed 2, year 2023.",
                "Answer": "INSERT INTO matches (best_of, draw_size, loser_age, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year) VALUES (3, 32, 25.3, 'R', 180, 200010, 'FRA', 'Doe, Jane', 50, 1234, NULL, 101, 120, 'QF', '6-4 6-4', 'Clay', 20230101, '2023-01A', 'G', 'French Open', 22.5, 'R', 175, 200004, 'JPN', 'Osaka, Naomi', 3, 5678, 2, 2023);"
            },
            {
                "User": "Can we update the indoor_outdoor column for the French Open 2023 match to 'Outdoor'?",
                "Answer": "UPDATE matches SET indoor_outdoor = 'Outdoor' WHERE tourney_id = '2023-01A' AND year = 2023;"
            },
            {
                "User": "How can I get a list of all players along with their latest ranking and ranking points?",
                "Answer": "SELECT p.first_name, p.last_name, r.ranking, r.ranking_points FROM players AS p JOIN rankings AS r ON p.player_id = r.player_id WHERE r.ranking_date = (SELECT MAX(ranking_date) FROM rankings WHERE player_id = p.player_id);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 19,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new course to the database with the name 'Introduction to Databases' and a description?",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description) VALUES (16, 'Introduction to Databases', 'This course provides an overview of database design and SQL.');"
            },
            {
                "User": "I need to update the email address for student id 2 to 'h.balistreri@example.edu'. Can we do that?",
                "Answer": "UPDATE Students SET email_address = 'h.balistreri@example.edu' WHERE student_id = 2;"
            },
            {
                "User": "Can we create a new table to keep track of instructors for each course?",
                "Answer": "CREATE TABLE Instructors (instructor_id number PRIMARY KEY, first_name text, last_name text, email text, department_id number, FOREIGN KEY (department_id) REFERENCES Departments(department_id));"
            },
            {
                "User": "Let's add a column to track the room number where the course sections are held. Can we do that?",
                "Answer": "ALTER TABLE Sections ADD room_number text;"
            },
            {
                "User": "Can we insert a new section for the 'Introduction to Databases' course with the room number '101B'?",
                "Answer": "INSERT INTO Sections (section_id, course_id, section_name, section_description, room_number) VALUES (16, 16, 'Section 1', 'Introduction to Databases - Section 1', '101B');"
            },
            {
                "User": "Let's update the department description for the 'computer science' department to 'Department of Computer Science and Information Technology'.",
                "Answer": "UPDATE Departments SET department_description = 'Department of Computer Science and Information Technology' WHERE department_name = 'computer science';"
            },
            {
                "User": "How can we add a new student enrolment for the student id 1 in the 'Introduction to Databases' course for the 'spring 2023' semester?",
                "Answer": "INSERT INTO Student_Enrolment (student_enrolment_id, degree_program_id, semester_id, student_id) VALUES (16, 1, 16, 1);"
            },
            {
                "User": "Can we also add this student's course enrolment for the 'Introduction to Databases' section we just created?",
                "Answer": "INSERT INTO Student_Enrolment_Courses (student_course_id, course_id, student_enrolment_id) VALUES (16, 16, 16);"
            },
            {
                "User": "I'd like to see all courses along with their latest section details. Can you provide that?",
                "Answer": "SELECT C.course_name, S.section_name, S.room_number FROM Courses AS C LEFT JOIN Sections AS S ON C.course_id = S.course_id ORDER BY S.section_id DESC;"
            },
            {
                "User": "Can we add a new instructor to the 'computer science' department with the name 'Alice Smith' and email 'alice.smith@university.edu'?",
                "Answer": "INSERT INTO Instructors (instructor_id, first_name, last_name, email, department_id) VALUES (1, 'Alice', 'Smith', 'alice.smith@university.edu', 1);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 20,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new course to the database? The course details are course_id 16, course_name 'Introduction to Psychology', and course_description 'A beginner's guide to the principles of human behavior'.",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description) VALUES (16, 'Introduction to Psychology', 'A beginner''s guide to the principles of human behavior');"
            },
            {
                "User": "We need to update the course description for the 'math' course to include 'Foundational mathematics concepts'. Can you do that?",
                "Answer": "UPDATE Courses SET course_description = 'Foundational mathematics concepts' WHERE course_name = 'math';"
            },
            {
                "User": "Let's create a table to keep track of faculty members. It should include faculty_id, first_name, last_name, department_id, and email_address.",
                "Answer": "CREATE TABLE Faculty (faculty_id number PRIMARY KEY, first_name text, last_name text, department_id number, email_address text, FOREIGN KEY (department_id) REFERENCES Departments(department_id));"
            },
            {
                "User": "I realized we don't have a phone number column for the faculty members. Can we add a 'phone_number' column to the Faculty table?",
                "Answer": "ALTER TABLE Faculty ADD phone_number text;"
            },
            {
                "User": "Let's insert a new faculty member into the Faculty table. Their details are faculty_id 1, first_name 'John', last_name 'Doe', department_id 1, email_address 'john.doe@university.edu', and phone_number '555-1234'.",
                "Answer": "INSERT INTO Faculty (faculty_id, first_name, last_name, department_id, email_address, phone_number) VALUES (1, 'John', 'Doe', 1, 'john.doe@university.edu', '555-1234');"
            },
            {
                "User": "Can we update the department name for the 'computer science' department to 'Computer Science and Engineering'?",
                "Answer": "UPDATE Departments SET department_name = 'Computer Science and Engineering' WHERE department_name = 'computer science';"
            },
            {
                "User": "We should also track the office address for each faculty. Can you add an 'office_address_id' column to the Faculty table and link it to the Addresses table?",
                "Answer": "ALTER TABLE Faculty ADD office_address_id number REFERENCES Addresses(address_id);"
            },
            {
                "User": "Can you show me all the courses offered by the 'Computer Science and Engineering' department along with the faculty names?",
                "Answer": "SELECT C.course_name, F.first_name, F.last_name FROM Courses C JOIN Sections S ON C.course_id = S.course_id JOIN Departments D ON S.course_id = D.department_id JOIN Faculty F ON D.department_id = F.department_id WHERE D.department_name = 'Computer Science and Engineering';"
            },
            {
                "User": "A new semester is starting and we need to add it to the Semesters table. The semester details are semester_id 16, semester_name 'Spring 2023', and semester_description 'Courses offered in the spring of 2023'.",
                "Answer": "INSERT INTO Semesters (semester_id, semester_name, semester_description) VALUES (16, 'Spring 2023', 'Courses offered in the spring of 2023');"
            },
            {
                "User": "Some students have graduated, and we need to update their 'date_left' to today's date. Can you update this for student_id 1?",
                "Answer": "UPDATE Students SET date_left = CURRENT_DATE WHERE student_id = 1;"
            },
            {
                "User": "How can I get a list of all students who have not yet left the university?",
                "Answer": "SELECT * FROM Students WHERE date_left IS NULL;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 21,
        "db": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "User": "Can we add a new template type for 'Report' documents?",
                "Answer": "INSERT INTO Ref_Template_Types (Template_Type_Code, Template_Type_Description) VALUES ('RPT', 'Report');"
            },
            {
                "User": "I need to correct a typo in the template type description for CVs. Can we change it from 'CV' to 'Curriculum Vitae'?",
                "Answer": "UPDATE Ref_Template_Types SET Template_Type_Description = 'Curriculum Vitae' WHERE Template_Type_Code = 'CV';"
            },
            {
                "User": "Let's create a table to track the revision history of each document. Can we do that?",
                "Answer": "CREATE TABLE Document_Revisions (Revision_ID number PRIMARY KEY, Document_ID number, Revision_Number number, Date_Modified time, Modified_By text, FOREIGN KEY (Document_ID) REFERENCES Documents(Document_ID));"
            },
            {
                "User": "Can we insert a new template with ID 26, version 1, type 'RPT', effective from today and no expiry date, with details 'Annual Financial Report'?",
                "Answer": "INSERT INTO Templates (Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details) VALUES (26, 1, 'RPT', CURRENT_DATE, NULL, 'Annual Financial Report');"
            },
            {
                "User": "I've noticed that we don't have a column for the author of the document. Can we add one to the Documents table?",
                "Answer": "ALTER TABLE Documents ADD Author text;"
            },
            {
                "User": "Let's record a new document revision. Can you insert a record for Document ID 1, with revision number 2, modified today by 'Alice'?",
                "Answer": "INSERT INTO Document_Revisions (Revision_ID, Document_ID, Revision_Number, Date_Modified, Modified_By) VALUES ((SELECT COALESCE(MAX(Revision_ID), 0) + 1 FROM Document_Revisions), 1, 2, CURRENT_DATE, 'Alice');"
            },
            {
                "User": "Can we update the 'Other_Details' column for Paragraph ID 7 with 'Updated for clarity'?",
                "Answer": "UPDATE Paragraphs SET Other_Details = 'Updated for clarity' WHERE Paragraph_ID = 7;"
            },
            {
                "User": "How can I get a list of all documents along with their authors?",
                "Answer": "SELECT Document_ID, Document_Name, Author FROM Documents;"
            },
            {
                "User": "Can we add a new paragraph to document ID 1 with the text 'This is a new paragraph'?",
                "Answer": "INSERT INTO Paragraphs (Paragraph_ID, Document_ID, Paragraph_Text) VALUES ((SELECT COALESCE(MAX(Paragraph_ID), 0) + 1 FROM Paragraphs), 1, 'This is a new paragraph');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 22,
        "db": "dog_kennels",
        "interaction": [
            {
                "User": "Can we add a new breed to the database? The breed code and breed name are 'LAB', 'Labrador'.",
                "Answer": "INSERT INTO Breeds (breed_code, breed_name) VALUES ('LAB', 'Labrador');"
            },
            {
                "User": "I'd like to update the daily accommodation charge to $120. Can you do that?",
                "Answer": "UPDATE Charges SET charge_amount = 120 WHERE charge_type = 'Daily Accommodation';"
            },
            {
                "User": "Can we create a new table to track dog vaccinations?",
                "Answer": "CREATE TABLE Dog_Vaccinations (vaccination_id number PRIMARY KEY, dog_id number, vaccination_date time, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id));"
            },
            {
                "User": "Can we insert a new size category? The size code and description are 'XSM', 'Extra Small'.",
                "Answer": "INSERT INTO Sizes (size_code, size_description) VALUES ('XSM', 'Extra Small');"
            },
            {
                "User": "Let's update the address for professional id 2 to '1234 New Address St, New City, CT, 12345'.",
                "Answer": "UPDATE Professionals SET street = '1234 New Address St', city = 'New City', state = 'CT', zip_code = '12345' WHERE professional_id = 2;"
            },
            {
                "User": "Can we add a new treatment type called 'Dental Cleaning' with code 'DENT'?",
                "Answer": "INSERT INTO Treatment_Types (treatment_type_code, treatment_type_description) VALUES ('DENT', 'Dental Cleaning');"
            },
            {
                "User": "I need to record a new treatment for dog id 5 by professional id 3. The treatment type is 'EXAM' and it cost $200. Can you add this record?",
                "Answer": "INSERT INTO Treatments (treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment) VALUES ((SELECT MAX(treatment_id) + 1 FROM Treatments), 5, 3, 'EXAM', CURRENT_TIMESTAMP, 200);"
            },
            {
                "User": "How can we list all the dogs and their owners' full names?",
                "Answer": "SELECT D.name AS DogName, O.first_name || ' ' || O.last_name AS OwnerFullName FROM Dogs D JOIN Owners O ON D.owner_id = O.owner_id;"
            },
            {
                "User": "Can we update the breed name for breed code 'HUS' to 'Siberian Husky'?",
                "Answer": "UPDATE Breeds SET breed_name = 'Siberian Husky' WHERE breed_code = 'HUS';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 23,
        "db": "employee_hire_evaluation",
        "interaction": [
            {
                "User": "Can we add a new employee to the database? The values of the new employee of Employee_ID, Name, Age, City are 11, 'Alice Smith', 30, 'London'",
                "Answer": "INSERT INTO employee (Employee_ID, Name, Age, City) VALUES (11, 'Alice Smith', 30, 'London');"
            },
            {
                "User": "I'd like to update the age of George Chuter to 24. Can we do that?",
                "Answer": "UPDATE employee SET Age = 24 WHERE Name = 'George Chuter';"
            },
            {
                "User": "Can we create a table to track the performance of each shop?",
                "Answer": "CREATE TABLE shop_performance (Performance_ID number PRIMARY KEY, Shop_ID number, Year number, Revenue number, FOREIGN KEY (Shop_ID) REFERENCES shop(Shop_ID));"
            },
            {
                "User": "How about adding a column to track the state in which each shop is located?",
                "Answer": "ALTER TABLE shop ADD State text;"
            },
            {
                "User": "Can we insert the performance data for shop ID 1? Performance_ID, Shop_ID, Year, Revenue can be assigned to 101, 1, 2023, 500000",
                "Answer": "INSERT INTO shop_performance (Performance_ID, Shop_ID, Year, Revenue) VALUES (101, 1, 2023, 500000);"
            },
            {
                "User": "Let's update the location of shop ID 2 to 'New Helsinki'. Can we do that?",
                "Answer": "UPDATE shop SET Location = 'New Helsinki' WHERE Shop_ID = 2;"
            },
            {
                "User": "Can you list all employees along with their hiring start year?",
                "Answer": "SELECT e.Name, h.Start_from FROM employee e JOIN hiring h ON e.Employee_ID = h.Employee_ID;"
            },
            {
                "User": "I want to record the end date for employees who are not full-time. Can we add an 'End_to' column to the hiring table?",
                "Answer": "ALTER TABLE hiring ADD End_to text;"
            },
            {
                "User": "Can we update the hiring record to set the 'End_to' date for employee ID 3 to '2022'?",
                "Answer": "UPDATE hiring SET End_to = '2022' WHERE Employee_ID = 3 AND Is_full_time = 'F';"
            },
            {
                "User": "Can we create a new table to store employee training details?",
                "Answer": "CREATE TABLE training (Training_ID number PRIMARY KEY, Employee_ID number, Training_Date text, Training_Subject text, FOREIGN KEY (Employee_ID) REFERENCES employee(Employee_ID));"
            },
            {
                "User": "Let's insert a training record for employee ID 2. Training_ID, Employee_ID, Training_Date, Training_Subject can be set to 301, 2, '2023-04-15', 'Customer Service'",
                "Answer": "INSERT INTO training (Training_ID, Employee_ID, Training_Date, Training_Subject) VALUES (301, 2, '2023-04-15', 'Customer Service');"
            },
            {
                "User": "How can I get the list of shops with their respective manager names and number of products?",
                "Answer": "SELECT Name, Manager_name, Number_products FROM shop;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 24,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "I'd like to add a new course to the database. The course ID, name, and description are 16, 'Data Science', 'Introduction to Data Science concepts'.",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description) VALUES (16, 'Data Science', 'Introduction to Data Science concepts');"
            },
            {
                "User": "Can we insert a new semester called 'Winter 2023' with a description of 'Courses offered in the winter term of 2023'?",
                "Answer": "INSERT INTO Semesters (semester_id, semester_name, semester_description) VALUES ((SELECT MAX(semester_id) + 1 FROM Semesters), 'Winter 2023', 'Courses offered in the winter term of 2023');"
            },
            {
                "User": "Let's add a new student with the following details: ID 16, current address ID 2, permanent address ID 5, first name 'Alice', last name 'Smith', email 'alice.smith@example.edu', and the date they first registered as '2023-01-15'.",
                "Answer": "INSERT INTO Students (student_id, current_address_id, permanent_address_id, first_name, last_name, email_address, date_first_registered) VALUES (16, 2, 5, 'Alice', 'Smith', 'alice.smith@example.edu', '2023-01-15');"
            },
            {
                "User": "Can we create a new table to keep track of professors, including their ID, name, and department they belong to?",
                "Answer": "CREATE TABLE Professors (professor_id number PRIMARY KEY, first_name text, last_name text, department_id number, FOREIGN KEY (department_id) REFERENCES Departments(department_id));"
            },
            {
                "User": "I want to update the course description for the course with ID 3 to 'Advanced Operating Systems'.",
                "Answer": "UPDATE Courses SET course_description = 'Advanced Operating Systems' WHERE course_id = 3;"
            },
            {
                "User": "How can we add a new column to store the grade for each student's course enrolment?",
                "Answer": "ALTER TABLE Student_Enrolment_Courses ADD grade text;"
            },
            {
                "User": "Let's insert a grade for a student course enrolment. Assume the student course ID is 2, and the grade is 'A'.",
                "Answer": "UPDATE Student_Enrolment_Courses SET grade = 'A' WHERE student_course_id = 2;"
            },
            {
                "User": "Can we create a view to list all students with their full name, email, and the name of the degree program they are enrolled in?",
                "Answer": "CREATE VIEW StudentDegreeInfo AS SELECT S.first_name || ' ' || S.last_name AS full_name, S.email_address, D.degree_summary_name FROM Students AS S JOIN Student_Enrolment AS SE ON S.student_id = SE.student_id JOIN Degree_Programs AS D ON SE.degree_program_id = D.degree_program_id;"
            },
            {
                "User": "Can you show me the details from the new view we created for student degree information?",
                "Answer": "SELECT * FROM StudentDegreeInfo;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 25,
        "db": "concert_singer",
        "interaction": [
            {
                "User": "Can we add a new concert called 'Rock Night' with a theme 'Rock Legends', in stadium ID 1, planned for the year 2023?",
                "Answer": "INSERT INTO concert (concert_ID, concert_Name, Theme, Stadium_ID, Year) VALUES (7, 'Rock Night', 'Rock Legends', '1', '2023');"
            },
            {
                "User": "I'd like to update the capacity of the stadium with ID 2 to 15000. How can we do that?",
                "Answer": "UPDATE stadium SET Capacity = 15000 WHERE Stadium_ID = 2;"
            },
            {
                "User": "Can we create a new table to store ticket sales for each concert?",
                "Answer": "CREATE TABLE ticket_sales (Sale_ID number PRIMARY KEY, concert_ID number, Tickets_Sold number, Sale_Date text, FOREIGN KEY (concert_ID) REFERENCES concert(concert_ID));"
            },
            {
                "User": "How about adding a column to the singer table to track their debut year?",
                "Answer": "ALTER TABLE singer ADD Debut_Year number;"
            },
            {
                "User": "Can we insert a new singer into the database with the following details: Singer_ID 7, Name 'Alicia Keys', Country 'United States', Song_Name 'Fallin', Song_release_year '2001', Age 42, Is_male 'F'?",
                "Answer": "INSERT INTO singer (Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male) VALUES (7, 'Alicia Keys', 'United States', 'Fallin', '2001', 42, 'F');"
            },
            {
                "User": "Let's update the theme of the concert with ID 3 to 'Pop Hits'. How do we do that?",
                "Answer": "UPDATE concert SET Theme = 'Pop Hits' WHERE concert_ID = 3;"
            },
            {
                "User": "Can we insert a record into the ticket_sales table for concert ID 1 with Sale_ID 101, Tickets_Sold 5000, and Sale_Date '2023-04-01'?",
                "Answer": "INSERT INTO ticket_sales (Sale_ID, concert_ID, Tickets_Sold, Sale_Date) VALUES (101, 1, 5000, '2023-04-01');"
            },
            {
                "User": "How can we list all concerts along with the total tickets sold for each?",
                "Answer": "SELECT T1.concert_Name, SUM(T2.Tickets_Sold) AS Total_Tickets_Sold FROM concert AS T1 LEFT JOIN ticket_sales AS T2 ON T1.concert_ID = T2.concert_ID GROUP BY T1.concert_ID;"
            },
            {
                "User": "I want to add a new record to singer_in_concert for singer ID 7 in concert ID 1. How do I insert this data?",
                "Answer": "INSERT INTO singer_in_concert (concert_ID, Singer_ID) VALUES (1, '7');"
            },
            {
                "User": "Let's update the song name for singer ID 2 to 'Apologize'. Can you provide the SQL statement?",
                "Answer": "UPDATE singer SET Song_Name = 'Apologize' WHERE Singer_ID = 2;"
            },
            {
                "User": "Can we add a column to the stadium table to indicate whether it's an indoor or outdoor stadium?",
                "Answer": "ALTER TABLE stadium ADD Stadium_Type text;"
            },
            {
                "User": "Let's classify the stadium with ID 3 as 'Outdoor'. How can we update this information?",
                "Answer": "UPDATE stadium SET Stadium_Type = 'Outdoor' WHERE Stadium_ID = 3;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 26,
        "db": "voter_1",
        "interaction": [
            {
                "User": "Can we add a new contestant to the database? The contestant's number and name are 12, 'Chris P. Bacon'.",
                "Answer": "INSERT INTO CONTESTANTS (contestant_number, contestant_name) VALUES (12, 'Chris P. Bacon');"
            },
            {
                "User": "I'd like to update the state name for area code 203 to 'Connecticut'.",
                "Answer": "UPDATE AREA_CODE_STATE SET state = 'Connecticut' WHERE area_code = 203;"
            },
            {
                "User": "Can we create a table to track the judges' scores for each contestant?",
                "Answer": "CREATE TABLE judges_scores (score_id number PRIMARY KEY, contestant_number number, judge_name text, score number, FOREIGN KEY (contestant_number) REFERENCES contestants(contestant_number));"
            },
            {
                "User": "How about adding a column to track the email addresses of the contestants?",
                "Answer": "ALTER TABLE CONTESTANTS ADD email text;"
            },
            {
                "User": "Can we insert a vote record? The vote_id, phone_number, state, contestant_number, and created time are 6, 5551234567, 'TX', 1, '2023-01-01 12:00:00'.",
                "Answer": "INSERT INTO VOTES (vote_id, phone_number, state, contestant_number, created) VALUES (6, 5551234567, 'TX', 1, '2023-01-01 12:00:00');"
            },
            {
                "User": "Let's update the phone number for vote id 3 to be 3235556789.",
                "Answer": "UPDATE VOTES SET phone_number = 3235556789 WHERE vote_id = 3;"
            },
            {
                "User": "How can I list all contestants along with their email addresses?",
                "Answer": "SELECT contestant_name, email FROM CONTESTANTS;"
            },
            {
                "User": "Can we add a contestant's email? The contestant number is 2, and the email is 'tabatha.gehling@example.com'.",
                "Answer": "UPDATE CONTESTANTS SET email = 'tabatha.gehling@example.com' WHERE contestant_number = 2;"
            },
            {
                "User": "I want to know the average score given by judge 'Simon Cowell'. Can you create a query for that?",
                "Answer": "SELECT AVG(score) FROM judges_scores WHERE judge_name = 'Simon Cowell';"
            },
            {
                "User": "Can we add a new area code for the state of 'TX' with the area code 600?",
                "Answer": "INSERT INTO AREA_CODE_STATE (area_code, state) VALUES (600, 'TX');"
            },
            {
                "User": "Let's correct the state abbreviation for New York from 'NY' to 'NYC' in the VOTES table.",
                "Answer": "UPDATE VOTES SET state = 'NYC' WHERE state = 'NY';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 27,
        "db": "voter_1",
        "interaction": [
            {
                "User": "Can we add a new contestant to the database? The contestant's number and name are 12, 'Jordan Smith'.",
                "Answer": "INSERT INTO CONTESTANTS (contestant_number, contestant_name) VALUES (12, 'Jordan Smith');"
            },
            {
                "User": "I need to correct a vote record. Can we change the state from 'NY' to 'NJ' for vote_id 1?",
                "Answer": "UPDATE VOTES SET state = 'NJ' WHERE vote_id = 1;"
            },
            {
                "User": "Let's create a table to track the judges of the contest.",
                "Answer": "CREATE TABLE JUDGES (judge_id number PRIMARY KEY, judge_name text);"
            },
            {
                "User": "Can we add a column to track the email address of each contestant?",
                "Answer": "ALTER TABLE CONTESTANTS ADD email text;"
            },
            {
                "User": "Can we insert a new record for a judge? Their judge_id and name should be 101, 'Alicia Keys'.",
                "Answer": "INSERT INTO JUDGES (judge_id, judge_name) VALUES (101, 'Alicia Keys');"
            },
            {
                "User": "I'd like to update the email address for contestant number 2 to 'tabatha.gehling@example.com'.",
                "Answer": "UPDATE CONTESTANTS SET email = 'tabatha.gehling@example.com' WHERE contestant_number = 2;"
            },
            {
                "User": "Can we track which judge approved each vote? We need to add a column for the judge_id in the VOTES table.",
                "Answer": "ALTER TABLE VOTES ADD judge_id number;"
            },
            {
                "User": "Let's insert a vote record with the judge's approval. The vote_id, phone_number, state, contestant_number, created, and judge_id should be 6, 3235556789, 'CA', 12, '2023-04-01 10:00:00', 101.",
                "Answer": "INSERT INTO VOTES (vote_id, phone_number, state, contestant_number, created, judge_id) VALUES (6, 3235556789, 'CA', 12, '2023-04-01 10:00:00', 101);"
            },
            {
                "User": "How can I get a list of all contestants along with their email addresses?",
                "Answer": "SELECT contestant_number, contestant_name, email FROM CONTESTANTS;"
            },
            {
                "User": "Can we add a new area code for a state that is not currently in the database? The area code and state are 999, 'UT'.",
                "Answer": "INSERT INTO AREA_CODE_STATE (area_code, state) VALUES (999, 'UT');"
            },
            {
                "User": "Let's update the contestant name for contestant number 3 to 'K. Clauss'.",
                "Answer": "UPDATE CONTESTANTS SET contestant_name = 'K. Clauss' WHERE contestant_number = 3;"
            },
            {
                "User": "Can we create a table to keep track of the total votes each contestant received?",
                "Answer": "CREATE TABLE TOTAL_VOTES (contestant_number number, total_votes number, PRIMARY KEY (contestant_number), FOREIGN KEY (contestant_number) REFERENCES CONTESTANTS(contestant_number));"
            },
            {
                "User": "How about adding a timestamp column to the JUDGES table to record the last time they logged in?",
                "Answer": "ALTER TABLE JUDGES ADD last_login time;"
            },
            {
                "User": "Let's insert the total votes for contestant number 2. Their total votes are 1500.",
                "Answer": "INSERT INTO TOTAL_VOTES (contestant_number, total_votes) VALUES (2, 1500);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 28,
        "db": "dog_kennels",
        "interaction": [
            {
                "User": "Can we add a new breed to the Breeds table? Let's add breed_code 'LAB' for breed_name 'Labrador'.",
                "Answer": "INSERT INTO Breeds (breed_code, breed_name) VALUES ('LAB', 'Labrador');"
            },
            {
                "User": "I noticed a mistake in the breed name for 'HUS'. Can we update it to 'Siberian Husky'?",
                "Answer": "UPDATE Breeds SET breed_name = 'Siberian Husky' WHERE breed_code = 'HUS';"
            },
            {
                "User": "We should track each owner's country. Can we add a 'country' column to the Owners table?",
                "Answer": "ALTER TABLE Owners ADD country TEXT;"
            },
            {
                "User": "Let's update the country for owner_id 1 to 'USA'.",
                "Answer": "UPDATE Owners SET country = 'USA' WHERE owner_id = 1;"
            },
            {
                "User": "Can we create a new table to record vaccinations for each dog with columns for 'vaccination_id', 'dog_id', 'vaccination_date', and 'vaccine_type'?",
                "Answer": "CREATE TABLE Vaccinations (vaccination_id NUMBER PRIMARY KEY, dog_id NUMBER, vaccination_date TIME, vaccine_type TEXT, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id));"
            },
            {
                "User": "Let's insert a vaccination record for dog_id 2. Assign vaccination_id 101, use today's date, and vaccine_type 'Rabies'.",
                "Answer": "INSERT INTO Vaccinations (vaccination_id, dog_id, vaccination_date, vaccine_type) VALUES (101, 2, CURRENT_DATE, 'Rabies');"
            },
            {
                "User": "Can we add a 'role_description' column to the Professionals table to describe their role in more detail?",
                "Answer": "ALTER TABLE Professionals ADD role_description TEXT;"
            },
            {
                "User": "Update the role_description for professional_id 1 to 'Kennel Employee'.",
                "Answer": "UPDATE Professionals SET role_description = 'Kennel Employee' WHERE professional_id = 1;"
            },
            {
                "User": "How can I get a list of all dogs with their breed names?",
                "Answer": "SELECT Dogs.name, Breeds.breed_name FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code;"
            },
            {
                "User": "Can we create a table to track each dog's adoption history with columns 'history_id', 'dog_id', 'adoption_date', and 'adopted_by_owner_id'?",
                "Answer": "CREATE TABLE Adoption_History (history_id NUMBER PRIMARY KEY, dog_id NUMBER, adoption_date TIME, adopted_by_owner_id NUMBER, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id), FOREIGN KEY (adopted_by_owner_id) REFERENCES Owners(owner_id));"
            },
            {
                "User": "Insert an adoption record for dog_id 3, adopted by owner_id 2 on March 25, 2018.",
                "Answer": "INSERT INTO Adoption_History (history_id, dog_id, adoption_date, adopted_by_owner_id) VALUES (201, 3, '2018-03-25', 2);"
            },
            {
                "User": "Can we track the status of the dog whether it's currently adopted or not? Let's add a 'current_status' column to the Dogs table.",
                "Answer": "ALTER TABLE Dogs ADD current_status TEXT;"
            },
            {
                "User": "Set the current_status of dog_id 1 to 'Adopted'.",
                "Answer": "UPDATE Dogs SET current_status = 'Adopted' WHERE dog_id = 1;"
            },
            {
                "User": "How about we add a new charge type for 'Vaccination Fee' with a charge_amount of 150?",
                "Answer": "INSERT INTO Charges (charge_id, charge_type, charge_amount) VALUES ((SELECT MAX(charge_id) + 1 FROM Charges), 'Vaccination Fee', 150);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 29,
        "db": "wta_1",
        "interaction": [
            {
                "User": "Can we add a new player to the database? The values for player_id, first_name, last_name, hand, birth_date, and country_code are 220673, 'Naomi', 'Osaka', 'R', '19971016', 'JPN'",
                "Answer": "INSERT INTO players (player_id, first_name, last_name, hand, birth_date, country_code) VALUES (220673, 'Naomi', 'Osaka', 'R', 19971016, 'JPN');"
            },
            {
                "User": "I'd like to correct the hand used by player id 200002 from 'R' to 'L'. Can we update that?",
                "Answer": "UPDATE players SET hand = 'L' WHERE player_id = 200002;"
            },
            {
                "User": "Can we create a table to track the performance of players in Grand Slam tournaments?",
                "Answer": "CREATE TABLE grand_slam_performance (performance_id number PRIMARY KEY, player_id number, grand_slam_name text, matches_won number, matches_lost number, year number, FOREIGN KEY (player_id) REFERENCES players(player_id));"
            },
            {
                "User": "How about adding a column to the matches table to track the city where the match was played?",
                "Answer": "ALTER TABLE matches ADD city text;"
            },
            {
                "User": "Can we insert a new match record? The values for best_of, draw_size, loser_age, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year can be 3, 128, 29, 'R', 188, 200004, 'ESP', 'Rafael Nadal', 2, 9850, 1, 200, 180, 'F', '6-3 6-2 6-3', 'Clay', 20210530, '2021-FR-F', 'G', 'French Open', 34, 'L', 198, 200003, 'SRB', 'Novak Djokovic', 1, 12000, 1, 2021",
                "Answer": "INSERT INTO matches (best_of, draw_size, loser_age, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year) VALUES (3, 128, 29, 'R', 188, 200004, 'ESP', 'Rafael Nadal', 2, 9850, 1, 200, 180, 'F', '6-3 6-2 6-3', 'Clay', 20210530, '2021-FR-F', 'G', 'French Open', 34, 'L', 198, 200003, 'SRB', 'Novak Djokovic', 1, 12000, 1, 2021);"
            },
            {
                "User": "Let's update the number of tours for player id 200748 in the rankings table to 20 for the ranking date 20000101.",
                "Answer": "UPDATE rankings SET tours = 20 WHERE player_id = 200748 AND ranking_date = 20000101;"
            },
            {
                "User": "How can I find all the matches played on a 'Hard' surface in the city of 'New York'?",
                "Answer": "SELECT * FROM matches WHERE surface = 'Hard' AND city = 'New York';"
            },
            {
                "User": "Can we add a player's nickname to the players table?",
                "Answer": "ALTER TABLE players ADD nickname text;"
            },
            {
                "User": "I want to set the nickname for player id 200003 to 'The Wall'. How do I do that?",
                "Answer": "UPDATE players SET nickname = 'The Wall' WHERE player_id = 200003;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 30,
        "db": "dog_kennels",
        "interaction": [
            {
                "User": "Can we add a new breed called 'Labrador' with the code 'LAB'?",
                "Answer": "INSERT INTO Breeds (breed_code, breed_name) VALUES ('LAB', 'Labrador');"
            },
            {
                "User": "Could we increase the charge amount for 'Health Check' by 10%?",
                "Answer": "UPDATE Charges SET charge_amount = charge_amount * 1.10 WHERE charge_type = 'Health Check';"
            },
            {
                "User": "Can we create a new table to keep track of dog vaccinations with columns for vaccination_id, dog_id, vaccination_date, and vaccination_type?",
                "Answer": "CREATE TABLE Dog_Vaccinations (vaccination_id number PRIMARY KEY, dog_id number, vaccination_date time, vaccination_type text, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id));"
            },
            {
                "User": "How about adding a new size category called 'Extra Large' with the code 'XLG'?",
                "Answer": "INSERT INTO Sizes (size_code, size_description) VALUES ('XLG', 'Extra Large');"
            },
            {
                "User": "Let's add a new treatment type for 'Surgery' with the code 'SURG'.",
                "Answer": "INSERT INTO Treatment_Types (treatment_type_code, treatment_type_description) VALUES ('SURG', 'Surgery');"
            },
            {
                "User": "Can we update the home phone number for the owner with id 2 to '555-1234'?",
                "Answer": "UPDATE Owners SET home_phone = '555-1234' WHERE owner_id = 2;"
            },
            {
                "User": "Can we add a column to the Dogs table to indicate if the dog is vaccinated ('vaccinated_yn' with a 'text' type)?",
                "Answer": "ALTER TABLE Dogs ADD vaccinated_yn text;"
            },
            {
                "User": "Can we insert a new treatment record for dog_id 1 with professional_id 3, treatment_type_code 'EXAM', date_of_treatment '2023-03-25 10:00:00', and cost_of_treatment 300?",
                "Answer": "INSERT INTO Treatments (treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment) VALUES ((SELECT MAX(treatment_id) + 1 FROM Treatments), 1, 3, 'EXAM', '2023-03-25 10:00:00', 300);"
            },
            {
                "User": "Can we create a new table to track the roles of professionals with columns for role_code, role_description?",
                "Answer": "CREATE TABLE Professional_Roles (role_code text PRIMARY KEY, role_description text);"
            },
            {
                "User": "Let's insert a new owner record with the following details: id 16, first name 'John', last name 'Doe', street '123 Main St', city 'Anytown', state 'TX', zip code '12345', email 'john.doe@example.com', home phone '555-6789', cell number '555-9876'.",
                "Answer": "INSERT INTO Owners (owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number) VALUES (16, 'John', 'Doe', '123 Main St', 'Anytown', 'TX', '12345', 'john.doe@example.com', '555-6789', '555-9876');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 31,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the 'city' table? The new city details are ID 4080, Name 'Newville', CountryCode 'XYZ', District 'New District', Population 50000.",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'Newville', 'XYZ', 'New District', 50000);"
            },
            {
                "User": "I've noticed the population of Kabul is outdated. Can we update it to 2000000?",
                "Answer": "UPDATE city SET Population = 2000000 WHERE Name = 'Kabul';"
            },
            {
                "User": "We need to track the economic status of each country. Can we create a new table for that?",
                "Answer": "CREATE TABLE country_economy (CountryCode text PRIMARY KEY, GDP number, UnemploymentRate number, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "Let's add a column for 'InternetAccess' percentage to the 'country' table.",
                "Answer": "ALTER TABLE country ADD InternetAccess number;"
            },
            {
                "User": "Can we insert economic data for Afghanistan? Suppose the GDP is 20 billion and the unemployment rate is 35%.",
                "Answer": "INSERT INTO country_economy (CountryCode, GDP, UnemploymentRate) VALUES ('AFG', 20000000000, 35);"
            },
            {
                "User": "The capital of Afghanistan has changed. Can we update it to the new ID of the city 'Newville'?",
                "Answer": "UPDATE country SET Capital = 4080 WHERE Code = 'AFG';"
            },
            {
                "User": "How can we get a list of countries with their GDP and internet access percentage?",
                "Answer": "SELECT T1.Name, T2.GDP, T1.InternetAccess FROM country AS T1 LEFT JOIN country_economy AS T2 ON T1.Code = T2.CountryCode;"
            },
            {
                "User": "I want to know which countries speak Spanish and have an internet access rate higher than 70%.",
                "Answer": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Spanish' AND T1.InternetAccess > 70;"
            },
            {
                "User": "Let's update the population of Aruba to reflect the latest census. The new population is 110000.",
                "Answer": "UPDATE city SET Population = 110000 WHERE Name = 'Aruba';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 32,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new course to the database? The values for course_id, course_name, and course_description are 16, 'algorithms', 'Study of algorithmic processes and computational machines.'",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description) VALUES (16, 'algorithms', 'Study of algorithmic processes and computational machines.');"
            },
            {
                "User": "I'd like to update the email address of student id 2. Can we change it to 'h.balistreri@example.edu'?",
                "Answer": "UPDATE Students SET email_address = 'h.balistreri@example.edu' WHERE student_id = 2;"
            },
            {
                "User": "Can we create a table to track the instructors for each course?",
                "Answer": "CREATE TABLE Instructors (instructor_id number PRIMARY KEY, first_name text, last_name text, email_address text, department_id number, FOREIGN KEY (department_id) REFERENCES Departments(department_id));"
            },
            {
                "User": "How about adding a column to track the grade point average (GPA) for each student?",
                "Answer": "ALTER TABLE Students ADD gpa decimal(3,2);"
            },
            {
                "User": "Can we insert a new student enrolment record? The values for student_enrolment_id, degree_program_id, semester_id, and student_id are 16, 3, 1, 4 respectively.",
                "Answer": "INSERT INTO Student_Enrolment (student_enrolment_id, degree_program_id, semester_id, student_id) VALUES (16, 3, 1, 4);"
            },
            {
                "User": "Let's update the course description for course_id 3 to 'Operating systems principles and design'.",
                "Answer": "UPDATE Courses SET course_description = 'Operating systems principles and design' WHERE course_id = 3;"
            },
            {
                "User": "Can we add a new department? The values for department_id, department_name, and department_description are 16, 'Data Science', 'Study of data analysis, statistics and machine learning.'",
                "Answer": "INSERT INTO Departments (department_id, department_name, department_description) VALUES (16, 'Data Science', 'Study of data analysis, statistics and machine learning.');"
            },
            {
                "User": "I noticed we don't have a table for student grades. Can we create one? It should include columns for student_course_id, grade, and grade_date.",
                "Answer": "CREATE TABLE Student_Grades (student_course_id number, grade text, grade_date time, FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses(student_course_id));"
            },
            {
                "User": "How can I list all students along with their GPA?",
                "Answer": "SELECT first_name, last_name, gpa FROM Students;"
            },
            {
                "User": "Can we alter the Transcripts table to include a column for the student_id?",
                "Answer": "ALTER TABLE Transcripts ADD student_id number;"
            },
            {
                "User": "Let's insert a transcript record. The values for transcript_id, transcript_date, and student_id are 16, '2023-01-15 10:00:00', 5.",
                "Answer": "INSERT INTO Transcripts (transcript_id, transcript_date, student_id) VALUES (16, '2023-01-15 10:00:00', 5);"
            },
            {
                "User": "Can we update the address for student_id 1? Change the current_address_id to 5.",
                "Answer": "UPDATE Students SET current_address_id = 5 WHERE student_id = 1;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 33,
        "db": "poker_player",
        "interaction": [
            {
                "User": "Can we add a new poker player to the database with the details: Poker_Player_ID 6, People_ID 8, Final_Table_Made 5, Best_Finish 2, Money_Rank 200, Earnings 30000?",
                "Answer": "INSERT INTO poker_player (Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings) VALUES (6, 8, 5, 2, 200, 30000);"
            },
            {
                "User": "I'd like to update the earnings of the poker player with People_ID 2 to 200000. Can we do that?",
                "Answer": "UPDATE poker_player SET Earnings = 200000 WHERE People_ID = 2;"
            },
            {
                "User": "Can we create a table to track the sponsors of each player?",
                "Answer": "CREATE TABLE sponsors (Sponsor_ID number PRIMARY KEY, Poker_Player_ID number, Sponsor_Name text, Sponsorship_Amount number, FOREIGN KEY (Poker_Player_ID) REFERENCES poker_player(Poker_Player_ID));"
            },
            {
                "User": "How about adding a column to track the weight of each player?",
                "Answer": "ALTER TABLE people ADD Weight number;"
            },
            {
                "User": "Can we insert the sponsor details for a poker player? Sponsor_ID, Poker_Player_ID, Sponsor_Name, Sponsorship_Amount can be assigned to 101, 3, 'PokerStars', 50000",
                "Answer": "INSERT INTO sponsors (Sponsor_ID, Poker_Player_ID, Sponsor_Name, Sponsorship_Amount) VALUES (101, 3, 'PokerStars', 50000);"
            },
            {
                "User": "Let's update the height of Aleksey Ostapenko to 210 cm. Can we do that?",
                "Answer": "UPDATE people SET Height = 210 WHERE Name = 'Aleksey Ostapenko';"
            },
            {
                "User": "Can we add a record for a new player named 'John Doe', born on 'January 1, 1990', nationality 'USA', height 175 cm, and weight 80 kg?",
                "Answer": "INSERT INTO people (People_ID, Nationality, Name, Birth_Date, Height, Weight) VALUES ((SELECT MAX(People_ID) + 1 FROM people), 'USA', 'John Doe', '1990-01-01', 175, 80);"
            },
            {
                "User": "I want to record a new final table made by player with People_ID 1. Can we increment the Final_Table_Made count by 1 for this player?",
                "Answer": "UPDATE poker_player SET Final_Table_Made = Final_Table_Made + 1 WHERE People_ID = 1;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 34,
        "db": "flight_2",
        "interaction": [
            {
                "User": "Can we add a new airline that just started operating? The details are uid 13, Airline 'SkyHigh', Abbreviation 'SKH', Country 'Netherlands'.",
                "Answer": "INSERT INTO airlines (uid, Airline, Abbreviation, Country) VALUES (13, 'SkyHigh', 'SKH', 'Netherlands');"
            },
            {
                "User": "I need to correct the country abbreviation for 'Phillips AAF'. Can we update it to 'USA'?",
                "Answer": "UPDATE airports SET CountryAbbrev = 'USA' WHERE AirportName = 'Phillips AAF';"
            },
            {
                "User": "Let's create a table to keep track of frequent flyer memberships for each airline.",
                "Answer": "CREATE TABLE frequent_flyers (MemberId number PRIMARY KEY, AirlineUid number, MemberName text, Points number, FOREIGN KEY (AirlineUid) REFERENCES airlines(uid));"
            },
            {
                "User": "We should add a column for the hub airport to the airlines table. Can we do that?",
                "Answer": "ALTER TABLE airlines ADD HubAirportCode text;"
            },
            {
                "User": "Let's insert a new flight record. The details are Airline 2, FlightNo 345, SourceAirport 'ABR', DestAirport 'DYS'.",
                "Answer": "INSERT INTO flights (Airline, FlightNo, SourceAirport, DestAirport) VALUES (2, 345, 'ABR', 'DYS');"
            },
            {
                "User": "Can we update the country of 'Municipal' airport to 'Canada'?",
                "Answer": "UPDATE airports SET Country = 'Canada' WHERE AirportName = 'Municipal';"
            },
            {
                "User": "How can I get a list of all airlines along with their hub airports?",
                "Answer": "SELECT Airline, HubAirportCode FROM airlines;"
            },
            {
                "User": "Can we enroll a new frequent flyer? The details are MemberId 101, AirlineUid 3, MemberName 'John Doe', Points 5000.",
                "Answer": "INSERT INTO frequent_flyers (MemberId, AirlineUid, MemberName, Points) VALUES (101, 3, 'John Doe', 5000);"
            },
            {
                "User": "Let's update the points for frequent flyer John Doe to 7500.",
                "Answer": "UPDATE frequent_flyers SET Points = 7500 WHERE MemberName = 'John Doe';"
            },
            {
                "User": "I want to see all flights from 'Phillips AAF'. Can you show me?",
                "Answer": "SELECT * FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE AirportName = 'Phillips AAF');"
            },
            {
                "User": "Can we create a view that shows airlines and the number of flights they operate?",
                "Answer": "CREATE VIEW airline_flight_counts AS SELECT a.uid, a.Airline, COUNT(f.FlightNo) AS NumberOfFlights FROM airlines a LEFT JOIN flights f ON a.uid = f.Airline GROUP BY a.uid, a.Airline;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 35,
        "db": "museum_visit",
        "interaction": [
            {
                "User": "Can we add a new visitor to the database? The new visitor's ID, Name, Level of membership, and Age are 7, 'Lionel Messi', 10, 34",
                "Answer": "INSERT INTO visitor (ID, Name, Level_of_membership, Age) VALUES (7, 'Lionel Messi', 10, 34);"
            },
            {
                "User": "I want to correct the name of a museum. Can we change 'Plaza Museum' to 'Central Plaza Museum' for Museum_ID 1?",
                "Answer": "UPDATE museum SET Name = 'Central Plaza Museum' WHERE Museum_ID = 1;"
            },
            {
                "User": "Can we create a table to track the special exhibitions hosted by the museums?",
                "Answer": "CREATE TABLE special_exhibitions (Exhibition_ID number PRIMARY KEY, Museum_ID number, Title text, Start_Date text, End_Date text, FOREIGN KEY (Museum_ID) REFERENCES museum(Museum_ID));"
            },
            {
                "User": "How about adding a column to track the revenue for each visit?",
                "Answer": "ALTER TABLE visit ADD Revenue number;"
            },
            {
                "User": "Can we insert a new visit record? Museum_ID, visitor_ID, Num_of_Ticket, Total_spent, and Revenue can be assigned to 2, '6', 2, 50.00, 100.00",
                "Answer": "INSERT INTO visit (Museum_ID, visitor_ID, Num_of_Ticket, Total_spent, Revenue) VALUES (2, '6', 2, 50.00, 100.00);"
            },
            {
                "User": "Let's update the level of membership for a visitor. Can we set the level of membership of visitor ID 3 to 3?",
                "Answer": "UPDATE visitor SET Level_of_membership = 3 WHERE ID = 3;"
            },
            {
                "User": "How can I find out the total revenue generated by each museum?",
                "Answer": "SELECT M.Name, SUM(V.Revenue) AS Total_Revenue FROM museum AS M JOIN visit AS V ON M.Museum_ID = V.Museum_ID GROUP BY M.Museum_ID;"
            },
            {
                "User": "Can we add a new museum with the following details: Museum_ID 9, Name 'Oceanic Art Museum', Number of Staff 45, Open Year '2015'?",
                "Answer": "INSERT INTO museum (Museum_ID, Name, Num_of_Staff, Open_Year) VALUES (9, 'Oceanic Art Museum', 45, '2015');"
            },
            {
                "User": "I'd like to record a new special exhibition for the 'Jefferson Development Museum' with the Exhibition_ID 101, Title 'The Age of Discovery', Start_Date '2023-06-01', End_Date '2023-09-30'.",
                "Answer": "INSERT INTO special_exhibitions (Exhibition_ID, Museum_ID, Title, Start_Date, End_Date) VALUES (101, 3, 'The Age of Discovery', '2023-06-01', '2023-09-30');"
            },
            {
                "User": "Can we update the number of staff for 'Capital Plaza Museum' to reflect new hires? The new number should be 30.",
                "Answer": "UPDATE museum SET Num_of_Staff = 30 WHERE Name = 'Capital Plaza Museum';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 36,
        "db": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "User": "Can we add a new template type for 'Report' documents?",
                "Answer": "INSERT INTO Ref_Template_Types (Template_Type_Code, Template_Type_Description) VALUES ('RP', 'Report');"
            },
            {
                "User": "I need to update the description of the template type with code 'CV' to 'Curriculum Vitae'.",
                "Answer": "UPDATE Ref_Template_Types SET Template_Type_Description = 'Curriculum Vitae' WHERE Template_Type_Code = 'CV';"
            },
            {
                "User": "Can we create a new table to store the authors of documents?",
                "Answer": "CREATE TABLE Authors (Author_ID number PRIMARY KEY, Author_Name text, Author_Email text);"
            },
            {
                "User": "Let's add a column to track the creation date of each document.",
                "Answer": "ALTER TABLE Documents ADD Creation_Date time;"
            },
            {
                "User": "Can we insert a new document with the following details: Document_ID 16, Template_ID 5, Document_Name 'Annual Report', Document_Description 'Financial Overview', Creation_Date '2023-04-01 00:00:00'?",
                "Answer": "INSERT INTO Documents (Document_ID, Template_ID, Document_Name, Document_Description, Creation_Date) VALUES (16, 5, 'Annual Report', 'Financial Overview', '2023-04-01 00:00:00');"
            },
            {
                "User": "I'd like to correct a paragraph text. Can we change the text for Paragraph_ID 7 to 'The economic growth of Korea has been significant'?",
                "Answer": "UPDATE Paragraphs SET Paragraph_Text = 'The economic growth of Korea has been significant' WHERE Paragraph_ID = 7;"
            },
            {
                "User": "How can I list all templates with their types and descriptions?",
                "Answer": "SELECT T1.Template_ID, T1.Template_Type_Code, T2.Template_Type_Description FROM Templates AS T1 JOIN Ref_Template_Types AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code;"
            },
            {
                "User": "Can we add an author named 'John Doe' with email 'john.doe@example.com' to the Authors table?",
                "Answer": "INSERT INTO Authors (Author_ID, Author_Name, Author_Email) VALUES (1, 'John Doe', 'john.doe@example.com');"
            },
            {
                "User": "Let's link the authors to documents. Can we add a column 'Author_ID' to the Documents table?",
                "Answer": "ALTER TABLE Documents ADD Author_ID number;"
            },
            {
                "User": "Now, assign author with ID 1 to the document with ID 16.",
                "Answer": "UPDATE Documents SET Author_ID = 1 WHERE Document_ID = 16;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 37,
        "db": "pets_1",
        "interaction": [
            {
                "User": "Can we add a new student to the database with StuID 1051, last name 'Brown', first name 'James', age 20, sex 'M', major 700, advisor 1121, and city code 'NYC'?",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1051, 'Brown', 'James', 20, 'M', 700, 1121, 'NYC');"
            },
            {
                "User": "I want to update the major for Linda Smith to 700. Can you do that?",
                "Answer": "UPDATE Student SET Major = 700 WHERE LName = 'Smith' AND Fname = 'Linda';"
            },
            {
                "User": "Can we create a table to keep track of students' graduation years?",
                "Answer": "CREATE TABLE Graduation (StuID number PRIMARY KEY, GradYear number, FOREIGN KEY (StuID) REFERENCES Student(StuID));"
            },
            {
                "User": "Let's add a column to record the neutered status for pets. Can we do that?",
                "Answer": "ALTER TABLE Pets ADD Neutered text;"
            },
            {
                "User": "Insert graduation year data for Linda Smith. Her StuID is 1001 and her graduation year is 2025.",
                "Answer": "INSERT INTO Graduation (StuID, GradYear) VALUES (1001, 2025);"
            },
            {
                "User": "Update the neutered status for the cat with PetID 2001 to 'yes'.",
                "Answer": "UPDATE Pets SET Neutered = 'yes' WHERE PetID = 2001;"
            },
            {
                "User": "How can I get a list of all students who have pets?",
                "Answer": "SELECT S.StuID, S.LName, S.Fname FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID;"
            },
            {
                "User": "Can we insert a new pet with PetID 2004, type 'bird', age 1, weight 0.5?",
                "Answer": "INSERT INTO Pets (PetID, PetType, pet_age, weight) VALUES (2004, 'bird', 1, 0.5);"
            },
            {
                "User": "Let's update Tracy Kim's city code to 'LAX'. Can we do that?",
                "Answer": "UPDATE Student SET city_code = 'LAX' WHERE LName = 'Kim' AND Fname = 'Tracy';"
            },
            {
                "User": "Can we add a new relationship in Has_Pet for student 1003 to have a new pet with PetID 2004?",
                "Answer": "INSERT INTO Has_Pet (StuID, PetID) VALUES (1003, 2004);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 38,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city with ID 4080, named 'Newtown', in country code 'USA', district 'Fictionland', with a population of 12345?",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'Newtown', 'USA', 'Fictionland', 12345);"
            },
            {
                "User": "I'd like to update the population of Kabul to 1800000. How can we do that?",
                "Answer": "UPDATE city SET Population = 1800000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Can we create a new table to track the major exports of each country?",
                "Answer": "CREATE TABLE country_exports (CountryCode text PRIMARY KEY, MajorExport text, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "How about adding a new column for GDP to the country table?",
                "Answer": "ALTER TABLE country ADD GDP number;"
            },
            {
                "User": "Can we insert the major export data for country code 'AFG' as 'Textiles'?",
                "Answer": "INSERT INTO country_exports (CountryCode, MajorExport) VALUES ('AFG', 'Textiles');"
            },
            {
                "User": "Let's update the GDP for Afghanistan to be 20 billion. How do we do that?",
                "Answer": "UPDATE country SET GDP = 20000 WHERE Code = 'AFG';"
            },
            {
                "User": "Can we list all the cities in Afghanistan along with their populations?",
                "Answer": "SELECT Name, Population FROM city WHERE CountryCode = 'AFG';"
            },
            {
                "User": "I want to add a new language to the countrylanguage table for 'AFG' called 'Urdu' with a percentage of 2. Is it official?",
                "Answer": "INSERT INTO countrylanguage (CountryCode, Language, IsOfficial, Percentage) VALUES ('AFG', 'Urdu', 'F', 2);"
            },
            {
                "User": "Can we see the updated list of languages spoken in Aruba including percentages?",
                "Answer": "SELECT Language, Percentage FROM countrylanguage WHERE CountryCode = 'ABW';"
            },
            {
                "User": "Is it possible to change the continent of Angola from 'Africa' to 'South America'?",
                "Answer": "UPDATE country SET Continent = 'South America' WHERE Code = 'AGO';"
            },
            {
                "User": "How can I find out the average life expectancy across all countries in Asia?",
                "Answer": "SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Asia';"
            },
            {
                "User": "Can we add a new column to track whether a city is a capital in the city table?",
                "Answer": "ALTER TABLE city ADD IsCapital text;"
            },
            {
                "User": "Let's mark Kabul as the capital. How do we update that information?",
                "Answer": "UPDATE city SET IsCapital = 'Y' WHERE Name = 'Kabul';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 39,
        "db": "pets_1",
        "interaction": [
            {
                "User": "Can we add a new student to the database with StuID 1036, last name 'Brown', first name 'James', age 20, sex 'M', major 601, advisor 1121, and city_code 'NYC'?",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Brown', 'James', 20, 'M', 601, 1121, 'NYC');"
            },
            {
                "User": "I'd like to update the major for student with StuID 1003 to 602. Can we do that?",
                "Answer": "UPDATE Student SET Major = 602 WHERE StuID = 1003;"
            },
            {
                "User": "Can we create a table to track the pet ownership history for each student?",
                "Answer": "CREATE TABLE Pet_Ownership_History (HistoryID number PRIMARY KEY, StuID number, PetID number, StartDate date, EndDate date, FOREIGN KEY (StuID) REFERENCES Student(StuID), FOREIGN KEY (PetID) REFERENCES Pets(PetID));"
            },
            {
                "User": "How about adding a column to track the breed of each pet?",
                "Answer": "ALTER TABLE Pets ADD Breed text;"
            },
            {
                "User": "Can we insert a pet ownership record with HistoryID 3001, StuID 1002, PetID 2003, StartDate '2021-01-01', and EndDate '2023-12-31'?",
                "Answer": "INSERT INTO Pet_Ownership_History (HistoryID, StuID, PetID, StartDate, EndDate) VALUES (3001, 1002, 2003, '2021-01-01', '2023-12-31');"
            },
            {
                "User": "Let's update the weight for pet with PetID 2002 to 14.2 kg. Can you do that?",
                "Answer": "UPDATE Pets SET weight = 14.2 WHERE PetID = 2002;"
            },
            {
                "User": "Can we list all students along with their pets' breed?",
                "Answer": "SELECT T1.Fname, T1.LName, T2.Breed FROM Student AS T1 JOIN Has_Pet AS T3 ON T1.StuID = T3.StuID JOIN Pets AS T2 ON T3.PetID = T2.PetID WHERE T2.Breed IS NOT NULL;"
            },
            {
                "User": "I want to add a new pet with PetID 2004, type 'bird', age 1, weight 0.5, and breed 'parrot'.",
                "Answer": "INSERT INTO Pets (PetID, PetType, pet_age, weight, Breed) VALUES (2004, 'bird', 1, 0.5, 'parrot');"
            },
            {
                "User": "Can we update the city code for student with StuID 1001 to 'LAX'?",
                "Answer": "UPDATE Student SET city_code = 'LAX' WHERE StuID = 1001;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 40,
        "db": "pets_1",
        "interaction": [
            {
                "User": "Can we add a new student with the details: StuID 1051, LName 'Brown', Fname 'John', Age 22, Sex 'M', Major 601, Advisor 1121, city_code 'NYC'?",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1051, 'Brown', 'John', 22, 'M', 601, 1121, 'NYC');"
            },
            {
                "User": "I'd like to correct the age of Linda Smith to 19. Can you update that for me?",
                "Answer": "UPDATE Student SET Age = 19 WHERE LName = 'Smith' AND Fname = 'Linda';"
            },
            {
                "User": "Can we create a new table to track the students' GPA?",
                "Answer": "CREATE TABLE Student_GPA (StuID number PRIMARY KEY, GPA decimal(3,2), FOREIGN KEY (StuID) REFERENCES Student(StuID));"
            },
            {
                "User": "How about adding a column for the email address of each student?",
                "Answer": "ALTER TABLE Student ADD Email text;"
            },
            {
                "User": "Let's insert GPA data for student with StuID 1002. Assume the GPA is 3.5.",
                "Answer": "INSERT INTO Student_GPA (StuID, GPA) VALUES (1002, 3.5);"
            },
            {
                "User": "Can we update the pet's weight to 15.0 for PetID 2001?",
                "Answer": "UPDATE Pets SET weight = 15.0 WHERE PetID = 2001;"
            },
            {
                "User": "I want to know which students have pets older than 2 years. Can you list their StuID and pet's age?",
                "Answer": "SELECT T1.StuID, T2.pet_age FROM Has_Pet AS T1 JOIN Pets AS T2 ON T1.PetID = T2.PetID WHERE T2.pet_age > 2;"
            },
            {
                "User": "Can we associate each pet with its student owner's name?",
                "Answer": "SELECT T1.Fname, T1.LName, T2.PetID FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID;"
            },
            {
                "User": "Let's insert a new pet for Tracy Kim. The pet's details are PetID 2004, PetType 'bird', pet_age 1, weight 0.5.",
                "Answer": [
                    "INSERT INTO Pets (PetID, PetType, pet_age, weight) VALUES (2004, 'bird', 1, 0.5);",
                    "INSERT INTO Has_Pet (StuID, PetID) VALUES ((SELECT StuID FROM Student WHERE LName = 'Kim' AND Fname = 'Tracy'), 2004);"
                ]
            },
            {
                "User": "Can we add a new major to the student with StuID 1003? Let's set the Major to 602.",
                "Answer": "UPDATE Student SET Major = 602 WHERE StuID = 1003;"
            },
            {
                "User": "I need to email all students who are majoring in 600. Can you provide me with their email addresses?",
                "Answer": "SELECT Email FROM Student WHERE Major = 600;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 41,
        "db": "employee_hire_evaluation",
        "interaction": [
            {
                "User": "Can we add a new employee to the database? Their details are Employee_ID 11, Name 'Samantha Wells', Age 30, City 'London'.",
                "Answer": "INSERT INTO employee (Employee_ID, Name, Age, City) VALUES (11, 'Samantha Wells', 30, 'London');"
            },
            {
                "User": "I'd like to correct the age of an employee. Can we update the age of employee with ID 2 to be 30?",
                "Answer": "UPDATE employee SET Age = 30 WHERE Employee_ID = 2;"
            },
            {
                "User": "Can we create a new table to track the training status of employees?",
                "Answer": "CREATE TABLE training_status (Employee_ID number, Training_Completed text, FOREIGN KEY (Employee_ID) REFERENCES employee(Employee_ID));"
            },
            {
                "User": "How about adding a column to the shop table to track the year it was established?",
                "Answer": "ALTER TABLE shop ADD Year_Established number;"
            },
            {
                "User": "Can we insert training status for an employee? Assume Employee_ID 3 has completed 'Basic Training'.",
                "Answer": "INSERT INTO training_status (Employee_ID, Training_Completed) VALUES (3, 'Basic Training');"
            },
            {
                "User": "Let's update the location of shop ID 1 to 'Helsinki'.",
                "Answer": "UPDATE shop SET Location = 'Helsinki' WHERE Shop_ID = 1;"
            },
            {
                "User": "How can I list all employees along with their training status?",
                "Answer": "SELECT t1.Name, t2.Training_Completed FROM employee AS t1 LEFT JOIN training_status AS t2 ON t1.Employee_ID = t2.Employee_ID;"
            },
            {
                "User": "What is the total bonus awarded to employees in the year 2016?",
                "Answer": "SELECT SUM(Bonus) FROM evaluation WHERE Year_awarded = '2016';"
            },
            {
                "User": "Can we add a record of hiring an employee to a shop? Let's say Employee_ID 11 was hired by Shop_ID 2 in 2021 and is part-time.",
                "Answer": "INSERT INTO hiring (Shop_ID, Employee_ID, Start_from, Is_full_time) VALUES (2, 11, '2021', 'F');"
            },
            {
                "User": "We need to correct the bonus for Employee_ID 1 in the year 2011 to 3500.",
                "Answer": "UPDATE evaluation SET Bonus = 3500 WHERE Employee_ID = '1' AND Year_awarded = '2011';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 42,
        "db": "employee_hire_evaluation",
        "interaction": [
            {
                "User": "Can we add a new employee to the database? The employee's ID, name, age, and city are 11, 'Emma Watson', 30, 'London'.",
                "Answer": "INSERT INTO employee (Employee_ID, Name, Age, City) VALUES (11, 'Emma Watson', 30, 'London');"
            },
            {
                "User": "I'd like to update the location of shop ID 2 to 'Töölö Stadium'. How can we do that?",
                "Answer": "UPDATE shop SET Location = 'Töölö Stadium' WHERE Shop_ID = 2;"
            },
            {
                "User": "Can we create a table to keep track of the shop's monthly revenue?",
                "Answer": "CREATE TABLE shop_revenue (Revenue_ID number PRIMARY KEY, Shop_ID number, Month text, Revenue number, FOREIGN KEY (Shop_ID) REFERENCES shop(Shop_ID));"
            },
            {
                "User": "How about adding a column for email addresses to the employee table?",
                "Answer": "ALTER TABLE employee ADD Email text;"
            },
            {
                "User": "Let's insert the hiring data for a new employee. Can we assign Shop_ID, Employee_ID, Start_from, Is_full_time to 3, 11, '2023-01', 'T'?",
                "Answer": "INSERT INTO hiring (Shop_ID, Employee_ID, Start_from, Is_full_time) VALUES (3, 11, '2023-01', 'T');"
            },
            {
                "User": "Update the bonus for employee ID 1 in the year 2016 to 3500. How do we do that?",
                "Answer": "UPDATE evaluation SET Bonus = 3500 WHERE Employee_ID = '1' AND Year_awarded = '2016';"
            },
            {
                "User": "Can we add a record to the shop_revenue table? Revenue_ID, Shop_ID, Month, Revenue can be 101, 1, 'April 2023', 15000.",
                "Answer": "INSERT INTO shop_revenue (Revenue_ID, Shop_ID, Month, Revenue) VALUES (101, 1, 'April 2023', 15000);"
            },
            {
                "User": "I need to change the district of shop ID 3 to 'Matinkylä'. Could you provide the SQL statement?",
                "Answer": "UPDATE shop SET District = 'Matinkylä' WHERE Shop_ID = 3;"
            },
            {
                "User": "How can we list all employees along with their email addresses?",
                "Answer": "SELECT Name, Email FROM employee;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 43,
        "db": "college_2",
        "interaction": [
            {
                "User": "Can we add a new course called 'Data Science Fundamentals' to the 'Computer Sci.' department with 4 credits?",
                "Answer": "INSERT INTO course (course_id, title, dept_name, credits) VALUES ('999', 'Data Science Fundamentals', 'Computer Sci.', 4)"
            },
            {
                "User": "I'd like to increase the salary of the instructor with ID '63395' by 5000.",
                "Answer": "UPDATE instructor SET salary = salary + 5000 WHERE ID = '63395'"
            },
            {
                "User": "Can we create a new table to track the office hours of instructors?",
                "Answer": "CREATE TABLE office_hours (ID text, day text, start_time text, end_time text, PRIMARY KEY (ID))"
            },
            {
                "User": "Please add a new classroom with building name 'NewHall', room number '101', and capacity of 50.",
                "Answer": "INSERT INTO classroom (building, room_number, capacity) VALUES ('NewHall', '101', 50)"
            },
            {
                "User": "How about updating the room number for course '787' in the 'section' table to '101' for the Fall 2010 semester?",
                "Answer": "UPDATE section SET room_number = '101' WHERE course_id = '787' AND semester = 'Fall' AND year = 2010"
            },
            {
                "User": "Can you add a new column 'email' to the 'student' table to store student email addresses?",
                "Answer": "ALTER TABLE student ADD COLUMN email text"
            },
            {
                "User": "Let's insert a new time slot 'P' that starts at 14:00 and ends at 15:30 on Mondays.",
                "Answer": "INSERT INTO time_slot (time_slot_id, day, start_hr, start_min, end_hr, end_min) VALUES ('P', 'M', 14, 0, 15, 30)"
            },
            {
                "User": "I need to correct the budget of the 'History' department to 710000.",
                "Answer": "UPDATE department SET budget = 710000 WHERE dept_name = 'History'"
            },
            {
                "User": "Create a new table 'research_interests' to store instructors' research interests with fields ID and interest.",
                "Answer": "CREATE TABLE research_interests (ID text, interest text, PRIMARY KEY (ID))"
            },
            {
                "User": "Update the capacity of the classroom in 'Fairchild' building room '145' to 30.",
                "Answer": "UPDATE classroom SET capacity = 30 WHERE building = 'Fairchild' AND room_number = '145'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 44,
        "db": "performance_attendance",
        "interaction": [
            {
                "User": "How many members are from Argentina?",
                "Answer": "SELECT COUNT(*) FROM member WHERE Nationality = 'Argentina'"
            },
            {
                "User": "Add a new member with ID 12, named Juan Martínez from Spain who is a Cellist.",
                "Answer": "INSERT INTO member (Member_ID, Name, Nationality, Role) VALUES ('12', 'Juan Martínez', 'Spain', 'Cellist')"
            },
            {
                "User": "Update the role of member with ID 1 to Concertmaster.",
                "Answer": "UPDATE member SET Role = 'Concertmaster' WHERE Member_ID = '1'"
            },
            {
                "User": "Create a new table to track instruments with columns Instrument_ID, Name, and Type.",
                "Answer": "CREATE TABLE instruments (Instrument_ID number PRIMARY KEY, Name text, Type text)"
            },
            {
                "User": "Insert into the new instruments table an entry for a Violin with ID 101 and Type String.",
                "Answer": "INSERT INTO instruments (Instrument_ID, Name, Type) VALUES (101, 'Violin', 'String')"
            },
            {
                "User": "Add a column to the member table to store the member's birthdate.",
                "Answer": "ALTER TABLE member ADD COLUMN Birthdate text"
            },
            {
                "User": "Set the birthdate of member with ID 2 to January 15, 1985.",
                "Answer": "UPDATE member SET Birthdate = 'January 15, 1985' WHERE Member_ID = '2'"
            },
            {
                "User": "List all performances that had an attendance of more than 1000.",
                "Answer": "SELECT * FROM performance WHERE Attendance > 1000"
            },
            {
                "User": "Increase the number of pieces played by member with ID 11 in performance ID 3 by 1.",
                "Answer": "UPDATE member_attendance SET Num_of_Pieces = Num_of_Pieces + 1 WHERE Member_ID = 11 AND Performance_ID = 3"
            },
            {
                "User": "Create a new table to track the ticket sales with columns Sale_ID, Performance_ID, and Tickets_Sold.",
                "Answer": "CREATE TABLE ticket_sales (Sale_ID number PRIMARY KEY, Performance_ID number, Tickets_Sold number)"
            },
            {
                "User": "Record a new ticket sale entry for performance ID 2 with 300 tickets sold.",
                "Answer": "INSERT INTO ticket_sales (Sale_ID, Performance_ID, Tickets_Sold) VALUES (1, 2, 300)"
            },
            {
                "User": "Add a column to the performance table to include the name of the main performer.",
                "Answer": "ALTER TABLE performance ADD COLUMN Main_Performer text"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 45,
        "db": "cinema",
        "interaction": [
            {
                "User": "How many seats are available in the Codling cinema?",
                "Answer": "SELECT Capacity FROM cinema WHERE Name = 'Codling'"
            },
            {
                "User": "Can you add a new film to the database with ID 6, titled 'The Mystery of the Lost Key', directed by 'Jane Doe', aired on 'October 15, 1992', with a production code '50110-50114'?",
                "Answer": "INSERT INTO film (Film_ID, Title, Directed_by, Original_air_date, Production_code) VALUES (6, 'The Mystery of the Lost Key', 'Jane Doe', 'October 15, 1992', '50110-50114')"
            },
            {
                "User": "Update the capacity of the cinema named 'Carrowleagh' to 400 seats.",
                "Answer": "UPDATE cinema SET Capacity = 400 WHERE Name = 'Carrowleagh'"
            },
            {
                "User": "I want to record the genre of each film. Please add a new column 'Genre' to the film table.",
                "Answer": "ALTER TABLE film ADD COLUMN Genre text"
            },
            {
                "User": "Set the genre of the film with ID 1 to 'Mystery'.",
                "Answer": "UPDATE film SET Genre = 'Mystery' WHERE Film_ID = 1"
            },
            {
                "User": "Create a new table for movie reviews with columns for review ID, film ID, user ID, rating, and comment.",
                "Answer": "CREATE TABLE reviews (Review_ID number PRIMARY KEY, Film_ID number, User_ID number, Rating number, Comment text)"
            },
            {
                "User": "Insert a review for film ID 2 with review ID 1, by user ID 123, rating 4.5, and a comment saying 'Great plot twists!'.",
                "Answer": "INSERT INTO reviews (Review_ID, Film_ID, User_ID, Rating, Comment) VALUES (1, 2, 123, 4.5, 'Great plot twists!')"
            },
            {
                "User": "Can we track how many times a film has been scheduled? Add a column 'Times_Scheduled' to the film table.",
                "Answer": "ALTER TABLE film ADD COLUMN Times_Scheduled number"
            },
            {
                "User": "Calculate how many times the film with ID 2 has been scheduled.",
                "Answer": "SELECT COUNT(*) FROM schedule WHERE Film_ID = 2"
            },
            {
                "User": "Update the 'Times_Scheduled' for the film with ID 2 to the number you just calculated.",
                "Answer": "UPDATE film SET Times_Scheduled = (SELECT COUNT(*) FROM schedule WHERE Film_ID = 2) WHERE Film_ID = 2"
            },
            {
                "User": "Can you show me the average rating for each film?",
                "Answer": "SELECT Film_ID, AVG(Rating) AS Average_Rating FROM reviews GROUP BY Film_ID"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 46,
        "db": "student_1",
        "interaction": [
            {
                "User": "Which classroom has the most students?",
                "Answer": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "User": "Could you tell me what grade that is, please?",
                "Answer": "SELECT classroom, grade FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "User": "What are the first names of the students in that classroom that begin with the letter 'S'?",
                "Answer": "SELECT FirstName FROM list WHERE FirstName LIKE 'S%' AND classroom IN (SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "User": "I want to add a new student named 'Taylor Swift' to the classroom with the most students. She is in grade 4. Can you add her record?",
                "Answer": "INSERT INTO list (LastName, FirstName, Grade, Classroom) VALUES ('Swift', 'Taylor', 4, (SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1))"
            },
            {
                "User": "Update the grade for 'Stormy Kristensen' to 7. What is the SQL command?",
                "Answer": "UPDATE list SET Grade = 7 WHERE FirstName = 'Stormy' AND LastName = 'Kristensen'"
            },
            {
                "User": "Create a new table to track student attendance with columns for date, student last name, and presence status. Can you write the SQL for this?",
                "Answer": "CREATE TABLE attendance (Date text, LastName text, PresenceStatus text, PRIMARY KEY (Date, LastName))"
            },
            {
                "User": "Add a column to the 'teachers' table to store their email addresses. What would be the SQL statement for this?",
                "Answer": "ALTER TABLE teachers ADD COLUMN Email text"
            },
            {
                "User": "Insert a new teacher record with the name 'John Doe' for classroom 104 with the email 'johndoe@example.com'. How do you insert this?",
                "Answer": "INSERT INTO teachers (LastName, FirstName, Classroom, Email) VALUES ('Doe', 'John', 104, 'johndoe@example.com')"
            },
            {
                "User": "Can you update the email address for 'Jerome Covin' to 'jeromec@example.com'?",
                "Answer": "UPDATE teachers SET Email = 'jeromec@example.com' WHERE FirstName = 'Jerome' AND LastName = 'Covin'"
            },
            {
                "User": "Create a view that shows teachers and the number of students in their classroom. What is the SQL command for creating such a view?",
                "Answer": "CREATE VIEW teacher_student_count AS SELECT t.LastName, t.FirstName, t.Classroom, COUNT(l.LastName) AS StudentCount FROM teachers t LEFT JOIN list l ON t.Classroom = l.Classroom GROUP BY t.Classroom"
            },
            {
                "User": "We need to keep track of student extracurricular activities. Can you create a table for that with columns for student last name, activity name, and participation status?",
                "Answer": "CREATE TABLE activities (LastName text, ActivityName text, ParticipationStatus text, PRIMARY KEY (LastName, ActivityName))"
            },
            {
                "User": "Add 'Sherwood Vanderwoude' to the soccer team with an active participation status. What's the insert statement?",
                "Answer": "INSERT INTO activities (LastName, ActivityName, ParticipationStatus) VALUES ('Vanderwoude', 'Soccer', 'Active')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 47,
        "db": "chinook_1",
        "interaction": [
            {
                "User": "Add a new artist named 'The Midnight' to the Artist table.",
                "Answer": "INSERT INTO Artist (Name) VALUES ('The Midnight');"
            },
            {
                "User": "Create a new table named 'Concerts' with columns for ConcertId, ArtistId, ConcertDate, Venue, and City.",
                "Answer": "CREATE TABLE Concerts (ConcertId number PRIMARY KEY, ArtistId number, ConcertDate time, Venue text, City text);"
            },
            {
                "User": "Insert a concert entry for artist with ID 1, date '2023-07-15', venue 'Madison Square Garden', and city 'New York'.",
                "Answer": "INSERT INTO Concerts (ArtistId, ConcertDate, Venue, City) VALUES (1, '2023-07-15', 'Madison Square Garden', 'New York');"
            },
            {
                "User": "Update the address of the customer with CustomerId 1 to '1234 New Address St, Sunnyvale, CA'.",
                "Answer": "UPDATE Customer SET Address = '1234 New Address St', City = 'Sunnyvale', State = 'CA' WHERE CustomerId = 1;"
            },
            {
                "User": "Add a new column 'Website' to the Artist table to store their official website URL.",
                "Answer": "ALTER TABLE Artist ADD COLUMN Website text;"
            },
            {
                "User": "Set the website for 'The Midnight' artist entry to 'https://www.themidnightofficial.com/'.",
                "Answer": "UPDATE Artist SET Website = 'https://www.themidnightofficial.com/' WHERE Name = 'The Midnight';"
            },
            {
                "User": "Create a new playlist called 'Workout Hits' in the Playlist table.",
                "Answer": "INSERT INTO Playlist (Name) VALUES ('Workout Hits');"
            },
            {
                "User": "Add the track with TrackId 5 to the newly created 'Workout Hits' playlist.",
                "Answer": "INSERT INTO PlaylistTrack (PlaylistId, TrackId) SELECT PlaylistId, 5 FROM Playlist WHERE Name = 'Workout Hits';"
            },
            {
                "User": "Increase the price of all tracks in the 'Metal' genre by 10 percent.",
                "Answer": "UPDATE Track SET UnitPrice = UnitPrice * 1.10 WHERE GenreId = (SELECT GenreId FROM Genre WHERE Name = 'Metal');"
            },
            {
                "User": "Create a new table 'Reviews' to store customer reviews for albums, with columns for ReviewId, AlbumId, CustomerId, ReviewText, and Rating.",
                "Answer": "CREATE TABLE Reviews (ReviewId number PRIMARY KEY, AlbumId number, CustomerId number, ReviewText text, Rating number);"
            },
            {
                "User": "Leave a 5-star review for the album with AlbumId 1 by the customer with CustomerId 3, mentioning 'Fantastic album with timeless tracks!'.",
                "Answer": "INSERT INTO Reviews (AlbumId, CustomerId, ReviewText, Rating) VALUES (1, 3, 'Fantastic album with timeless tracks!', 5);"
            },
            {
                "User": "How many tracks have been sold for the album titled 'For Those About To Rock We Salute You'?",
                "Answer": "SELECT SUM(T3.Quantity) FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN InvoiceLine AS T3 ON T2.TrackId = T3.TrackId WHERE T1.Title = 'For Those About To Rock We Salute You';"
            },
            {
                "User": "Alter the Invoice table to add a new column 'PaymentMethod' to store the method of payment used by the customer.",
                "Answer": "ALTER TABLE Invoice ADD COLUMN PaymentMethod text;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 48,
        "db": "apartment_rentals",
        "interaction": [
            {
                "User": "Can we add a new apartment building to the database?",
                "Answer": "INSERT INTO Apartment_Buildings (building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone) VALUES (192, 'Skyline Heights', 'Skyline Heights Luxury Apartments', 'Luxury Apartments with a view of the city skyline', '1234 Highview Blvd, Metropolis, ST 12345', 'Jane Doe', '555-123-4567')"
            },
            {
                "User": "I would like to update the building manager's phone number for building ID 133.",
                "Answer": "UPDATE Apartment_Buildings SET building_phone = '555-987-6543' WHERE building_id = 133"
            },
            {
                "User": "We need to track the number of parking spaces for each apartment building. Can we add this information?",
                "Answer": "ALTER TABLE Apartment_Buildings ADD COLUMN parking_spaces_count number"
            },
            {
                "User": "Set the number of parking spaces for 'Normandie Court' to 50.",
                "Answer": "UPDATE Apartment_Buildings SET parking_spaces_count = 50 WHERE building_full_name = 'Normandie Court'"
            },
            {
                "User": "Create a new table to track apartment maintenance requests.",
                "Answer": "CREATE TABLE Apartment_Maintenance (maintenance_id number PRIMARY KEY, apt_id number, request_date time, issue_description text, resolution_status text)"
            },
            {
                "User": "Log a new maintenance request for apartment ID 2, with a plumbing issue that needs to be resolved.",
                "Answer": "INSERT INTO Apartment_Maintenance (maintenance_id, apt_id, request_date, issue_description, resolution_status) VALUES (1, 2, '2023-04-01 08:30:00', 'Leaky kitchen faucet', 'Pending')"
            },
            {
                "User": "Update the booking status for guest ID 2 to 'Confirmed'.",
                "Answer": "UPDATE Apartment_Bookings SET booking_status_code = 'Confirmed' WHERE guest_id = 2"
            },
            {
                "User": "How many apartments are currently booked with a 'Provisional' status?",
                "Answer": "SELECT COUNT(*) FROM Apartment_Bookings WHERE booking_status_code = 'Provisional'"
            },
            {
                "User": "Can we see a list of all apartments with more than 2 bathrooms?",
                "Answer": "SELECT * FROM Apartments WHERE bathroom_count > 2"
            },
            {
                "User": "I want to add a new guest to the database. The guest's first name is Alex, last name is Smith, gender is Male, and date of birth is 1990-06-15.",
                "Answer": "INSERT INTO Guests (guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth) VALUES (16, 'Male', 'Alex', 'Smith', '1990-06-15 00:00:00')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 49,
        "db": "tracking_grants_for_research",
        "interaction": [
            {
                "User": "Add a new document type for progress reports.",
                "Answer": "INSERT INTO Document_Types (document_type_code, document_description) VALUES ('PROG', 'Progress Report');"
            },
            {
                "User": "Update the grant amount for grant_id 2 to 5000.",
                "Answer": "UPDATE Grants SET grant_amount = 5000 WHERE grant_id = 2;"
            },
            {
                "User": "Create a new table to track grant extensions with columns for grant_id, extension_date, and extension_reason.",
                "Answer": "CREATE TABLE Grant_Extensions (grant_id number, extension_date time, extension_reason text, PRIMARY KEY (grant_id));"
            },
            {
                "User": "Record a grant extension for grant_id 1 with a new end date of 2023-12-31 and reason 'Additional research required'.",
                "Answer": "INSERT INTO Grant_Extensions (grant_id, extension_date, extension_reason) VALUES (1, '2023-12-31', 'Additional research required');"
            },
            {
                "User": "Add a new column to track the method of communication in the Documents table.",
                "Answer": "ALTER TABLE Documents ADD COLUMN communication_method text;"
            },
            {
                "User": "Set the communication method to 'Email' for document_id 1.",
                "Answer": "UPDATE Documents SET communication_method = 'Email' WHERE document_id = 1;"
            },
            {
                "User": "Create a new table to log project updates with columns for update_id, project_id, update_date, and update_details.",
                "Answer": "CREATE TABLE Project_Updates (update_id number, project_id number, update_date time, update_details text, PRIMARY KEY (update_id));"
            },
            {
                "User": "Insert a project update for project_id 3 with details 'Initial phase completed successfully'.",
                "Answer": "INSERT INTO Project_Updates (update_id, project_id, update_date, update_details) VALUES (1, 3, CURRENT_TIMESTAMP, 'Initial phase completed successfully');"
            },
            {
                "User": "Add a new staff role for 'data analyst'.",
                "Answer": "INSERT INTO Staff_Roles (role_code, role_description) VALUES ('data_analyst', 'Data Analyst');"
            },
            {
                "User": "Update the organisation details for organisation_id 1 to 'Leading research institution in renewable energy'.",
                "Answer": "UPDATE Organisations SET organisation_details = 'Leading research institution in renewable energy' WHERE organisation_id = 1;"
            },
            {
                "User": "Add a new outcome type for software development with a description 'Outcome from software development projects'.",
                "Answer": "INSERT INTO Research_Outcomes (outcome_code, outcome_description) VALUES ('Software', 'Outcome from software development projects');"
            },
            {
                "User": "Alter the Project_Outcomes table to include a new column for outcome_date.",
                "Answer": "ALTER TABLE Project_Outcomes ADD COLUMN outcome_date time;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 50,
        "db": "tracking_grants_for_research",
        "interaction": [
            {
                "User": "Can you add a new document type for 'Final Report' submissions?",
                "Answer": "INSERT INTO Document_Types (document_type_code, document_description) VALUES ('FIN', 'Final Report')"
            },
            {
                "User": "I want to update the grant amount for grant ID 2 to 5000.00.",
                "Answer": "UPDATE Grants SET grant_amount = 5000.00 WHERE grant_id = 2"
            },
            {
                "User": "Can we create a new table to track grant reviews with columns for review_id, grant_id, reviewer_name, and review_date?",
                "Answer": "CREATE TABLE Grant_Reviews (review_id NUMBER PRIMARY KEY, grant_id NUMBER, reviewer_name TEXT, review_date TIME)"
            },
            {
                "User": "Please insert a new grant review record for grant ID 1 with reviewer name 'Dr. Smith' on today's date.",
                "Answer": "INSERT INTO Grant_Reviews (review_id, grant_id, reviewer_name, review_date) VALUES (1, 1, 'Dr. Smith', CURRENT_DATE)"
            },
            {
                "User": "Can we add a new column 'impact_factor' to the Research_Outcomes table to store numerical values?",
                "Answer": "ALTER TABLE Research_Outcomes ADD impact_factor NUMBER"
            },
            {
                "User": "Update the outcome description for the outcome code 'Paper' to specify 'Peer-Reviewed Research Paper'.",
                "Answer": "UPDATE Research_Outcomes SET outcome_description = 'Peer-Reviewed Research Paper' WHERE outcome_code = 'Paper'"
            },
            {
                "User": "Insert a new project outcome for project ID 5 with outcome code 'Thesis' and no details yet.",
                "Answer": "INSERT INTO Project_Outcomes (project_id, outcome_code) VALUES (5, 'Thesis')"
            },
            {
                "User": "Can you show me the total grant amount awarded to organisation ID 3?",
                "Answer": "SELECT SUM(grant_amount) FROM Grants WHERE organisation_id = 3"
            },
            {
                "User": "I would like to change the project details for project ID 2 to 'water purification study'.",
                "Answer": "UPDATE Projects SET project_details = 'water purification study' WHERE project_id = 2"
            },
            {
                "User": "Let's add a new role in Staff_Roles called 'consultant' with the description 'Project Consultant'.",
                "Answer": "INSERT INTO Staff_Roles (role_code, role_description) VALUES ('consultant', 'Project Consultant')"
            },
            {
                "User": "Please create a table to track equipment used in projects with columns for equipment_id, project_id, equipment_name, and date_acquired.",
                "Answer": "CREATE TABLE Project_Equipment (equipment_id NUMBER PRIMARY KEY, project_id NUMBER, equipment_name TEXT, date_acquired TIME)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 51,
        "db": "race_track",
        "interaction": [
            {
                "User": "Can you create a table to track the winners of each race?",
                "Answer": "CREATE TABLE race_winners (Winner_ID number PRIMARY KEY, Race_ID number, Winner_Name text, Winner_Team text, FOREIGN KEY (Race_ID) REFERENCES race(Race_ID))"
            },
            {
                "User": "Add a new winner for the 'Rolex 24 At Daytona' with the winner's name 'Team Ganassi' and team 'Ganassi Racing'.",
                "Answer": "INSERT INTO race_winners (Winner_ID, Race_ID, Winner_Name, Winner_Team) VALUES (1, 1, 'Team Ganassi', 'Ganassi Racing')"
            },
            {
                "User": "The winner of the 'Gainsco Grand Prix of Miami' was incorrect, it should be 'Team Penske'. Please update this information.",
                "Answer": "UPDATE race_winners SET Winner_Name = 'Team Penske' WHERE Race_ID = 2"
            },
            {
                "User": "I forgot to add a column for the time it took the winner to complete the race. Can you add a 'Completion_Time' column to the 'race_winners' table?",
                "Answer": "ALTER TABLE race_winners ADD Completion_Time text"
            },
            {
                "User": "Now, set the completion time for 'Team Ganassi' at 'Rolex 24 At Daytona' to '24:01:02'.",
                "Answer": "UPDATE race_winners SET Completion_Time = '24:01:02' WHERE Race_ID = 1 AND Winner_Name = 'Team Ganassi'"
            },
            {
                "User": "Let's add a new track called 'Sunshine Speedway' in 'Miami, FL' with a seating capacity of 50000 and opened in 2020.",
                "Answer": "INSERT INTO track (Track_ID, Name, Location, Seating, Year_Opened) VALUES (10, 'Sunshine Speedway', 'Miami, FL', 50000, 2020)"
            },
            {
                "User": "Can you show me all the tracks that were opened after the year 2000?",
                "Answer": "SELECT * FROM track WHERE Year_Opened > 2000"
            },
            {
                "User": "I need to see the list of races with their corresponding track names.",
                "Answer": "SELECT r.Race_ID, r.Name AS Race_Name, t.Name AS Track_Name FROM race r JOIN track t ON r.Track_ID = t.Track_ID"
            },
            {
                "User": "How many races have been held at each track? I need a list with track names and the count of races.",
                "Answer": "SELECT t.Name, COUNT(r.Race_ID) AS Races_Count FROM track t LEFT JOIN race r ON t.Track_ID = r.Track_ID GROUP BY t.Track_ID"
            },
            {
                "User": "Please update the seating capacity of 'Darlington Raceway' to 65000.",
                "Answer": "UPDATE track SET Seating = 65000 WHERE Name = 'Darlington Raceway'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 52,
        "db": "film_rank",
        "interaction": [
            {
                "User": "Can we add a new film called 'Space Odyssey' directed by 'Stanley Kubrick' with a gross of 190000000 to the database?",
                "Answer": "INSERT INTO film (Title, Director, Gross_in_dollar) VALUES ('Space Odyssey', 'Stanley Kubrick', 190000000)"
            },
            {
                "User": "I've made a mistake. The studio for 'Space Odyssey' should be 'MGM'. Can you update it?",
                "Answer": "UPDATE film SET Studio = 'MGM' WHERE Title = 'Space Odyssey'"
            },
            {
                "User": "Can we create a new table to track the awards received by films?",
                "Answer": "CREATE TABLE film_awards (Award_ID number PRIMARY KEY, Film_ID number, Award_name text, Year number)"
            },
            {
                "User": "Let's add an award for 'ET the Extra-Terrestrial' for 'Best Visual Effects' in 1983.",
                "Answer": "INSERT INTO film_awards (Film_ID, Award_name, Year) VALUES (1, 'Best Visual Effects', 1983)"
            },
            {
                "User": "Can you show me the highest grossing film by 'Universal' studio?",
                "Answer": "SELECT Title, MAX(Gross_in_dollar) FROM film WHERE Studio = 'Universal'"
            },
            {
                "User": "Let's add a column to track the number of Oscars won by each film in the film table.",
                "Answer": "ALTER TABLE film ADD COLUMN Oscars_won number"
            },
            {
                "User": "Update the number of Oscars won for 'ET the Extra-Terrestrial' to 4.",
                "Answer": "UPDATE film SET Oscars_won = 4 WHERE Title = 'ET the Extra-Terrestrial'"
            },
            {
                "User": "I want to add a new market for 'India' with 400 cities.",
                "Answer": "INSERT INTO market (Country, Number_cities) VALUES ('India', 400)"
            },
            {
                "User": "The gross for 'Tootsie' was reported incorrectly. It should be 177300000. Please update it.",
                "Answer": "UPDATE film SET Gross_in_dollar = 177300000 WHERE Title = 'Tootsie'"
            },
            {
                "User": "Can we add a new estimation for 'Space Odyssey' for the 'USA' market with a low estimate of 50000000 and a high estimate of 100000000 for the year 1968?",
                "Answer": "INSERT INTO film_market_estimation (Low_Estimate, High_Estimate, Film_ID, Type, Market_ID, Year) VALUES (50000000, 100000000, (SELECT Film_ID FROM film WHERE Title = 'Space Odyssey'), 'Sci-Fi', (SELECT Market_ID FROM market WHERE Country = 'USA'), 1968)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 53,
        "db": "club_1",
        "interaction": [
            {
                "User": "Add a new student named John Doe, aged 22, male, majoring in 601 with advisor 1121, residing in city code 'NYC'.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 22, 'M', 601, 1121, 'NYC')"
            },
            {
                "User": "Update the age of student Linda Smith to 19.",
                "Answer": "UPDATE Student SET Age = 19 WHERE LName = 'Smith' AND Fname = 'Linda'"
            },
            {
                "User": "Create a new table to track club meetings with columns for meeting ID, club ID, meeting date, and meeting notes.",
                "Answer": "CREATE TABLE Club_Meetings (MeetingID number PRIMARY KEY, ClubID number, MeetingDate date, MeetingNotes text)"
            },
            {
                "User": "Insert a record of a club meeting for 'Bootup Baltimore' with meeting ID 101, date '2023-04-15', and notes 'Annual Budget Review'.",
                "Answer": "INSERT INTO Club_Meetings (MeetingID, ClubID, MeetingDate, MeetingNotes) VALUES (101, 1, '2023-04-15', 'Annual Budget Review')"
            },
            {
                "User": "Add a new column 'Email' to the Student table to store student email addresses.",
                "Answer": "ALTER TABLE Student ADD Email text"
            },
            {
                "User": "Set the email for John Doe to 'johndoe@example.com'.",
                "Answer": "UPDATE Student SET Email = 'johndoe@example.com' WHERE Fname = 'John' AND LName = 'Doe'"
            },
            {
                "User": "What is the description of the club where the student with StuID 1007 is a Vice-President?",
                "Answer": "SELECT t1.ClubDesc FROM Club AS t1 JOIN Member_of_club AS t2 ON t1.ClubID = t2.ClubID WHERE t2.StuID = 1007 AND t2.Position = 'Vice-President'"
            },
            {
                "User": "Add Tracy Kim to the 'Pen and Paper Gaming' club as a member.",
                "Answer": "INSERT INTO Member_of_club (StuID, ClubID, Position) VALUES (1002, 3, 'Member')"
            },
            {
                "User": "Change the club location of 'Hopkins Student Enterprises' to 'MSE'.",
                "Answer": "UPDATE Club SET ClubLocation = 'MSE' WHERE ClubName = 'Hopkins Student Enterprises'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 54,
        "db": "flight_1",
        "interaction": [
            {
                "User": "Can we add a new flight from San Francisco to New York?",
                "Answer": "INSERT INTO flight (flno, origin, destination, distance, departure_date, arrival_date, price, aid) VALUES (101, 'San Francisco', 'New York', 2900, '04/13/2005 07:00', '04/13/2005 15:00', 300.00, 1)"
            },
            {
                "User": "What is the new flight number for the flight we just added from San Francisco to New York?",
                "Answer": "SELECT flno FROM flight WHERE origin = 'San Francisco' AND destination = 'New York'"
            },
            {
                "User": "Please increase the salary of employee John Williams by 10%.",
                "Answer": "UPDATE employee SET salary = salary * 1.10 WHERE name = 'John Williams'"
            },
            {
                "User": "How much is John Williams' new salary after the increase?",
                "Answer": "SELECT salary FROM employee WHERE name = 'John Williams'"
            },
            {
                "User": "Can we add a new column to track the number of passengers for each flight?",
                "Answer": "ALTER TABLE flight ADD COLUMN passengers number"
            },
            {
                "User": "Set the number of passengers for flight number 99 to 120.",
                "Answer": "UPDATE flight SET passengers = 120 WHERE flno = 99"
            },
            {
                "User": "Can you create a new table to log flight delays?",
                "Answer": "CREATE TABLE flight_delays (flno number, delay_time number, reason text, PRIMARY KEY (flno))"
            },
            {
                "User": "Log a 2-hour delay for flight number 99 due to bad weather.",
                "Answer": "INSERT INTO flight_delays (flno, delay_time, reason) VALUES (99, 120, 'bad weather')"
            },
            {
                "User": "How many flights have been delayed due to bad weather?",
                "Answer": "SELECT count(*) FROM flight_delays WHERE reason = 'bad weather'"
            },
            {
                "User": "Can you show me the list of aircraft that can travel more than 5000 miles?",
                "Answer": "SELECT name FROM aircraft WHERE distance > 5000"
            },
            {
                "User": "I'd like to add a new employee named Alice Brown with a salary of 100000.",
                "Answer": "INSERT INTO employee (eid, name, salary) VALUES (242518966, 'Alice Brown', 100000)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 55,
        "db": "hr_1",
        "interaction": [
            {
                "User": "Create a table to track employee bonuses with columns for employee id, bonus amount, and date awarded",
                "Answer": "CREATE TABLE employee_bonuses (EMPLOYEE_ID number, BONUS_AMOUNT number, DATE_AWARDED time, PRIMARY KEY (EMPLOYEE_ID, DATE_AWARDED))"
            },
            {
                "User": "Insert a record for an employee bonus where employee id is 101, bonus amount is 1500, and date awarded is today",
                "Answer": "INSERT INTO employee_bonuses (EMPLOYEE_ID, BONUS_AMOUNT, DATE_AWARDED) VALUES (101, 1500, CURRENT_DATE)"
            },
            {
                "User": "Update the job title of the job with id 'AD_ASST' to 'Executive Assistant'",
                "Answer": "UPDATE jobs SET JOB_TITLE = 'Executive Assistant' WHERE JOB_ID = 'AD_ASST'"
            },
            {
                "User": "Add a column 'REGION_DESCRIPTION' to the 'regions' table",
                "Answer": "ALTER TABLE regions ADD COLUMN REGION_DESCRIPTION text"
            },
            {
                "User": "Delete the 'Marketing' department from the departments table",
                "Answer": "DELETE FROM departments WHERE DEPARTMENT_NAME = 'Marketing'"
            },
            {
                "User": "Increase salary by 10% for all employees in the 'IT' department",
                "Answer": "UPDATE employees SET SALARY = SALARY * 1.10 WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM departments WHERE DEPARTMENT_NAME = 'IT')"
            },
            {
                "User": "Create a view that shows employee id, first name, last name, and department name",
                "Answer": "CREATE VIEW employee_department_info AS SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.LAST_NAME, D.DEPARTMENT_NAME FROM employees E JOIN departments D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID"
            },
            {
                "User": "Insert a new job with id 'IT_INTERN', title 'IT Intern', min salary 3000, and max salary 6000",
                "Answer": "INSERT INTO jobs (JOB_ID, JOB_TITLE, MIN_SALARY, MAX_SALARY) VALUES ('IT_INTERN', 'IT Intern', 3000, 6000)"
            },
            {
                "User": "Create a new country in the 'countries' table with country id 'XY', country name 'Xyland', belonging to region 3",
                "Answer": "INSERT INTO countries (COUNTRY_ID, COUNTRY_NAME, REGION_ID) VALUES ('XY', 'Xyland', 3)"
            },
            {
                "User": "Add a new location for the 'locations' table with id 3300, street address '1234 Example Blvd', postal code '12345', city 'Sampleville', state 'Demo', and country id 'US'",
                "Answer": "INSERT INTO locations (LOCATION_ID, STREET_ADDRESS, POSTAL_CODE, CITY, STATE_PROVINCE, COUNTRY_ID) VALUES (3300, '1234 Example Blvd', '12345', 'Sampleville', 'Demo', 'US')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 56,
        "db": "tracking_orders",
        "interaction": [
            {
                "User": "I would like to add a new customer named 'Alice' with customer details 'loves technology'. What would be the SQL statement for that?",
                "Answer": "INSERT INTO Customers (customer_name, customer_details) VALUES ('Alice', 'loves technology');"
            },
            {
                "User": "Can you update the order status to 'Delivered' for the order with order_id 2?",
                "Answer": "UPDATE Orders SET order_status = 'Delivered' WHERE order_id = 2;"
            },
            {
                "User": "I need to create a new table to track the customer feedback. It should have feedback_id, customer_id, and feedback_text columns. How do we do that?",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text);"
            },
            {
                "User": "Let's add a new column 'customer_email' to the Customers table to store their email addresses. What is the SQL command for this?",
                "Answer": "ALTER TABLE Customers ADD COLUMN customer_email text;"
            },
            {
                "User": "Insert a new product with product_id 16, named 'gadget', with no specific details.",
                "Answer": "INSERT INTO Products (product_id, product_name) VALUES (16, 'gadget');"
            },
            {
                "User": "The invoice from 1989-12-11 with invoice_number 2 needs to be updated to include the details 'urgent delivery'. Can you show me the SQL statement for that?",
                "Answer": "UPDATE Invoices SET invoice_details = 'urgent delivery' WHERE invoice_number = 2;"
            },
            {
                "User": "I want to create a new table for storing promotional codes. It should have columns for code_id, code_value, and expiration_date. Please provide the SQL statement.",
                "Answer": "CREATE TABLE Promotional_Codes (code_id number PRIMARY KEY, code_value text, expiration_date time);"
            },
            {
                "User": "We should add a 'last_modified' timestamp column to the Orders table to track the last update time. What would be the appropriate SQL statement?",
                "Answer": "ALTER TABLE Orders ADD COLUMN last_modified time;"
            },
            {
                "User": "Insert a shipment record with shipment_id 16, order_id 3, invoice_number 1, shipment_tracking_number 'AB123', and shipment_date '2023-04-01 10:00:00'.",
                "Answer": "INSERT INTO Shipments (shipment_id, order_id, invoice_number, shipment_tracking_number, shipment_date) VALUES (16, 3, 1, 'AB123', '2023-04-01 10:00:00');"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 57,
        "db": "manufactory_1",
        "interaction": [
            {
                "User": "Add a new manufacturer with the code 7, named 'Logitech', headquartered in 'Lausanne', founded by 'Daniel Borel', with a revenue of 90.",
                "Answer": "INSERT INTO Manufacturers (Code, Name, Headquarter, Founder, Revenue) VALUES (7, 'Logitech', 'Lausanne', 'Daniel Borel', 90)"
            },
            {
                "User": "Update the revenue of 'Creative Labs' to 110.",
                "Answer": "UPDATE Manufacturers SET Revenue = 110 WHERE Name = 'Creative Labs'"
            },
            {
                "User": "Create a new table called 'Categories' with columns 'Id' as a number and primary key, 'CategoryName' as text.",
                "Answer": "CREATE TABLE Categories (Id number PRIMARY KEY, CategoryName text)"
            },
            {
                "User": "Insert into 'Categories' table with Id 1 and CategoryName as 'Electronics'.",
                "Answer": "INSERT INTO Categories (Id, CategoryName) VALUES (1, 'Electronics')"
            },
            {
                "User": "Add a new column 'Category' as a number to the 'Products' table to link with the 'Categories' table.",
                "Answer": "ALTER TABLE Products ADD Category number"
            },
            {
                "User": "Link the product 'Hard drive' with the 'Electronics' category.",
                "Answer": "UPDATE Products SET Category = 1 WHERE Name = 'Hard drive'"
            },
            {
                "User": "Create a table 'Employees' with columns 'Id' as a number and primary key, 'Name' as text, 'Position' as text, and 'ManufacturerId' as a number to reference 'Manufacturers' table.",
                "Answer": "CREATE TABLE Employees (Id number PRIMARY KEY, Name text, Position text, ManufacturerId number, FOREIGN KEY (ManufacturerId) REFERENCES Manufacturers(Code))"
            },
            {
                "User": "Insert a new employee with Id 1, name 'John Smith', position 'Engineer', and working for manufacturer with code 1.",
                "Answer": "INSERT INTO Employees (Id, Name, Position, ManufacturerId) VALUES (1, 'John Smith', 'Engineer', 1)"
            },
            {
                "User": "Add a new product with the code 12, named 'Keyboard', priced at 80, manufactured by 'Logitech' with code 7.",
                "Answer": "INSERT INTO Products (Code, Name, Price, Manufacturer) VALUES (12, 'Keyboard', 80, 7)"
            },
            {
                "User": "Show the total revenue of manufacturers headquartered in 'Lausanne' or 'Tokyo'.",
                "Answer": "SELECT SUM(Revenue) FROM Manufacturers WHERE Headquarter IN ('Lausanne', 'Tokyo')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 58,
        "db": "game_injury",
        "interaction": [
            {
                "User": "Add a new stadium with id 14, named 'Liberty Stadium', that has 6 home games, an average attendance of 35000, total attendance of 210000, and a capacity percentage of 87.5.",
                "Answer": "INSERT INTO stadium (id, name, Home_Games, Average_Attendance, Total_Attendance, Capacity_Percentage) VALUES (14, 'Liberty Stadium', 6, 35000, 210000, 87.5)"
            },
            {
                "User": "Update the average attendance for 'Cowboys Stadium' to 90000.",
                "Answer": "UPDATE stadium SET Average_Attendance = 90000 WHERE name = 'Cowboys Stadium'"
            },
            {
                "User": "Create a new table 'ticket_prices' with columns 'game_id' as number, 'stadium_id' as number, 'price' as number, and 'category' as text. Set 'game_id' and 'stadium_id' as a composite primary key.",
                "Answer": "CREATE TABLE ticket_prices (game_id number, stadium_id number, price number, category text, PRIMARY KEY (game_id, stadium_id))"
            },
            {
                "User": "Insert ticket price details for game id 1 at stadium id 1 with a price of 150 for category 'Premium'.",
                "Answer": "INSERT INTO ticket_prices (game_id, stadium_id, price, category) VALUES (1, 1, 150, 'Premium')"
            },
            {
                "User": "Add a new column 'VIP_Access' to the 'stadium' table that indicates if the stadium has VIP access (yes or no).",
                "Answer": "ALTER TABLE stadium ADD VIP_Access text"
            },
            {
                "User": "Set the 'VIP_Access' for 'Cowboys Stadium' to 'yes'.",
                "Answer": "UPDATE stadium SET VIP_Access = 'yes' WHERE name = 'Cowboys Stadium'"
            },
            {
                "User": "Record a new injury accident for game id 4, with player 'John Doe', injury 'Sprained Ankle', out for '3' matches, reported by 'sportsnews.com'.",
                "Answer": "INSERT INTO injury_accident (game_id, id, Player, Injury, Number_of_matches, Source) VALUES (4, 16, 'John Doe', 'Sprained Ankle', '3', 'sportsnews.com')"
            },
            {
                "User": "Change the source of Davide Santon's injury report to 'officialsite.it'.",
                "Answer": "UPDATE injury_accident SET Source = 'officialsite.it' WHERE Player = 'Davide Santon'"
            },
            {
                "User": "How many stadiums have a capacity percentage greater than 90?",
                "Answer": "SELECT count(*) FROM stadium WHERE Capacity_Percentage > 90"
            },
            {
                "User": "Show the average ticket price for 'Premium' category across all games.",
                "Answer": "SELECT AVG(price) FROM ticket_prices WHERE category = 'Premium'"
            },
            {
                "User": "List the games and their corresponding ticket prices for 'Liberty Stadium'.",
                "Answer": "SELECT g.id, tp.price FROM game g JOIN ticket_prices tp ON g.id = tp.game_id WHERE g.stadium_id = 14"
            },
            {
                "User": "Delete the injury record for player 'Maicon'.",
                "Answer": "DELETE FROM injury_accident WHERE Player = 'Maicon'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 59,
        "db": "wrestler",
        "interaction": [
            {
                "User": "Can we track the number of wins for each wrestler?",
                "Answer": "ALTER TABLE wrestler ADD COLUMN Wins number"
            },
            {
                "User": "Add a new wrestler with the ID 11 named 'El Santo', with 0 reigns, 0 days held, located in 'Mexico City, Mexico', and the event was a 'Championship Match'.",
                "Answer": "INSERT INTO wrestler (Wrestler_ID, Name, Reign, Days_held, Location, Event) VALUES (11, 'El Santo', '0', '0', 'Mexico City, Mexico', 'Championship Match')"
            },
            {
                "User": "Update the wins for 'Rey Misterio Sr.' to 20.",
                "Answer": "UPDATE wrestler SET Wins = 20 WHERE Name = 'Rey Misterio Sr.'"
            },
            {
                "User": "Create a new table to track the wrestlers' signature moves with columns for move ID, wrestler ID, and move name.",
                "Answer": "CREATE TABLE Signature_Moves (Move_ID number PRIMARY KEY, Wrestler_ID number, Move_Name text)"
            },
            {
                "User": "Insert the signature move '619' for 'Rey Misterio Sr.' with move ID 101.",
                "Answer": "INSERT INTO Signature_Moves (Move_ID, Wrestler_ID, Move_Name) VALUES (101, 1, '619')"
            },
            {
                "User": "How many signature moves are currently registered in the new table?",
                "Answer": "SELECT COUNT(*) FROM Signature_Moves"
            },
            {
                "User": "We need to keep track of the referees. Can we create a table for them?",
                "Answer": "CREATE TABLE Referees (Referee_ID number PRIMARY KEY, Name text, Matches_Officiated number)"
            },
            {
                "User": "Add a referee with ID 201 named 'Charles Robinson' who has officiated 500 matches.",
                "Answer": "INSERT INTO Referees (Referee_ID, Name, Matches_Officiated) VALUES (201, 'Charles Robinson', 500)"
            },
            {
                "User": "I want to see a list of all wrestlers along with their signature moves. Can you provide that?",
                "Answer": "SELECT w.Name, sm.Move_Name FROM wrestler AS w LEFT JOIN Signature_Moves AS sm ON w.Wrestler_ID = sm.Wrestler_ID"
            },
            {
                "User": "Let's update the elimination move for 'Punk' to 'Anaconda Vise'.",
                "Answer": "UPDATE Elimination SET Elimination_Move = 'Anaconda Vise' WHERE Eliminated_By = 'Punk'"
            },
            {
                "User": "Can you show me all the wrestlers who have more than 10 wins?",
                "Answer": "SELECT * FROM wrestler WHERE Wins > 10"
            },
            {
                "User": "Let's add a new column to the Elimination table to record the type of match in which the elimination occurred.",
                "Answer": "ALTER TABLE Elimination ADD COLUMN Match_Type text"
            },
            {
                "User": "Update the match type for the first elimination record to 'Survivor Series'.",
                "Answer": "UPDATE Elimination SET Match_Type = 'Survivor Series' WHERE Elimination_ID = '1'"
            },
            {
                "User": "For record keeping, we should have a column for the date of the event in the wrestler table. Please add it.",
                "Answer": "ALTER TABLE wrestler ADD COLUMN Event_Date date"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 60,
        "db": "network_2",
        "interaction": [
            {
                "User": "Add a new person named 'Eve' who is 30 years old, lives in 'seattle', is 'female', and works as a 'designer'.",
                "Answer": "INSERT INTO Person (name, age, city, gender, job) VALUES ('Eve', 30, 'seattle', 'female', 'designer')"
            },
            {
                "User": "Update Bob's job to 'senior engineer'.",
                "Answer": "UPDATE Person SET job = 'senior engineer' WHERE name = 'Bob'"
            },
            {
                "User": "Create a new table to track the hobbies of each person with columns for name, hobby, and proficiency level.",
                "Answer": "CREATE TABLE PersonHobbies (name text, hobby text, proficiency_level number, PRIMARY KEY (name, hobby))"
            },
            {
                "User": "Add 'coding' as a hobby for 'Zach' with a proficiency level of 8.",
                "Answer": "INSERT INTO PersonHobbies (name, hobby, proficiency_level) VALUES ('Zach', 'coding', 8)"
            },
            {
                "User": "How many people have 'new york city' as their city?",
                "Answer": "SELECT COUNT(*) FROM Person WHERE city = 'new york city'"
            },
            {
                "User": "Alter the Person table to include an 'email' column.",
                "Answer": "ALTER TABLE Person ADD COLUMN email text"
            },
            {
                "User": "Set the email for 'Alice' to 'alice@example.com'.",
                "Answer": "UPDATE Person SET email = 'alice@example.com' WHERE name = 'Alice'"
            },
            {
                "User": "List all the friends of 'Bob'.",
                "Answer": "SELECT friend FROM PersonFriend WHERE name = 'Bob'"
            },
            {
                "User": "How many years have 'Alice' and 'Bob' been friends?",
                "Answer": "SELECT year FROM PersonFriend WHERE name = 'Alice' AND friend = 'Bob'"
            },
            {
                "User": "Add 'Dan' as a new friend for 'Alice' with a friendship duration of 3 years.",
                "Answer": "INSERT INTO PersonFriend (name, friend, year) VALUES ('Alice', 'Dan', 3)"
            },
            {
                "User": "Increase the age of everyone in the database by 1 year.",
                "Answer": "UPDATE Person SET age = age + 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 61,
        "db": "network_2",
        "interaction": [
            {
                "User": "Add a new person named 'Eve' who is 30 years old, lives in 'Boston', is female and works as a 'scientist'.",
                "Answer": "INSERT INTO Person (name, age, city, gender, job) VALUES ('Eve', 30, 'Boston', 'female', 'scientist')"
            },
            {
                "User": "Create a table to store information about the hobbies of each person.",
                "Answer": "CREATE TABLE PersonHobbies (name TEXT, hobby TEXT, PRIMARY KEY (name, hobby))"
            },
            {
                "User": "Insert 'swimming' as a hobby for Alice.",
                "Answer": "INSERT INTO PersonHobbies (name, hobby) VALUES ('Alice', 'swimming')"
            },
            {
                "User": "Update Bob's job to 'senior engineer'.",
                "Answer": "UPDATE Person SET job = 'senior engineer' WHERE name = 'Bob'"
            },
            {
                "User": "Add a new column 'birthday' to the Person table to store their birthdays.",
                "Answer": "ALTER TABLE Person ADD COLUMN birthday DATE"
            },
            {
                "User": "Set the birthday for Zach to '1978-03-02'.",
                "Answer": "UPDATE Person SET birthday = '1978-03-02' WHERE name = 'Zach'"
            },
            {
                "User": "Create a new table to record the events that each person attends, with columns for the event name, location, and date.",
                "Answer": "CREATE TABLE PersonEvents (name TEXT, event_name TEXT, location TEXT, event_date DATE, PRIMARY KEY (name, event_name))"
            },
            {
                "User": "Record that Alice attended the 'Tech Conference' event in 'San Francisco' on '2023-05-15'.",
                "Answer": "INSERT INTO PersonEvents (name, event_name, location, event_date) VALUES ('Alice', 'Tech Conference', 'San Francisco', '2023-05-15')"
            },
            {
                "User": "List all hobbies for people who live in 'new york city'.",
                "Answer": "SELECT T1.name, T2.hobby FROM Person AS T1 JOIN PersonHobbies AS T2 ON T1.name = T2.name WHERE T1.city = 'new york city'"
            },
            {
                "User": "Bob wants to add 'hiking' as another hobby. Please insert this information.",
                "Answer": "INSERT INTO PersonHobbies (name, hobby) VALUES ('Bob', 'hiking')"
            },
            {
                "User": "How many events has Alice attended?",
                "Answer": "SELECT COUNT(*) FROM PersonEvents WHERE name = 'Alice'"
            },
            {
                "User": "Eve has moved to 'San Diego'. Update her city in the database.",
                "Answer": "UPDATE Person SET city = 'San Diego' WHERE name = 'Eve'"
            },
            {
                "User": "I'd like to know the jobs of all of Zach's friends.",
                "Answer": "SELECT T2.job FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.friend = T2.name WHERE T1.name = 'Zach'"
            },
            {
                "User": "Can we have a list of all people who are not yet 40 years old?",
                "Answer": "SELECT * FROM Person WHERE age < 40"
            },
            {
                "User": "Who is the oldest person in the database?",
                "Answer": "SELECT name, MAX(age) AS oldest_age FROM Person"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 62,
        "db": "cre_Doc_Tracking_DB",
        "interaction": [
            {
                "User": "Can we add a new document type for 'Email' with a short description?",
                "Answer": "INSERT INTO Ref_Document_Types (Document_Type_Code, Document_Type_Name, Document_Type_Description) VALUES ('EM', 'Email', 'Electronic mail document')"
            },
            {
                "User": "I need to update the description of the 'Manager' role to include 'Responsible for team leadership'.",
                "Answer": "UPDATE Roles SET Role_Description = 'Responsible for team leadership. Vero harum corrupti odit ipsa vero et odio. Iste et recusandae temporibus maxime. Magni aspernatur fugit quis explicabo totam esse corrupti.' WHERE Role_Code = 'MG'"
            },
            {
                "User": "We need to create a table for tracking employee training. It should include training ID, employee ID, training date, and details.",
                "Answer": "CREATE TABLE Employee_Training (Training_ID number PRIMARY KEY, Employee_ID number, Training_Date time, Training_Details text)"
            },
            {
                "User": "How can we keep track of which employee created a document? We need to add a column for this.",
                "Answer": "ALTER TABLE All_Documents ADD COLUMN Created_by_Employee_ID number"
            },
            {
                "User": "Let's record that employee with ID 25 has completed 'Data Privacy' training today.",
                "Answer": "INSERT INTO Employee_Training (Training_ID, Employee_ID, Training_Date, Training_Details) VALUES (1, 25, CURRENT_DATE, 'Data Privacy')"
            },
            {
                "User": "Update the location description of 'Canada' to 'Located in North America'.",
                "Answer": "UPDATE Ref_Locations SET Location_Description = 'Located in North America' WHERE Location_Code = 'c'"
            },
            {
                "User": "Can we have a table that logs the history of employees' roles?",
                "Answer": "CREATE TABLE Employee_Role_History (Employee_ID number, Role_Code text, Start_Date time, End_Date time)"
            },
            {
                "User": "Insert a new record into the employee role history for employee 30 who started as a Manager today.",
                "Answer": "INSERT INTO Employee_Role_History (Employee_ID, Role_Code, Start_Date) VALUES (30, 'MG', CURRENT_DATE)"
            },
            {
                "User": "The document with ID 11 has been moved to location 'b'. Update its current location.",
                "Answer": "UPDATE Document_Locations SET Location_Code = 'b', Date_in_Location_From = CURRENT_DATE WHERE Document_ID = 11"
            },
            {
                "User": "Create a new table to store information about the equipment assigned to employees.",
                "Answer": "CREATE TABLE Employee_Equipment (Equipment_ID number PRIMARY KEY, Employee_ID number, Equipment_Name text, Date_Assigned time)"
            },
            {
                "User": "Assign a new laptop to employee ID 38, noting the assignment as of today.",
                "Answer": "INSERT INTO Employee_Equipment (Equipment_ID, Employee_ID, Equipment_Name, Date_Assigned) VALUES (1, 38, 'Laptop', CURRENT_DATE)"
            },
            {
                "User": "Let's add a column 'Last_Updated' to the All_Documents table to track the last modification date.",
                "Answer": "ALTER TABLE All_Documents ADD COLUMN Last_Updated time"
            },
            {
                "User": "We need to mark the document with ID 7 as destroyed. Update the actual destruction date to today.",
                "Answer": "UPDATE Documents_to_be_Destroyed SET Actual_Destruction_Date = CURRENT_DATE WHERE Document_ID = 7"
            },
            {
                "User": "How can we track the previous locations of a document? We should add a column for that.",
                "Answer": "ALTER TABLE Document_Locations ADD COLUMN Previous_Location_Code text"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 63,
        "db": "cre_Doc_Tracking_DB",
        "interaction": [
            {
                "User": "Update the location description of Canada to 'North American Country'.",
                "Answer": "UPDATE Ref_Locations SET Location_Description = 'North American Country' WHERE Location_Code = 'c'"
            },
            {
                "User": "Create a new table to track document edits with columns for edit ID, document ID, employee ID, and edit timestamp.",
                "Answer": "CREATE TABLE Document_Edits (Edit_ID number PRIMARY KEY, Document_ID number, Employee_ID number, Edit_Timestamp time)"
            },
            {
                "User": "Add a new column 'Department_Code' to the Employees table.",
                "Answer": "ALTER TABLE Employees ADD Department_Code text"
            },
            {
                "User": "Insert a new employee with ID 40, role code PT, name 'Alex', gender 'M', birthdate '1990-01-01', and department code 'MK'.",
                "Answer": "INSERT INTO Employees (Employee_ID, Role_Code, Employee_Name, Gender_MFU, Date_of_Birth, Department_Code) VALUES (40, 'PT', 'Alex', 'M', '1990-01-01', 'MK')"
            },
            {
                "User": "How many documents are currently stored in the Edinburgh location?",
                "Answer": "SELECT count(*) FROM Document_Locations WHERE Location_Code = 'e'"
            },
            {
                "User": "Record a new document edit for document ID 7 by employee ID 25 on '2023-03-01 10:00:00'.",
                "Answer": "INSERT INTO Document_Edits (Edit_ID, Document_ID, Employee_ID, Edit_Timestamp) VALUES ((SELECT max(Edit_ID) + 1 FROM Document_Edits), 7, 25, '2023-03-01 10:00:00')"
            },
            {
                "User": "Change the role of employee ID 30 to ED (Editor).",
                "Answer": "UPDATE Employees SET Role_Code = 'ED' WHERE Employee_ID = 30"
            },
            {
                "User": "List all document types that do not have a description.",
                "Answer": "SELECT * FROM Ref_Document_Types WHERE Document_Type_Description IS NULL OR Document_Type_Description = ''"
            },
            {
                "User": "What is the role name and description of role code MG?",
                "Answer": "SELECT Role_Name, Role_Description FROM Roles WHERE Role_Code = 'MG'"
            },
            {
                "User": "Create a new role with code 'IT' for IT Support, with a description of 'Provides technical support and manages IT infrastructure.'",
                "Answer": "INSERT INTO Roles (Role_Code, Role_Name, Role_Description) VALUES ('IT', 'IT Support', 'Provides technical support and manages IT infrastructure')"
            },
            {
                "User": "Which employee has authorized the most document destructions?",
                "Answer": "SELECT Destruction_Authorised_by_Employee_ID, count(*) as Authorizations FROM Documents_to_be_Destroyed GROUP BY Destruction_Authorised_by_Employee_ID ORDER BY Authorizations DESC LIMIT 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 64,
        "db": "small_bank_1",
        "interaction": [
            {
                "User": "Can we track the total number of transactions for each customer? We'll need a new table for that.",
                "Answer": "CREATE TABLE TRANSACTIONS(custid number, transaction_count number);"
            },
            {
                "User": "Let's initialize the transaction count for all existing customers to zero.",
                "Answer": "INSERT INTO TRANSACTIONS(custid, transaction_count) SELECT custid, 0 FROM ACCOUNTS;"
            },
            {
                "User": "Please update the transaction count for customer with ID 1 to 5.",
                "Answer": "UPDATE TRANSACTIONS SET transaction_count = 5 WHERE custid = 1;"
            },
            {
                "User": "I'd like to see the names and transaction counts of all customers.",
                "Answer": "SELECT T1.name, T2.transaction_count FROM ACCOUNTS T1 JOIN TRANSACTIONS T2 ON T1.custid = T2.custid;"
            },
            {
                "User": "How about we add a new customer to the accounts with custid 8 and name 'Smith'?",
                "Answer": "INSERT INTO ACCOUNTS(custid, name) VALUES (8, 'Smith');"
            },
            {
                "User": "Smith also needs an initial savings balance. Let's set it to 50000.",
                "Answer": "INSERT INTO SAVINGS(custid, balance) VALUES (8, 50000.0);"
            },
            {
                "User": "Could we add an email column to the accounts table for customer contact information?",
                "Answer": "ALTER TABLE ACCOUNTS ADD email text;"
            },
            {
                "User": "Please set Smith's email to 'smith@example.com'.",
                "Answer": "UPDATE ACCOUNTS SET email = 'smith@example.com' WHERE custid = 8;"
            },
            {
                "User": "I need to correct the balance for customer with ID 2. It should be 500000, not 999999999.",
                "Answer": "UPDATE SAVINGS SET balance = 500000 WHERE custid = 2;"
            },
            {
                "User": "Let's see a list of all customers with their savings and checking balances.",
                "Answer": "SELECT T1.custid, T1.name, T2.balance AS savings_balance, T3.balance AS checking_balance FROM ACCOUNTS T1 LEFT JOIN SAVINGS T2 ON T1.custid = T2.custid LEFT JOIN CHECKING T3 ON T1.custid = T3.custid;"
            },
            {
                "User": "Can we create a view that shows the total balance (savings + checking) for each customer?",
                "Answer": "CREATE VIEW TOTAL_BALANCES AS SELECT T1.custid, (IFNULL(T2.balance, 0) + IFNULL(T3.balance, 0)) AS total_balance FROM ACCOUNTS T1 LEFT JOIN SAVINGS T2 ON T1.custid = T2.custid LEFT JOIN CHECKING T3 ON T1.custid = T3.custid;"
            },
            {
                "User": "Who has the highest total balance when combining savings and checking?",
                "Answer": "SELECT custid FROM TOTAL_BALANCES ORDER BY total_balance DESC LIMIT 1;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 65,
        "db": "driving_school",
        "interaction": [
            {
                "User": "Update the status of customer Carole Bernhard to 'Good Customer'.",
                "Answer": "UPDATE Customers SET customer_status_code = 'Good Customer' WHERE first_name = 'Carole' AND last_name = 'Bernhard'"
            },
            {
                "User": "Create a new table to track the vehicle maintenance schedule.",
                "Answer": "CREATE TABLE Vehicle_Maintenance (maintenance_id number PRIMARY KEY, vehicle_id number, maintenance_date time, description text, cost number)"
            },
            {
                "User": "Record a maintenance entry for vehicle with id 1 scheduled on 2023-05-01, for an oil change costing $100.",
                "Answer": "INSERT INTO Vehicle_Maintenance (vehicle_id, maintenance_date, description, cost) VALUES (1, '2023-05-01 00:00:00', 'Oil Change', 100)"
            },
            {
                "User": "Change the phone number format in the Customers table to include country code.",
                "Answer": "ALTER TABLE Customers ADD COLUMN phone_number_with_country_code text"
            },
            {
                "User": "Fill in the new phone_number_with_country_code column for customer Carole Bernhard with '+1-07278206718'.",
                "Answer": "UPDATE Customers SET phone_number_with_country_code = '+1-07278206718' WHERE first_name = 'Carole' AND last_name = 'Bernhard'"
            },
            {
                "User": "Add a new column 'nickname' to the Customers table.",
                "Answer": "ALTER TABLE Customers ADD COLUMN nickname text"
            },
            {
                "User": "Set the nickname for customer Genevieve Terry to 'Gen'.",
                "Answer": "UPDATE Customers SET nickname = 'Gen' WHERE first_name = 'Genevieve' AND last_name = 'Terry'"
            },
            {
                "User": "Create a new table to store test results with columns for test_id, customer_id, test_date, and test_score.",
                "Answer": "CREATE TABLE Test_Results (test_id number PRIMARY KEY, customer_id number, test_date time, test_score number)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 66,
        "db": "roller_coaster",
        "interaction": [
            {
                "User": "Can you add a new roller coaster called 'Sky Scream' in 'Holiday Park' located in Austria with a length of 863 meters, height of 50 meters, and speed of '100 km/h' that opened on 'April 12, 2014' and is currently operating?",
                "Answer": "INSERT INTO roller_coaster (Name, Park, Country_ID, Length, Height, Speed, Opened, Status) VALUES ('Sky Scream', 'Holiday Park', 1, 863, 50, '100 km/h', 'April 12, 2014', 'Operating')"
            },
            {
                "User": "I've noticed that the population of Sweden has changed. Can you update the population of Sweden to 10,000,000?",
                "Answer": "UPDATE country SET Population = 10000000 WHERE Name = 'Sweden'"
            },
            {
                "User": "Could you show me the updated list of countries with their populations?",
                "Answer": "SELECT Name, Population FROM country"
            },
            {
                "User": "I realized we don't have a column for the number of inversions on roller coasters. Can you add that column?",
                "Answer": "ALTER TABLE roller_coaster ADD COLUMN Inversions number"
            },
            {
                "User": "Now that we have the inversions column, can you set the number of inversions for 'Hades 360' to 2?",
                "Answer": "UPDATE roller_coaster SET Inversions = 2 WHERE Name = 'Hades 360'"
            },
            {
                "User": "Let's create a new table to track roller coaster types. The table should have columns for type ID, type name, and a description.",
                "Answer": "CREATE TABLE coaster_types (Type_ID number PRIMARY KEY, Type_Name text, Description text)"
            },
            {
                "User": "Can you insert the roller coaster types 'Wooden', 'Steel', and 'Hybrid' with appropriate descriptions into the new table?",
                "Answer": "INSERT INTO coaster_types (Type_ID, Type_Name, Description) VALUES (1, 'Wooden', 'Roller coasters made primarily from wood'), (2, 'Steel', 'Roller coasters made primarily from steel'), (3, 'Hybrid', 'Roller coasters that combine wood and steel elements')"
            },
            {
                "User": "I would like to know the average length and height of roller coasters in each country. Can you provide that information?",
                "Answer": "SELECT T1.Name, AVG(T2.Length) AS Avg_Length, AVG(T2.Height) AS Avg_Height FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name"
            },
            {
                "User": "It seems we need a way to associate roller coasters with their types. Can we add a foreign key column to the roller_coaster table for the type ID?",
                "Answer": "ALTER TABLE roller_coaster ADD COLUMN Type_ID number REFERENCES coaster_types(Type_ID)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 67,
        "db": "tracking_share_transactions",
        "interaction": [
            {
                "User": "I'd like to add a new investor to the database. Their ID is 21 and details are 'Investor A'.",
                "Answer": "INSERT INTO Investors (investor_id, Investor_details) VALUES (21, 'Investor A')"
            },
            {
                "User": "Can you update the lot details for lot_id 2 to 'updated details'?",
                "Answer": "UPDATE Lots SET lot_details = 'updated details' WHERE lot_id = 2"
            },
            {
                "User": "Please add a new column 'email' to the Investors table to store their email addresses.",
                "Answer": "ALTER TABLE Investors ADD COLUMN email VARCHAR(255)"
            },
            {
                "User": "Now, set the email for investor_id 1 to 'investor1@example.com'.",
                "Answer": "UPDATE Investors SET email = 'investor1@example.com' WHERE investor_id = 1"
            },
            {
                "User": "Create a new table to track the investor's contact information, with columns for contact_id, investor_id, and contact_details.",
                "Answer": "CREATE TABLE Investor_Contacts (contact_id INT PRIMARY KEY, investor_id INT, contact_details TEXT)"
            },
            {
                "User": "Insert a contact record for investor 1 with contact_id 101 and details '123-456-7890'.",
                "Answer": "INSERT INTO Investor_Contacts (contact_id, investor_id, contact_details) VALUES (101, 1, '123-456-7890')"
            },
            {
                "User": "Can you show me the updated list of investors with their new email column?",
                "Answer": "SELECT * FROM Investors"
            },
            {
                "User": "List all the investor details along with their contact information.",
                "Answer": "SELECT I.investor_id, I.Investor_details, IC.contact_details FROM Investors I LEFT JOIN Investor_Contacts IC ON I.investor_id = IC.investor_id"
            },
            {
                "User": "I need to correct the share count for transaction_id 1 to '8718573'.",
                "Answer": "UPDATE Transactions SET share_count = '8718573' WHERE transaction_id = 1"
            },
            {
                "User": "Let's add a new transaction type called 'DIV' for Dividends in Ref_Transaction_Types.",
                "Answer": "INSERT INTO Ref_Transaction_Types (transaction_type_code, transaction_type_description) VALUES ('DIV', 'Dividend')"
            },
            {
                "User": "Show me all transaction types along with how many times they have been used.",
                "Answer": "SELECT RTT.transaction_type_code, RTT.transaction_type_description, COUNT(T.transaction_id) AS usage_count FROM Ref_Transaction_Types RTT LEFT JOIN Transactions T ON RTT.transaction_type_code = T.transaction_type_code GROUP BY RTT.transaction_type_code"
            },
            {
                "User": "Create a new sales record with sales_transaction_id 16 and details 'new sale detail'.",
                "Answer": "INSERT INTO Sales (sales_transaction_id, sales_details) VALUES (16, 'new sale detail')"
            },
            {
                "User": "How many sales transactions are there in total now?",
                "Answer": "SELECT COUNT(*) FROM Sales"
            },
            {
                "User": "Add a new purchase transaction with purchase_transaction_id 16, and details 'new purchase detail'.",
                "Answer": "INSERT INTO Purchases (purchase_transaction_id, purchase_details) VALUES (16, 'new purchase detail')"
            },
            {
                "User": "Can you link transaction_id 1 to lot_id 2 in the Transactions_Lots table?",
                "Answer": "INSERT INTO Transactions_Lots (transaction_id, lot_id) VALUES (1, 2)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 68,
        "db": "tracking_share_transactions",
        "interaction": [
            {
                "User": "I'd like to add a new investor with the id 21 and details as 'Investor A'.",
                "Answer": "INSERT INTO Investors (investor_id, Investor_details) VALUES (21, 'Investor A')"
            },
            {
                "User": "Can we update the investor details for investor_id 3 to 'Investor D Updated'?",
                "Answer": "UPDATE Investors SET Investor_details = 'Investor D Updated' WHERE investor_id = 3"
            },
            {
                "User": "Let's create a new table to track investor emails with columns for investor_id and email.",
                "Answer": "CREATE TABLE Investor_Emails (investor_id number, email text, PRIMARY KEY (investor_id))"
            },
            {
                "User": "Add an email 'investorA@example.com' for the new investor with id 21.",
                "Answer": "INSERT INTO Investor_Emails (investor_id, email) VALUES (21, 'investorA@example.com')"
            },
            {
                "User": "I need to record a new transaction type for dividends with a code 'DIV'.",
                "Answer": "INSERT INTO Ref_Transaction_Types (transaction_type_code, transaction_type_description) VALUES ('DIV', 'Dividend')"
            },
            {
                "User": "Could you add a column 'transaction_fee' to the Transactions table to record fees?",
                "Answer": "ALTER TABLE Transactions ADD transaction_fee number"
            },
            {
                "User": "Please update the transaction_fee for transaction_id 1 to 15.75.",
                "Answer": "UPDATE Transactions SET transaction_fee = 15.75 WHERE transaction_id = 1"
            },
            {
                "User": "Insert a new lot with lot_id 16 for investor_id 21 with details as 'Lot Z'.",
                "Answer": "INSERT INTO Lots (lot_id, investor_id, lot_details) VALUES (16, 21, 'Lot Z')"
            },
            {
                "User": "Record a new purchase transaction with id 16, investor_id 21, type 'PUR', date '2023-01-01 10:00:00', amount 50000, share count '500', and other details as 'Initial purchase'.",
                "Answer": "INSERT INTO Transactions (transaction_id, investor_id, transaction_type_code, date_of_transaction, amount_of_transaction, share_count, other_details) VALUES (16, 21, 'PUR', '2023-01-01 10:00:00', 50000, '500', 'Initial purchase')"
            },
            {
                "User": "Show me all the transaction types we have now.",
                "Answer": "SELECT * FROM Ref_Transaction_Types"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 69,
        "db": "protein_institute",
        "interaction": [
            {
                "User": "Add a new building with ID 8, named 'Genome Tower', located at '42 Helix Drive', which was the tallest from 2020 to present, with a height of 1050 feet and 85 floors.",
                "Answer": "INSERT INTO building (building_id, Name, Street_address, Years_as_tallest, Height_feet, Floors) VALUES ('8', 'Genome Tower', '42 Helix Drive', '2020–present', 1050, 85)"
            },
            {
                "User": "Update the enrollment for Dakota State University to 3500 students.",
                "Answer": "UPDATE Institution SET Enrollment = 3500 WHERE Institution = 'Dakota State University'"
            },
            {
                "User": "Create a new table 'research' with columns 'research_id' as text, 'topic' as text, 'budget' as number, and 'Institution_id' as text, where 'research_id' is the primary key.",
                "Answer": "CREATE TABLE research (research_id text PRIMARY KEY, topic text, budget number, Institution_id text)"
            },
            {
                "User": "Add a new column 'Year_built' to the 'building' table to store the year each building was constructed.",
                "Answer": "ALTER TABLE building ADD COLUMN Year_built number"
            },
            {
                "User": "Insert a new protein entry for 'Arabidopsis thaliana' with the protein name 'Photosystem II protein D1', divergence of 1500, accession number 'NP_051036.2', sequence length of 360, identity to human protein '24%', and linked to institution ID 2.",
                "Answer": "INSERT INTO protein (common_name, protein_name, divergence_from_human_lineage, accession_number, sequence_length, sequence_identity_to_human_protein, Institution_id) VALUES ('Arabidopsis thaliana', 'Photosystem II protein D1', 1500, 'NP_051036.2', 360, '24%', '2')"
            },
            {
                "User": "Which institution has the highest budget for research?",
                "Answer": "SELECT Institution_id FROM research GROUP BY Institution_id ORDER BY SUM(budget) DESC LIMIT 1"
            },
            {
                "User": "How many buildings were built before 1950?",
                "Answer": "SELECT COUNT(*) FROM building WHERE Year_built < 1950"
            },
            {
                "User": "Increase the height of 'Citizens Bank Building' by 50 feet.",
                "Answer": "UPDATE building SET Height_feet = Height_feet + 50 WHERE Name = 'Citizens Bank Building'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 70,
        "db": "college_1",
        "interaction": [
            {
                "User": "Can we add a new course called 'Data Science Fundamentals' to the course list?",
                "Answer": "INSERT INTO COURSE (CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT) VALUES ('DS-101', 'CIS', 'Data Science Fundamentals', 4)"
            },
            {
                "User": "I would like to update the credit hours for 'Accounting I' to 4. How can I do that?",
                "Answer": "UPDATE COURSE SET CRS_CREDIT = 4 WHERE CRS_CODE = 'ACCT-211'"
            },
            {
                "User": "Is there a way to add a new column for professor ratings in the professor table?",
                "Answer": "ALTER TABLE PROFESSOR ADD COLUMN PROF_RATING number"
            },
            {
                "User": "Can you show me the average rating of professors in the History department after adding the rating column?",
                "Answer": "SELECT AVG(PROF_RATING) FROM PROFESSOR WHERE DEPT_CODE = 'HIST'"
            },
            {
                "User": "Let's create a new table for student activities with columns for student number, activity name, and hours spent. Can you do that?",
                "Answer": "CREATE TABLE STUDENT_ACTIVITIES (STU_NUM number, ACTIVITY_NAME text, HOURS_SPENT number, PRIMARY KEY (STU_NUM, ACTIVITY_NAME))"
            },
            {
                "User": "I need to enroll a new student with ID 324259 in the class with code '10012'. Her name is Emily White, born on 1990-11-30, majoring in Biology. She has transferred from another college.",
                "Answer": "INSERT INTO STUDENT (STU_NUM, STU_LNAME, STU_FNAME, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM) VALUES (324259, 'White', 'Emily', '1990-11-30', 0, 'Fr', 0, 1, 'BIOL', '', NULL)"
            },
            {
                "User": "Now that Emily White is enrolled, can we add her to the enrollment list for the class '10012' with a grade of 'A'?",
                "Answer": "INSERT INTO ENROLL (CLASS_CODE, STU_NUM, ENROLL_GRADE) VALUES ('10012', 324259, 'A')"
            },
            {
                "User": "We need to update the office number for Professor with employee number 105. His new office is 'KLR 229E'.",
                "Answer": "UPDATE PROFESSOR SET PROF_OFFICE = 'KLR 229E' WHERE EMP_NUM = 105"
            },
            {
                "User": "Can we add an email address column to the employee table?",
                "Answer": "ALTER TABLE EMPLOYEE ADD COLUMN EMP_EMAIL text"
            },
            {
                "User": "Please show me the list of departments along with the number of courses they offer.",
                "Answer": "SELECT DEPT_CODE, COUNT(CRS_CODE) AS NUM_COURSES FROM COURSE GROUP BY DEPT_CODE"
            },
            {
                "User": "Let's create a new table to keep track of department budgets. What would the SQL statement look like?",
                "Answer": "CREATE TABLE DEPARTMENT_BUDGET (DEPT_CODE text PRIMARY KEY, BUDGET_AMOUNT number)"
            },
            {
                "User": "Can you insert the initial budget for the Accounting department as $50000?",
                "Answer": "INSERT INTO DEPARTMENT_BUDGET (DEPT_CODE, BUDGET_AMOUNT) VALUES ('ACCT', 50000)"
            },
            {
                "User": "I want to record that Professor with employee number 104 has received a rating of 4.7. How do I update the data?",
                "Answer": "UPDATE PROFESSOR SET PROF_RATING = 4.7 WHERE EMP_NUM = 104"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 71,
        "db": "culture_company",
        "interaction": [
            {
                "User": "Can we add a new book club entry for a book published by 'New Press' in 1990 titled 'The Modern World' by 'J. K. Rowling' in the 'Fantasy' category that won an award?",
                "Answer": "INSERT INTO book_club (book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result) VALUES (13, 1990, 'J. K. Rowling', 'The Modern World', 'New Press', 'Fantasy', 'Won')"
            },
            {
                "User": "I realized the previous entry should have been marked as 'Nom' instead of 'Won'. Can you update the result for 'The Modern World'?",
                "Answer": "UPDATE book_club SET Result = 'Nom' WHERE Book_Title = 'The Modern World'"
            },
            {
                "User": "I'd like to create a new table for storing information about the company's board members. Can you do that?",
                "Answer": "CREATE TABLE board_members (member_id number PRIMARY KEY, name text, role text, joined_year number, company_name text)"
            },
            {
                "User": "Please insert a new board member named 'John Smith' who joined 'Culture China' in 2021 as a 'Director'.",
                "Answer": "INSERT INTO board_members (member_id, name, role, joined_year, company_name) VALUES (1, 'John Smith', 'Director', 2021, 'Culture China')"
            },
            {
                "User": "Can you add a new column 'email' to the board_members table to store their email addresses?",
                "Answer": "ALTER TABLE board_members ADD email text"
            },
            {
                "User": "Update John Smith's email to 'john.smith@culturechina.com'.",
                "Answer": "UPDATE board_members SET email = 'john.smith@culturechina.com' WHERE name = 'John Smith'"
            },
            {
                "User": "I would like to record the nationality of each board member. Can we add a 'nationality' column to the board_members table?",
                "Answer": "ALTER TABLE board_members ADD nationality text"
            },
            {
                "User": "Please update John Smith's nationality to 'Canadian'.",
                "Answer": "UPDATE board_members SET nationality = 'Canadian' WHERE name = 'John Smith'"
            },
            {
                "User": "Can we add a new movie to the database titled 'The Future' directed by 'S. Spielberg' with a budget of 150 million and a gross worldwide of 500 million, released in 2022?",
                "Answer": "INSERT INTO movie (movie_id, Title, Year, Director, Budget_million, Gross_worldwide) VALUES (11, 'The Future', 2022, 'S. Spielberg', 150, 500000000)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 72,
        "db": "culture_company",
        "interaction": [
            {
                "User": "Can we add a new category for upcoming book club entries?",
                "Answer": "ALTER TABLE book_club ADD COLUMN Upcoming_Category text;"
            },
            {
                "User": "I'd like to insert a new book into the book club with an upcoming category. The details are: book_club_id 13, Year 2021, Author 'Jane Doe', Book Title 'Future Reads', Publisher 'New Horizons', Category 'Sci-Fi', Result 'Pending', Upcoming_Category 'Futurism'",
                "Answer": "INSERT INTO book_club (book_club_id, Year, Author_or_Editor, Book_Title, Publisher, Category, Result, Upcoming_Category) VALUES (13, 2021, 'Jane Doe', 'Future Reads', 'New Horizons', 'Sci-Fi', 'Pending', 'Futurism');"
            },
            {
                "User": "Update the budget for the movie with movie_id 1 to 7 million.",
                "Answer": "UPDATE movie SET Budget_million = 7 WHERE movie_id = 1;"
            },
            {
                "User": "Create a new table to track the awards received by movies, including the award name, year received, and the related movie id.",
                "Answer": "CREATE TABLE movie_awards (award_id number PRIMARY KEY, award_name text, year_received number, movie_id number REFERENCES movie(movie_id));"
            },
            {
                "User": "Insert a record into the movie_awards for 'The Big Kahuna' which won 'Best Screenplay' in 2000.",
                "Answer": "INSERT INTO movie_awards (award_id, award_name, year_received, movie_id) VALUES (1, 'Best Screenplay', 2000, 2);"
            },
            {
                "User": "How many companies have a group equity shareholding greater than 50?",
                "Answer": "SELECT COUNT(*) FROM culture_company WHERE Group_Equity_Shareholding > 50;"
            },
            {
                "User": "Let's create a new table to track the collaboration between book authors and movie directors, including the author's name, director's name, and the project title.",
                "Answer": "CREATE TABLE collaboration (collab_id number PRIMARY KEY, author_name text, director_name text, project_title text);"
            },
            {
                "User": "Insert a collaboration project titled 'Cinematic Novel' between author 'Michael Nava' and director 'Troy Duffy'.",
                "Answer": "INSERT INTO collaboration (collab_id, author_name, director_name, project_title) VALUES (1, 'Michael Nava', 'Troy Duffy', 'Cinematic Novel');"
            },
            {
                "User": "Can we track the number of pages for each book in the book club? Please add a column for it.",
                "Answer": "ALTER TABLE book_club ADD COLUMN Number_of_Pages number;"
            },
            {
                "User": "For the book with book_club_id 1, set the number of pages to 320.",
                "Answer": "UPDATE book_club SET Number_of_Pages = 320 WHERE book_club_id = 1;"
            },
            {
                "User": "I want to change the company type of 'Culture China' to 'Subsidiary'.",
                "Answer": "UPDATE culture_company SET Type = 'Subsidiary' WHERE Company_name = 'Culture China';"
            },
            {
                "User": "How many movies were directed by 'Anthony Hickox'?",
                "Answer": "SELECT COUNT(*) FROM movie WHERE Director = 'Anthony Hickox';"
            },
            {
                "User": "Add a new column to the movie table to record the main actor's name.",
                "Answer": "ALTER TABLE movie ADD COLUMN Main_Actor text;"
            },
            {
                "User": "Update the main actor for the movie with movie_id 3 to 'Dolph Lundgren'.",
                "Answer": "UPDATE movie SET Main_Actor = 'Dolph Lundgren' WHERE movie_id = 3;"
            },
            {
                "User": "Create a table to store information about movie genres, including genre_id, genre_name, and a description.",
                "Answer": "CREATE TABLE movie_genres (genre_id number PRIMARY KEY, genre_name text, description text);"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 73,
        "db": "twitter_1",
        "interaction": [
            {
                "User": "Add a new user profile for 'Captain America' with email 'cap@avengers.com'.",
                "Answer": "INSERT INTO user_profiles (uid, name, email, partitionid, followers) VALUES (8, 'Captain America', 'cap@avengers.com', 1, 0)"
            },
            {
                "User": "Captain America just gained 500 followers. Update his profile.",
                "Answer": "UPDATE user_profiles SET followers = 500 WHERE name = 'Captain America'"
            },
            {
                "User": "Create a new table for user comments with columns for comment id, user id, tweet id, and the comment text.",
                "Answer": "CREATE TABLE user_comments (comment_id number PRIMARY KEY, uid number, tweet_id number, comment_text text)"
            },
            {
                "User": "Insert a comment by user 2 on tweet id 1 saying 'Great job, Tony!'.",
                "Answer": "INSERT INTO user_comments (comment_id, uid, tweet_id, comment_text) VALUES (1, 2, 1, 'Great job, Tony!')"
            },
            {
                "User": "Update the tweet from Tony Stark to include a hashtag #StarkIndustries.",
                "Answer": "UPDATE tweets SET text = 'Hello I''m Tony Stark. #StarkIndustries' WHERE id = 1"
            },
            {
                "User": "Add a new column to the tweets table to mark if a tweet has been reviewed by an admin.",
                "Answer": "ALTER TABLE tweets ADD COLUMN reviewed_by_admin boolean DEFAULT false"
            },
            {
                "User": "Mark the tweet with id 2 as reviewed.",
                "Answer": "UPDATE tweets SET reviewed_by_admin = true WHERE id = 2"
            },
            {
                "User": "How many followers does 'Iron Man' have?",
                "Answer": "SELECT followers FROM user_profiles WHERE name = 'Iron Man'"
            },
            {
                "User": "Can you list all users who follow more than 1 user?",
                "Answer": "SELECT f1 AS uid, count(*) AS following_count FROM follows GROUP BY f1 HAVING count(*) > 1"
            },
            {
                "User": "Show the email addresses of all users who have tweeted more than once.",
                "Answer": "SELECT T1.email FROM user_profiles AS T1 JOIN (SELECT uid FROM tweets GROUP BY uid HAVING count(*) > 1) AS T2 ON T1.uid = T2.uid"
            },
            {
                "User": "I need to add a bio for each user profile. Please update the schema.",
                "Answer": "ALTER TABLE user_profiles ADD COLUMN bio text"
            },
            {
                "User": "Set the bio for 'Iron Man' as 'Genius, billionaire, playboy, philanthropist.'",
                "Answer": "UPDATE user_profiles SET bio = 'Genius, billionaire, playboy, philanthropist.' WHERE name = 'Iron Man'"
            },
            {
                "User": "Create a new table to log user login activities with columns for log id, user id, and login timestamp.",
                "Answer": "CREATE TABLE user_logins (log_id number PRIMARY KEY, uid number, login_timestamp time)"
            },
            {
                "User": "Insert a record of 'Iron Man' logging in at timestamp '2023-03-15 08:00:00'.",
                "Answer": "INSERT INTO user_logins (log_id, uid, login_timestamp) VALUES (1, 1, '2023-03-15 08:00:00')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 74,
        "db": "hospital_1",
        "interaction": [
            {
                "User": "Can you add a new department called 'Cardiology' with a head physician ID of 6?",
                "Answer": "INSERT INTO Department (Name, Head) VALUES ('Cardiology', 6)"
            },
            {
                "User": "I need to update the phone number for patient John Smith to '555-0309'.",
                "Answer": "UPDATE Patient SET Phone = '555-0309' WHERE Name = 'John Smith'"
            },
            {
                "User": "Create a new table for managing equipment with fields for equipment ID, name, and department.",
                "Answer": "CREATE TABLE Equipment (EquipmentID number PRIMARY KEY, Name text, Department number)"
            },
            {
                "User": "Insert a new piece of equipment called 'ECG Machine' assigned to the Cardiology department.",
                "Answer": "INSERT INTO Equipment (EquipmentID, Name, Department) VALUES (1, 'ECG Machine', (SELECT DepartmentID FROM Department WHERE Name = 'Cardiology'))"
            },
            {
                "User": "Add a new column 'Email' to the Physician table to store their email addresses.",
                "Answer": "ALTER TABLE Physician ADD Email text"
            },
            {
                "User": "Set the email for John Dorian as 'j.dorian@hospital.com'.",
                "Answer": "UPDATE Physician SET Email = 'j.dorian@hospital.com' WHERE Name = 'John Dorian'"
            },
            {
                "User": "Create a new appointment for John Smith with physician Elliot Reid for April 30, 2023, from 10:00 to 11:00 in room 'C'.",
                "Answer": "INSERT INTO Appointment (Patient, Physician, Start, End, ExaminationRoom) VALUES ((SELECT SSN FROM Patient WHERE Name = 'John Smith'), (SELECT EmployeeID FROM Physician WHERE Name = 'Elliot Reid'), '2023-04-30 10:00', '2023-04-30 11:00', 'C')"
            },
            {
                "User": "Elliot Reid has been promoted to 'Chief of Surgery'. Update her position.",
                "Answer": "UPDATE Physician SET Position = 'Chief of Surgery' WHERE Name = 'Elliot Reid'"
            },
            {
                "User": "How many types of rooms do we have in the hospital?",
                "Answer": "SELECT COUNT(DISTINCT RoomType) FROM Room"
            },
            {
                "User": "We need to mark room 102 as unavailable due to maintenance.",
                "Answer": "UPDATE Room SET Unavailable = 1 WHERE RoomNumber = 102"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 75,
        "db": "store_1",
        "interaction": [
            {
                "User": "Add a new artist named 'The Midnight' to the artists table.",
                "Answer": "INSERT INTO artists (name) VALUES ('The Midnight');"
            },
            {
                "User": "Create a new table called 'concerts' with columns for id, artist_id, city, and date.",
                "Answer": "CREATE TABLE concerts (id number PRIMARY KEY, artist_id number, city text, date time);"
            },
            {
                "User": "Update the address of customer Luís Gonçalves to '1234 New Street'.",
                "Answer": "UPDATE customers SET address = '1234 New Street' WHERE first_name = 'Luís' AND last_name = 'Gonçalves';"
            },
            {
                "User": "Insert a new track called 'Lost & Found' for the album 'For Those About To Rock We Salute You' with a price of $1.29.",
                "Answer": "INSERT INTO tracks (name, album_id, media_type_id, genre_id, composer, milliseconds, bytes, unit_price) VALUES ('Lost & Found', 1, 1, 1, 'Angus Young, Malcolm Young, Brian Johnson', 250000, 8000000, 1.29);"
            },
            {
                "User": "Add a new column 'nickname' to the employees table.",
                "Answer": "ALTER TABLE employees ADD COLUMN nickname text;"
            },
            {
                "User": "Create a new genre called 'Synthwave' in the genres table.",
                "Answer": "INSERT INTO genres (name) VALUES ('Synthwave');"
            },
            {
                "User": "Insert a new customer with the name 'Alex Smith' from 'New York' with an email 'alexsmith@email.com'.",
                "Answer": "INSERT INTO customers (first_name, last_name, city, email) VALUES ('Alex', 'Smith', 'New York', 'alexsmith@email.com');"
            },
            {
                "User": "Create a new playlist called 'Workout Jams' in the playlists table.",
                "Answer": "INSERT INTO playlists (name) VALUES ('Workout Jams');"
            },
            {
                "User": "Update the title of the album with id 3 to 'Restless & Wilder'.",
                "Answer": "UPDATE albums SET title = 'Restless & Wilder' WHERE id = 3;"
            },
            {
                "User": "Add a new employee named 'Sam Turner' who reports to Nancy Edwards.",
                "Answer": "INSERT INTO employees (last_name, first_name, title, reports_to, birth_date, hire_date, address, city, state, country, postal_code, phone, fax, email) VALUES ('Turner', 'Sam', 'Sales Support Agent', 2, '1990-05-23 00:00:00', '2021-06-01 00:00:00', '123 Elm Street', 'Denver', 'CO', 'USA', '80202', '+1 (303) 123-4567', '+1 (303) 765-4321', 'sam.turner@chinookcorp.com');"
            },
            {
                "User": "Alter the media_types table to include a new column 'description'.",
                "Answer": "ALTER TABLE media_types ADD COLUMN description text;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 76,
        "db": "icfp_1",
        "interaction": [
            {
                "User": "Add a new institute with instID 1080, name 'California Institute of Technology', and country 'USA'.",
                "Answer": "INSERT INTO Inst (instID, name, country) VALUES (1080, 'California Institute of Technology', 'USA')"
            },
            {
                "User": "Update the country code for Northeastern University to 'US'.",
                "Answer": "UPDATE Inst SET country = 'US' WHERE name = 'Northeastern University'"
            },
            {
                "User": "Create a new table for conference information with columns confID, name, and year.",
                "Answer": "CREATE TABLE Conferences (confID number PRIMARY KEY, name text, year number)"
            },
            {
                "User": "Add a new column 'email' to the Authors table to store the author's email addresses.",
                "Answer": "ALTER TABLE Authors ADD COLUMN email text"
            },
            {
                "User": "Insert a new paper with paperID 393, titled 'A Novel Approach to Quantum Computing'.",
                "Answer": "INSERT INTO Papers (paperID, title) VALUES (393, 'A Novel Approach to Quantum Computing')"
            },
            {
                "User": "Record a new authorship entry for authorID 52, paperID 393, instID 1020, with authOrder 1.",
                "Answer": "INSERT INTO Authorship (authID, paperID, instID, authOrder) VALUES (52, 393, 1020, 1)"
            },
            {
                "User": "Update the title of paperID 202 to 'A Deep Dive into Functional Programming'.",
                "Answer": "UPDATE Papers SET title = 'A Deep Dive into Functional Programming' WHERE paperID = 202"
            },
            {
                "User": "Add a new author with authID 63, last name 'Smith', first name 'John', and email 'john.smith@example.com'.",
                "Answer": "INSERT INTO Authors (authID, lname, fname, email) VALUES (63, 'Smith', 'John', 'john.smith@example.com')"
            },
            {
                "User": "Create a table to link papers with conferences, with columns paperID, confID, and presentationOrder.",
                "Answer": "CREATE TABLE PaperConferences (paperID number, confID number, presentationOrder number, PRIMARY KEY (paperID, confID))"
            },
            {
                "User": "Link paperID 200 with confID 300 for presentation order 1 in the new PaperConferences table.",
                "Answer": "INSERT INTO PaperConferences (paperID, confID, presentationOrder) VALUES (200, 300, 1)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 77,
        "db": "local_govt_and_lot",
        "interaction": [
            {
                "User": "Add a new customer named 'John Doe' with customer_id 92",
                "Answer": "INSERT INTO Customers (customer_id, customer_details) VALUES (92, 'John Doe')"
            },
            {
                "User": "Update the other_details for property_id 24 to 'Renovated'",
                "Answer": "UPDATE Properties SET other_details = 'Renovated' WHERE property_id = 24"
            },
            {
                "User": "Create a new table for storing vehicle information with columns vehicle_id, make, model, and year",
                "Answer": "CREATE TABLE Vehicles (vehicle_id number PRIMARY KEY, make text, model text, year number)"
            },
            {
                "User": "Insert a new property with property_id 109, type 'office', and address '1234 Business Rd, USA'",
                "Answer": "INSERT INTO Properties (property_id, property_type_code, property_address, other_details) VALUES (109, 'office', '1234 Business Rd', 'USA')"
            },
            {
                "User": "How many properties are there in the database now?",
                "Answer": "SELECT count(*) FROM Properties"
            },
            {
                "User": "Record a new service provided to resident_id 6 with service_id 50 on '2023-01-01'",
                "Answer": "INSERT INTO Residents_Services (resident_id, service_id, date_requested, date_provided, other_details) VALUES (6, 50, '2023-01-01', '2023-01-01', 'Completed')"
            },
            {
                "User": "Change the status of thing_id 1 to 'Maintenance Required' for the date '2023-03-15'",
                "Answer": "UPDATE Timed_Status_of_Things SET Status_of_Thing_Code = 'Maintenance Required' WHERE thing_id = 1 AND Date_and_Date = '2023-03-15'"
            },
            {
                "User": "Add a column 'email' to the Customers table to store customer email addresses",
                "Answer": "ALTER TABLE Customers ADD COLUMN email text"
            },
            {
                "User": "Create a new table to track maintenance requests with columns request_id, thing_id, date_requested, and request_details",
                "Answer": "CREATE TABLE Maintenance_Requests (request_id number PRIMARY KEY, thing_id number, date_requested time, request_details text)"
            },
            {
                "User": "Insert a new organization with organization_id 11 and its details, assuming it has no parent organization",
                "Answer": "INSERT INTO Organizations (organization_id, parent_organization_id, organization_details) VALUES (11, NULL, 'New Organization Details')"
            },
            {
                "User": "Link resident_id 10 to a new service_id 51 for a moving service requested on '2023-02-20'",
                "Answer": "INSERT INTO Residents_Services (resident_id, service_id, date_requested, property_id, date_provided, other_details) VALUES (10, 51, '2023-02-20', 605, '2023-02-21', 'In Progress')"
            },
            {
                "User": "Update the email for customer_id 4 to 'raul.prosacco@email.com'",
                "Answer": "UPDATE Customers SET email = 'raul.prosacco@email.com' WHERE customer_id = 4"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 78,
        "db": "university_basketball",
        "interaction": [
            {
                "User": "Can we track the number of championships won by each team in a new table?",
                "Answer": "CREATE TABLE team_championships (Team_ID number PRIMARY KEY, Championships_Won number)"
            },
            {
                "User": "Great, now let's record that North Carolina has won 6 championships.",
                "Answer": "INSERT INTO team_championships (Team_ID, Championships_Won) VALUES (1, 6)"
            },
            {
                "User": "Duke just won the championship this year, update their count in the table.",
                "Answer": "UPDATE team_championships SET Championships_Won = Championships_Won + 1 WHERE Team_ID = 2"
            },
            {
                "User": "Can you show me the teams with their names and the number of championships they've won?",
                "Answer": "SELECT bm.Team_Name, tc.Championships_Won FROM basketball_match bm LEFT JOIN team_championships tc ON bm.Team_ID = tc.Team_ID"
            },
            {
                "User": "Let's add a column for the coach's name to the basketball_match table.",
                "Answer": "ALTER TABLE basketball_match ADD COLUMN Coach_Name text"
            },
            {
                "User": "Update the coach's name for North Carolina to 'Roy Williams'.",
                "Answer": "UPDATE basketball_match SET Coach_Name = 'Roy Williams' WHERE Team_ID = 1"
            },
            {
                "User": "I'd like to know the schools and their coaches for teams that played more than 30 games.",
                "Answer": "SELECT u.School, bm.Coach_Name FROM university u JOIN basketball_match bm ON u.School_ID = bm.School_ID WHERE bm.All_Games NOT LIKE '%-%'"
            },
            {
                "User": "We need to keep track of the season's MVP. Can we add a table for that?",
                "Answer": "CREATE TABLE season_mvp (Season_Year number, Player_Name text, Team_ID number, FOREIGN KEY (Team_ID) REFERENCES basketball_match(Team_ID))"
            },
            {
                "User": "Add 'Zion Williamson' as the MVP for the 2019 season for Duke.",
                "Answer": "INSERT INTO season_mvp (Season_Year, Player_Name, Team_ID) VALUES (2019, 'Zion Williamson', 2)"
            },
            {
                "User": "Who was the MVP for the 2019 season and which team did he play for?",
                "Answer": "SELECT sm.Player_Name, bm.Team_Name FROM season_mvp sm JOIN basketball_match bm ON sm.Team_ID = bm.Team_ID WHERE sm.Season_Year = 2019"
            },
            {
                "User": "Let's record the total enrollment of all universities in a new column in the university table.",
                "Answer": "ALTER TABLE university ADD COLUMN Total_Enrollment number"
            },
            {
                "User": "Update the total enrollment for 'University of Delaware' to 20000.",
                "Answer": "UPDATE university SET Total_Enrollment = 20000 WHERE School_ID = 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 79,
        "db": "railway",
        "interaction": [
            {
                "User": "Please add a new manager named 'John Doe' from 'Canada', who started working in 2021, is 39 years old, and has a level of 4.",
                "Answer": "INSERT INTO manager (Manager_ID, Name, Country, Working_year_starts, Age, Level) VALUES ((SELECT MAX(Manager_ID) + 1 FROM manager), 'John Doe', 'Canada', '2021', 39, 4)"
            },
            {
                "User": "Update the location of the railway with Railway_ID 2 to 'Derby'.",
                "Answer": "UPDATE railway SET Location = 'Derby' WHERE Railway_ID = 2"
            },
            {
                "User": "Create a new table called 'maintenance_records' with columns 'Record_ID' as number and primary key, 'Railway_ID' as number with a foreign key reference to 'railway', 'Maintenance_Date' as text, and 'Details' as text.",
                "Answer": "CREATE TABLE maintenance_records (Record_ID number PRIMARY KEY, Railway_ID number, Maintenance_Date text, Details text, FOREIGN KEY (Railway_ID) REFERENCES railway (Railway_ID))"
            },
            {
                "User": "Add a new column 'Salary' to the 'manager' table with the type number.",
                "Answer": "ALTER TABLE manager ADD COLUMN Salary number"
            },
            {
                "User": "Insert a maintenance record for Railway_ID 1 with the maintenance date on '2023-04-01' and details as 'Annual inspection completed'.",
                "Answer": "INSERT INTO maintenance_records (Record_ID, Railway_ID, Maintenance_Date, Details) VALUES ((SELECT MAX(Record_ID) + 1 FROM maintenance_records), 1, '2023-04-01', 'Annual inspection completed')"
            },
            {
                "User": "Change the name of the train with Train_ID 3 to 'Mumbai Express'.",
                "Answer": "UPDATE train SET Name = 'Mumbai Express' WHERE Train_ID = 3"
            },
            {
                "User": "Please list all the trains that depart from 'Mumbai CST'.",
                "Answer": "SELECT * FROM train WHERE `From` = 'Mumbai CST'"
            },
            {
                "User": "Create a view that shows the railways and their corresponding managers' names.",
                "Answer": "CREATE VIEW railway_manager_view AS SELECT r.Railway_ID, r.Railway, m.Name FROM railway r JOIN railway_manage rm ON r.Railway_ID = rm.Railway_ID JOIN manager m ON rm.Manager_ID = m.Manager_ID"
            },
            {
                "User": "Show me the average age of managers for each country.",
                "Answer": "SELECT Country, AVG(Age) AS Average_Age FROM manager GROUP BY Country"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 80,
        "db": "sports_competition",
        "interaction": [
            {
                "User": "Add a new club named 'Dragons' from 'France' that started in '2010'.",
                "Answer": "INSERT INTO club (name, Region, Start_year) VALUES ('Dragons', 'France', '2010');"
            },
            {
                "User": "Update the start year of club 'AIB' to '2008'.",
                "Answer": "UPDATE club SET Start_year = '2008' WHERE name = 'AIB';"
            },
            {
                "User": "Create a new table for coaches with ID, name, and club they coach.",
                "Answer": "CREATE TABLE coaches (Coach_ID number PRIMARY KEY, name text, Club_ID number);"
            },
            {
                "User": "Insert a new coach named 'John Smith' for the club with ID 1.",
                "Answer": "INSERT INTO coaches (name, Club_ID) VALUES ('John Smith', 1);"
            },
            {
                "User": "Create a new column 'Assists' in the player table for tracking assists made by players.",
                "Answer": "ALTER TABLE player ADD Assists number;"
            },
            {
                "User": "Set the number of assists for player 'Michael Platt' to 7.",
                "Answer": "UPDATE player SET Assists = 7 WHERE name = 'Michael Platt';"
            },
            {
                "User": "How many clubs are there from the 'USA'?",
                "Answer": "SELECT COUNT(*) FROM club WHERE Region = 'USA';"
            },
            {
                "User": "Insert competition results for a match between club IDs 1 and 3 with a score of '15:10'.",
                "Answer": "INSERT INTO competition_result (Club_ID_1, Club_ID_2, Score) VALUES (1, 3, '15:10');"
            },
            {
                "User": "Who are the coaches for clubs that have won more than 10 gold medals?",
                "Answer": "SELECT c.name FROM coaches AS c JOIN club_rank AS cr ON c.Club_ID = cr.Club_ID WHERE cr.Gold > 10;"
            },
            {
                "User": "List all players who have made more than 5 assists.",
                "Answer": "SELECT name FROM player WHERE Assists > 5;"
            },
            {
                "User": "Delete the club with the lowest total medals from the club_rank table.",
                "Answer": "DELETE FROM club_rank WHERE Total = (SELECT MIN(Total) FROM club_rank);"
            },
            {
                "User": "Rename the column 'Start_year' to 'Foundation_year' in the club table.",
                "Answer": "ALTER TABLE club RENAME COLUMN Start_year TO Foundation_year;"
            },
            {
                "User": "Add a new column 'Stadium' to the club table to store the names of the home stadiums.",
                "Answer": "ALTER TABLE club ADD Stadium text;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 81,
        "db": "sports_competition",
        "interaction": [
            {
                "User": "Add a new club named 'Sky Runners' from 'Canada' that started in 2021.",
                "Answer": "INSERT INTO club (name, Region, Start_year) VALUES ('Sky Runners', 'Canada', '2021')"
            },
            {
                "User": "Update the total number of gold medals for the club with ID 2 to 12.",
                "Answer": "UPDATE club_rank SET Gold = 12 WHERE Club_ID = 2"
            },
            {
                "User": "Create a new table to track the coaches of each club with their ID, name, and the club they coach.",
                "Answer": "CREATE TABLE coach (Coach_ID number PRIMARY KEY, name text, Club_ID number)"
            },
            {
                "User": "Insert a new coach named 'John Smith' with ID 1 for the club with ID 3.",
                "Answer": "INSERT INTO coach (Coach_ID, name, Club_ID) VALUES (1, 'John Smith', 3)"
            },
            {
                "User": "Add a new column 'Assists' to the player table to track the number of assists.",
                "Answer": "ALTER TABLE player ADD Assists number"
            },
            {
                "User": "Set the number of assists for player with ID 1 to 7.",
                "Answer": "UPDATE player SET Assists = 7 WHERE Player_ID = 1"
            },
            {
                "User": "Create a new table to record the sponsors for each competition with sponsor name and amount contributed.",
                "Answer": "CREATE TABLE competition_sponsors (Competition_ID number, Sponsor_name text, Amount_contributed number)"
            },
            {
                "User": "Add 'Red Bull' as a sponsor for the competition with ID 1, contributing 50000.",
                "Answer": "INSERT INTO competition_sponsors (Competition_ID, Sponsor_name, Amount_contributed) VALUES (1, 'Red Bull', 50000)"
            },
            {
                "User": "Update the score for competition result where Club_ID_1 is 1 and Club_ID_2 is 2 to '12:10'.",
                "Answer": "UPDATE competition_result SET Score = '12:10' WHERE Club_ID_1 = 1 AND Club_ID_2 = 2"
            },
            {
                "User": "List all the clubs along with their total number of medals from the club_rank table.",
                "Answer": "SELECT T1.name, T2.Total FROM club AS T1 JOIN club_rank AS T2 ON T1.Club_ID = T2.Club_ID"
            },
            {
                "User": "How many coaches have been added to the database?",
                "Answer": "SELECT count(*) FROM coach"
            },
            {
                "User": "Who is the coach of the club with ID 3?",
                "Answer": "SELECT name FROM coach WHERE Club_ID = 3"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 82,
        "db": "coffee_shop",
        "interaction": [
            {
                "User": "What is the membership card of Breton, Robert?",
                "Answer": "SELECT Membership_card FROM member WHERE Name = 'Breton, Robert'"
            },
            {
                "User": "What is the age of Breton, Robert?",
                "Answer": "SELECT Age FROM member WHERE Name = 'Breton, Robert'"
            },
            {
                "User": "Can you add a new member named 'Smith, John' with a white membership card, 45 years old, who made a purchase just now, with a level 3 membership and living in '1234 Elm Street'?",
                "Answer": "INSERT INTO member (Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address) VALUES ((SELECT MAX(Member_ID) + 1 FROM member), 'Smith, John', 'White', 45, (SELECT MAX(Time_of_purchase) + 1 FROM member), 3, '1234 Elm Street')"
            },
            {
                "User": "Update the score of the shop at '1200 Main Street' to 45.",
                "Answer": "UPDATE shop SET Score = 45 WHERE Address = '1200 Main Street'"
            },
            {
                "User": "How many shops have more than 15 staff?",
                "Answer": "SELECT COUNT(*) FROM shop WHERE Num_of_staff > 15"
            },
            {
                "User": "Create a new table to track the supplier details with Supplier_ID, Name, and Contact_Number.",
                "Answer": "CREATE TABLE supplier (Supplier_ID number PRIMARY KEY, Name text, Contact_Number text)"
            },
            {
                "User": "Add a new column to the 'member' table to track the favorite drink of each member.",
                "Answer": "ALTER TABLE member ADD Favorite_Drink text"
            },
            {
                "User": "Insert a new record into the happy_hour table for shop ID 2 in July with 8 staff in charge.",
                "Answer": "INSERT INTO happy_hour (HH_ID, Shop_ID, Month, Num_of_shaff_in_charge) VALUES ((SELECT MAX(HH_ID) + 1 FROM happy_hour), 2, 'July', 8)"
            },
            {
                "User": "Record a new happy hour sale for member with ID 1 at happy hour ID 2 with a total amount of 15.99.",
                "Answer": "INSERT INTO happy_hour_member (HH_ID, Member_ID, Total_amount) VALUES (2, 1, 15.99)"
            },
            {
                "User": "Increase the level of membership for all members over the age of 60 by 1.",
                "Answer": "UPDATE member SET Level_of_membership = Level_of_membership + 1 WHERE Age > 60"
            },
            {
                "User": "For the happy hour in May, set the number of staff in charge to 11 for shop ID 1.",
                "Answer": "UPDATE happy_hour SET Num_of_shaff_in_charge = 11 WHERE Shop_ID = 1 AND Month = 'May'"
            },
            {
                "User": "Delete the member with the lowest time of purchase.",
                "Answer": "DELETE FROM member WHERE Time_of_purchase = (SELECT MIN(Time_of_purchase) FROM member)"
            },
            {
                "User": "List the top 3 shops with the highest score.",
                "Answer": "SELECT * FROM shop ORDER BY Score DESC LIMIT 3"
            },
            {
                "User": "Set the favorite drink for 'Ashby, Lazale' to 'Espresso'.",
                "Answer": "UPDATE member SET Favorite_Drink = 'Espresso' WHERE Name = 'Ashby, Lazale'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 83,
        "db": "insurance_policies",
        "interaction": [
            {
                "User": "hi I was wondering how many policies Ellsworth Paucek has?",
                "Answer": "SELECT count(*) FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id WHERE T1.customer_details = 'Ellsworth Paucek'"
            },
            {
                "User": "do you know how many total customers had more than 1 policy?",
                "Answer": "SELECT count(*) FROM (SELECT T1.customer_details, T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count(*) > 1)"
            },
            {
                "User": "could you tell me those four customer's details and their ID?",
                "Answer": "SELECT T1.customer_details, T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count(*) > 1"
            },
            {
                "User": "Please add a new customer with the name 'John Doe' and assign an ID of 16.",
                "Answer": "INSERT INTO Customers (Customer_ID, Customer_Details) VALUES (16, 'John Doe')"
            },
            {
                "User": "John Doe just bought a new home policy starting today, can you add this policy for him with Policy_ID 146?",
                "Answer": "INSERT INTO Customer_Policies (Policy_ID, Customer_ID, Policy_Type_Code, Start_Date) VALUES (146, 16, 'Home', CURRENT_DATE)"
            },
            {
                "User": "Ellsworth Paucek decided to cancel his life insurance policy that started on '2017-08-21', could you update the end date to today?",
                "Answer": "UPDATE Customer_Policies SET End_Date = CURRENT_DATE WHERE Customer_ID = 2 AND Policy_Type_Code = 'Life' AND Start_Date = '2017-08-21'"
            },
            {
                "User": "We need to track the email addresses of our customers. Can you add an 'Email' column to the Customers table?",
                "Answer": "ALTER TABLE Customers ADD Email text"
            },
            {
                "User": "Can you create a new table to track customer feedback with columns for Feedback_ID, Customer_ID, and Feedback_Text?",
                "Answer": "CREATE TABLE Customer_Feedback (Feedback_ID number PRIMARY KEY, Customer_ID number, Feedback_Text text)"
            },
            {
                "User": "I just received feedback from America Jaskolski, can you insert it with Feedback_ID 101 and her customer ID?",
                "Answer": "INSERT INTO Customer_Feedback (Feedback_ID, Customer_ID, Feedback_Text) VALUES (101, 1, 'Very satisfied with the service')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 84,
        "db": "flight_4",
        "interaction": [
            {
                "User": "Can we add a new airline called 'SkyExpress' with IATA code 'SX', based in Greece?",
                "Answer": "INSERT INTO airlines (name, iata, country, active) VALUES ('SkyExpress', 'SX', 'Greece', 'Y')"
            },
            {
                "User": "I want to update the active status of '135 Airways' to 'Y'.",
                "Answer": "UPDATE airlines SET active = 'Y' WHERE name = '135 Airways'"
            },
            {
                "User": "Can we create a new table to track the number of passengers for each route?",
                "Answer": "CREATE TABLE route_passengers (rid number PRIMARY KEY, passengers number)"
            },
            {
                "User": "Let's add a column to the airports table to indicate if there is Wi-Fi available.",
                "Answer": "ALTER TABLE airports ADD COLUMN wifi_available text"
            },
            {
                "User": "Insert data indicating that Goroka Airport now has Wi-Fi available.",
                "Answer": "UPDATE airports SET wifi_available = 'Yes' WHERE name = 'Goroka Airport'"
            },
            {
                "User": "Add a new route from 'Madang Airport' to 'Goroka Airport' for 'SkyExpress'.",
                "Answer": "INSERT INTO routes (dst_apid, dst_ap, src_apid, src_ap, alid, airline) SELECT (SELECT apid FROM airports WHERE name = 'Goroka Airport'), 'GKA', (SELECT apid FROM airports WHERE name = 'Madang Airport'), 'MAG', (SELECT alid FROM airlines WHERE name = 'SkyExpress'), 'SkyExpress'"
            },
            {
                "User": "Record that 'SkyExpress' has 120 passengers on the new route we just added.",
                "Answer": "INSERT INTO route_passengers (rid, passengers) VALUES ((SELECT rid FROM routes WHERE airline = 'SkyExpress' AND src_ap = 'MAG' AND dst_ap = 'GKA'), 120)"
            },
            {
                "User": "The airline 'Private flight' has been renamed to 'VIP Air'. Update it in the database.",
                "Answer": "UPDATE airlines SET name = 'VIP Air' WHERE name = 'Private flight'"
            },
            {
                "User": "Let's increase the elevation of 'Mount Hagen Kagamuga Airport' by 100 feet due to recent construction.",
                "Answer": "UPDATE airports SET elevation = elevation + 100 WHERE name = 'Mount Hagen Kagamuga Airport'"
            },
            {
                "User": "Create a backup table for the current airlines data.",
                "Answer": "CREATE TABLE airlines_backup AS SELECT * FROM airlines"
            },
            {
                "User": "We need to add a 'last_maintenance_date' column to the airports table to track maintenance history.",
                "Answer": "ALTER TABLE airports ADD COLUMN last_maintenance_date date"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 85,
        "db": "gymnast",
        "interaction": [
            {
                "User": "What is the tallest height?",
                "Answer": "SELECT MAX(Height) FROM people"
            },
            {
                "User": "What is that person's name?",
                "Answer": "SELECT Name FROM people ORDER BY Height DESC LIMIT 1"
            },
            {
                "User": "How old is he?",
                "Answer": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1"
            },
            {
                "User": "Can we add a new column for weight in the people table?",
                "Answer": "ALTER TABLE people ADD COLUMN Weight number"
            },
            {
                "User": "I'd like to update Paul Hamm's weight to 75 kg.",
                "Answer": "UPDATE people SET Weight = 75 WHERE Name = 'Paul Hamm'"
            },
            {
                "User": "Insert a new gymnast with ID 11, scoring 9.8 on Floor Exercise, 9.7 on Pommel Horse, 9.6 on Rings, 9.5 on Vault, 9.7 on Parallel Bars, 9.8 on Horizontal Bar, and a total of 58.1 points.",
                "Answer": "INSERT INTO gymnast (Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points) VALUES (11, 9.8, 9.7, 9.6, 9.5, 9.7, 9.8, 58.1)"
            },
            {
                "User": "Create a new table to store coaches information with ID, Name, and Nationality.",
                "Answer": "CREATE TABLE coaches (Coach_ID number PRIMARY KEY, Name text, Nationality text)"
            },
            {
                "User": "Please add Lorraine Súarez Carmona's new score for Vault, which is 9.8.",
                "Answer": "UPDATE gymnast SET Vault_Points = 9.8 WHERE Gymnast_ID = (SELECT Gymnast_ID FROM people WHERE Name = 'Lorraine Súarez Carmona')"
            },
            {
                "User": "Let's insert a coach with ID 101, named 'John Smith', and his nationality is 'USA'.",
                "Answer": "INSERT INTO coaches (Coach_ID, Name, Nationality) VALUES (101, 'John Smith', 'USA')"
            },
            {
                "User": "Add a new record to the people table for a gymnast named 'Alex Johnson', 22 years old, 1.80 meters tall, from 'Denver', and weighs 78 kg.",
                "Answer": "INSERT INTO people (People_ID, Name, Age, Height, Hometown, Weight) VALUES ((SELECT MAX(People_ID) + 1 FROM people), 'Alex Johnson', 22, 1.80, 'Denver', 78)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 86,
        "db": "music_4",
        "interaction": [
            {
                "User": "Can we add a new artist to the database?",
                "Answer": "INSERT INTO artist (Artist_ID, Artist, Age, Famous_Title, Famous_Release_date) VALUES (8, 'New Artist', 27, 'New Hit Single', 'April 2023')"
            },
            {
                "User": "I just realized we made a mistake with the age of the new artist. Can you update it to 28?",
                "Answer": "UPDATE artist SET Age = 28 WHERE Artist_ID = 8"
            },
            {
                "User": "Let's create a new table to track the artists' concert tours. Can you do that?",
                "Answer": "CREATE TABLE concert_tour (Tour_ID number PRIMARY KEY, Artist_ID number, Tour_Name text, Start_Date text, End_Date text, FOREIGN KEY (Artist_ID) REFERENCES artist(Artist_ID))"
            },
            {
                "User": "Add a concert tour for artist ID 3 with the tour name 'Global Tour', starting on June 1, 2023, and ending on December 31, 2023.",
                "Answer": "INSERT INTO concert_tour (Tour_ID, Artist_ID, Tour_Name, Start_Date, End_Date) VALUES (1, 3, 'Global Tour', 'June 1, 2023', 'December 31, 2023')"
            },
            {
                "User": "What about adding a column for the artist's country of origin in the artist table?",
                "Answer": "ALTER TABLE artist ADD COLUMN Country_of_Origin text"
            },
            {
                "User": "Set the country of origin for artist ID 1 to 'Norway'.",
                "Answer": "UPDATE artist SET Country_of_Origin = 'Norway' WHERE Artist_ID = 1"
            },
            {
                "User": "Can we track the number of awards won by each volume in the volume table?",
                "Answer": "ALTER TABLE volume ADD COLUMN Awards_Won number"
            },
            {
                "User": "Update the volume table to reflect that volume ID 1 has won 2 awards.",
                "Answer": "UPDATE volume SET Awards_Won = 2 WHERE Volume_ID = 1"
            },
            {
                "User": "Create a table to store information about the record labels associated with each artist.",
                "Answer": "CREATE TABLE record_label (Label_ID number PRIMARY KEY, Label_Name text, Artist_ID number, Contract_Start_Date text, Contract_End_Date text, FOREIGN KEY (Artist_ID) REFERENCES artist(Artist_ID))"
            },
            {
                "User": "Insert a new record label for artist ID 2 called 'Epic Records' with a contract starting today and ending on December 31, 2025.",
                "Answer": "INSERT INTO record_label (Label_ID, Label_Name, Artist_ID, Contract_Start_Date, Contract_End_Date) VALUES (1, 'Epic Records', 2, 'April 2023', 'December 31, 2025')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 87,
        "db": "decoration_competition",
        "interaction": [
            {
                "User": "Add a new college called 'Nova School' with the leader 'Emma Stone' located in 'Vancouver'",
                "Answer": "INSERT INTO college (Name, Leader_Name, College_Location) VALUES ('Nova School', 'Emma Stone', 'Vancouver')"
            },
            {
                "User": "Update the location of 'B.C. School' to 'Vancouver Island'",
                "Answer": "UPDATE college SET College_Location = 'Vancouver Island' WHERE Name = 'B.C. School'"
            },
            {
                "User": "Create a new table to track the scores of members in each round with columns round_id, member_id, and score",
                "Answer": "CREATE TABLE scores (Round_ID number, Member_ID number, Score number, PRIMARY KEY (Round_ID, Member_ID))"
            },
            {
                "User": "Insert scores for member 1 in round 1 with a score of 95",
                "Answer": "INSERT INTO scores (Round_ID, Member_ID, Score) VALUES (1, 1, 95)"
            },
            {
                "User": "Add a column to the member table to record their date of birth",
                "Answer": "ALTER TABLE member ADD DOB date"
            },
            {
                "User": "Set the date of birth for member with ID 2 to '1941-06-24'",
                "Answer": "UPDATE member SET DOB = '1941-06-24' WHERE Member_ID = 2"
            },
            {
                "User": "List all members and their scores for round 1",
                "Answer": "SELECT T1.Name, T2.Score FROM member AS T1 JOIN scores AS T2 ON T1.Member_ID = T2.Member_ID WHERE T2.Round_ID = 1"
            },
            {
                "User": "Create a view that shows the total score of each college by summing the scores of its members",
                "Answer": "CREATE VIEW college_total_score AS SELECT T1.College_ID, SUM(T2.Score) AS Total_Score FROM member AS T1 JOIN scores AS T2 ON T1.Member_ID = T2.Member_ID GROUP BY T1.College_ID"
            },
            {
                "User": "Who is the leader of the college that has the highest total score?",
                "Answer": "SELECT T1.Leader_Name FROM college AS T1 JOIN college_total_score AS T2 ON T1.College_ID = T2.College_ID ORDER BY T2.Total_Score DESC LIMIT 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 88,
        "db": "body_builder",
        "interaction": [
            {
                "User": "what is the weight of ty conklin",
                "Answer": "SELECT weight FROM people WHERE name = 'Ty Conklin'"
            },
            {
                "User": "what is the height of jack campbell",
                "Answer": "SELECT height FROM people WHERE name = 'Jack Campbell'"
            },
            {
                "User": "add a new body builder with id 6, snatch 130, clean jerk 160, and total 290",
                "Answer": "INSERT INTO body_builder (Body_Builder_ID, Snatch, Clean_Jerk, Total) VALUES (6, 130, 160, 290)"
            },
            {
                "User": "update the weight of al montoya to 95 kg",
                "Answer": "UPDATE people SET Weight = 95 WHERE Name = 'Al Montoya'"
            },
            {
                "User": "create a new table for competition results with columns competition_id, body_builder_id, and score",
                "Answer": "CREATE TABLE competition_results (Competition_ID number, Body_Builder_ID number, Score number, PRIMARY KEY (Competition_ID))"
            },
            {
                "User": "add a new column 'Country' to the people table",
                "Answer": "ALTER TABLE people ADD Country text"
            },
            {
                "User": "insert competition result with competition_id 1, body_builder_id 2, and score 350",
                "Answer": "INSERT INTO competition_results (Competition_ID, Body_Builder_ID, Score) VALUES (1, 2, 350)"
            },
            {
                "User": "set the birth place of jack campbell to 'Detroit, Michigan'",
                "Answer": "UPDATE people SET Birth_Place = 'Detroit, Michigan' WHERE Name = 'Jack Campbell'"
            },
            {
                "User": "how many body builders are from 'Glenview, Illinois'",
                "Answer": "SELECT COUNT(*) FROM people WHERE Birth_Place = 'Glenview, Illinois'"
            },
            {
                "User": "delete the record of the body builder with id 5",
                "Answer": "DELETE FROM body_builder WHERE Body_Builder_ID = 5"
            },
            {
                "User": "show the top 3 body builders by total lift weight",
                "Answer": "SELECT * FROM body_builder ORDER BY Total DESC LIMIT 3"
            },
            {
                "User": "add the birth date 'April 20, 1990' for the new body builder with id 6",
                "Answer": "UPDATE people SET Birth_Date = 'April 20, 1990' WHERE People_ID = 6"
            },
            {
                "User": "who has the highest snatch weight among the body builders",
                "Answer": "SELECT Name FROM people JOIN body_builder ON people.People_ID = body_builder.People_ID ORDER BY Snatch DESC LIMIT 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 89,
        "db": "wedding",
        "interaction": [
            {
                "User": "I want to add a new person named John Smith from the USA, who is male and 28 years old.",
                "Answer": "INSERT INTO people (Name, Country, Is_Male, Age) VALUES ('John Smith', 'USA', 'T', 28)"
            },
            {
                "User": "Update the name of the church organized by Wycam Clark to 'Original Pure Church'.",
                "Answer": "UPDATE church SET Name = 'Original Pure Church' WHERE Organized_by = 'Wycam Clark'"
            },
            {
                "User": "Create a new table to track wedding anniversaries with columns for Church_ID, Anniversary_Year, and Anniversary_Date.",
                "Answer": "CREATE TABLE wedding_anniversaries (Church_ID number, Anniversary_Year number, Anniversary_Date text, PRIMARY KEY (Church_ID))"
            },
            {
                "User": "Add a new column to the people table to indicate if the person is a wedding officiant.",
                "Answer": "ALTER TABLE people ADD COLUMN Is_Officiant text"
            },
            {
                "User": "Insert a record of a wedding anniversary for the wedding at church with ID 1, celebrating their 5th anniversary on 2019-06-12.",
                "Answer": "INSERT INTO wedding_anniversaries (Church_ID, Anniversary_Year, Anniversary_Date) VALUES (1, 5, '2019-06-12')"
            },
            {
                "User": "Change the Open_Date of the 'Independent Church' to the year 1833.",
                "Answer": "UPDATE church SET Open_Date = 1833 WHERE Name = 'Independent Church'"
            },
            {
                "User": "List all wedding officiants in the database.",
                "Answer": "SELECT Name FROM people WHERE Is_Officiant = 'T'"
            },
            {
                "User": "Add a new column 'Capacity' to the church table to store how many people it can hold.",
                "Answer": "ALTER TABLE church ADD COLUMN Capacity number"
            },
            {
                "User": "Set the capacity of 'Pure Church of Christ' to 150 people.",
                "Answer": "UPDATE church SET Capacity = 150 WHERE Name = 'Pure Church of Christ'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 90,
        "db": "wedding",
        "interaction": [
            {
                "User": "Add a new person named 'John Smith' from 'United States' who is male and 28 years old.",
                "Answer": "INSERT INTO people (Name, Country, Is_Male, Age) VALUES ('John Smith', 'United States', 'T', 28)"
            },
            {
                "User": "What is the ID of the person named 'John Smith' we just added?",
                "Answer": "SELECT People_ID FROM people WHERE Name = 'John Smith'"
            },
            {
                "User": "Update the age of 'Juli Hanson' to 33.",
                "Answer": "UPDATE people SET Age = 33 WHERE Name = 'Juli Hanson'"
            },
            {
                "User": "Create a new table to record the wedding details with columns for wedding ID, church ID, date, and notes.",
                "Answer": "CREATE TABLE wedding_details (Wedding_ID number PRIMARY KEY, Church_ID number, Wedding_Date number, Notes text)"
            },
            {
                "User": "Add a column 'Address' to the church table to store the location details.",
                "Answer": "ALTER TABLE church ADD Address text"
            },
            {
                "User": "Insert a wedding detail for the church with ID 1, with the wedding date as 2023 and a note 'Outdoor ceremony'.",
                "Answer": "INSERT INTO wedding_details (Church_ID, Wedding_Date, Notes) VALUES (1, 2023, 'Outdoor ceremony')"
            },
            {
                "User": "List all the people who are not from 'United States'.",
                "Answer": "SELECT * FROM people WHERE Country != 'United States'"
            },
            {
                "User": "How many weddings have been organized by 'Wycam Clark'?",
                "Answer": "SELECT COUNT(*) FROM wedding INNER JOIN church ON wedding.Church_ID = church.Church_ID WHERE church.Organized_by = 'Wycam Clark'"
            },
            {
                "User": "Change the name of 'Pure Church of Christ' to 'Pure Spiritual Church'.",
                "Answer": "UPDATE church SET Name = 'Pure Spiritual Church' WHERE Name = 'Pure Church of Christ'"
            },
            {
                "User": "Record a new church with the name 'Unity Chapel', organized by 'Anna Lee', opened in 2022, and is a continuation of 'Independent Church'.",
                "Answer": "INSERT INTO church (Name, Organized_by, Open_Date, Continuation_of) VALUES ('Unity Chapel', 'Anna Lee', 2022, 'Independent Church')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 91,
        "db": "customers_and_products_contacts",
        "interaction": [
            {
                "User": "Can we add a new column to track the preferred contact method for customers?",
                "Answer": "ALTER TABLE Customers ADD COLUMN preferred_contact_method TEXT"
            },
            {
                "User": "Set the preferred contact method as 'Email' for customer with id 1",
                "Answer": "UPDATE Customers SET preferred_contact_method = 'Email' WHERE customer_id = 1"
            },
            {
                "User": "Add a new product with id 16, type 'Electronics', name 'Smart Watch', and price 299.99",
                "Answer": "INSERT INTO Products (product_id, product_type_code, product_name, product_price) VALUES (16, 'Electronics', 'Smart Watch', 299.99)"
            },
            {
                "User": "Create a new table to track customer feedback with columns for feedback_id, customer_id, and feedback_text",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id NUMBER PRIMARY KEY, customer_id NUMBER, feedback_text TEXT)"
            },
            {
                "User": "Insert a feedback record for customer with id 2, feedback text 'Loved the product quality!'",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, feedback_text) VALUES (1, 2, 'Loved the product quality!')"
            },
            {
                "User": "How many customers have we not set a preferred contact method for?",
                "Answer": "SELECT count(*) FROM Customers WHERE preferred_contact_method IS NULL"
            },
            {
                "User": "Update the order status to 'Shipped' for order id 2",
                "Answer": "UPDATE Customer_Orders SET order_status_code = 'Shipped' WHERE order_id = 2"
            },
            {
                "User": "Can we track the time a customer address was added? Add a 'date_added' column to the Addresses table.",
                "Answer": "ALTER TABLE Addresses ADD COLUMN date_added TIMESTAMP"
            },
            {
                "User": "Record the current timestamp as the date added for address with id 1",
                "Answer": "UPDATE Addresses SET date_added = CURRENT_TIMESTAMP WHERE address_id = 1"
            },
            {
                "User": "Add a new customer with id 16, payment method 'PayPal', customer number '777', name 'Adrian', address '1234 Main St', phone '+1-555-1234', and email 'adrian@example.com'",
                "Answer": "INSERT INTO Customers (customer_id, payment_method_code, customer_number, customer_name, customer_address, customer_phone, customer_email) VALUES (16, 'PayPal', '777', 'Adrian', '1234 Main St', '+1-555-1234', 'adrian@example.com')"
            },
            {
                "User": "Show me all the product types we have in our product list",
                "Answer": "SELECT DISTINCT product_type_code FROM Products"
            },
            {
                "User": "Create a table to log changes in product prices with columns for log_id, product_id, old_price, new_price, and change_date",
                "Answer": "CREATE TABLE Product_Price_Log (log_id NUMBER PRIMARY KEY, product_id NUMBER, old_price NUMBER, new_price NUMBER, change_date TIMESTAMP)"
            },
            {
                "User": "Log a price change for product id 3 from 10268.85 to 9999.99",
                "Answer": "INSERT INTO Product_Price_Log (log_id, product_id, old_price, new_price, change_date) VALUES (1, 3, 10268.85, 9999.99, CURRENT_TIMESTAMP)"
            },
            {
                "User": "I want to see all contacts for customers who have 'Credit Card' as their payment method",
                "Answer": "SELECT * FROM Contacts INNER JOIN Customers ON Contacts.customer_id = Customers.customer_id WHERE Customers.payment_method_code = 'Credit Card'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 92,
        "db": "company_office",
        "interaction": [
            {
                "User": "Add a new building called 'Skyline Tower' in 'New York' with a height of 305 meters and 70 stories that is currently under construction.",
                "Answer": "INSERT INTO buildings (name, City, Height, Stories, Status) VALUES ('Skyline Tower', 'New York', 305, 70, 'under construction')"
            },
            {
                "User": "Update the status of 'Torre KOI' to 'completed'.",
                "Answer": "UPDATE buildings SET Status = 'completed' WHERE name = 'Torre KOI'"
            },
            {
                "User": "Create a new table 'Employees' with columns 'id', 'name', 'company_id', and 'email', where 'id' is the primary key.",
                "Answer": "CREATE TABLE Employees (id number PRIMARY KEY, name text, company_id number, email text)"
            },
            {
                "User": "Insert three new employees with the following details: (1, 'Alice Johnson', 1, 'alice.johnson@chase.com'), (2, 'Bob Smith', 2, 'bob.smith@hsbc.com'), (3, 'Charlie Brown', 3, 'charlie.brown@ge.com').",
                "Answer": "INSERT INTO Employees (id, name, company_id, email) VALUES (1, 'Alice Johnson', 1, 'alice.johnson@chase.com'), (2, 'Bob Smith', 2, 'bob.smith@hsbc.com'), (3, 'Charlie Brown', 3, 'charlie.brown@ge.com')"
            },
            {
                "User": "Add a new column 'Phone_number' to the 'Companies' table.",
                "Answer": "ALTER TABLE Companies ADD Phone_number text"
            },
            {
                "User": "Update 'General Electric' company's sales to 160 billion.",
                "Answer": "UPDATE Companies SET Sales_billion = 160 WHERE name = 'General Electric'"
            },
            {
                "User": "Create a view that lists companies with their office locations and move-in years.",
                "Answer": "CREATE VIEW CompanyOfficeView AS SELECT Companies.name, Office_locations.building_id, Office_locations.move_in_year FROM Companies JOIN Office_locations ON Companies.id = Office_locations.company_id"
            },
            {
                "User": "Which company moved into their office most recently?",
                "Answer": "SELECT Companies.name FROM Companies JOIN Office_locations ON Companies.id = Office_locations.company_id ORDER BY Office_locations.move_in_year DESC LIMIT 1"
            },
            {
                "User": "Alter the 'Office_locations' table to include a new column 'floor_count' for the number of floors occupied by the company.",
                "Answer": "ALTER TABLE Office_locations ADD floor_count number"
            },
            {
                "User": "Set the number of floors occupied by 'JPMorgan Chase' in their building to 5.",
                "Answer": "UPDATE Office_locations SET floor_count = 5 WHERE company_id = (SELECT id FROM Companies WHERE name = 'JPMorgan Chase')"
            },
            {
                "User": "How many companies have assets worth more than 1000 billion?",
                "Answer": "SELECT COUNT(*) FROM Companies WHERE Assets_billion > 1000"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 93,
        "db": "debate",
        "interaction": [
            {
                "User": "Add a new person named 'Samuel Adams' from 'New York 4' district, belonging to the 'Democratic' party, aged 50.",
                "Answer": "INSERT INTO people (District, Name, Party, Age) VALUES ('New York 4', 'Samuel Adams', 'Democratic', 50)"
            },
            {
                "User": "Record a new debate that occurred on 'March 15, 2021' at 'Albany, New York' with 200 audience members.",
                "Answer": "INSERT INTO debate (Date, Venue, Num_of_Audience) VALUES ('March 15, 2021', 'Albany, New York', 200)"
            },
            {
                "User": "Update the party affiliation of 'James Humphrey' to 'Independent'.",
                "Answer": "UPDATE people SET Party = 'Independent' WHERE Name = 'James Humphrey'"
            },
            {
                "User": "Create a new table to log debate topics with columns for the debate ID, topic name, and a brief description.",
                "Answer": "CREATE TABLE debate_topics (Debate_ID number, Topic_Name text, Description text, PRIMARY KEY (Debate_ID))"
            },
            {
                "User": "Add a column to the 'people' table to include email addresses.",
                "Answer": "ALTER TABLE people ADD COLUMN Email text"
            },
            {
                "User": "Insert the debate topic 'Education Reform' with a description for the debate ID 4.",
                "Answer": "INSERT INTO debate_topics (Debate_ID, Topic_Name, Description) VALUES (4, 'Education Reform', 'A debate on the current state and future of education policy')"
            },
            {
                "User": "Who won the debate held on 'August 3, 2015'?",
                "Answer": "SELECT If_Affirmative_Win FROM debate_people JOIN debate ON debate_people.Debate_ID = debate.Debate_ID WHERE debate.Date = 'August 3, 2015'"
            },
            {
                "User": "Change the venue of the debate that took place on 'December 17, 2014' to 'New York City, New York'.",
                "Answer": "UPDATE debate SET Venue = 'New York City, New York' WHERE Date = 'December 17, 2014'"
            },
            {
                "User": "Link the newly added 'Samuel Adams' to a debate as an affirmative speaker for debate ID 2.",
                "Answer": "INSERT INTO debate_people (Debate_ID, Affirmative) SELECT Debate_ID, People_ID FROM debate, people WHERE debate.Debate_ID = 2 AND people.Name = 'Samuel Adams'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 94,
        "db": "riding_club",
        "interaction": [
            {
                "User": "Add a new player with ID 15 named Alex Smith, sponsored by 'Mountain Hiking', gender 'M', residing in 'Denver', occupation 'Athlete', with 3000 votes and ranked '5th'.",
                "Answer": "INSERT INTO player (Player_ID, Sponsor_name, Player_name, Gender, Residence, Occupation, Votes, Rank) VALUES (15, 'Mountain Hiking', 'Alex Smith', 'M', 'Denver', 'Athlete', 3000, '5th')"
            },
            {
                "User": "The player Jean Luc Bouché has changed sponsors to 'Prairie Cycling'. Update the sponsor information.",
                "Answer": "UPDATE player SET Sponsor_name = 'Prairie Cycling' WHERE Player_name = 'Jean Luc Bouché'"
            },
            {
                "User": "Create a new table to track the injuries of players with columns for Player_ID, Injury_Date, Injury_Type, and Recovery_Time.",
                "Answer": "CREATE TABLE player_injuries (Player_ID number, Injury_Date date, Injury_Type text, Recovery_Time text, PRIMARY KEY (Player_ID, Injury_Date))"
            },
            {
                "User": "Add a column 'Email' to the player table to store their email addresses.",
                "Answer": "ALTER TABLE player ADD Email text"
            },
            {
                "User": "Record a new injury for player with ID 2, Fiona Shiells, who suffered a 'Sprained Ankle' on '2023-04-15' with an estimated recovery time of '3 weeks'.",
                "Answer": "INSERT INTO player_injuries (Player_ID, Injury_Date, Injury_Type, Recovery_Time) VALUES (2, '2023-04-15', 'Sprained Ankle', '3 weeks')"
            },
            {
                "User": "Update the club 'AIK' to reflect a new starting year of 2010.",
                "Answer": "UPDATE club SET Start_year = 2010 WHERE Club_name = 'AIK'"
            },
            {
                "User": "Coach Jameson Tomas has been promoted to rank 1. Update the coach's rank.",
                "Answer": "UPDATE coach SET Rank = 1 WHERE Coach_name = 'Jameson Tomas'"
            },
            {
                "User": "Insert a new match result for club with ID 4, with 10 gold, 5 big silver, 3 small silver, 2 bronze, and 120 points.",
                "Answer": "INSERT INTO match_result (Rank, Club_ID, Gold, Big_Silver, Small_Silver, Bronze, Points) VALUES ((SELECT MAX(Rank) + 1 FROM match_result), 4, 10, 5, 3, 2, 120)"
            },
            {
                "User": "The player with ID 3, Niki Ashton, has moved to 'Winnipeg'. Update her residence.",
                "Answer": "UPDATE player SET Residence = 'Winnipeg' WHERE Player_ID = 3"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 95,
        "db": "e_government",
        "interaction": [
            {
                "User": "I want to add a new individual named John Smith with the email john.smith@example.com and phone number 555-1234. His address ID is 4.",
                "Answer": "INSERT INTO Individuals (individual_first_name, individual_last_name, inidividual_phone, individual_email, individual_address) VALUES ('John', 'Smith', '555-1234', 'john.smith@example.com', '4')"
            },
            {
                "User": "Update the organization name for organization ID 2 to 'Green Party'.",
                "Answer": "UPDATE Organizations SET organization_name = 'Green Party' WHERE organization_id = 2"
            },
            {
                "User": "Create a new table to track the individual's birth dates with columns for individual ID and birth date.",
                "Answer": "CREATE TABLE Individual_Birthdates (individual_id number PRIMARY KEY, birth_date date)"
            },
            {
                "User": "Add a column to the Addresses table to include a field for 'building_name'.",
                "Answer": "ALTER TABLE Addresses ADD building_name text"
            },
            {
                "User": "Insert a new service with ID 16, type code 'Legal', name 'Legal Advice', and description 'Provides legal advice to individuals'.",
                "Answer": "INSERT INTO Services (service_id, service_type_code, service_name, service_descriptio) VALUES (16, 'Legal', 'Legal Advice', 'Provides legal advice to individuals')"
            },
            {
                "User": "Change the form description for form ID 3 to 'Legal separation certificate'.",
                "Answer": "UPDATE Forms SET form_description = 'Legal separation certificate' WHERE form_id = 3"
            },
            {
                "User": "Add a new column 'preferred_contact_method' to the Individuals table.",
                "Answer": "ALTER TABLE Individuals ADD preferred_contact_method text"
            },
            {
                "User": "Insert a new party address for party ID 16 with address ID 2, starting from today's date, with the address type code as 'Residence'.",
                "Answer": "INSERT INTO Party_Addresses (party_id, address_id, date_address_from, address_type_code) VALUES (16, 2, CURRENT_DATE, 'Residence')"
            },
            {
                "User": "For party ID 3, update the payment method to 'Direct Debit'.",
                "Answer": "UPDATE Parties SET payment_method_code = 'Direct Debit' WHERE party_id = 3"
            },
            {
                "User": "Create a new table called 'Complaints' to track customer complaints with columns for complaint ID, customer ID, complaint details, and date received.",
                "Answer": "CREATE TABLE Complaints (complaint_id number PRIMARY KEY, customer_id number, complaint_details text, date_received date)"
            },
            {
                "User": "Add a column 'middle_initial' to the Individuals table for storing the middle initial of individuals.",
                "Answer": "ALTER TABLE Individuals ADD middle_initial char"
            },
            {
                "User": "Insert a completed party form for party ID 5 with form ID 2, marking the completion start date as January 1st, 2021.",
                "Answer": "INSERT INTO Party_Forms (party_id, form_id, date_completion_started, form_status_code, date_fully_completed) VALUES (5, 2, '2021-01-01', 'Completed', '2021-01-01')"
            },
            {
                "User": "Update the address line 1 for address ID 1 to '123 Main St'.",
                "Answer": "UPDATE Addresses SET line_1_number_building = '123 Main St' WHERE address_id = 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 96,
        "db": "ship_mission",
        "interaction": [
            {
                "User": "Add a new mission with ID 8 for the ship with ID 2, code 'VMV-8', launched in 1942, located in 'Pacific Ocean', with a speed of 30 knots, and currently active.",
                "Answer": "INSERT INTO mission (Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate) VALUES (8, 2, 'VMV-8', 1942, 'Pacific Ocean', 30, 'Active')"
            },
            {
                "User": "The ship with ID 3 has been decommissioned in 1952. Update the mission record accordingly.",
                "Answer": "UPDATE mission SET Fate = 'Decommissioned 1952' WHERE Ship_ID = 3"
            },
            {
                "User": "Create a new table to record inspections, with columns for inspection ID, ship ID, date, and result.",
                "Answer": "CREATE TABLE inspection (Inspection_ID number PRIMARY KEY, Ship_ID number, Date text, Result text)"
            },
            {
                "User": "Record a new inspection for the ship with ID 1 on '2023-03-15' with the result 'Passed'.",
                "Answer": "INSERT INTO inspection (Inspection_ID, Ship_ID, Date, Result) VALUES (1, 1, '2023-03-15', 'Passed')"
            },
            {
                "User": "Add a column 'End_Year' to the mission table to record the year the mission ended.",
                "Answer": "ALTER TABLE mission ADD COLUMN End_Year number"
            },
            {
                "User": "Set the end year for mission with ID 1 to 1950.",
                "Answer": "UPDATE mission SET End_Year = 1950 WHERE Mission_ID = 1"
            },
            {
                "User": "How many ships have been decommissioned?",
                "Answer": "SELECT COUNT(*) FROM mission WHERE Fate LIKE '%Decommissioned%'"
            },
            {
                "User": "Create a new table to track ship renovations with columns for renovation ID, ship ID, start year, end year, and details.",
                "Answer": "CREATE TABLE renovation (Renovation_ID number PRIMARY KEY, Ship_ID number, Start_Year number, End_Year number, Details text)"
            },
            {
                "User": "Record a renovation for ship with ID 2 that started in 1945 and ended in 1946 with details 'Engine overhaul'.",
                "Answer": "INSERT INTO renovation (Renovation_ID, Ship_ID, Start_Year, End_Year, Details) VALUES (1, 2, 1945, 1946, 'Engine overhaul')"
            },
            {
                "User": "List all ships that have undergone renovations.",
                "Answer": "SELECT DISTINCT T2.Name FROM renovation AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID"
            },
            {
                "User": "Update the tonnage of the ship with ID 1 to 3700 after a recent reassessment.",
                "Answer": "UPDATE ship SET Tonnage = 3700 WHERE Ship_ID = 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 97,
        "db": "school_player",
        "interaction": [
            {
                "User": "Add a new school called 'Riverdale Academy' with the following details: ID 7, located in 'Riverdale', with an enrollment of 800, founded in 2005, non-denominational, co-ed, day school, entered competition in 2010, and colors are 'Green and White'.",
                "Answer": "INSERT INTO school (School_ID, School, Location, Enrollment, Founded, Denomination, Boys_or_Girls, Day_or_Boarding, Year_Entered_Competition, School_Colors) VALUES (7, 'Riverdale Academy', 'Riverdale', 800, 2005, 'None', 'Co-ed', 'Day', 2010, 'Green and White')"
            },
            {
                "User": "Update the enrollment for 'St Aloysius' College' to reflect a new total of 1300 students.",
                "Answer": "UPDATE school SET Enrollment = 1300 WHERE School = 'St Aloysius'' College'"
            },
            {
                "User": "Create a new table to track sports achievements with columns for Achievement_ID, School_ID, Sport, and Achievement_Details.",
                "Answer": "CREATE TABLE sports_achievements (Achievement_ID number PRIMARY KEY, School_ID number, Sport text, Achievement_Details text)"
            },
            {
                "User": "Add a new column 'Mascot' to the school_details table to store the mascot name for each school.",
                "Answer": "ALTER TABLE school_details ADD Mascot text"
            },
            {
                "User": "Insert the mascot name 'Eagles' for 'Barker College' into the updated school_details table.",
                "Answer": "UPDATE school_details SET Mascot = 'Eagles' WHERE School_ID = (SELECT School_ID FROM school WHERE School = 'Barker College')"
            },
            {
                "User": "What is the average age of players in 'Kansas City Royals' team?",
                "Answer": "SELECT AVG(Age) FROM player WHERE Team = 'Kansas City Royals'"
            },
            {
                "User": "Record a new sports achievement for 'St Aloysius' College' with Achievement_ID 1, for the sport 'Basketball', and details 'Champions in State Finals 2021'.",
                "Answer": "INSERT INTO sports_achievements (Achievement_ID, School_ID, Sport, Achievement_Details) VALUES (1, 1, 'Basketball', 'Champions in State Finals 2021')"
            },
            {
                "User": "Change the league of 'Cranbrook School' to 'Flight B' in the school_details table.",
                "Answer": "UPDATE school_details SET League = 'Flight B' WHERE School_ID = (SELECT School_ID FROM school WHERE School = 'Cranbrook School')"
            },
            {
                "User": "What is the total number of schools that have 'Day' as their Day_or_Boarding type?",
                "Answer": "SELECT COUNT(*) FROM school WHERE Day_or_Boarding = 'Day'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 98,
        "db": "epinions_1",
        "interaction": [
            {
                "User": "Add a new item with id 8 and title 'banana'",
                "Answer": "INSERT INTO item (i_id, title) VALUES (8, 'banana')"
            },
            {
                "User": "Update the title of the item with id 2 to 'grape'",
                "Answer": "UPDATE item SET title = 'grape' WHERE i_id = 2"
            },
            {
                "User": "Create a new table to store item categories with columns category_id and category_name",
                "Answer": "CREATE TABLE item_category (category_id number PRIMARY KEY, category_name text)"
            },
            {
                "User": "Insert three categories into the item_category table with ids 1, 2, 3 and names 'Fruit', 'Vegetable', 'Beverage'",
                "Answer": "INSERT INTO item_category (category_id, category_name) VALUES (1, 'Fruit'), (2, 'Vegetable'), (3, 'Beverage')"
            },
            {
                "User": "Alter the item table to add a new column for category_id",
                "Answer": "ALTER TABLE item ADD category_id number"
            },
            {
                "User": "Link the item with id 0 to the 'Fruit' category",
                "Answer": "UPDATE item SET category_id = 1 WHERE i_id = 0"
            },
            {
                "User": "Add a trust relationship where user 3 trusts user 4 with a trust level of 7",
                "Answer": "INSERT INTO trust (source_u_id, target_u_id, trust) VALUES (3, 4, 7)"
            },
            {
                "User": "Change the trust level between user 1 and user 3 to 9",
                "Answer": "UPDATE trust SET trust = 9 WHERE source_u_id = 1 AND target_u_id = 3"
            },
            {
                "User": "Create a new user with id 8 and name 'Alice'",
                "Answer": "INSERT INTO useracct (u_id, name) VALUES (8, 'Alice')"
            },
            {
                "User": "Add a new review with a_id 8, u_id 8, i_id 1, rating 9, and rank 1",
                "Answer": "INSERT INTO review (a_id, u_id, i_id, rating, rank) VALUES (8, 8, 1, 9, 1)"
            },
            {
                "User": "List all items that have not been assigned a category",
                "Answer": "SELECT * FROM item WHERE category_id IS NULL"
            },
            {
                "User": "Remove the category_id column from the item table",
                "Answer": "ALTER TABLE item DROP COLUMN category_id"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 99,
        "db": "customers_and_invoices",
        "interaction": [
            {
                "User": "Can we add a new customer to the database?",
                "Answer": "INSERT INTO Customers (customer_id, customer_first_name, customer_middle_initial, customer_last_name, gender, email_address, login_name, login_password, phone_number, town_city, state_county_province, country) VALUES (16, 'Sam', 'B', 'Smith', '0', 'sam.smith@example.com', 's.smith', 'password123', '555-1234', 'Smallville', 'Kansas', 'USA')"
            },
            {
                "User": "What if we update the email address of the customer with id 2?",
                "Answer": "UPDATE Customers SET email_address = 'brennon.weimann@example.com' WHERE customer_id = 2"
            },
            {
                "User": "How about we create a new table for customer feedback?",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text, feedback_date time)"
            },
            {
                "User": "Can we add a new product category for 'Movies' with a VAT rating of 20?",
                "Answer": "INSERT INTO Product_Categories (production_type_code, product_type_description, vat_rating) VALUES ('Movies', 'Movies products', 20)"
            },
            {
                "User": "Let's update the unit price of the product with id 1 to $625.99.",
                "Answer": "UPDATE Products SET unit_price = 625.99 WHERE product_id = 1"
            },
            {
                "User": "Can you add a column 'last_order_date' to the Customers table?",
                "Answer": "ALTER TABLE Customers ADD COLUMN last_order_date time"
            },
            {
                "User": "Insert a new order for customer with id 1, placed today.",
                "Answer": "INSERT INTO Orders (order_id, customer_id, date_order_placed) VALUES (16, 1, CURRENT_TIMESTAMP)"
            },
            {
                "User": "Create a new invoice for the last order we just inserted.",
                "Answer": "INSERT INTO Invoices (invoice_number, order_id, invoice_date) VALUES (16, 16, CURRENT_TIMESTAMP)"
            },
            {
                "User": "Let's record a payment transaction for the new invoice we created.",
                "Answer": "INSERT INTO Financial_Transactions (transaction_id, account_id, invoice_number, transaction_type, transaction_date, transaction_amount) VALUES (16, 1, 16, 'Payment', CURRENT_TIMESTAMP, 500.00)"
            },
            {
                "User": "Add a new order item for order 16 with product id 3 and quantity '2'.",
                "Answer": "INSERT INTO Order_Items (order_item_id, order_id, product_id, product_quantity) VALUES (16, 16, 3, '2')"
            },
            {
                "User": "I want to create a new table to track customer visits to our website.",
                "Answer": "CREATE TABLE Website_Visits (visit_id number PRIMARY KEY, customer_id number, visit_time time, page_visited text)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 100,
        "db": "local_govt_in_alabama",
        "interaction": [
            {
                "User": "Can we track the location of each event? We need to add a location field to the Events table.",
                "Answer": "ALTER TABLE Events ADD COLUMN Location TEXT;"
            },
            {
                "User": "Please add a new event with ID 97, service ID 2, details 'Outdoor Wedding', and location 'Central Park'.",
                "Answer": "INSERT INTO Events (Event_ID, Service_ID, Event_Details, Location) VALUES (97, 2, 'Outdoor Wedding', 'Central Park');"
            },
            {
                "User": "There was a mistake in the previous entry. The location should be 'Riverside Park'. Can you update it?",
                "Answer": "UPDATE Events SET Location = 'Riverside Park' WHERE Event_ID = 16;"
            },
            {
                "User": "We need a new table to track the services provided by each participant. Can you create it?",
                "Answer": "CREATE TABLE Participant_Services (Participant_ID NUMBER, Service_ID NUMBER, PRIMARY KEY (Participant_ID, Service_ID));"
            },
            {
                "User": "Add a record to track that participant 9 provided the 'Marriage' service.",
                "Answer": "INSERT INTO Participant_Services (Participant_ID, Service_ID) VALUES (9, 2);"
            },
            {
                "User": "I want to see a list of all organizers who have managed more than 2 events.",
                "Answer": "SELECT P.Participant_Details FROM Participants P JOIN Participants_in_Events PE ON P.Participant_ID = PE.Participant_ID WHERE P.Participant_Type_Code = 'Organizer' GROUP BY P.Participant_ID HAVING COUNT(PE.Event_ID) > 2;"
            },
            {
                "User": "Let's add a 'Date' column to the Events table to record when each event took place.",
                "Answer": "ALTER TABLE Events ADD COLUMN Event_Date DATE;"
            },
            {
                "User": "Update the event with ID 3 to have the date '2023-05-20'.",
                "Answer": "UPDATE Events SET Event_Date = '2023-05-20' WHERE Event_ID = 3;"
            },
            {
                "User": "Can we have a summary of the types of services and the number of events for each?",
                "Answer": "SELECT S.Service_Type_Code, COUNT(E.Event_ID) AS NumberOfEvents FROM Services S JOIN Events E ON S.Service_ID = E.Service_ID GROUP BY S.Service_Type_Code;"
            },
            {
                "User": "We need to record the outcome of each event. Please add a 'Status' column to the Events table with possible values 'Success' or 'Fail'.",
                "Answer": "ALTER TABLE Events ADD COLUMN Status TEXT CHECK (Status IN ('Success', 'Fail'));"
            },
            {
                "User": "Mark the event with ID 13 as a 'Success'.",
                "Answer": "UPDATE Events SET Status = 'Success' WHERE Event_ID = 13;"
            },
            {
                "User": "I want to delete the event with ID 8 as it was entered by mistake.",
                "Answer": "DELETE FROM Events WHERE Event_ID = 8;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 101,
        "db": "match_season",
        "interaction": [
            {
                "User": "Can we track the number of goals scored by each player? We need a new table for that.",
                "Answer": "CREATE TABLE player_goals (Player_ID number PRIMARY KEY, Goals_Scored number)"
            },
            {
                "User": "Please add a record for a player with ID 4 who scored 5 goals.",
                "Answer": "INSERT INTO player_goals (Player_ID, Goals_Scored) VALUES (4, 5)"
            },
            {
                "User": "Update the goals scored for player with ID 4 to 7.",
                "Answer": "UPDATE player_goals SET Goals_Scored = 7 WHERE Player_ID = 4"
            },
            {
                "User": "I realized we also need to track assists. Can we add a column for assists in the player_goals table?",
                "Answer": "ALTER TABLE player_goals ADD COLUMN Assists_Scored number"
            },
            {
                "User": "Set the assists for player with ID 4 to 3.",
                "Answer": "UPDATE player_goals SET Assists_Scored = 3 WHERE Player_ID = 4"
            },
            {
                "User": "How many players have more than 5 goals?",
                "Answer": "SELECT COUNT(*) FROM player_goals WHERE Goals_Scored > 5"
            },
            {
                "User": "Let's create a new table to log matches. Include columns for match_id, season, home_team_id, away_team_id, and home_team_goals, away_team_goals.",
                "Answer": "CREATE TABLE match_log (Match_ID number PRIMARY KEY, Season number, Home_Team_ID number, Away_Team_ID number, Home_Team_Goals number, Away_Team_Goals number)"
            },
            {
                "User": "Insert a record for the first match of the 1996 season where team 1 played at home against team 2 with a score of 2-1.",
                "Answer": "INSERT INTO match_log (Match_ID, Season, Home_Team_ID, Away_Team_ID, Home_Team_Goals, Away_Team_Goals) VALUES (1, 1996, 1, 2, 2, 1)"
            },
            {
                "User": "We need to track the referees for each match. Please add a column for the referee's name.",
                "Answer": "ALTER TABLE match_log ADD COLUMN Referee_Name text"
            },
            {
                "User": "Record the referee for the first match as 'John Doe'.",
                "Answer": "UPDATE match_log SET Referee_Name = 'John Doe' WHERE Match_ID = 1"
            },
            {
                "User": "Can we see a list of all matches with more than 3 goals scored in total?",
                "Answer": "SELECT * FROM match_log WHERE Home_Team_Goals + Away_Team_Goals > 3"
            },
            {
                "User": "Show me the total number of wins for team 1.",
                "Answer": "SELECT COUNT(*) FROM match_log WHERE (Home_Team_ID = 1 AND Home_Team_Goals > Away_Team_Goals) OR (Away_Team_ID = 1 AND Away_Team_Goals > Home_Team_Goals)"
            },
            {
                "User": "Let's track the number of red and yellow cards. Add two columns to the match_log table for this.",
                "Answer": [
                    "ALTER TABLE match_log ADD COLUMN Red_Cards number",
                    "ALTER TABLE match_log ADD COLUMN Yellow_Cards number"
                ]
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 102,
        "db": "allergy_1",
        "interaction": [
            {
                "User": "Add a new student with ID 1036, last name 'Brown', first name 'Michael', age 20, sex 'M', major 400, advisor 2234, and city code 'NYC'.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Brown', 'Michael', 20, 'M', 400, 2234, 'NYC')"
            },
            {
                "User": "Record that student 1004 has a new allergy to 'Peanuts'.",
                "Answer": "INSERT INTO Has_Allergy (StuID, Allergy) VALUES (1004, 'Peanuts')"
            },
            {
                "User": "Update the major for student 1003 to 500.",
                "Answer": "UPDATE Student SET Major = 500 WHERE StuID = 1003"
            },
            {
                "User": "The student with ID 1002 has outgrown their allergy to 'Shellfish'. Remove this record.",
                "Answer": "DELETE FROM Has_Allergy WHERE StuID = 1002 AND Allergy = 'Shellfish'"
            },
            {
                "User": "Create a new table to track the medical treatments for allergies with columns for treatment ID, treatment name, and the type of allergy it treats.",
                "Answer": "CREATE TABLE Allergy_Treatment (TreatmentID number PRIMARY KEY, TreatmentName text, AllergyType text)"
            },
            {
                "User": "Add a new allergy type for 'Latex' with the type 'contact'.",
                "Answer": "INSERT INTO Allergy_Type (Allergy, AllergyType) VALUES ('Latex', 'contact')"
            },
            {
                "User": "Add a column 'DOB' for the date of birth to the Student table.",
                "Answer": "ALTER TABLE Student ADD DOB date"
            },
            {
                "User": "Set the date of birth for student 1001 to '2004-05-14'.",
                "Answer": "UPDATE Student SET DOB = '2004-05-14' WHERE StuID = 1001"
            },
            {
                "User": "How many different types of allergies are being treated by the treatments in the new Allergy_Treatment table?",
                "Answer": "SELECT count(DISTINCT AllergyType) FROM Allergy_Treatment"
            },
            {
                "User": "Insert a new treatment with ID 101, name 'Antihistamines', for food allergies.",
                "Answer": "INSERT INTO Allergy_Treatment (TreatmentID, TreatmentName, AllergyType) VALUES (101, 'Antihistamines', 'food')"
            },
            {
                "User": "Which students have allergies that are not currently treated according to the Allergy_Treatment table?",
                "Answer": "SELECT DISTINCT h.StuID FROM Has_Allergy h LEFT JOIN Allergy_Treatment t ON h.Allergy = t.AllergyType WHERE t.TreatmentID IS NULL"
            },
            {
                "User": "Add a column 'EmergencyContact' to the Student table to store emergency contact numbers.",
                "Answer": "ALTER TABLE Student ADD EmergencyContact text"
            },
            {
                "User": "Update the emergency contact for student 1001 to '555-1234'.",
                "Answer": "UPDATE Student SET EmergencyContact = '555-1234' WHERE StuID = 1001"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 103,
        "db": "allergy_1",
        "interaction": [
            {
                "User": "I want to add a new allergy type for 'Pollen' with allergy type 'environmental'.",
                "Answer": "INSERT INTO Allergy_Type (Allergy, AllergyType) VALUES ('Pollen', 'environmental');"
            },
            {
                "User": "Update the AllergyType for 'Nuts' to 'food and environmental' as it can be both.",
                "Answer": "UPDATE Allergy_Type SET AllergyType = 'food and environmental' WHERE Allergy = 'Nuts';"
            },
            {
                "User": "Create a new table to track student emergency contacts with fields for Student ID, Contact Name, and Phone Number.",
                "Answer": "CREATE TABLE Emergency_Contact (StuID number, ContactName text, PhoneNumber text, PRIMARY KEY (StuID));"
            },
            {
                "User": "Add a new student John Doe with ID 1036 who is 20 years old, male, majoring in 601, advised by 2233, and living in 'NYC'.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 601, 2233, 'NYC');"
            },
            {
                "User": "John Doe just informed us he has a cat allergy. Please add his allergy record.",
                "Answer": "INSERT INTO Has_Allergy (StuID, Allergy) VALUES (1004, 'Cat');"
            },
            {
                "User": "We need to record the severity of allergies. Can you add a new column 'Severity' to the Has_Allergy table?",
                "Answer": "ALTER TABLE Has_Allergy ADD COLUMN Severity text;"
            },
            {
                "User": "Set the severity of John Doe's cat allergy to 'High'.",
                "Answer": "UPDATE Has_Allergy SET Severity = 'High' WHERE StuID = 1004 AND Allergy = 'Cat';"
            },
            {
                "User": "I'd like to have a list of all students with food allergies along with their last names and the type of allergy.",
                "Answer": "SELECT T1.LName, T2.Allergy FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID JOIN Allergy_Type AS T3 ON T2.Allergy = T3.Allergy WHERE T3.AllergyType LIKE '%food%';"
            },
            {
                "User": "For our new health initiative, we need to create a table to track students' exercise habits. Please create it with columns for Student ID, Exercise Type, and Frequency.",
                "Answer": "CREATE TABLE Exercise_Habits (StuID number, ExerciseType text, Frequency text, PRIMARY KEY (StuID));"
            },
            {
                "User": "Linda Smith just started a new exercise routine, yoga, which she does twice a week. Add this information for her.",
                "Answer": "INSERT INTO Exercise_Habits (StuID, ExerciseType, Frequency) VALUES (1001, 'Yoga', 'Twice a week');"
            },
            {
                "User": "Can you show me the average age of students who have environmental allergies?",
                "Answer": "SELECT AVG(T1.Age) FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.StuID = T2.StuID JOIN Allergy_Type AS T3 ON T2.Allergy = T3.Allergy WHERE T3.AllergyType = 'environmental';"
            },
            {
                "User": "Let's track the date when we record a student's allergy. Add a 'DateRecorded' column to the Has_Allergy table.",
                "Answer": "ALTER TABLE Has_Allergy ADD COLUMN DateRecorded date;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 104,
        "db": "restaurant_1",
        "interaction": [
            {
                "User": "I'd like to add a new student named John Doe, age 20, male, majoring in 700, advised by 1121, with a city code of 'NYC'.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 700, 1121, 'NYC')"
            },
            {
                "User": "Update the address of the restaurant named Subway to '3333 St Paul St, Baltimore, MD 21218'.",
                "Answer": "UPDATE Restaurant SET Address = '3333 St Paul St, Baltimore, MD 21218' WHERE ResName = 'Subway'"
            },
            {
                "User": "I noticed we don't have a column for email addresses in the Student table. Can we add that?",
                "Answer": "ALTER TABLE Student ADD COLUMN Email text"
            },
            {
                "User": "Let's create a new table to track the favorite restaurants of students, including columns for student ID and restaurant ID.",
                "Answer": "CREATE TABLE Favorite_Restaurants (StuID number, ResID number, PRIMARY KEY (StuID, ResID), FOREIGN KEY (StuID) REFERENCES Student(StuID), FOREIGN KEY (ResID) REFERENCES Restaurant(ResID))"
            },
            {
                "User": "Insert a record in the new Favorite_Restaurants table for student 1002 with restaurant ID 1 as their favorite.",
                "Answer": "INSERT INTO Favorite_Restaurants (StuID, ResID) VALUES (1002, 1)"
            },
            {
                "User": "Change the rating of Honeygrow to 5.",
                "Answer": "UPDATE Restaurant SET Rating = 5 WHERE ResName = 'Honeygrow'"
            },
            {
                "User": "Add a new restaurant type called 'Fast Food' with a description 'Quick and convenient.'",
                "Answer": "INSERT INTO Restaurant_Type (ResTypeID, ResTypeName, ResTypeDescription) VALUES (3, 'Fast Food', 'Quick and convenient')"
            },
            {
                "User": "Associate the restaurant type 'Fast Food' with Subway.",
                "Answer": "UPDATE Type_Of_Restaurant SET ResTypeID = 3 WHERE ResID = (SELECT ResID FROM Restaurant WHERE ResName = 'Subway')"
            },
            {
                "User": "Can we track the number of times a student visits a restaurant? Let's add a column for visit count in the Visits_Restaurant table.",
                "Answer": "ALTER TABLE Visits_Restaurant ADD COLUMN Visit_Count number"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 105,
        "db": "restaurant_1",
        "interaction": [
            {
                "User": "Add a new student named John Doe with StuID 1036, age 20, sex 'M', major 601, advisor 1121, residing in city code 'NYC'.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 601, 1121, 'NYC')"
            },
            {
                "User": "Update the address of the restaurant with ResID 1 to '3240 St Paul St, Baltimore, MD 21218'.",
                "Answer": "UPDATE Restaurant SET Address = '3240 St Paul St, Baltimore, MD 21218' WHERE ResID = 1"
            },
            {
                "User": "Create a new table to keep track of student meal plans with fields PlanID (number), StuID (number), PlanType (text), and Balance (number).",
                "Answer": "CREATE TABLE Student_Meal_Plans (PlanID number PRIMARY KEY, StuID number, PlanType text, Balance number)"
            },
            {
                "User": "Add a new meal plan with PlanID 5001 for student with StuID 1001, plan type 'Standard', and a balance of 150.00.",
                "Answer": "INSERT INTO Student_Meal_Plans (PlanID, StuID, PlanType, Balance) VALUES (5001, 1001, 'Standard', 150.00)"
            },
            {
                "User": "Add a new column 'Email' of type text to the Student table to store student email addresses.",
                "Answer": "ALTER TABLE Student ADD COLUMN Email text"
            },
            {
                "User": "Set the email of the student with StuID 1002 to 'tracy.kim@university.edu'.",
                "Answer": "UPDATE Student SET Email = 'tracy.kim@university.edu' WHERE StuID = 1002"
            },
            {
                "User": "Create a new table to record student feedback for restaurants with fields FeedbackID (number), StuID (number), ResID (number), Comment (text), and Rating (number).",
                "Answer": "CREATE TABLE Student_Feedback (FeedbackID number PRIMARY KEY, StuID number, ResID number, Comment text, Rating number)"
            },
            {
                "User": "Insert a feedback entry with FeedbackID 3001 for student 1001 about restaurant 2 with the comment 'Great food, but a bit pricey.' and a rating of 4.",
                "Answer": "INSERT INTO Student_Feedback (FeedbackID, StuID, ResID, Comment, Rating) VALUES (3001, 1001, 2, 'Great food, but a bit pricey.', 4)"
            },
            {
                "User": "List all students who have visited a restaurant more than once.",
                "Answer": "SELECT StuID FROM Visits_Restaurant GROUP BY StuID, ResID HAVING COUNT(*) > 1"
            },
            {
                "User": "Increase the balance of all meal plans by 10 percent.",
                "Answer": "UPDATE Student_Meal_Plans SET Balance = Balance * 1.10"
            },
            {
                "User": "Delete the visit record for student 1032 at restaurant 2.",
                "Answer": "DELETE FROM Visits_Restaurant WHERE StuID = 1032 AND ResID = 2"
            },
            {
                "User": "Add a new restaurant type with ResTypeID 3, name 'Cafe', and description 'Casual place for coffee and snacks.'",
                "Answer": "INSERT INTO Restaurant_Type (ResTypeID, ResTypeName, ResTypeDescription) VALUES (3, 'Cafe', 'Casual place for coffee and snacks.')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 106,
        "db": "school_bus",
        "interaction": [
            {
                "User": "Add a new driver named John Doe with ID 13 from New York, aged 35, and affiliated with the Independent party.",
                "Answer": "INSERT INTO driver (Driver_ID, Name, Party, Home_city, Age) VALUES (13, 'John Doe', 'Ind', 'New York', 35)"
            },
            {
                "User": "Update the age of Minnie Gonzalez to 47.",
                "Answer": "UPDATE driver SET Age = 47 WHERE Name = 'Minnie Gonzalez'"
            },
            {
                "User": "Create a new table to track bus maintenance records with fields for Record_ID, Bus_ID, Service_Date, and Notes.",
                "Answer": "CREATE TABLE bus_maintenance (Record_ID number PRIMARY KEY, Bus_ID number, Service_Date date, Notes text)"
            },
            {
                "User": "Insert a maintenance record for bus with ID 10 serviced on March 15, 2023, with a note 'Oil change and tire rotation'.",
                "Answer": "INSERT INTO bus_maintenance (Record_ID, Bus_ID, Service_Date, Notes) VALUES (1, 10, '2023-03-15', 'Oil change and tire rotation')"
            },
            {
                "User": "Add a new column to the school table to include the number of students.",
                "Answer": "ALTER TABLE school ADD COLUMN Student_Count number"
            },
            {
                "User": "Set the number of students for Noelani Elementary School to 250.",
                "Answer": "UPDATE school SET Student_Count = 250 WHERE School = 'Noelani Elementary School'"
            },
            {
                "User": "How many full-time drivers are there?",
                "Answer": "SELECT COUNT(*) FROM school_bus WHERE If_full_time = 'T'"
            },
            {
                "User": "List all the schools in Jakarta, Indonesia.",
                "Answer": "SELECT School FROM school WHERE Location = 'Jakarta, Indonesia'"
            },
            {
                "User": "Increase the Years_Working by 1 for all part-time drivers.",
                "Answer": "UPDATE school_bus SET Years_Working = Years_Working + 1 WHERE If_full_time = 'F'"
            },
            {
                "User": "Insert a new school with ID 8, for 5th grade, named 'Mountain View Elementary', located in 'Denver, Colorado', of type 'Public'.",
                "Answer": "INSERT INTO school (School_ID, Grade, School, Location, Type) VALUES (8, '5th grade', 'Mountain View Elementary', 'Denver, Colorado', 'Public')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 107,
        "db": "climbing",
        "interaction": [
            {
                "User": "Add a new mountain called 'Mount Fiction' with an ID of 8, a height of 4500, a prominence of 4000, in the 'Imaginary Range', located in 'Fantasia'.",
                "Answer": "INSERT INTO mountain (Mountain_ID, Name, Height, Prominence, Range, Country) VALUES (8, 'Mount Fiction', 4500, 4000, 'Imaginary Range', 'Fantasia')"
            },
            {
                "User": "Update the height of 'Mount Kenya (Batian)' to 5200 meters.",
                "Answer": "UPDATE mountain SET Height = 5200 WHERE Name = 'Mount Kenya (Batian)'"
            },
            {
                "User": "Create a new table for mountain expeditions with columns for Expedition_ID, Mountain_ID, Start_Date, End_Date, and Success.",
                "Answer": "CREATE TABLE expeditions (Expedition_ID number PRIMARY KEY, Mountain_ID number, Start_Date text, End_Date text, Success text)"
            },
            {
                "User": "Insert a record of a new expedition to 'Kibo (Uhuru Pk)' with an Expedition_ID of 101, starting on '2023-04-01', ending on '2023-04-10', and marked as a success.",
                "Answer": "INSERT INTO expeditions (Expedition_ID, Mountain_ID, Start_Date, End_Date, Success) VALUES (101, 1, '2023-04-01', '2023-04-10', 'Yes')"
            },
            {
                "User": "Add a new column 'Difficulty' to the mountain table to rate the difficulty of climbing each mountain.",
                "Answer": "ALTER TABLE mountain ADD COLUMN Difficulty text"
            },
            {
                "User": "Set the difficulty of 'Kibo (Uhuru Pk)' to 'High'.",
                "Answer": "UPDATE mountain SET Difficulty = 'High' WHERE Name = 'Kibo (Uhuru Pk)'"
            },
            {
                "User": "List all mountains with their respective highest climber points.",
                "Answer": "SELECT m.Name, MAX(c.Points) as HighestPoints FROM mountain m JOIN climber c ON m.Mountain_ID = c.Mountain_ID GROUP BY m.Name"
            },
            {
                "User": "Record a new climber named 'John Doe' from 'USA' with an ID of 11, who climbed 'Mount Fiction' and scored 20 points.",
                "Answer": "INSERT INTO climber (Climber_ID, Name, Country, Points, Mountain_ID) VALUES (11, 'John Doe', 'USA', 20, 8)"
            },
            {
                "User": "Show the total number of successful expeditions.",
                "Answer": "SELECT count(*) FROM expeditions WHERE Success = 'Yes'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 108,
        "db": "customer_complaints",
        "interaction": [
            {
                "User": "Add a new staff member named John Doe with gender 'male', email 'john.doe@example.com', and phone number '555-1234'.",
                "Answer": "INSERT INTO Staff (gender, first_name, last_name, email_address, phone_number) VALUES ('male', 'John', 'Doe', 'john.doe@example.com', '555-1234')"
            },
            {
                "User": "Update the email address of the staff member with the staff_id 114 to 'ward.boehm@newdomain.com'.",
                "Answer": "UPDATE Staff SET email_address = 'ward.boehm@newdomain.com' WHERE staff_id = 114"
            },
            {
                "User": "Create a new table to track the staff's shift schedules including columns for staff_id, date, start_time, and end_time.",
                "Answer": "CREATE TABLE Shift_Schedule (staff_id number, date date, start_time time, end_time time, FOREIGN KEY (staff_id) REFERENCES Staff(staff_id))"
            },
            {
                "User": "Add a new column to the Customers table to store the date when the customer became a member.",
                "Answer": "ALTER TABLE Customers ADD COLUMN membership_date date"
            },
            {
                "User": "Insert a complaint record for customer_id 115 about a product with product_id 119, complaint_id 13, indicating a 'Product Failure', with the complaint raised today and currently in 'New' status.",
                "Answer": "INSERT INTO Complaints (complaint_id, product_id, customer_id, complaint_outcome_code, complaint_status_code, complaint_type_code, date_complaint_raised, staff_id) VALUES (13, 119, 115, 'OK', 'New', 'Product Failure', CURRENT_DATE, (SELECT staff_id FROM Staff ORDER BY RANDOM() LIMIT 1))"
            },
            {
                "User": "Change the product price of 'The Great Gatsby' to $40.",
                "Answer": "UPDATE Products SET product_price = 40 WHERE product_name = 'The Great Gatsby'"
            },
            {
                "User": "Create a new table to log customer interactions including interaction_id, customer_id, interaction_date, interaction_type, and notes.",
                "Answer": "CREATE TABLE Customer_Interactions (interaction_id number PRIMARY KEY, customer_id number, interaction_date date, interaction_type text, notes text, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))"
            },
            {
                "User": "Record a new interaction for customer_id 113 that took place today regarding a 'Billing Inquiry' with notes 'Resolved over the phone'.",
                "Answer": "INSERT INTO Customer_Interactions (customer_id, interaction_date, interaction_type, notes) VALUES (113, CURRENT_DATE, 'Billing Inquiry', 'Resolved over the phone')"
            },
            {
                "User": "Add a new product category code 'Electronics' to the Products table for future product entries.",
                "Answer": "ALTER TABLE Products ADD COLUMN product_category_code_electronics text"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 109,
        "db": "insurance_fnol",
        "interaction": [
            {
                "User": "I'd like to add a new customer to the database. The customer's name is John Doe and his phone number is +1-555-1234.",
                "Answer": [
                    "INSERT INTO Customers (Customer_ID, Customer_name) VALUES (257, 'John Doe');",
                    " INSERT INTO Available_Policies (Policy_ID, policy_type_code, Customer_Phone) VALUES (302, 'Health Insurance', '+1-555-1234');"
                ]
            },
            {
                "User": "Please update the phone number of Mrs. Hanna Willms to +1-555-5678.",
                "Answer": "UPDATE Available_Policies SET Customer_Phone = '+1-555-5678' WHERE Policy_ID = (SELECT Policy_ID FROM Customers_Policies WHERE Customer_ID = (SELECT Customer_ID FROM Customers WHERE Customer_name = 'Mrs. Hanna Willms'));"
            },
            {
                "User": "Can you create a new table to track customer feedback with columns for feedback ID, customer ID, feedback text, and date received?",
                "Answer": "CREATE TABLE Customer_Feedback (Feedback_ID number PRIMARY KEY, Customer_ID number, Feedback_Text text, Date_Received time);"
            },
            {
                "User": "Let's add a new service called 'Insurance Consultation'.",
                "Answer": "INSERT INTO Services (Service_ID, Service_name) VALUES (7, 'Insurance Consultation');"
            },
            {
                "User": "I want to record a new claim for customer 214 with policy 257. The effective date is today.",
                "Answer": "INSERT INTO Claims (Claim_ID, FNOL_ID, Effective_Date) VALUES (231, (SELECT FNOL_ID FROM First_Notification_of_Loss WHERE Customer_ID = 214 AND Policy_ID = 257), CURRENT_DATE);"
            },
            {
                "User": "Could you add a new column to the Settlements table to include a description of the settlement?",
                "Answer": "ALTER TABLE Settlements ADD COLUMN Settlement_Description text;"
            },
            {
                "User": "I need to close the policy with ID 301 for customer 214. Please update the Date Closed to today's date.",
                "Answer": "UPDATE Customers_Policies SET Date_Closed = CURRENT_DATE WHERE Customer_ID = 214 AND Policy_ID = 301;"
            },
            {
                "User": "Can you show me a list of all customers who have opened a policy but have not closed it yet?",
                "Answer": "SELECT c.Customer_name FROM Customers AS c JOIN Customers_Policies AS cp ON c.Customer_ID = cp.Customer_ID WHERE cp.Date_Closed IS NULL;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 110,
        "db": "scientist_1",
        "interaction": [
            {
                "User": "Can we add a new scientist named 'John Doe' with SSN 999888777?",
                "Answer": "INSERT INTO Scientists (SSN, Name) VALUES (999888777, 'John Doe')"
            },
            {
                "User": "I'd like to update the hours for the project 'Aerodynamics and Bridge Design' to 200.",
                "Answer": "UPDATE Projects SET Hours = 200 WHERE Name = 'Aerodynamics and Bridge Design'"
            },
            {
                "User": "Can we create a table to keep track of the scientists' specializations?",
                "Answer": "CREATE TABLE Specializations (ScientistSSN number, Field text, PRIMARY KEY (ScientistSSN))"
            },
            {
                "User": "Please assign John Doe to the project 'Winds: Studying Bernoullis Principle'.",
                "Answer": "INSERT INTO AssignedTo (Scientist, Project) VALUES (999888777, 'AeH1')"
            },
            {
                "User": "Add a column to store the email addresses of the scientists.",
                "Answer": "ALTER TABLE Scientists ADD COLUMN Email text"
            },
            {
                "User": "Update Carol Smith's email to 'carol.smith@example.com'.",
                "Answer": "UPDATE Scientists SET Email = 'carol.smith@example.com' WHERE Name = 'Carol Smith'"
            },
            {
                "User": "Assign a specialization 'Astrophysics' to Anand Manikutty.",
                "Answer": "INSERT INTO Specializations (ScientistSSN, Field) VALUES (152934485, 'Astrophysics')"
            },
            {
                "User": "Create a view that shows scientists and their assigned projects.",
                "Answer": "CREATE VIEW ScientistProjects AS SELECT T1.Name AS ScientistName, T2.Name AS ProjectName FROM Scientists T1 JOIN AssignedTo T3 ON T1.SSN = T3.Scientist JOIN Projects T2 ON T3.Project = T2.Code"
            },
            {
                "User": "Can we have a list of scientists who do not have any projects assigned?",
                "Answer": "SELECT T1.Name FROM Scientists T1 LEFT JOIN AssignedTo T2 ON T1.SSN = T2.Scientist WHERE T2.Scientist IS NULL"
            },
            {
                "User": "Can you add a new project with code 'Env4', name 'Environmental Impact of Dams', and 300 hours?",
                "Answer": "INSERT INTO Projects (Code, Name, Hours) VALUES ('Env4', 'Environmental Impact of Dams', 300)"
            },
            {
                "User": "Show me the specialization of Michael Rogers if he has one.",
                "Answer": "SELECT T2.Field FROM Scientists T1 LEFT JOIN Specializations T2 ON T1.SSN = T2.ScientistSSN WHERE T1.Name = 'Michael Rogers'"
            },
            {
                "User": "Let's update the project hours for 'Aerodynamics and Gas Mileage' to 275.",
                "Answer": "UPDATE Projects SET Hours = 275 WHERE Name = 'Aerodynamics and Gas Mileage'"
            },
            {
                "User": "Please add 'Quantum Mechanics' as the specialization for Michael Rogers.",
                "Answer": "INSERT INTO Specializations (ScientistSSN, Field) VALUES (123234877, 'Quantum Mechanics')"
            },
            {
                "User": "I need to correct John Doe's SSN to 999777888.",
                "Answer": "UPDATE Scientists SET SSN = 999777888 WHERE SSN = 999888777"
            },
            {
                "User": "Create a table to record the publications of each scientist.",
                "Answer": "CREATE TABLE Publications (ID number AUTO_INCREMENT, ScientistSSN number, Title text, Year number, PRIMARY KEY (ID))"
            },
            {
                "User": "Record a new publication for Anand Manikutty titled 'The Paradox of Schrdinger's Cat' published in 2023.",
                "Answer": "INSERT INTO Publications (ScientistSSN, Title, Year) VALUES (152934485, 'The Paradox of Schrdinger''s Cat', 2023)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 111,
        "db": "farm",
        "interaction": [
            {
                "User": "Out of all the farms, what are the maximum and minimum numbers of cows?",
                "Answer": "SELECT max(Cows), min(Cows) FROM farm"
            },
            {
                "User": "And for horses? Do you mean total horses or working horses?",
                "User Follow-up": "total horses",
                "Answer": "SELECT max(Total_Horses), min(Total_Horses) FROM farm"
            },
            {
                "User": "How many more oxen are there than cattle on farm id 1",
                "Answer": "SELECT oxen, total_cattle FROM farm WHERE Farm_ID = 1"
            },
            {
                "User": "I want to record the number of chickens for each farm. Can you add a column for chickens in the farm table?",
                "Answer": "ALTER TABLE farm ADD COLUMN Chickens number"
            },
            {
                "User": "Now add the number of chickens for farm id 1. Let's say they have 1500 chickens.",
                "Answer": "UPDATE farm SET Chickens = 1500 WHERE Farm_ID = 1"
            },
            {
                "User": "Insert a new competition record for farm id 2 with rank 1 in the most recent competition.",
                "Answer": "INSERT INTO competition_record (Competition_ID, Farm_ID, Rank) VALUES ((SELECT max(Competition_ID) FROM competition_record), 2, 1)"
            },
            {
                "User": "Create a new table to track the annual farm revenue. It should include farm id, year, and revenue.",
                "Answer": "CREATE TABLE farm_revenue (Farm_ID number, Year number, Revenue number, PRIMARY KEY (Farm_ID, Year))"
            },
            {
                "User": "Add the annual revenue for farm id 3 for the year 2021. The revenue was $200,000.",
                "Answer": "INSERT INTO farm_revenue (Farm_ID, Year, Revenue) VALUES (3, 2021, 200000)"
            },
            {
                "User": "Can you show me which cities have hosted more than one farm competition?",
                "Answer": "SELECT Host_city_ID, COUNT(*) AS Competitions_Hosted FROM farm_competition GROUP BY Host_city_ID HAVING COUNT(*) > 1"
            },
            {
                "User": "Update the status of 'Perth-Andover' to 'City' as it has been recently upgraded.",
                "Answer": "UPDATE city SET Status = 'City' WHERE Official_Name = 'Perth-Andover'"
            },
            {
                "User": "We need to track the number of tractors on each farm. Please add a column for tractors in the farm table.",
                "Answer": "ALTER TABLE farm ADD COLUMN Tractors number"
            },
            {
                "User": "For the farm with id 2, set the number of tractors to 10.",
                "Answer": "UPDATE farm SET Tractors = 10 WHERE Farm_ID = 2"
            },
            {
                "User": "Insert a new city with the following details: ID 6, Name 'Riverside', Status 'Town', Area 25.6 km^2, Population 3200, Census Ranking 'N/A'.",
                "Answer": "INSERT INTO city (City_ID, Official_Name, Status, Area_km_2, Population, Census_Ranking) VALUES (6, 'Riverside', 'Town', 25.6, 3200, 'N/A')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 112,
        "db": "program_share",
        "interaction": [
            {
                "User": "Can we track the duration of each program broadcast? We need to add this information.",
                "Answer": "ALTER TABLE broadcast ADD COLUMN Duration_in_minutes number;"
            },
            {
                "User": "Now that we have a duration column, can you set the duration of the 'Aniworld' program broadcast in the morning to 45 minutes?",
                "Answer": "UPDATE broadcast SET Duration_in_minutes = 45 WHERE Program_ID = (SELECT Program_ID FROM program WHERE Name = 'Aniworld') AND Time_of_day = 'Morning';"
            },
            {
                "User": "I'd like to add a new program to our database. The program is called 'Space Explorers', it originated in 'USA', was first launched in 2021, and is owned by 'National Geographic'.",
                "Answer": "INSERT INTO program (Name, Origin, Launch, Owner) VALUES ('Space Explorers', 'USA', 2021, 'National Geographic');"
            },
            {
                "User": "Could you create a new table to track the hosts of each program, including their full name and the program they host?",
                "Answer": "CREATE TABLE program_hosts (Host_ID number PRIMARY KEY, FullName text, Program_ID number, FOREIGN KEY (Program_ID) REFERENCES program (Program_ID));"
            },
            {
                "User": "Let's insert data for a host. The host's full name is 'Chris Hadfield' and he will be hosting 'Space Explorers'.",
                "Answer": "INSERT INTO program_hosts (FullName, Program_ID) VALUES ('Chris Hadfield', (SELECT Program_ID FROM program WHERE Name = 'Space Explorers'));"
            },
            {
                "User": "We need to keep track of the languages in which each program is available. Can you add a column for language in the program table?",
                "Answer": "ALTER TABLE program ADD COLUMN Language text;"
            },
            {
                "User": "Please update the 'Space Explorers' program to indicate that it is available in English and Spanish.",
                "Answer": "UPDATE program SET Language = 'English, Spanish' WHERE Name = 'Space Explorers';"
            },
            {
                "User": "I want to create a view that shows the program name, channel name, and broadcast time for all morning programs.",
                "Answer": "CREATE VIEW morning_programs AS SELECT p.Name AS Program_Name, c.Name AS Channel_Name, b.Time_of_day FROM program p JOIN broadcast b ON p.Program_ID = b.Program_ID JOIN channel c ON b.Channel_ID = c.Channel_ID WHERE b.Time_of_day = 'Morning';"
            },
            {
                "User": "Can you show me the list of programs with their respective channel names and broadcast times from the view we just created?",
                "Answer": "SELECT * FROM morning_programs;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 113,
        "db": "pilot_record",
        "interaction": [
            {
                "User": "Add a new pilot named John Smith, aged 29, from Canada, with rank 10, joining the center team in 2021.",
                "Answer": "INSERT INTO pilot (Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team) VALUES ('John Smith', 10, 29, 'Canada', 'Center Team', 2021, 'Unknown');"
            },
            {
                "User": "Update the rank of pilot Patrick O'Bryant to 15.",
                "Answer": "UPDATE pilot SET Rank = 15 WHERE Pilot_name = 'Patrick O''Bryant';"
            },
            {
                "User": "Create a new table to track the maintenance records of aircraft, with fields for record ID, aircraft ID, maintenance date, and description.",
                "Answer": "CREATE TABLE maintenance_record (Record_ID number PRIMARY KEY, Aircraft_ID number, Maintenance_Date text, Description text);"
            },
            {
                "User": "Add a maintenance record for aircraft with ID 2 for a check-up on 2023-03-15 with the description 'Annual check-up'.",
                "Answer": "INSERT INTO maintenance_record (Record_ID, Aircraft_ID, Maintenance_Date, Description) VALUES (1, 2, '2023-03-15', 'Annual check-up');"
            },
            {
                "User": "Add a column 'Hours_Flown' to the pilot table to track the total hours each pilot has flown.",
                "Answer": "ALTER TABLE pilot ADD COLUMN Hours_Flown number;"
            },
            {
                "User": "Set the hours flown for pilot Dan O'Sullivan to 1500 hours.",
                "Answer": "UPDATE pilot SET Hours_Flown = 1500 WHERE Pilot_name = 'Dan O''Sullivan';"
            },
            {
                "User": "Who are the pilots with more than 10 years of experience in our team?",
                "Answer": "SELECT Pilot_name FROM pilot WHERE (2023 - Join_Year) > 10;"
            },
            {
                "User": "Create a table to record the training sessions for pilots, including session ID, pilot ID, date, and duration in hours.",
                "Answer": "CREATE TABLE training_sessions (Session_ID number PRIMARY KEY, Pilot_ID number, Date text, Duration_hours number);"
            },
            {
                "User": "Record a new training session for pilot ID 1 on 2023-04-01 that lasted 3 hours.",
                "Answer": "INSERT INTO training_sessions (Session_ID, Pilot_ID, Date, Duration_hours) VALUES (1, 1, '2023-04-01', 3);"
            },
            {
                "User": "Increase the age of all pilots by 1 year.",
                "Answer": "UPDATE pilot SET Age = Age + 1;"
            },
            {
                "User": "The pilot with ID 3 has transferred to the forward-center team. Update the records accordingly.",
                "Answer": "UPDATE pilot SET Position = 'Forward-Center Team' WHERE Pilot_ID = 3;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 114,
        "db": "customer_deliveries",
        "interaction": [
            {
                "User": "How many customers are there?",
                "Answer": "SELECT count(customer_id) FROM Customers"
            },
            {
                "User": "When did the last customer come?",
                "Answer": "SELECT date_became_customer FROM Customers ORDER BY date_became_customer DESC LIMIT 1"
            },
            {
                "User": "How about the first?",
                "Answer": "SELECT date_became_customer FROM Customers ORDER BY date_became_customer LIMIT 1"
            },
            {
                "User": "Can you show me the names of the first five customers?",
                "Answer": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5"
            },
            {
                "User": "Add a new product with id 7, name 'toys', price 299.99, and description 'for kids'.",
                "Answer": "INSERT INTO Products (product_id, product_name, product_price, product_description) VALUES (7, 'toys', 299.99, 'for kids')"
            },
            {
                "User": "Update the price of the product with id 2 to 6500.00.",
                "Answer": "UPDATE Products SET product_price = 6500.00 WHERE product_id = 2"
            },
            {
                "User": "Create a new table for discount codes with columns: code_id, code_value, and expiration_date.",
                "Answer": "CREATE TABLE Discount_Codes (code_id NUMBER PRIMARY KEY, code_value TEXT, expiration_date TIME)"
            },
            {
                "User": "Insert a new discount code with id 101, value 'SAVE20', and expiration date '2023-12-31'.",
                "Answer": "INSERT INTO Discount_Codes (code_id, code_value, expiration_date) VALUES (101, 'SAVE20', '2023-12-31')"
            },
            {
                "User": "Add a new column 'loyalty_points' to the Customers table.",
                "Answer": "ALTER TABLE Customers ADD COLUMN loyalty_points NUMBER"
            },
            {
                "User": "Assign 10 loyalty points to customer with id 1.",
                "Answer": "UPDATE Customers SET loyalty_points = 10 WHERE customer_id = 1"
            },
            {
                "User": "What is the average product price?",
                "Answer": "SELECT AVG(product_price) FROM Products"
            },
            {
                "User": "Show me all products with a price above the average.",
                "Answer": "SELECT * FROM Products WHERE product_price > (SELECT AVG(product_price) FROM Products)"
            },
            {
                "User": "Create a view that lists each customer's name and total loyalty points.",
                "Answer": "CREATE VIEW Customer_Loyalty AS SELECT customer_name, loyalty_points FROM Customers"
            },
            {
                "User": "How many products have 'good condition' in their description?",
                "Answer": "SELECT COUNT(*) FROM Products WHERE product_description LIKE '%good condition%'"
            },
            {
                "User": "Show the top 3 most expensive products.",
                "Answer": "SELECT * FROM Products ORDER BY product_price DESC LIMIT 3"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 115,
        "db": "customer_deliveries",
        "interaction": [
            {
                "User": "Can you add a new product with id 7, name 'toys', price 2999.99, and description 'children's toys' to the product list?",
                "Answer": "INSERT INTO Products (product_id, product_name, product_price, product_description) VALUES (7, 'toys', 2999.99, 'children''s toys')"
            },
            {
                "User": "I'd like to update the price of the product with id 2 to 6500.00. Can you do that?",
                "Answer": "UPDATE Products SET product_price = 6500.00 WHERE product_id = 2"
            },
            {
                "User": "Let's create a new table to track product reviews. It should have columns for review_id, product_id, customer_id, review_text, and rating.",
                "Answer": "CREATE TABLE Product_Reviews (review_id number PRIMARY KEY, product_id number, customer_id number, review_text text, rating number)"
            },
            {
                "User": "I want to record a new order delivery for location code '30 Sam Rd', actual order id 16, delivery status 'Dispatched', driver employee id 3, truck id 2, and delivery date '2023-03-15 14:30:00'.",
                "Answer": "INSERT INTO Order_Deliveries (location_code, actual_order_id, delivery_status_code, driver_employee_id, truck_id, delivery_date) VALUES ('30 Sam Rd', 16, 'Dispatched', 3, 2, '2023-03-15 14:30:00')"
            },
            {
                "User": "The customer with id 3 has changed their phone number to '555-123-4567'. Please update their record.",
                "Answer": "UPDATE Customers SET customer_phone = '555-123-4567' WHERE customer_id = 3"
            },
            {
                "User": "We need to add a new column 'loyalty_points' to the Customers table to track the loyalty points each customer has. Can you add this column?",
                "Answer": "ALTER TABLE Customers ADD loyalty_points number"
            },
            {
                "User": "Can you create a table to keep track of employee shifts with columns for shift_id, employee_id, start_time, and end_time?",
                "Answer": "CREATE TABLE Employee_Shifts (shift_id number PRIMARY KEY, employee_id number, start_time time, end_time time)"
            },
            {
                "User": "Let's add a new address with id 16, address details '1234 Happy St Apt 101', city 'Joytown', zip '98765', state 'Bliss', and country 'Utopia'.",
                "Answer": "INSERT INTO Addresses (address_id, address_details, city, zip_postcode, state_province_county, country) VALUES (16, '1234 Happy St Apt 101', 'Joytown', '98765', 'Bliss', 'Utopia')"
            },
            {
                "User": "Please link the new address id 16 to customer id 2 starting from today and mark the address type as 'Flat'.",
                "Answer": "INSERT INTO Customer_Addresses (customer_id, address_id, date_from, address_type) VALUES (2, 16, CURRENT_DATE, 'Flat')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 116,
        "db": "tvshow",
        "interaction": [
            {
                "User": "Can we add a new TV channel to the database? The values for id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, High_definition_TV, Pay_per_view_PPV, Package_Option are '729', 'Adventure Time', 'USA', 'English', 'animation', '16:9', 'yes', 'no', 'Cartoon Network'.",
                "Answer": "INSERT INTO TV_Channel (id, series_name, Country, Language, Content, Pixel_aspect_ratio_PAR, Hight_definition_TV, Pay_per_view_PPV, Package_Option) VALUES ('729', 'Adventure Time', 'USA', 'English', 'animation', '16:9', 'yes', 'no', 'Cartoon Network');"
            },
            {
                "User": "I'd like to update the Pixel_aspect_ratio_PAR of the 'Sky Music' channel from '4:3' to '16:9'.",
                "Answer": "UPDATE TV_Channel SET Pixel_aspect_ratio_PAR = '16:9' WHERE series_name = 'Sky Music';"
            },
            {
                "User": "Can we create a table to track the genres of TV series?",
                "Answer": "CREATE TABLE TV_Genre (GenreId number PRIMARY KEY, GenreName text);"
            },
            {
                "User": "How about adding a column to track the genre of each TV series?",
                "Answer": "ALTER TABLE TV_series ADD GenreId number;"
            },
            {
                "User": "Can we insert a new genre into the TV_Genre table? GenreId and GenreName can be 1, 'Drama'.",
                "Answer": "INSERT INTO TV_Genre (GenreId, GenreName) VALUES (1, 'Drama');"
            },
            {
                "User": "Let's update the genre for a specific TV series. Can we set the genre of the TV series with id 1 to be 'Drama'?",
                "Answer": "UPDATE TV_series SET GenreId = 1 WHERE id = 1.0;"
            },
            {
                "User": "How can I list all TV series along with their genres?",
                "Answer": "SELECT T1.Episode, T2.GenreName FROM TV_series AS T1 JOIN TV_Genre AS T2 ON T1.GenreId = T2.GenreId;"
            },
            {
                "User": "Can we track the directors of each cartoon in a new table?",
                "Answer": "CREATE TABLE Cartoon_Directors (DirectorId number PRIMARY KEY, DirectorName text);"
            },
            {
                "User": "Let's add a column for the director ID in the Cartoon table.",
                "Answer": "ALTER TABLE Cartoon ADD DirectorId number;"
            },
            {
                "User": "Can we insert the director data for 'Ben Jones'? DirectorId and DirectorName can be 101, 'Ben Jones'.",
                "Answer": "INSERT INTO Cartoon_Directors (DirectorId, DirectorName) VALUES (101, 'Ben Jones');"
            },
            {
                "User": "Please update the DirectorId for the cartoon titled 'The Rise of the Blue Beetle!' to match Ben Jones' ID.",
                "Answer": "UPDATE Cartoon SET DirectorId = 101 WHERE Title = 'The Rise of the Blue Beetle!';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 117,
        "db": "concert_singer",
        "interaction": [
            {
                "User": "Can we add a new stadium with ID 12, located in 'Madrid', named 'Grand Arena', with a capacity of 50000, and ticket price ranges from 50 to 250?",
                "Answer": "INSERT INTO stadium (Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average) VALUES (12, 'Madrid', 'Grand Arena', 50000, 250, 50, (250+50)/2);"
            },
            {
                "User": "I'd like to update the capacity of 'Stark's Park' to 15000. Can we do that?",
                "Answer": "UPDATE stadium SET Capacity = 15000 WHERE Name = 'Stark''s Park';"
            },
            {
                "User": "Can we create a table to track the genres of songs by different singers?",
                "Answer": "CREATE TABLE song_genre (Genre_ID number PRIMARY KEY, Singer_ID number, Genre text, FOREIGN KEY (Singer_ID) REFERENCES singer(Singer_ID));"
            },
            {
                "User": "How about adding a column for the date of the last renovation for each stadium?",
                "Answer": "ALTER TABLE stadium ADD Last_Renovation_year text;"
            },
            {
                "User": "Can we insert a new concert with ID 7, named 'Global Music Fest', themed 'Pop Hits', in stadium ID 3, for the year 2023?",
                "Answer": "INSERT INTO concert (concert_ID, concert_Name, Theme, Stadium_ID, Year) VALUES (7, 'Global Music Fest', 'Pop Hits', '3', '2023');"
            },
            {
                "User": "Let's update the song name for singer ID 2 to 'Morning Light'.",
                "Answer": "UPDATE singer SET Song_Name = 'Morning Light' WHERE Singer_ID = 2;"
            },
            {
                "User": "Can you list all the concerts happening in 'Somerset Park'?",
                "Answer": "SELECT concert_Name FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Name = 'Somerset Park';"
            },
            {
                "User": "Let's add singer ID 4 to the 'Global Music Fest' concert.",
                "Answer": "INSERT INTO singer_in_concert (concert_ID, Singer_ID) VALUES (7, '4');"
            },
            {
                "User": "Can we increase the lowest ticket price for all stadiums by 10?",
                "Answer": "UPDATE stadium SET Lowest = Lowest + 10;"
            },
            {
                "User": "I want to know the average age of singers from the United States.",
                "Answer": "SELECT AVG(Age) FROM singer WHERE Country = 'United States';"
            },
            {
                "User": "Let's add the genre 'Pop' for singer ID 1 to the song_genre table.",
                "Answer": "INSERT INTO song_genre (Genre_ID, Singer_ID, Genre) VALUES (1, 1, 'Pop');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 118,
        "db": "employee_hire_evaluation",
        "interaction": [
            {
                "User": "Can we add a new employee with the details: Employee_ID 11, Name 'Sarah Johnson', Age 30, City 'London'?",
                "Answer": "INSERT INTO employee (Employee_ID, Name, Age, City) VALUES (11, 'Sarah Johnson', 30, 'London');"
            },
            {
                "User": "The shop with Shop_ID 2 has increased its number of products to 12000. Can we update this in the database?",
                "Answer": "UPDATE shop SET Number_products = 12000 WHERE Shop_ID = 2;"
            },
            {
                "User": "Can we create a table to keep track of employee salaries?",
                "Answer": "CREATE TABLE employee_salary (Employee_ID number PRIMARY KEY, Salary number, FOREIGN KEY (Employee_ID) REFERENCES employee(Employee_ID));"
            },
            {
                "User": "Let's add a new column to the shop table to indicate if it's open on weekends. Can we do that?",
                "Answer": "ALTER TABLE shop ADD Open_on_weekends others;"
            },
            {
                "User": "I want to record that the shop with Shop_ID 3 is open on weekends. How do we insert this information?",
                "Answer": "UPDATE shop SET Open_on_weekends = 'Y' WHERE Shop_ID = 3;"
            },
            {
                "User": "Can we set the salary for employee with Employee_ID 1 to 50000?",
                "Answer": "INSERT INTO employee_salary (Employee_ID, Salary) VALUES (1, 50000);"
            },
            {
                "User": "How can we retrieve the list of shops that are open on weekends?",
                "Answer": "SELECT Name, Location FROM shop WHERE Open_on_weekends = 'Y';"
            },
            {
                "User": "Let's update the manager of the shop with Shop_ID 1 to 'John Smith'. Can you do that?",
                "Answer": "UPDATE shop SET Manager_name = 'John Smith' WHERE Shop_ID = 1;"
            },
            {
                "User": "Can we add a new hiring record for Employee_ID 11 to Shop_ID 4 starting from 2023 and it's a full-time position?",
                "Answer": "INSERT INTO hiring (Shop_ID, Employee_ID, Start_from, Is_full_time) VALUES (4, 11, '2023', 'T');"
            },
            {
                "User": "I need to correct the year awarded for employee with Employee_ID 1 for the bonus of 2900.0. It should be 2017, not 2016.",
                "Answer": "UPDATE evaluation SET Year_awarded = '2017' WHERE Employee_ID = '1' AND Bonus = 2900.0;"
            },
            {
                "User": "Can we find out the total bonus awarded to employees in Bristol?",
                "Answer": "SELECT SUM(e.Bonus) FROM evaluation e JOIN employee emp ON e.Employee_ID = emp.Employee_ID WHERE emp.City = 'Bristol';"
            },
            {
                "User": "Let's add a column for the department in the employee table. How do we do that?",
                "Answer": "ALTER TABLE employee ADD Department text;"
            },
            {
                "User": "Assign 'Sales' department to the employee with Employee_ID 2. How can we update this?",
                "Answer": "UPDATE employee SET Department = 'Sales' WHERE Employee_ID = 2;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 119,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new course to the database with the details: course_id 16, course_name 'quantum computing', and course_description 'Introduction to quantum computing principles'?",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description) VALUES (16, 'quantum computing', 'Introduction to quantum computing principles');"
            },
            {
                "User": "I want to update the email address of student Timmothy Ward to 'timmothy.ward@example.edu'. What is the SQL statement for that?",
                "Answer": "UPDATE Students SET email_address = 'timmothy.ward@example.edu' WHERE first_name = 'Timmothy' AND last_name = 'Ward';"
            },
            {
                "User": "Can we create a new table to keep track of instructors with columns for id, first_name, last_name, and department_id?",
                "Answer": "CREATE TABLE Instructors (instructor_id number PRIMARY KEY, first_name text, last_name text, department_id number, FOREIGN KEY (department_id) REFERENCES Departments(department_id));"
            },
            {
                "User": "Let's add a column to the Students table to track their major department_id.",
                "Answer": "ALTER TABLE Students ADD major_department_id number;"
            },
            {
                "User": "Insert the following instructor data: instructor_id 1, first_name 'Alice', last_name 'Smith', department_id 1.",
                "Answer": "INSERT INTO Instructors (instructor_id, first_name, last_name, department_id) VALUES (1, 'Alice', 'Smith', 1);"
            },
            {
                "User": "Update the department description of the art department to 'Studies focused on visual and performing arts'.",
                "Answer": "UPDATE Departments SET department_description = 'Studies focused on visual and performing arts' WHERE department_name = 'art';"
            },
            {
                "User": "How can I retrieve the list of all courses under the computer science department?",
                "Answer": "SELECT C.course_id, C.course_name FROM Courses C JOIN Degree_Programs DP ON C.course_id = DP.department_id JOIN Departments D ON DP.department_id = D.department_id WHERE D.department_name = 'computer science';"
            },
            {
                "User": "Can we add a student's GPA to the Student_Enrolment table?",
                "Answer": "ALTER TABLE Student_Enrolment ADD gpa decimal(3, 2);"
            },
            {
                "User": "Set the GPA of the student with enrolment id 1 to 3.5.",
                "Answer": "UPDATE Student_Enrolment SET gpa = 3.5 WHERE student_enrolment_id = 1;"
            },
            {
                "User": "Create a table to store information about the rooms where each section takes place, including room_id, building_name, and capacity.",
                "Answer": "CREATE TABLE Rooms (room_id number PRIMARY KEY, building_name text, capacity number);"
            },
            {
                "User": "Add a foreign key column to the Sections table to reference the room where the section is held.",
                "Answer": "ALTER TABLE Sections ADD room_id number REFERENCES Rooms(room_id);"
            },
            {
                "User": "Insert a new record into the Rooms table with room_id 101, building_name 'Science Hall', and capacity 120.",
                "Answer": "INSERT INTO Rooms (room_id, building_name, capacity) VALUES (101, 'Science Hall', 120);"
            },
            {
                "User": "Link section_id 1 to the room_id 101 in the Sections table.",
                "Answer": "UPDATE Sections SET room_id = 101 WHERE section_id = 1;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 120,
        "db": "concert_singer",
        "interaction": [
            {
                "User": "Can we add a new concert event to the database? The concert_id, concert_name, theme, stadium_id, and year are 7, 'Rock Night', 'Classic Rock', 3, '2023'",
                "Answer": "INSERT INTO concert (concert_ID, concert_Name, Theme, Stadium_ID, Year) VALUES (7, 'Rock Night', 'Classic Rock', 3, '2023');"
            },
            {
                "User": "I'd like to update the capacity of Stark's Park stadium to 15000. Can we do that?",
                "Answer": "UPDATE stadium SET Capacity = 15000 WHERE Name = 'Stark''s Park';"
            },
            {
                "User": "Can we create a table to track ticket sales for each concert?",
                "Answer": "CREATE TABLE ticket_sales (Sale_ID number PRIMARY KEY, Concert_ID number, Tickets_Sold number, Sale_Date text, FOREIGN KEY (Concert_ID) REFERENCES concert(concert_ID));"
            },
            {
                "User": "How about adding a column to keep track of the genre for each singer?",
                "Answer": "ALTER TABLE singer ADD Genre text;"
            },
            {
                "User": "Can we insert ticket sales data for concert id 1? Sale_ID, Concert_ID, Tickets_Sold, Sale_Date can be assigned to 101, 1, 5000, '2023-04-01'",
                "Answer": "INSERT INTO ticket_sales (Sale_ID, Concert_ID, Tickets_Sold, Sale_Date) VALUES (101, 1, 5000, '2023-04-01');"
            },
            {
                "User": "Let's update the song name for singer id 2 to 'Apologize'. Can we do that?",
                "Answer": "UPDATE singer SET Song_Name = 'Apologize' WHERE Singer_ID = 2;"
            },
            {
                "User": "Can we add a record for a singer in concert? The concert id is 2 and the singer id is 4.",
                "Answer": "INSERT INTO singer_in_concert (concert_ID, Singer_ID) VALUES (2, '4');"
            },
            {
                "User": "Can we list all concerts along with the number of tickets sold for each?",
                "Answer": "SELECT c.concert_Name, IFNULL(SUM(ts.Tickets_Sold), 0) AS Total_Tickets_Sold FROM concert AS c LEFT JOIN ticket_sales AS ts ON c.concert_ID = ts.Concert_ID GROUP BY c.concert_ID;"
            },
            {
                "User": "What if we want to track the duration of each concert? Can we add a 'Duration' column to the concert table?",
                "Answer": "ALTER TABLE concert ADD Duration number;"
            },
            {
                "User": "Could you update the genre of singer Joe Sharp to 'Pop'?",
                "Answer": "UPDATE singer SET Genre = 'Pop' WHERE Name = 'Joe Sharp';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 121,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new student to the database with the following details: student_id 16, current_address_id 1, permanent_address_id 1, first_name 'Alice', middle_name 'B', last_name 'Carroll', cell_mobile_number '555-1234', email_address 'alice.carroll@example.edu', ssn '123-45-6789', date_first_registered '2023-01-15 08:00:00', date_left NULL, other_student_details 'New transfer student.'?",
                "Answer": "INSERT INTO Students (student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details) VALUES (16, 1, 1, 'Alice', 'B', 'Carroll', '555-1234', 'alice.carroll@example.edu', '123-45-6789', '2023-01-15 08:00:00', NULL, 'New transfer student.');"
            },
            {
                "User": "I need to update the course name for course_id 2 from 'math' to 'Mathematics'.",
                "Answer": "UPDATE Courses SET course_name = 'Mathematics' WHERE course_id = 2;"
            },
            {
                "User": "Can we create a new table to keep track of student attendance?",
                "Answer": "CREATE TABLE Student_Attendance (attendance_id number PRIMARY KEY, student_id number, section_id number, date_attended time, status text, FOREIGN KEY (student_id) REFERENCES Students(student_id), FOREIGN KEY (section_id) REFERENCES Sections(section_id));"
            },
            {
                "User": "Let's add a column for the GPA in the Students table. Can you do that?",
                "Answer": "ALTER TABLE Students ADD gpa number;"
            },
            {
                "User": "Please insert a new record in the Student_Attendance table for student_id 1, section_id 1, date_attended '2023-03-01 09:00:00', status 'Present'.",
                "Answer": "INSERT INTO Student_Attendance (attendance_id, student_id, section_id, date_attended, status) VALUES ((SELECT COALESCE(MAX(attendance_id), 0) + 1 FROM Student_Attendance), 1, 1, '2023-03-01 09:00:00', 'Present');"
            },
            {
                "User": "The student with student_id 3 has improved their GPA to 3.8. Can we update this information?",
                "Answer": "UPDATE Students SET gpa = 3.8 WHERE student_id = 3;"
            },
            {
                "User": "Can you show me a list of all students and their GPAs?",
                "Answer": "SELECT first_name, last_name, gpa FROM Students;"
            },
            {
                "User": "We need to correct the zip_postcode for address_id 2. It should be '94043'.",
                "Answer": "UPDATE Addresses SET zip_postcode = '94043' WHERE address_id = 2;"
            },
            {
                "User": "Is it possible to list all courses along with the department names they belong to?",
                "Answer": "SELECT T1.course_name, T2.department_name FROM Courses AS T1 JOIN Departments AS T2 ON T1.course_id = T2.department_id;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 122,
        "db": "real_estate_properties",
        "interaction": [
            {
                "User": "Can we add a new property type for commercial spaces?",
                "Answer": "INSERT INTO Ref_Property_Types (property_type_code, property_type_description) VALUES ('Commercial', 'Commercial spaces like shops, offices, etc.');"
            },
            {
                "User": "I'd like to update the agreed selling price for property id 2 to 22000000.",
                "Answer": "UPDATE Properties SET agreed_selling_price = 22000000 WHERE property_id = 2;"
            },
            {
                "User": "Can we create a table to track property inspections?",
                "Answer": "CREATE TABLE Property_Inspections (inspection_id number PRIMARY KEY, property_id number, inspection_date time, inspector_name text, inspection_notes text, FOREIGN KEY (property_id) REFERENCES Properties(property_id));"
            },
            {
                "User": "How about adding a column for the year the property was built?",
                "Answer": "ALTER TABLE Properties ADD year_built number;"
            },
            {
                "User": "Can we insert an inspection record for property id 1? The inspection id, date, inspector's name, and notes can be 101, '2023-04-01 10:00:00', 'John Doe', 'Property in good condition, minor repairs needed.'",
                "Answer": "INSERT INTO Property_Inspections (inspection_id, property_id, inspection_date, inspector_name, inspection_notes) VALUES (101, 1, '2023-04-01 10:00:00', 'John Doe', 'Property in good condition, minor repairs needed.');"
            },
            {
                "User": "Let's update the number of rooms for property id 3 to 10.",
                "Answer": "UPDATE Properties SET room_count = 10 WHERE property_id = 3;"
            },
            {
                "User": "Can we add a feature to the Other_Available_Features table? The feature id, type, name, and description can be 10, 'Amenity', 'Gym', 'Fitness Gym'.",
                "Answer": "INSERT INTO Other_Available_Features (feature_id, feature_type_code, feature_name, feature_description) VALUES (10, 'Amenity', 'Gym', 'Fitness Gym');"
            },
            {
                "User": "How can I get a list of all properties with their type descriptions and names?",
                "Answer": "SELECT P.property_name, PT.property_type_description FROM Properties AS P JOIN Ref_Property_Types AS PT ON P.property_type_code = PT.property_type_code;"
            },
            {
                "User": "Can you show me all properties that have a pool feature?",
                "Answer": "SELECT P.property_name FROM Properties AS P JOIN Other_Property_Features AS OPF ON P.property_id = OPF.property_id JOIN Other_Available_Features AS OAF ON OPF.feature_id = OAF.feature_id WHERE OAF.feature_name = 'Pool';"
            },
            {
                "User": "I want to record the selling agent for each property. Can we add a column for that?",
                "Answer": "ALTER TABLE Properties ADD selling_agent text;"
            },
            {
                "User": "Let's assign 'Jane Smith' as the selling agent for property id 1.",
                "Answer": "UPDATE Properties SET selling_agent = 'Jane Smith' WHERE property_id = 1;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 123,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? The values for ID, Name, CountryCode, District, and Population are 4080, 'Newtown', 'NWT', 'New District', 50000",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'Newtown', 'NWT', 'New District', 50000);"
            },
            {
                "User": "I want to update the population of Kabul to reflect the new census. The new population is 1800000.",
                "Answer": "UPDATE city SET Population = 1800000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Can we create a new table to keep track of tourist visits to each country?",
                "Answer": "CREATE TABLE country_tourism (TourismId number PRIMARY KEY, CountryCode text, Year number, TouristVisits number, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "How about adding a column for GDP per capita to the country table?",
                "Answer": "ALTER TABLE country ADD GDPPerCapita number;"
            },
            {
                "User": "Let's insert the tourism data for Aruba for the year 2023. TourismId, CountryCode, Year, TouristVisits can be 101, 'ABW', 2023, 1000000",
                "Answer": "INSERT INTO country_tourism (TourismId, CountryCode, Year, TouristVisits) VALUES (101, 'ABW', 2023, 1000000);"
            },
            {
                "User": "Can we update the GDP per capita for Afghanistan? Let's set it to 500.",
                "Answer": "UPDATE country SET GDPPerCapita = 500 WHERE Code = 'AFG';"
            },
            {
                "User": "I need a list of all countries along with their GDP per capita.",
                "Answer": "SELECT Name, GDPPerCapita FROM country;"
            },
            {
                "User": "Can we add a new official language for Angola in the countrylanguage table? The values for CountryCode, Language, IsOfficial, and Percentage are 'AGO', 'Spanish', 'F', 5.0.",
                "Answer": "INSERT INTO countrylanguage (CountryCode, Language, IsOfficial, Percentage) VALUES ('AGO', 'Spanish', 'F', 5.0);"
            },
            {
                "User": "Let's correct the government form of Angola to 'Presidential Republic'.",
                "Answer": "UPDATE country SET GovernmentForm = 'Presidential Republic' WHERE Code = 'AGO';"
            },
            {
                "User": "Can we see which countries have a life expectancy greater than 75 and a GDP per capita greater than 20000?",
                "Answer": "SELECT Name FROM country WHERE LifeExpectancy > 75 AND GDPPerCapita > 20000;"
            },
            {
                "User": "Is it possible to track the changes in population for each city? I'd like to add a new table for this purpose.",
                "Answer": "CREATE TABLE city_population_history (HistoryId number PRIMARY KEY, CityId number, Year number, Population number, FOREIGN KEY (CityId) REFERENCES city(ID));"
            },
            {
                "User": "Please insert a historical population record for Kabul for the year 2020. HistoryId, CityId, Year, Population can be 201, 1, 2020, 1770000.",
                "Answer": "INSERT INTO city_population_history (HistoryId, CityId, Year, Population) VALUES (201, 1, 2020, 1770000);"
            },
            {
                "User": "I'd like to create a view that shows countries with their official languages and population for easier access.",
                "Answer": "CREATE VIEW country_official_languages AS SELECT c.Name, cl.Language, c.Population FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.IsOfficial = 'T';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 124,
        "db": "flight_2",
        "interaction": [
            {
                "User": "Can we add a new airline to the database? The values for uid, Airline, Abbreviation, and Country are 13, 'Global Air', 'GLO', 'Canada'",
                "Answer": "INSERT INTO airlines (uid, Airline, Abbreviation, Country) VALUES (13, 'Global Air', 'GLO', 'Canada');"
            },
            {
                "User": "I'd like to correct the abbreviation for Delta Airlines. Can we update it to 'DAL'?",
                "Answer": "UPDATE airlines SET Abbreviation = 'DAL' WHERE Airline = 'Delta Airlines';"
            },
            {
                "User": "Can we create a table to track the maintenance schedules for each aircraft?",
                "Answer": "CREATE TABLE aircraft_maintenance (MaintenanceId number PRIMARY KEY, Airline number, AircraftNo text, MaintenanceDate date, FOREIGN KEY (Airline) REFERENCES airlines(uid));"
            },
            {
                "User": "How about adding a column to the flights table to track the plane type?",
                "Answer": "ALTER TABLE flights ADD PlaneType text;"
            },
            {
                "User": "Can we insert a maintenance record? MaintenanceId, Airline, AircraftNo, MaintenanceDate can be 101, 2, 'A320', '2023-06-15'",
                "Answer": "INSERT INTO aircraft_maintenance (MaintenanceId, Airline, AircraftNo, MaintenanceDate) VALUES (101, 2, 'A320', '2023-06-15');"
            },
            {
                "User": "Let's update the country for US Airways to 'United States'.",
                "Answer": "UPDATE airlines SET Country = 'United States' WHERE Airline = 'US Airways';"
            },
            {
                "User": "Can we add a new airport in the database? The values for City, AirportCode, AirportName, Country, CountryAbbrev are 'Newtown', 'NTC', 'Newtown International', 'Narnia', 'NA'",
                "Answer": "INSERT INTO airports (City, AirportCode, AirportName, Country, CountryAbbrev) VALUES ('Newtown', 'NTC', 'Newtown International', 'Narnia', 'NA');"
            },
            {
                "User": "How can I list all flights from Aberdeen with the plane type included?",
                "Answer": "SELECT T1.FlightNo, T1.PlaneType FROM flights AS T1 JOIN airports AS T2 ON T1.SourceAirport = T2.AirportCode WHERE T2.City = 'Aberdeen';"
            },
            {
                "User": "I want to update the destination airport for flight number 28 to 'NTC'.",
                "Answer": "UPDATE flights SET DestAirport = 'NTC' WHERE FlightNo = 28;"
            },
            {
                "User": "Can we list all airlines with their total number of flights and include Global Air in the results even if they have no flights?",
                "Answer": "SELECT T1.Airline, COALESCE(T2.TotalFlights, 0) AS TotalFlights FROM airlines AS T1 LEFT JOIN (SELECT Airline, COUNT(*) AS TotalFlights FROM flights GROUP BY Airline) AS T2 ON T1.uid = T2.Airline;"
            },
            {
                "User": "Can we track the number of passengers for each flight? Let's add a column for that.",
                "Answer": "ALTER TABLE flights ADD Passengers number;"
            },
            {
                "User": "Let's insert the number of passengers for flight number 29. The count is 120.",
                "Answer": "UPDATE flights SET Passengers = 120 WHERE FlightNo = 29;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 125,
        "db": "dog_kennels",
        "interaction": [
            {
                "User": "Can we add a new breed to the database? The breed code and breed name are 'LAB', 'Labrador'.",
                "Answer": "INSERT INTO Breeds (breed_code, breed_name) VALUES ('LAB', 'Labrador');"
            },
            {
                "User": "I'd like to update the charge amount for 'Daily Accommodation'. Can we change it to 120?",
                "Answer": "UPDATE Charges SET charge_amount = 120 WHERE charge_type = 'Daily Accommodation';"
            },
            {
                "User": "Can we create a table to track the adoption status of the dogs?",
                "Answer": "CREATE TABLE Adoption_Status (adoption_status_id number PRIMARY KEY, dog_id number, status text, adoption_date time, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id));"
            },
            {
                "User": "How about adding a column to track the microchip number for each dog?",
                "Answer": "ALTER TABLE Dogs ADD microchip_number text;"
            },
            {
                "User": "Can we insert a new charge for 'Grooming' with an amount of 150?",
                "Answer": "INSERT INTO Charges (charge_id, charge_type, charge_amount) VALUES (4, 'Grooming', 150);"
            },
            {
                "User": "Let's update the size description for code 'MED' to be 'Medium to Large'.",
                "Answer": "UPDATE Sizes SET size_description = 'Medium to Large' WHERE size_code = 'MED';"
            },
            {
                "User": "Can we add a new owner to the database? The values for owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number are 16, 'John', 'Doe', '123 Main St', 'Anytown', 'Anystate', '12345', 'john.doe@example.com', '555-1234', '555-5678'.",
                "Answer": "INSERT INTO Owners (owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number) VALUES (16, 'John', 'Doe', '123 Main St', 'Anytown', 'Anystate', '12345', 'john.doe@example.com', '555-1234', '555-5678');"
            },
            {
                "User": "How can I list all dogs along with their breed names?",
                "Answer": "SELECT D.dog_id, D.name, B.breed_name FROM Dogs AS D JOIN Breeds AS B ON D.breed_code = B.breed_code;"
            },
            {
                "User": "Can we insert a new treatment type called 'Dental Care' with a code 'DENT'?",
                "Answer": "INSERT INTO Treatment_Types (treatment_type_code, treatment_type_description) VALUES ('DENT', 'Dental Care');"
            },
            {
                "User": "Let's update the email address for the professional with id 2 to be 'jayson.ullrich@example.com'.",
                "Answer": "UPDATE Professionals SET email_address = 'jayson.ullrich@example.com' WHERE professional_id = 2;"
            },
            {
                "User": "Can we insert a record in the Adoption_Status table for dog_id 1 with status 'Adopted' and adoption_date '2023-04-01'?",
                "Answer": "INSERT INTO Adoption_Status (adoption_status_id, dog_id, status, adoption_date) VALUES (1, 1, 'Adopted', '2023-04-01');"
            },
            {
                "User": "Can we add a new column 'special_needs' to the Dogs table to indicate if they require special care?",
                "Answer": "ALTER TABLE Dogs ADD special_needs text;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 126,
        "db": "wta_1",
        "interaction": [
            {
                "User": "Can we add a new player to the database with the following details: player_id 220673, first_name 'Naomi', last_name 'Osaka', hand 'R', birth_date '19971016', country_code 'JPN'?",
                "Answer": "INSERT INTO players (player_id, first_name, last_name, hand, birth_date, country_code) VALUES (220673, 'Naomi', 'Osaka', 'R', 19971016, 'JPN');"
            },
            {
                "User": "I noticed a mistake in a player's hand preference. Can we change the hand for player_id 200002 from 'R' to 'L'?",
                "Answer": "UPDATE players SET hand = 'L' WHERE player_id = 200002;"
            },
            {
                "User": "Can we create a table to track the coaches of each player?",
                "Answer": "CREATE TABLE coaches (coach_id number PRIMARY KEY, player_id number, first_name text, last_name text, FOREIGN KEY (player_id) REFERENCES players(player_id));"
            },
            {
                "User": "Let's add a column for the height of the players in centimeters.",
                "Answer": "ALTER TABLE players ADD height_cm number;"
            },
            {
                "User": "We need to insert the height for a player. Let's say player_id 200001 has a height of 169 cm.",
                "Answer": "UPDATE players SET height_cm = 169 WHERE player_id = 200001;"
            },
            {
                "User": "Can we update the tourney_name to 'WTA Finals' for the tourney_id '2013-W-WT-TUR-01A-2013'?",
                "Answer": "UPDATE matches SET tourney_name = 'WTA Finals' WHERE tourney_id = '2013-W-WT-TUR-01A-2013';"
            },
            {
                "User": "I want to see players and their coaches. Could you provide that list?",
                "Answer": "SELECT p.first_name, p.last_name, c.first_name AS coach_first_name, c.last_name AS coach_last_name FROM players AS p JOIN coaches AS c ON p.player_id = c.player_id;"
            },
            {
                "User": "Let's add a new match record. The details are as follows: best_of 3, draw_size 8, loser_age 28, loser_hand 'R', loser_ht 180, loser_id 200004, loser_ioc 'JPN', loser_name 'Naomi Osaka', loser_rank 10, loser_rank_points 3000, loser_seed 2, match_num 500, minutes 120, round 'F', score '6-4 3-6 7-5', surface 'Hard', tourney_date 20230101, tourney_id '2023-W-WT-001', tourney_level 'G', tourney_name 'Australian Open', winner_age 30, winner_hand 'R', winner_ht 178, winner_id 200001, winner_ioc 'SUI', winner_name 'Martina Hingis', winner_rank 5, winner_rank_points 5000, winner_seed 1, year 2023.",
                "Answer": "INSERT INTO matches (best_of, draw_size, loser_age, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year) VALUES (3, 8, 28, 'R', 180, 200004, 'JPN', 'Naomi Osaka', 10, 3000, 2, 500, 120, 'F', '6-4 3-6 7-5', 'Hard', 20230101, '2023-W-WT-001', 'G', 'Australian Open', 30, 'R', 178, 200001, 'SUI', 'Martina Hingis', 5, 5000, 1, 2023);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 127,
        "db": "flight_2",
        "interaction": [
            {
                "User": "Can we add a new airline called 'SkyHigh' with abbreviation 'SKH' based in 'Canada'?",
                "Answer": "INSERT INTO airlines (uid, Airline, Abbreviation, Country) VALUES ((SELECT MAX(uid) + 1 FROM airlines), 'SkyHigh', 'SKH', 'Canada');"
            },
            {
                "User": "I want to correct the country abbreviation for 'Phillips AAF' airport from 'US ' to 'USA'.",
                "Answer": "UPDATE airports SET CountryAbbrev = 'USA' WHERE AirportCode = 'APG';"
            },
            {
                "User": "Can we create a table to keep track of flight delays with columns for FlightNo, Date, DelayMinutes?",
                "Answer": "CREATE TABLE flight_delays (FlightNo number, Date text, DelayMinutes number, PRIMARY KEY (FlightNo, Date));"
            },
            {
                "User": "Let's add a column to the flights table to indicate whether it's an international flight.",
                "Answer": "ALTER TABLE flights ADD International boolean;"
            },
            {
                "User": "Please insert a new flight delay record for FlightNo 28 on '2023-03-15' with a delay of 45 minutes.",
                "Answer": "INSERT INTO flight_delays (FlightNo, Date, DelayMinutes) VALUES (28, '2023-03-15', 45);"
            },
            {
                "User": "Update the international status of flight number 29 to true.",
                "Answer": "UPDATE flights SET International = true WHERE FlightNo = 29;"
            },
            {
                "User": "Can we record a new airport in 'Toronto' with the code 'YYZ', named 'Pearson Intl', in 'Canada' with the abbreviation 'CA'?",
                "Answer": "INSERT INTO airports (City, AirportCode, AirportName, Country, CountryAbbrev) VALUES ('Toronto', 'YYZ', 'Pearson Intl', 'Canada', 'CA');"
            },
            {
                "User": "How can I find all flights that were delayed for more than 30 minutes on '2023-03-15'?",
                "Answer": "SELECT * FROM flights AS F JOIN flight_delays AS FD ON F.FlightNo = FD.FlightNo WHERE FD.Date = '2023-03-15' AND FD.DelayMinutes > 30;"
            },
            {
                "User": "Update the airline name from 'US Airways' to 'American Airlines' for uid 2.",
                "Answer": "UPDATE airlines SET Airline = 'American Airlines' WHERE uid = 2;"
            },
            {
                "User": "Can we add a column to track the number of terminals for each airport?",
                "Answer": "ALTER TABLE airports ADD Terminals number;"
            },
            {
                "User": "Set the number of terminals for 'Phillips AAF' airport to 2.",
                "Answer": "UPDATE airports SET Terminals = 2 WHERE AirportCode = 'APG';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 128,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new student to the database with the following details: first name 'Alice', middle name 'B', last name 'Cooper', cell number '555-1234', email 'alice.cooper@example.com', SSN '789-56-1234', registered on '2023-01-01 08:00:00', with current address id 2 and permanent address id 3?",
                "Answer": "INSERT INTO Students (first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, current_address_id, permanent_address_id) VALUES ('Alice', 'B', 'Cooper', '555-1234', 'alice.cooper@example.com', '789-56-1234', '2023-01-01 08:00:00', 2, 3);"
            },
            {
                "User": "I need to update the course description for the course with id 2 to 'Advanced Mathematics'. Can you do that?",
                "Answer": "UPDATE Courses SET course_description = 'Advanced Mathematics' WHERE course_id = 2;"
            },
            {
                "User": "Can we create a new table to keep track of instructors with columns for instructor_id, first_name, last_name, and department_id?",
                "Answer": "CREATE TABLE Instructors (instructor_id number PRIMARY KEY, first_name text, last_name text, department_id number, FOREIGN KEY (department_id) REFERENCES Departments(department_id));"
            },
            {
                "User": "Let's add a new column to the Semesters table to indicate whether the semester is currently active. The column should be named 'is_active' and of type 'boolean'.",
                "Answer": "ALTER TABLE Semesters ADD is_active boolean;"
            },
            {
                "User": "Can we insert a new department into the Departments table? The department name is 'Physics' with a description 'Study of matter and energy'.",
                "Answer": "INSERT INTO Departments (department_name, department_description) VALUES ('Physics', 'Study of matter and energy');"
            },
            {
                "User": "Please update the email address of the student with student_id 3 to 'warren.gleichner@example.com'.",
                "Answer": "UPDATE Students SET email_address = 'warren.gleichner@example.com' WHERE student_id = 3;"
            },
            {
                "User": "Can we create a table for student grades with columns for student_course_id, grade, and grade_date?",
                "Answer": "CREATE TABLE Student_Grades (student_course_id number, grade text, grade_date time, FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses(student_course_id));"
            },
            {
                "User": "I'd like to add a new semester called 'Winter 2023' with the description 'First quarter of the year'. Can we also set it as currently active?",
                "Answer": "INSERT INTO Semesters (semester_name, semester_description, is_active) VALUES ('Winter 2023', 'First quarter of the year', TRUE);"
            },
            {
                "User": "Let's update the 'other_details' column for the first record in the Addresses table to 'Apartment complex near downtown'.",
                "Answer": "UPDATE Addresses SET other_address_details = 'Apartment complex near downtown' WHERE address_id = 1;"
            },
            {
                "User": "How can I retrieve a list of all active semesters?",
                "Answer": "SELECT * FROM Semesters WHERE is_active = TRUE;"
            },
            {
                "User": "Can we insert a grade for a student_course_id 1 with the grade 'A-' and the date '2023-04-15'?",
                "Answer": "INSERT INTO Student_Grades (student_course_id, grade, grade_date) VALUES (1, 'A-', '2023-04-15');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 129,
        "db": "pets_1",
        "interaction": [
            {
                "User": "Can we add a new student to the database? The student's StuID, LName, Fname, Age, Sex, Major, Advisor, and city_code are 1040, 'Brown', 'Charlie', 20, 'M', 601, 1122, 'NYC'",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1040, 'Brown', 'Charlie', 20, 'M', 601, 1122, 'NYC');"
            },
            {
                "User": "I'd like to update the major for Linda Smith to 601. Can we do that?",
                "Answer": "UPDATE Student SET Major = 601 WHERE StuID = 1001;"
            },
            {
                "User": "Can we create a table to track the pet vaccinations? The columns should be VaccinationID, PetID, VaccinationDate, and VaccineType",
                "Answer": "CREATE TABLE pet_vaccinations (VaccinationID number PRIMARY KEY, PetID number, VaccinationDate date, VaccineType text, FOREIGN KEY (PetID) REFERENCES Pets(PetID));"
            },
            {
                "User": "How about adding a column to track the students' email addresses?",
                "Answer": "ALTER TABLE Student ADD Email text;"
            },
            {
                "User": "Can we insert vaccination data for a pet? VaccinationID, PetID, VaccinationDate, VaccineType can be assigned to 3001, 2001, '2023-04-01', 'Rabies'",
                "Answer": "INSERT INTO pet_vaccinations (VaccinationID, PetID, VaccinationDate, VaccineType) VALUES (3001, 2001, '2023-04-01', 'Rabies');"
            },
            {
                "User": "Let's update the weight for the cat with PetID 2001 to 13.5 pounds.",
                "Answer": "UPDATE Pets SET weight = 13.5 WHERE PetID = 2001;"
            },
            {
                "User": "How can I list all pets along with their vaccination dates and types?",
                "Answer": "SELECT T1.PetID, T1.PetType, T2.VaccinationDate, T2.VaccineType FROM Pets AS T1 JOIN pet_vaccinations AS T2 ON T1.PetID = T2.PetID;"
            },
            {
                "User": "I want to record a new pet for Tracy Kim. The pet's PetID, PetType, pet_age, and weight are 2004, 'bird', 1, 0.5",
                "Answer": [
                    "INSERT INTO Pets (PetID, PetType, pet_age, weight) VALUES (2004, 'bird', 1, 0.5);",
                    " INSERT INTO Has_Pet (StuID, PetID) VALUES (1002, 2004);"
                ]
            },
            {
                "User": "Can we add a new column to the Pets table to indicate if a pet is spayed or neutered?",
                "Answer": "ALTER TABLE Pets ADD SpayedNeutered boolean;"
            },
            {
                "User": "Please update the record to indicate that the dog with PetID 2002 is spayed.",
                "Answer": "UPDATE Pets SET SpayedNeutered = TRUE WHERE PetID = 2002;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 130,
        "db": "museum_visit",
        "interaction": [
            {
                "User": "Can we add a new museum to the database? The values for Museum_ID, Name, Num_of_Staff, Open_Year are 9, 'Modern Art Museum', 40, '2021'",
                "Answer": "INSERT INTO museum (Museum_ID, Name, Num_of_Staff, Open_Year) VALUES (9, 'Modern Art Museum', 40, '2021');"
            },
            {
                "User": "I'd like to update the number of staff for the 'Plaza Museum'. Can we set it to 65?",
                "Answer": "UPDATE museum SET Num_of_Staff = 65 WHERE Name = 'Plaza Museum';"
            },
            {
                "User": "Can we create a table to track the special exhibitions hosted by each museum?",
                "Answer": "CREATE TABLE special_exhibitions (Exhibition_ID number PRIMARY KEY, Museum_ID number, Exhibition_Name text, Start_Date text, End_Date text, FOREIGN KEY (Museum_ID) REFERENCES museum(Museum_ID));"
            },
            {
                "User": "How about adding a column to track the number of visits for each visitor?",
                "Answer": "ALTER TABLE visitor ADD Num_of_Visits number;"
            },
            {
                "User": "Can we insert a record for a new visitor? The ID, Name, Level_of_membership, Age, Num_of_Visits can be assigned to 7, 'Lionel Messi', 2, 34, 1",
                "Answer": "INSERT INTO visitor (ID, Name, Level_of_membership, Age, Num_of_Visits) VALUES (7, 'Lionel Messi', 2, 34, 1);"
            },
            {
                "User": "Let's update the total spent for visitor ID 5 at museum ID 1 to be 500.50",
                "Answer": "UPDATE visit SET Total_spent = 500.50 WHERE visitor_ID = '5' AND Museum_ID = 1;"
            },
            {
                "User": "Can we add a new special exhibition for the 'Plaza Museum' with the details Exhibition_ID, Museum_ID, Exhibition_Name, Start_Date, End_Date as 101, 1, 'Impressionist Wonders', '2023-06-01', '2023-09-01'?",
                "Answer": "INSERT INTO special_exhibitions (Exhibition_ID, Museum_ID, Exhibition_Name, Start_Date, End_Date) VALUES (101, 1, 'Impressionist Wonders', '2023-06-01', '2023-09-01');"
            },
            {
                "User": "I want to list all museums and their corresponding number of special exhibitions.",
                "Answer": "SELECT m.Name, COUNT(e.Exhibition_ID) AS Num_Exhibitions FROM museum AS m LEFT JOIN special_exhibitions AS e ON m.Museum_ID = e.Museum_ID GROUP BY m.Museum_ID;"
            },
            {
                "User": "Can we see which visitors are over 30 years old and have more than 1 visit?",
                "Answer": "SELECT Name, Age FROM visitor WHERE Age > 30 AND Num_of_Visits > 1;"
            },
            {
                "User": "Let's record a new visit. Can you insert data for Museum_ID, visitor_ID, Num_of_Ticket, Total_spent as 2, '4', 3, 150.75?",
                "Answer": "INSERT INTO visit (Museum_ID, visitor_ID, Num_of_Ticket, Total_spent) VALUES (2, '4', 3, 150.75);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 131,
        "db": "flight_2",
        "interaction": [
            {
                "User": "Can we add a new airline to the database? The new airline's uid, Airline, Abbreviation, and Country are 13, 'SkyHigh', 'SH', 'Canada'",
                "Answer": "INSERT INTO airlines (uid, Airline, Abbreviation, Country) VALUES (13, 'SkyHigh', 'SH', 'Canada');"
            },
            {
                "User": "I'd like to update the abbreviation for Delta Airlines to 'DL'. What's the SQL for that?",
                "Answer": "UPDATE airlines SET Abbreviation = 'DL' WHERE Airline = 'Delta Airlines';"
            },
            {
                "User": "Can we create a new table to track the frequent flyer programs for each airline?",
                "Answer": "CREATE TABLE frequent_flyer_programs (ProgramId number PRIMARY KEY, AirlineId number, ProgramName text, PointsEarned number, FOREIGN KEY (AirlineId) REFERENCES airlines(uid));"
            },
            {
                "User": "How about adding a column to track the number of terminals in each airport?",
                "Answer": "ALTER TABLE airports ADD Terminals number;"
            },
            {
                "User": "Can we insert frequent flyer program data? ProgramId, AirlineId, ProgramName, PointsEarned can be 101, 1, 'MileagePlus', 5000",
                "Answer": "INSERT INTO frequent_flyer_programs (ProgramId, AirlineId, ProgramName, PointsEarned) VALUES (101, 1, 'MileagePlus', 5000);"
            },
            {
                "User": "Let's update the number of terminals for airport code 'ABR'. Can we set it to 3?",
                "Answer": "UPDATE airports SET Terminals = 3 WHERE AirportCode = 'ABR';"
            },
            {
                "User": "How can I list all airlines along with their frequent flyer programs?",
                "Answer": "SELECT a.Airline, ffp.ProgramName FROM airlines AS a JOIN frequent_flyer_programs AS ffp ON a.uid = ffp.AirlineId;"
            },
            {
                "User": "I want to add a new flight. The values for Airline, FlightNo, SourceAirport, DestAirport are 2, 1500, 'APG', 'DYS'",
                "Answer": "INSERT INTO flights (Airline, FlightNo, SourceAirport, DestAirport) VALUES (2, 1500, 'APG', 'DYS');"
            },
            {
                "User": "Can we change the destination airport for flight number 29 of airline 1 to 'ABR'?",
                "Answer": "UPDATE flights SET DestAirport = 'ABR' WHERE Airline = 1 AND FlightNo = 29;"
            },
            {
                "User": "What are the countries for airports with more than one terminal?",
                "Answer": "SELECT Country FROM airports WHERE Terminals > 1;"
            },
            {
                "User": "Can we create a view to show airlines and their total number of flights?",
                "Answer": "CREATE VIEW airline_flight_counts AS SELECT a.Airline, COUNT(f.FlightNo) AS TotalFlights FROM airlines AS a JOIN flights AS f ON a.uid = f.Airline GROUP BY a.Airline;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 132,
        "db": "orchestra",
        "interaction": [
            {
                "User": "Can we add a new conductor to the database? The values for the new conductor of Conductor_ID, Name, Age, Nationality, Year_of_Work are 13, 'Gustavo Dudamel', 39, 'Venezuela', 12",
                "Answer": "INSERT INTO conductor (Conductor_ID, Name, Age, Nationality, Year_of_Work) VALUES (13, 'Gustavo Dudamel', 39, 'Venezuela', 12);"
            },
            {
                "User": "I'd like to update the record company for the London Symphony Orchestra. Can we change it to 'Deutsche Grammophon'?",
                "Answer": "UPDATE orchestra SET Record_Company = 'Deutsche Grammophon' WHERE Orchestra = 'London Symphony Orchestra';"
            },
            {
                "User": "Can we create a table to track the awards won by each orchestra?",
                "Answer": "CREATE TABLE orchestra_awards (Award_ID number PRIMARY KEY, Orchestra_ID number, Award_Name text, Year number, FOREIGN KEY (Orchestra_ID) REFERENCES orchestra(Orchestra_ID));"
            },
            {
                "User": "How about adding a column to track the genre of music each orchestra specializes in?",
                "Answer": "ALTER TABLE orchestra ADD Genre text;"
            },
            {
                "User": "Can we insert a new performance data? Performance_ID, Orchestra_ID, Type, Date, Official_ratings_(millions), Weekly_rank, Share can be asigned to 12, 1, 'Finals', '12 June', 8.5, '1', '35.0%'",
                "Answer": "INSERT INTO performance (Performance_ID, Orchestra_ID, Type, Date, \"Official_ratings_(millions)\", Weekly_rank, Share) VALUES (12, 1, 'Finals', '12 June', 8.5, '1', '35.0%');"
            },
            {
                "User": "Let's update the attendance for the first show at Glebe Park to be 1500.",
                "Answer": "UPDATE show SET Attendance = 1500 WHERE Show_ID = 1;"
            },
            {
                "User": "How can I find the total number of performances for each orchestra?",
                "Answer": "SELECT T1.Orchestra, COUNT(T2.Performance_ID) AS Total_Performances FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID GROUP BY T1.Orchestra;"
            },
            {
                "User": "Can we add a record for an award won by the Royal Concertgebouw Orchestra? Award_ID, Orchestra_ID, Award_Name, Year can be 101, 3, 'Grammy', 2021",
                "Answer": "INSERT INTO orchestra_awards (Award_ID, Orchestra_ID, Award_Name, Year) VALUES (101, 3, 'Grammy', 2021);"
            },
            {
                "User": "I want to update the Major Record Format for all orchestras founded before 2005 to 'Digital'.",
                "Answer": "UPDATE orchestra SET Major_Record_Format = 'Digital' WHERE Year_of_Founded < 2005;"
            },
            {
                "User": "Can we list the orchestras that have won a 'Grammy' award?",
                "Answer": "SELECT T1.Orchestra FROM orchestra AS T1 JOIN orchestra_awards AS T2 ON T1.Orchestra_ID = T2.Orchestra_ID WHERE T2.Award_Name = 'Grammy';"
            },
            {
                "User": "I'm interested in the genre of music for the Columbia Symphony Orchestra. Can we set it to 'Classical'?",
                "Answer": "UPDATE orchestra SET Genre = 'Classical' WHERE Orchestra = 'Columbia Symphony Orchestra';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 133,
        "db": "battle_death",
        "interaction": [
            {
                "User": "Can we add a new record for a battle that occurred on 15 August 1205 with the name 'Battle of Philippopolis', where the Bulgarian commander was 'Ivan Asen I' and the Latin commander was 'Henry of Flanders' and the result was a 'Bulgarian victory'?",
                "Answer": "INSERT INTO battle (id, name, date, bulgarian_commander, latin_commander, result) VALUES (9, 'Battle of Philippopolis', '15 August 1205', 'Ivan Asen I', 'Henry of Flanders', 'Bulgarian victory');"
            },
            {
                "User": "The result of the Battle of Adrianople should be corrected to 'Decisive Bulgarian victory'. Can we update that?",
                "Answer": "UPDATE battle SET result = 'Decisive Bulgarian victory' WHERE name = 'Battle of Adrianople';"
            },
            {
                "User": "We need to track the number of ships lost in each battle. Can we create a new table for this purpose?",
                "Answer": "CREATE TABLE battle_ship_loss (battle_id number, ship_count number, FOREIGN KEY (battle_id) REFERENCES battle(id));"
            },
            {
                "User": "Let's add a record to the battle_ship_loss table indicating that 5 ships were lost in the Battle of Adrianople.",
                "Answer": "INSERT INTO battle_ship_loss (battle_id, ship_count) VALUES (1, 5);"
            },
            {
                "User": "Can we add a column to the death table to indicate the date of the incident?",
                "Answer": "ALTER TABLE death ADD incident_date text;"
            },
            {
                "User": "Let's update the incident date for the record with id 1 to '14 April 1205'.",
                "Answer": "UPDATE death SET incident_date = '14 April 1205' WHERE id = 1;"
            },
            {
                "User": "I'd like to see a list of all battles with their corresponding ship losses. Can we join the battle and battle_ship_loss tables?",
                "Answer": "SELECT b.name, b.date, b.result, bsl.ship_count FROM battle AS b LEFT JOIN battle_ship_loss AS bsl ON b.id = bsl.battle_id;"
            },
            {
                "User": "The ship 'Lettice' was actually not captured but sunk. Can we update this in the database?",
                "Answer": "UPDATE ship SET disposition_of_ship = 'Sunk' WHERE name = 'Lettice';"
            },
            {
                "User": "How many people were killed by the ship with id 2?",
                "Answer": "SELECT SUM(killed) FROM death WHERE caused_by_ship_id = 2;"
            },
            {
                "User": "Can we track the origin port for each ship? I want to add a new column to the ship table.",
                "Answer": "ALTER TABLE ship ADD origin_port text;"
            },
            {
                "User": "Let's set the origin port for the ship 'Mary' to 'London'.",
                "Answer": "UPDATE ship SET origin_port = 'London' WHERE name = 'Mary';"
            },
            {
                "User": "I need to add a new ship with id 10, named 'Victory', tonnage 't', type 'Frigate', location 'Mediterranean Sea', and disposition 'Active'.",
                "Answer": "INSERT INTO ship (lost_in_battle, id, name, tonnage, ship_type, location, disposition_of_ship) VALUES (NULL, 10, 'Victory', 't', 'Frigate', 'Mediterranean Sea', 'Active');"
            },
            {
                "User": "Can we create a table to log the repairs done to each ship?",
                "Answer": "CREATE TABLE ship_repairs (repair_id number PRIMARY KEY, ship_id number, repair_date text, repair_description text, FOREIGN KEY (ship_id) REFERENCES ship(id));"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 134,
        "db": "concert_singer",
        "interaction": [
            {
                "User": "Can we add a new stadium to the database with the following details: ID 12, Location 'Glasgow', Name 'Glasgow Arena', Capacity 50000, Highest 25000, Lowest 1500, Average 10000?",
                "Answer": "INSERT INTO stadium (Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average) VALUES (12, 'Glasgow', 'Glasgow Arena', 50000, 25000, 1500, 10000);"
            },
            {
                "User": "I'd like to update the capacity of 'Stark's Park' to 15000. Can we do that?",
                "Answer": "UPDATE stadium SET Capacity = 15000 WHERE Name = 'Stark''s Park';"
            },
            {
                "User": "Can we create a new table to keep track of ticket prices for concerts?",
                "Answer": "CREATE TABLE ticket_prices (Price_ID number PRIMARY KEY, concert_ID number, Min_price number, Max_price number, FOREIGN KEY (concert_ID) REFERENCES concert(concert_ID));"
            },
            {
                "User": "How about adding a new column to track the genre of each singer?",
                "Answer": "ALTER TABLE singer ADD Genre text;"
            },
            {
                "User": "Let's insert a new singer with the following details: Singer_ID 7, Name 'Adele', Country 'UK', Song_Name 'Hello', Song_release_year '2015', Age 33, Is_male 'F', Genre 'Pop'",
                "Answer": "INSERT INTO singer (Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male, Genre) VALUES (7, 'Adele', 'UK', 'Hello', '2015', 33, 'F', 'Pop');"
            },
            {
                "User": "Can we update the theme of the concert with ID 3 to 'Pop hits'?",
                "Answer": "UPDATE concert SET Theme = 'Pop hits' WHERE concert_ID = 3;"
            },
            {
                "User": "How can I get a list of all concerts along with their minimum and maximum ticket prices?",
                "Answer": "SELECT T1.concert_Name, T2.Min_price, T2.Max_price FROM concert AS T1 JOIN ticket_prices AS T2 ON T1.concert_ID = T2.concert_ID;"
            },
            {
                "User": "Can we add a concert to the database? The details are concert_ID 7, concert_Name 'Summer Blast', Theme 'Summer Party', Stadium_ID '3', Year '2023'",
                "Answer": "INSERT INTO concert (concert_ID, concert_Name, Theme, Stadium_ID, Year) VALUES (7, 'Summer Blast', 'Summer Party', '3', '2023');"
            },
            {
                "User": "Let's add ticket price details for the 'Summer Blast' concert we just added. Assume the prices are Min_price 50 and Max_price 200.",
                "Answer": "INSERT INTO ticket_prices (Price_ID, concert_ID, Min_price, Max_price) VALUES (1, 7, 50, 200);"
            },
            {
                "User": "I want to correct the genre of singer with ID 2 to 'Hip-Hop'. How do we do that?",
                "Answer": "UPDATE singer SET Genre = 'Hip-Hop' WHERE Singer_ID = 2;"
            },
            {
                "User": "Could we list all singers who are from 'United States' and perform Pop music?",
                "Answer": "SELECT Name FROM singer WHERE Country = 'United States' AND Genre = 'Pop';"
            },
            {
                "User": "Is it possible to add a column for the duration of the concert in hours to the concert table?",
                "Answer": "ALTER TABLE concert ADD Duration_hours number;"
            },
            {
                "User": "Can we set the duration of the 'Summer Blast' concert to 5 hours?",
                "Answer": "UPDATE concert SET Duration_hours = 5 WHERE concert_Name = 'Summer Blast';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 135,
        "db": "car_1",
        "interaction": [
            {
                "User": "Can we add a new country to the database? The country's name is 'Spain' and it is located in Europe.",
                "Answer": "INSERT INTO countries (CountryId, CountryName, Continent) VALUES (16, 'Spain', 2);"
            },
            {
                "User": "Can we update the country name for 'usa' to 'United States'?",
                "Answer": "UPDATE countries SET CountryName = 'United States' WHERE CountryId = 1;"
            },
            {
                "User": "I want to create a table for car colors. Can you help me with that?",
                "Answer": "CREATE TABLE car_colors (ColorId number PRIMARY KEY, ColorName text);"
            },
            {
                "User": "Let's add a new column to the car_makers table to store the year they were established.",
                "Answer": "ALTER TABLE car_makers ADD YearEstablished number;"
            },
            {
                "User": "Can we insert a new car model into the model_list? The model is 'Model X' by maker id 2.",
                "Answer": "INSERT INTO model_list (ModelId, Maker, Model) VALUES (37, 2, 'Model X');"
            },
            {
                "User": "Can we update the maker name from 'volkswagen' to 'Volkswagen AG' for maker id 2?",
                "Answer": "UPDATE car_makers SET Maker = 'Volkswagen AG' WHERE Id = 2;"
            },
            {
                "User": "How can I get a list of all car models with their maker's full name and country?",
                "Answer": "SELECT T3.Model, T1.FullName, T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId JOIN model_list AS T3 ON T1.Id = T3.Maker;"
            },
            {
                "User": "I'd like to add a record to the car_names table. The MakeId, Model, and Make are 407, 'tesla', 'tesla model s'.",
                "Answer": "INSERT INTO car_names (MakeId, Model, Make) VALUES (407, 'tesla', 'tesla model s');"
            },
            {
                "User": "Can we track the inventory of cars? We need a new table for that.",
                "Answer": "CREATE TABLE car_inventory (InventoryId number PRIMARY KEY, ModelId number, Quantity number, FOREIGN KEY (ModelId) REFERENCES model_list(ModelId));"
            },
            {
                "User": "Let's update the MPG of car id 1 to '22'.",
                "Answer": "UPDATE cars_data SET MPG = '22' WHERE Id = 1;"
            },
            {
                "User": "Can we insert a new continent into the continents table? The continent's name is 'Oceania'.",
                "Answer": "INSERT INTO continents (ContId, Continent) VALUES (6, 'Oceania');"
            },
            {
                "User": "Can we add a new column to track the type of drive (e.g., FWD, RWD, AWD) for each car in the cars_data table?",
                "Answer": "ALTER TABLE cars_data ADD DriveType text;"
            },
            {
                "User": "Let's insert a new car color. The ColorId and ColorName can be 1 and 'Red'.",
                "Answer": "INSERT INTO car_colors (ColorId, ColorName) VALUES (1, 'Red');"
            },
            {
                "User": "Can we update the year established for 'American Motor Company' to 1954, assuming its Id is 1?",
                "Answer": "UPDATE car_makers SET YearEstablished = 1954 WHERE Id = 1;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 136,
        "db": "dog_kennels",
        "interaction": [
            {
                "User": "Can we add a new breed to the database? The breed code and name are 'LAB', 'Labrador'.",
                "Answer": "INSERT INTO Breeds (breed_code, breed_name) VALUES ('LAB', 'Labrador');"
            },
            {
                "User": "I'd like to change the charge amount for 'Daily Accommodation' to 120.",
                "Answer": "UPDATE Charges SET charge_amount = 120 WHERE charge_type = 'Daily Accommodation';"
            },
            {
                "User": "Can we create a table to keep track of each dog's vaccinations?",
                "Answer": "CREATE TABLE Vaccinations (vaccination_id number PRIMARY KEY, dog_id number, vaccination_date time, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id));"
            },
            {
                "User": "Let's add a column to track the preferred food brand for each dog.",
                "Answer": "ALTER TABLE Dogs ADD preferred_food_brand text;"
            },
            {
                "User": "Can we insert a new charge type for 'Grooming' with a charge amount of 150?",
                "Answer": "INSERT INTO Charges (charge_id, charge_type, charge_amount) VALUES ((SELECT MAX(charge_id) + 1 FROM Charges), 'Grooming', 150);"
            },
            {
                "User": "Let's update the size description for 'MED' to 'Medium to Large'.",
                "Answer": "UPDATE Sizes SET size_description = 'Medium to Large' WHERE size_code = 'MED';"
            },
            {
                "User": "How can I list all dogs with their breed names and sizes?",
                "Answer": "SELECT D.name, B.breed_name, S.size_description FROM Dogs AS D JOIN Breeds AS B ON D.breed_code = B.breed_code JOIN Sizes AS S ON D.size_code = S.size_code;"
            },
            {
                "User": "Can we insert a new treatment type called 'Dental Cleaning' with a description?",
                "Answer": "INSERT INTO Treatment_Types (treatment_type_code, treatment_type_description) VALUES ('DENT', 'Dental Cleaning');"
            },
            {
                "User": "I want to add a new owner to the database. The owner's details are: id 16, first name 'Alex', last name 'Smith', living in '1234 Maple St, Springfield, IL, 62704', email 'alex.smith@example.com', home phone '555-1234', cell '555-5678'.",
                "Answer": "INSERT INTO Owners (owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number) VALUES (16, 'Alex', 'Smith', '1234 Maple St', 'Springfield', 'IL', '62704', 'alex.smith@example.com', '555-1234', '555-5678');"
            },
            {
                "User": "Can we record a new treatment for dog id 5 with professional id 2, type 'VAC' and cost 200 on today's date?",
                "Answer": "INSERT INTO Treatments (treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment) VALUES ((SELECT MAX(treatment_id) + 1 FROM Treatments), 5, 2, 'VAC', CURRENT_DATE, 200);"
            },
            {
                "User": "Let's update the email address for the owner with id 3 to 'jaclyn.s@example.net'.",
                "Answer": "UPDATE Owners SET email_address = 'jaclyn.s@example.net' WHERE owner_id = 3;"
            },
            {
                "User": "How about creating a table to record adoption dates for each dog?",
                "Answer": "CREATE TABLE Adoption_Records (adoption_id number PRIMARY KEY, dog_id number, adoption_date time, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id));"
            },
            {
                "User": "Can we add a column to the Professionals table to include their professional license number?",
                "Answer": "ALTER TABLE Professionals ADD license_number text;"
            },
            {
                "User": "I want to insert an adoption record for dog id 2 on March 30, 2023.",
                "Answer": "INSERT INTO Adoption_Records (adoption_id, dog_id, adoption_date) VALUES ((SELECT MAX(adoption_id) + 1 FROM Adoption_Records), 2, '2023-03-30');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 137,
        "db": "wta_1",
        "interaction": [
            {
                "User": "Can we add a new player to the database? Their details are player_id 220673, first_name 'Naomi', last_name 'Osaka', hand 'R', birth_date '19971016', and country_code 'JPN'.",
                "Answer": "INSERT INTO players (player_id, first_name, last_name, hand, birth_date, country_code) VALUES (220673, 'Naomi', 'Osaka', 'R', 19971016, 'JPN');"
            },
            {
                "User": "I'd like to update the hand preference for player_id 200002 from 'R' to 'L'. Can we do that?",
                "Answer": "UPDATE players SET hand = 'L' WHERE player_id = 200002;"
            },
            {
                "User": "Can we create a new table to track the injuries of players?",
                "Answer": "CREATE TABLE injuries (injury_id number PRIMARY KEY, player_id number, injury_date time, injury_type text, recovery_time number, FOREIGN KEY (player_id) REFERENCES players(player_id));"
            },
            {
                "User": "How about adding a column 'height' to the players table to track the height of the players?",
                "Answer": "ALTER TABLE players ADD height number;"
            },
            {
                "User": "Can we insert injury data for a player? The injury_id, player_id, injury_date, injury_type, and recovery_time are 1001, 200003, 20230115, 'Ankle Sprain', 30.",
                "Answer": "INSERT INTO injuries (injury_id, player_id, injury_date, injury_type, recovery_time) VALUES (1001, 200003, 20230115, 'Ankle Sprain', 30);"
            },
            {
                "User": "Let's update the height for a specific player. Can we set the height of player_id 200001 to be 168 cm?",
                "Answer": "UPDATE players SET height = 168 WHERE player_id = 200001;"
            },
            {
                "User": "How can I list all players along with their height?",
                "Answer": "SELECT first_name, last_name, height FROM players;"
            },
            {
                "User": "Can we create a table to store the end-of-year rankings for each player?",
                "Answer": "CREATE TABLE year_end_rankings (year number, player_id number, year_end_rank number, FOREIGN KEY (player_id) REFERENCES players(player_id));"
            },
            {
                "User": "Insert the year-end rankings for three players. The values are (2022, 200001, 5), (2022, 200002, 15), (2022, 200003, 25).",
                "Answer": "INSERT INTO year_end_rankings (year, player_id, year_end_rank) VALUES (2022, 200001, 5), (2022, 200002, 15), (2022, 200003, 25);"
            },
            {
                "User": "Can we compare the current rankings with the year-end rankings for players?",
                "Answer": "SELECT p.first_name, p.last_name, r.ranking, yer.year_end_rank FROM players p JOIN rankings r ON p.player_id = r.player_id JOIN year_end_rankings yer ON p.player_id = yer.player_id WHERE yer.year = 2022;"
            },
            {
                "User": "Can we add a column to track the number of wins for each player in the matches table?",
                "Answer": "ALTER TABLE matches ADD player_wins number;"
            },
            {
                "User": "Let's update the number of wins for player_id 200033 in the matches table to be 20.",
                "Answer": "UPDATE matches SET player_wins = 20 WHERE winner_id = 200033;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 138,
        "db": "flight_2",
        "interaction": [
            {
                "User": "Can we add a new airline to the database? The values for the new airline of uid, Airline, Abbreviation, Country are 13, 'SkyHigh', 'SKH', 'Wonderland'",
                "Answer": "INSERT INTO airlines (uid, Airline, Abbreviation, Country) VALUES (13, 'SkyHigh', 'SKH', 'Wonderland');"
            },
            {
                "User": "I'd like to update the abbreviation for 'United Airlines'. Can we change it to 'UNITED'?",
                "Answer": "UPDATE airlines SET Abbreviation = 'UNITED' WHERE Airline = 'United Airlines';"
            },
            {
                "User": "Can we create a table to track the annual passenger count for each flight?",
                "Answer": "CREATE TABLE flight_passenger_count (CountId number PRIMARY KEY, FlightNo number, Year number, PassengerCount number, FOREIGN KEY (FlightNo) REFERENCES flights(FlightNo));"
            },
            {
                "User": "How about adding a column to track whether the airport is international or not?",
                "Answer": "ALTER TABLE airports ADD IsInternational boolean;"
            },
            {
                "User": "Can we insert the annual passenger count for flight number 28? CountId, FlightNo, Year, PassengerCount can be assigned to 101, 28, 2023, 15000",
                "Answer": "INSERT INTO flight_passenger_count (CountId, FlightNo, Year, PassengerCount) VALUES (101, 28, 2023, 15000);"
            },
            {
                "User": "Let's update the international status of the airport with code 'ABR' to be true.",
                "Answer": "UPDATE airports SET IsInternational = true WHERE AirportCode = 'ABR';"
            },
            {
                "User": "Can we see a list of all airlines along with the countries they are from?",
                "Answer": "SELECT Airline, Country FROM airlines;"
            },
            {
                "User": "Is it possible to add a new flight to the database? The flight details are Airline 13, FlightNo 300, SourceAirport 'ABR', DestAirport 'DYS'.",
                "Answer": "INSERT INTO flights (Airline, FlightNo, SourceAirport, DestAirport) VALUES (13, 300, 'ABR', 'DYS');"
            },
            {
                "User": "I need to correct the country for 'SkyHigh' airline to 'Neverland'. How do I update that?",
                "Answer": "UPDATE airlines SET Country = 'Neverland' WHERE Airline = 'SkyHigh';"
            },
            {
                "User": "How can I retrieve the total number of passengers for flights departing from 'APG' in 2023?",
                "Answer": "SELECT sum(PassengerCount) FROM flight_passenger_count AS T1 JOIN flights AS T2 ON T1.FlightNo = T2.FlightNo WHERE T2.SourceAirport = 'APG' AND T1.Year = 2023;"
            },
            {
                "User": "I'm interested in knowing if 'Phillips AAF' airport is international. Can you provide that information?",
                "Answer": "SELECT IsInternational FROM airports WHERE AirportName = 'Phillips AAF';"
            },
            {
                "User": "We should add a column to track the baggage claim area for each flight. How do we do that?",
                "Answer": "ALTER TABLE flights ADD BaggageClaim text;"
            },
            {
                "User": "Let's assign the baggage claim area 'A3' to flight number 28.",
                "Answer": "UPDATE flights SET BaggageClaim = 'A3' WHERE FlightNo = 28;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 139,
        "db": "car_1",
        "interaction": [
            {
                "User": "Can we add a new country to the continents database? The values for the new country of CountryId, CountryName, Continent are 16, 'Canada', 1",
                "Answer": "INSERT INTO countries (CountryId, CountryName, Continent) VALUES (16, 'Canada', 1);"
            },
            {
                "User": "Let's update the continent for 'Germany' to be '3' since we are considering reclassification. What would the update statement look like?",
                "Answer": "UPDATE countries SET Continent = 3 WHERE CountryName = 'Germany';"
            },
            {
                "User": "I need to correct the MPG for car with Id 2 to '16'. Can you provide the SQL statement?",
                "Answer": "UPDATE cars_data SET MPG = '16' WHERE Id = 2;"
            },
            {
                "User": "Can we create a table to track the maintenance history of each car model?",
                "Answer": "CREATE TABLE maintenance_history (MaintenanceId number PRIMARY KEY, CarId number, ServiceDate date, Description text, FOREIGN KEY (CarId) REFERENCES cars_data(Id));"
            },
            {
                "User": "How about adding a column to track the emission standards in the cars_data table?",
                "Answer": "ALTER TABLE cars_data ADD EmissionStandard text;"
            },
            {
                "User": "Can we insert a maintenance record for car Id 1? MaintenanceId, CarId, ServiceDate, Description can be assigned to 101, 1, '2023-04-01', 'Oil change'",
                "Answer": "INSERT INTO maintenance_history (MaintenanceId, CarId, ServiceDate, Description) VALUES (101, 1, '2023-04-01', 'Oil change');"
            },
            {
                "User": "Let's update the emission standard for car Id 3 to 'Euro 6'.",
                "Answer": "UPDATE cars_data SET EmissionStandard = 'Euro 6' WHERE Id = 3;"
            },
            {
                "User": "Can we list all car makers along with the number of models they have produced?",
                "Answer": "SELECT T1.FullName, COUNT(T2.Model) AS NumberOfModels FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id = T2.Maker GROUP BY T1.FullName;"
            },
            {
                "User": "What is the average weight of cars produced in the year 1970?",
                "Answer": "SELECT AVG(Weight) FROM cars_data WHERE Year = 1970;"
            },
            {
                "User": "Can we add a new car model to the list? The values for ModelId, Maker, Model are 37, 1, 'amc rebel'",
                "Answer": "INSERT INTO model_list (ModelId, Maker, Model) VALUES (37, 1, 'amc rebel');"
            },
            {
                "User": "I'd like to change the model name from 'bmw' to 'BMW 3 Series' for ModelId 3.",
                "Answer": "UPDATE model_list SET Model = 'BMW 3 Series' WHERE ModelId = 3;"
            },
            {
                "User": "Can we create a new table to track the features of each car model?",
                "Answer": "CREATE TABLE car_features (FeatureId number PRIMARY KEY, ModelId number, Feature text, FOREIGN KEY (ModelId) REFERENCES model_list(ModelId));"
            },
            {
                "User": "Let's add a column to store the number of doors for each car in the cars_data table.",
                "Answer": "ALTER TABLE cars_data ADD NumberOfDoors number;"
            },
            {
                "User": "Can we insert the feature data for a specific model? FeatureId, ModelId, Feature can be assigned to 201, 15, 'Sunroof'",
                "Answer": "INSERT INTO car_features (FeatureId, ModelId, Feature) VALUES (201, 15, 'Sunroof');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 140,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new course to the database? The course_id, course_name, and course_description are 16, 'Introduction to Databases', 'This course provides an overview of database systems'.",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description) VALUES (16, 'Introduction to Databases', 'This course provides an overview of database systems');"
            },
            {
                "User": "We need to update the course description for the course with id 3. Could you change it to 'Operating Systems Concepts'?",
                "Answer": "UPDATE Courses SET course_description = 'Operating Systems Concepts' WHERE course_id = 3;"
            },
            {
                "User": "Can we create a new table to keep track of the instructors for each course?",
                "Answer": "CREATE TABLE Instructors (instructor_id number PRIMARY KEY, first_name text, last_name text, email_address text, department_id number, FOREIGN KEY (department_id) REFERENCES Departments(department_id));"
            },
            {
                "User": "I'd like to add a new address for a student. Can we insert the following details: address_id, line_1, city, zip_postcode, country are 16, '1234 University Way', 'College Town', '12345', 'USA'?",
                "Answer": "INSERT INTO Addresses (address_id, line_1, city, zip_postcode, country) VALUES (16, '1234 University Way', 'College Town', '12345', 'USA');"
            },
            {
                "User": "Can we update the last name of student with student_id 1 to 'Smith'?",
                "Answer": "UPDATE Students SET last_name = 'Smith' WHERE student_id = 1;"
            },
            {
                "User": "Let's add a new column to track the number of credits for each course. How can we do that?",
                "Answer": "ALTER TABLE Courses ADD credits number;"
            },
            {
                "User": "Can we insert a new department into the database? The department_id, department_name, and department_description are 16, 'Data Science', 'The study of data analysis, including statistics and machine learning'.",
                "Answer": "INSERT INTO Departments (department_id, department_name, department_description) VALUES (16, 'Data Science', 'The study of data analysis, including statistics and machine learning');"
            },
            {
                "User": "I've noticed we don't have a way to track the grades for each student's course. Can we create a table for that?",
                "Answer": "CREATE TABLE Grades (grade_id number PRIMARY KEY, student_course_id number, grade text, FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses(student_course_id));"
            },
            {
                "User": "Let's update the semester_name for semester_id 2 to 'Summer 2010 - Session A'.",
                "Answer": "UPDATE Semesters SET semester_name = 'Summer 2010 - Session A' WHERE semester_id = 2;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 141,
        "db": "flight_2",
        "interaction": [
            {
                "User": "Can we add a new airline to the database? The values for uid, Airline, Abbreviation, and Country are 13, 'SkyHigh', 'SKH', 'Canada'.",
                "Answer": "INSERT INTO airlines (uid, Airline, Abbreviation, Country) VALUES (13, 'SkyHigh', 'SKH', 'Canada');"
            },
            {
                "User": "I'd like to correct the country abbreviation for the Aberdeen Municipal airport. Can we change it from 'US' to 'USA'?",
                "Answer": "UPDATE airports SET CountryAbbrev = 'USA' WHERE AirportCode = 'ABR';"
            },
            {
                "User": "Can we create a table to track the maintenance schedule for each aircraft?",
                "Answer": "CREATE TABLE maintenance_schedule (ScheduleId number PRIMARY KEY, Airline number, AircraftId number, MaintenanceDate date, FOREIGN KEY (Airline) REFERENCES airlines(uid));"
            },
            {
                "User": "How about adding a column to track the number of seats for each flight?",
                "Answer": "ALTER TABLE flights ADD NumberOfSeats number;"
            },
            {
                "User": "Can we insert maintenance data for a specific aircraft? ScheduleId, Airline, AircraftId, MaintenanceDate can be assigned to 101, 1, 'A320', '2023-10-15'.",
                "Answer": "INSERT INTO maintenance_schedule (ScheduleId, Airline, AircraftId, MaintenanceDate) VALUES (101, 1, 'A320', '2023-10-15');"
            },
            {
                "User": "Let's update the number of seats for flight number 28 of United Airlines to 150.",
                "Answer": "UPDATE flights SET NumberOfSeats = 150 WHERE Airline = 1 AND FlightNo = 28;"
            },
            {
                "User": "Can we get a list of all airports along with the airlines that fly there?",
                "Answer": "SELECT T2.AirportName, T3.Airline FROM flights AS T1 JOIN airports AS T2 ON T1.DestAirport = T2.AirportCode JOIN airlines AS T3 ON T3.uid = T1.Airline;"
            },
            {
                "User": "I want to add a new flight. The values for Airline, FlightNo, SourceAirport, and DestAirport are 2, 301, 'APG', 'DYS'.",
                "Answer": "INSERT INTO flights (Airline, FlightNo, SourceAirport, DestAirport) VALUES (2, 301, 'APG', 'DYS');"
            },
            {
                "User": "Can we update the abbreviation for Delta Airlines to 'DL'?",
                "Answer": "UPDATE airlines SET Abbreviation = 'DL' WHERE uid = 3;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 142,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new course to the database? The course_id, course_name, and course_description are 16, 'Artificial Intelligence', 'Study of intelligent agents'.",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description) VALUES (16, 'Artificial Intelligence', 'Study of intelligent agents');"
            },
            {
                "User": "I'd like to update the course description for the 'math' course. Can we change it to 'Advanced Mathematics Studies'?",
                "Answer": "UPDATE Courses SET course_description = 'Advanced Mathematics Studies' WHERE course_name = 'math';"
            },
            {
                "User": "Can we create a new table to keep track of instructors for each course?",
                "Answer": "CREATE TABLE Instructors (instructor_id number PRIMARY KEY, first_name text, last_name text, email_address text, department_id number, FOREIGN KEY (department_id) REFERENCES Departments(department_id));"
            },
            {
                "User": "How about adding a column for the instructor's phone number to the Instructors table?",
                "Answer": "ALTER TABLE Instructors ADD phone_number text;"
            },
            {
                "User": "Can we insert a new instructor into the Instructors table? The instructor_id, first_name, last_name, email_address, department_id, and phone_number are 101, 'John', 'Doe', 'john.doe@example.edu', 1, '555-1234'.",
                "Answer": "INSERT INTO Instructors (instructor_id, first_name, last_name, email_address, department_id, phone_number) VALUES (101, 'John', 'Doe', 'john.doe@example.edu', 1, '555-1234');"
            },
            {
                "User": "Let's update the phone number for instructor_id 101 to '555-5678'.",
                "Answer": "UPDATE Instructors SET phone_number = '555-5678' WHERE instructor_id = 101;"
            },
            {
                "User": "Can we insert a new student record? The student_id, current_address_id, permanent_address_id, first_name, last_name, and email_address are 16, 4, 4, 'Alice', 'Smith', 'alice.smith@example.edu'.",
                "Answer": "INSERT INTO Students (student_id, current_address_id, permanent_address_id, first_name, last_name, email_address) VALUES (16, 4, 4, 'Alice', 'Smith', 'alice.smith@example.edu');"
            },
            {
                "User": "Update the last_name of student with student_id 2 to 'Johnson'.",
                "Answer": "UPDATE Students SET last_name = 'Johnson' WHERE student_id = 2;"
            },
            {
                "User": "Can we add a column to the Student_Enrolment table to indicate whether the enrolment is active?",
                "Answer": "ALTER TABLE Student_Enrolment ADD is_active text;"
            },
            {
                "User": "Set the enrolment status of student_enrolment_id 1 to 'Yes' indicating it is active.",
                "Answer": "UPDATE Student_Enrolment SET is_active = 'Yes' WHERE student_enrolment_id = 1;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 143,
        "db": "dog_kennels",
        "interaction": [
            {
                "User": "Can we add a new breed to the database? The breed code and name are 'LAB', 'Labrador'.",
                "Answer": "INSERT INTO Breeds (breed_code, breed_name) VALUES ('LAB', 'Labrador');"
            },
            {
                "User": "I need to correct the age of dog named Kacey to 7 years. Can you update it?",
                "Answer": "UPDATE Dogs SET age = '7' WHERE name = 'Kacey';"
            },
            {
                "User": "Can we create a table to keep track of the adoption status of each dog?",
                "Answer": "CREATE TABLE Adoption_Status (status_id number PRIMARY KEY, dog_id number, is_adopted text, adoption_date time, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id));"
            },
            {
                "User": "Let's add a column for microchip ID to the Dogs table.",
                "Answer": "ALTER TABLE Dogs ADD microchip_id text;"
            },
            {
                "User": "Can we insert the microchip ID 'A123456789' for the dog named Kacey?",
                "Answer": "UPDATE Dogs SET microchip_id = 'A123456789' WHERE name = 'Kacey';"
            },
            {
                "User": "Can we update the size description for size code 'MED' to 'Medium Size'?",
                "Answer": "UPDATE Sizes SET size_description = 'Medium Size' WHERE size_code = 'MED';"
            },
            {
                "User": "Let's add a new treatment type for grooming with code 'GRM'.",
                "Answer": "INSERT INTO Treatment_Types (treatment_type_code, treatment_type_description) VALUES ('GRM', 'Grooming');"
            },
            {
                "User": "Can we insert a new owner with the following details: owner_id 16, first_name John, last_name Doe, street '123 Main St', city 'Anytown', state 'TX', zip_code '12345', email_address 'john.doe@example.com', home_phone '555-1234', cell_number '555-5678'?",
                "Answer": "INSERT INTO Owners (owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number) VALUES (16, 'John', 'Doe', '123 Main St', 'Anytown', 'TX', '12345', 'john.doe@example.com', '555-1234', '555-5678');"
            },
            {
                "User": "I want to know the full name and email of the owner who has a dog named Mavis. Can you add a JOIN to get this info?",
                "Answer": "SELECT O.first_name || ' ' || O.last_name AS full_name, O.email_address FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id WHERE D.name = 'Mavis';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 144,
        "db": "museum_visit",
        "interaction": [
            {
                "User": "Can we add a new museum to the database? The new museum has an ID of 9, is called 'Modern Art Museum', has 40 staff members, and opened in 2021.",
                "Answer": "INSERT INTO museum (Museum_ID, Name, Num_of_Staff, Open_Year) VALUES (9, 'Modern Art Museum', 40, '2021');"
            },
            {
                "User": "I'd like to update the number of staff for 'Plaza Museum'. Can we change it to 65?",
                "Answer": "UPDATE museum SET Num_of_Staff = 65 WHERE Name = 'Plaza Museum';"
            },
            {
                "User": "Can we create a table to track the special exhibitions hosted by each museum?",
                "Answer": "CREATE TABLE special_exhibitions (Exhibition_ID number PRIMARY KEY, Museum_ID number, Exhibition_Name text, Start_Date text, End_Date text, FOREIGN KEY (Museum_ID) REFERENCES museum(Museum_ID));"
            },
            {
                "User": "How about adding a column to track the revenue generated by each museum?",
                "Answer": "ALTER TABLE museum ADD Revenue number;"
            },
            {
                "User": "Can we insert a new visitor record? The visitor's ID is 7, name is 'Leo Messi', membership level is 10, and age is 34.",
                "Answer": "INSERT INTO visitor (ID, Name, Level_of_membership, Age) VALUES (7, 'Leo Messi', 10, 34);"
            },
            {
                "User": "Let's update the total spent for visitor ID 5 at museum ID 1. Can we set it to 450.00?",
                "Answer": "UPDATE visit SET Total_spent = 450.00 WHERE visitor_ID = '5' AND Museum_ID = 1;"
            },
            {
                "User": "Can we add a record for a special exhibition that took place at the 'Modern Art Museum' with ID 9? Let's say the exhibition ID is 101, name is 'Surrealism Now', and it ran from '2022-05-01' to '2022-08-01'.",
                "Answer": "INSERT INTO special_exhibitions (Exhibition_ID, Museum_ID, Exhibition_Name, Start_Date, End_Date) VALUES (101, 9, 'Surrealism Now', '2022-05-01', '2022-08-01');"
            },
            {
                "User": "How can I list all the museums along with their total revenue?",
                "Answer": "SELECT Name, Revenue FROM museum;"
            },
            {
                "User": "Can we update the level of membership for 'Guti Midfielder' to 6?",
                "Answer": "UPDATE visitor SET Level_of_membership = 6 WHERE Name = 'Guti Midfielder';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 145,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? The details are ID 4080, Name 'NeoTokyo', CountryCode 'JPN', District 'Kanto', Population 1000000.",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'NeoTokyo', 'JPN', 'Kanto', 1000000);"
            },
            {
                "User": "I want to update the population of Kabul to reflect the latest census. The new population is 1800000.",
                "Answer": "UPDATE city SET Population = 1800000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Can we create a new table to track the languages spoken in each city?",
                "Answer": "CREATE TABLE city_language (CityID number, Language text, IsOfficial text, Percentage number, FOREIGN KEY (CityID) REFERENCES city(ID));"
            },
            {
                "User": "Let's add a column to the country table to track the currency used.",
                "Answer": "ALTER TABLE country ADD Currency text;"
            },
            {
                "User": "Insert the currency used by Japan as 'Yen'.",
                "Answer": "UPDATE country SET Currency = 'Yen' WHERE Name = 'Japan';"
            },
            {
                "User": "What is the population and currency of Japan?",
                "Answer": "SELECT Population, Currency FROM country WHERE Name = 'Japan';"
            },
            {
                "User": "Can we insert the official languages for NeoTokyo with percentages? Assume Japanese is official at 99.9% and English is non-official at 10%.",
                "Answer": "INSERT INTO city_language (CityID, Language, IsOfficial, Percentage) VALUES (4080, 'Japanese', 'T', 99.9), (4080, 'English', 'F', 10.0);"
            },
            {
                "User": "Update the government form of Afghanistan to 'Republic'.",
                "Answer": "UPDATE country SET GovernmentForm = 'Republic' WHERE Name = 'Afghanistan';"
            },
            {
                "User": "How can I get a list of all countries with their official languages and percentages?",
                "Answer": "SELECT co.Name, cl.Language, cl.Percentage FROM country co JOIN countrylanguage cl ON co.Code = cl.CountryCode WHERE cl.IsOfficial = 'T';"
            },
            {
                "User": "Can we add a new column to track the date of the last update for each city's population?",
                "Answer": "ALTER TABLE city ADD LastUpdate date;"
            },
            {
                "User": "Set today's date as the last update for the population of Kabul.",
                "Answer": "UPDATE city SET LastUpdate = CURRENT_DATE WHERE Name = 'Kabul';"
            },
            {
                "User": "Can we create a view to show each country's name, continent, and total number of cities?",
                "Answer": "CREATE VIEW country_city_count_view AS SELECT co.Name, co.Continent, COUNT(ci.ID) AS NumberOfCities FROM country co JOIN city ci ON co.Code = ci.CountryCode GROUP BY co.Code;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 146,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new course to the database? The new course details are course_id 16, course_name 'Introduction to AI', and course_description 'Basics of Artificial Intelligence'.",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description) VALUES (16, 'Introduction to AI', 'Basics of Artificial Intelligence');"
            },
            {
                "User": "I'd like to change the description of the 'os' course. Can we update it to 'Operating System Concepts'?",
                "Answer": "UPDATE Courses SET course_description = 'Operating System Concepts' WHERE course_name = 'os';"
            },
            {
                "User": "Can we create a new table to store information about instructors?",
                "Answer": "CREATE TABLE Instructors (instructor_id number PRIMARY KEY, first_name text, last_name text, department_id number, FOREIGN KEY (department_id) REFERENCES Departments(department_id));"
            },
            {
                "User": "How about adding a column to track the GPA for each student?",
                "Answer": "ALTER TABLE Students ADD gpa number;"
            },
            {
                "User": "Can we insert a new student into the database? The student details are student_id 16, current_address_id 1, permanent_address_id 1, first_name 'Alice', middle_name 'B', last_name 'Carter', cell_mobile_number '123-456-7890', email_address 'alice.carter@example.com', ssn '987-65-4321', date_first_registered '2023-09-01 00:00:00', date_left NULL, gpa 3.8.",
                "Answer": "INSERT INTO Students (student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, gpa) VALUES (16, 1, 1, 'Alice', 'B', 'Carter', '123-456-7890', 'alice.carter@example.com', '987-65-4321', '2023-09-01 00:00:00', NULL, 3.8);"
            },
            {
                "User": "Let's update the GPA for student id 2 to 3.5.",
                "Answer": "UPDATE Students SET gpa = 3.5 WHERE student_id = 2;"
            },
            {
                "User": "Can we add a new department? The department details are department_id 16, department_name 'Data Science', department_description 'Study of data analysis techniques and algorithms'.",
                "Answer": "INSERT INTO Departments (department_id, department_name, department_description) VALUES (16, 'Data Science', 'Study of data analysis techniques and algorithms');"
            },
            {
                "User": "I want to register a new student for a degree program. The enrolment details are student_enrolment_id 16, degree_program_id 1, semester_id 1, student_id 16.",
                "Answer": "INSERT INTO Student_Enrolment (student_enrolment_id, degree_program_id, semester_id, student_id) VALUES (16, 1, 1, 16);"
            },
            {
                "User": "Can we get a list of all students with their GPAs?",
                "Answer": "SELECT first_name, last_name, gpa FROM Students;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 147,
        "db": "poker_player",
        "interaction": [
            {
                "User": "Can we add a new poker player to the database? Their Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, and Earnings are 6, 8, 5, 2, 50, 250000 respectively.",
                "Answer": "INSERT INTO poker_player (Poker_Player_ID, People_ID, Final_Table_Made, Best_Finish, Money_Rank, Earnings) VALUES (6, 8, 5, 2, 50, 250000);"
            },
            {
                "User": "I'd like to update the earnings of a poker player. Can we set the earnings of Poker_Player_ID 3 to 200000?",
                "Answer": "UPDATE poker_player SET Earnings = 200000 WHERE Poker_Player_ID = 3;"
            },
            {
                "User": "Can we create a table to track the sponsors for each poker player?",
                "Answer": "CREATE TABLE sponsors (Sponsor_ID number PRIMARY KEY, Poker_Player_ID number, Sponsor_Name text, Sponsorship_Amount number, FOREIGN KEY (Poker_Player_ID) REFERENCES poker_player(Poker_Player_ID));"
            },
            {
                "User": "How about adding a column to track the number of tournaments played by each poker player?",
                "Answer": "ALTER TABLE poker_player ADD Tournaments_Played number;"
            },
            {
                "User": "Can we insert a new sponsor for a specific poker player? Sponsor_ID, Poker_Player_ID, Sponsor_Name, Sponsorship_Amount can be assigned to 101, 2, 'PokerStars', 50000",
                "Answer": "INSERT INTO sponsors (Sponsor_ID, Poker_Player_ID, Sponsor_Name, Sponsorship_Amount) VALUES (101, 2, 'PokerStars', 50000);"
            },
            {
                "User": "Let's update the number of final tables made for Poker_Player_ID 1 to 45.",
                "Answer": "UPDATE poker_player SET Final_Table_Made = 45 WHERE Poker_Player_ID = 1;"
            },
            {
                "User": "How can I list all poker players along with their sponsors and sponsorship amounts?",
                "Answer": "SELECT T1.Name, T2.Sponsor_Name, T2.Sponsorship_Amount FROM people AS T1 JOIN sponsors AS T2 ON T1.People_ID = T2.Poker_Player_ID;"
            },
            {
                "User": "Can we add a new person to the database? Their People_ID, Nationality, Name, Birth_Date, and Height are 8, 'USA', 'Chris Moneymaker', 'November 21, 1975', 180.",
                "Answer": "INSERT INTO people (People_ID, Nationality, Name, Birth_Date, Height) VALUES (8, 'USA', 'Chris Moneymaker', 'November 21, 1975', 180);"
            },
            {
                "User": "What is the average earnings of all poker players?",
                "Answer": "SELECT AVG(Earnings) FROM poker_player;"
            },
            {
                "User": "Can we update the nationality of People_ID 2 to 'USA'?",
                "Answer": "UPDATE people SET Nationality = 'USA' WHERE People_ID = 2;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 148,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? Let's add 'Newville' in 'NVL' country code, district 'New District', with a population of 50000.",
                "Answer": "INSERT INTO city (Name, CountryCode, District, Population) VALUES ('Newville', 'NVL', 'New District', 50000);"
            },
            {
                "User": "I'd like to update the population of Kabul to reflect the latest census. Can we change it to 1800000?",
                "Answer": "UPDATE city SET Population = 1800000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Can we create a new table to track the major rivers in each country?",
                "Answer": "CREATE TABLE rivers (RiverId number PRIMARY KEY, Name text, CountryCode text, Length number, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "Let's add a column to the country table to indicate whether the country is landlocked.",
                "Answer": "ALTER TABLE country ADD Landlocked text;"
            },
            {
                "User": "Can we insert a record for a new river? The river 'Blue Stream' in country code 'BSL' is 750 km long.",
                "Answer": "INSERT INTO rivers (RiverId, Name, CountryCode, Length) VALUES ((SELECT MAX(RiverId) + 1 FROM rivers), 'Blue Stream', 'BSL', 750);"
            },
            {
                "User": "Let's update the landlocked status for Afghanistan to 'Yes'.",
                "Answer": "UPDATE country SET Landlocked = 'Yes' WHERE Code = 'AFG';"
            },
            {
                "User": "How can I list all countries along with their landlocked status?",
                "Answer": "SELECT Name, Landlocked FROM country;"
            },
            {
                "User": "Please update the GNP of Angola to 7200.0.",
                "Answer": "UPDATE country SET GNP = 7200.0 WHERE Code = 'AGO';"
            },
            {
                "User": "Can we create a view to show countries with their official languages and GNP?",
                "Answer": "CREATE VIEW country_official_languages_gnp AS SELECT T1.Name, T2.Language, T1.GNP FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.IsOfficial = 'T';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 149,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? The values for ID, Name, CountryCode, District, and Population are 4080, 'New Atlantis', 'OCE', 'East Ocean', 250000.",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'New Atlantis', 'OCE', 'East Ocean', 250000);"
            },
            {
                "User": "I'd like to update the population of Kabul. Can we change it to 1800000?",
                "Answer": "UPDATE city SET Population = 1800000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Can we create a table to track the languages spoken in each city?",
                "Answer": "CREATE TABLE city_language (CityID number, Language text, IsOfficial text, Percentage number, PRIMARY KEY (CityID, Language), FOREIGN KEY (CityID) REFERENCES city(ID));"
            },
            {
                "User": "How about adding a column to the country table to track the number of cities in each country?",
                "Answer": "ALTER TABLE country ADD CityCount number;"
            },
            {
                "User": "Can we insert the languages spoken in 'New Atlantis'? Assume the languages are English (80% and official) and Oceanic (20% and not official).",
                "Answer": [
                    "INSERT INTO city_language (CityID, Language, IsOfficial, Percentage) VALUES (4080, 'English', 'T', 80);",
                    "INSERT INTO city_language (CityID, Language, IsOfficial, Percentage) VALUES (4080, 'Oceanic', 'F', 20);"
                ]
            },
            {
                "User": "Let's update the CityCount for 'OCE' to be 1, since we've added 'New Atlantis'.",
                "Answer": "UPDATE country SET CityCount = (SELECT COUNT(*) FROM city WHERE CountryCode = 'OCE') WHERE Code = 'OCE';"
            },
            {
                "User": "How can I list all countries along with the number of cities in each?",
                "Answer": "SELECT Name, (SELECT COUNT(*) FROM city WHERE city.CountryCode = country.Code) AS CityCount FROM country;"
            },
            {
                "User": "Can we add a new country with the following details: Code 'XYZ', Name 'Utopia', Continent 'Fantasy', Region 'Dreamland', SurfaceArea 50000, IndepYear 2023, Population 500000, LifeExpectancy 100, GNP 9000, LocalName 'Utopia', GovernmentForm 'Democracy', HeadOfState 'Leader1', Capital 4080?",
                "Answer": "INSERT INTO country (Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, LocalName, GovernmentForm, HeadOfState, Capital) VALUES ('XYZ', 'Utopia', 'Fantasy', 'Dreamland', 50000, 2023, 500000, 100, 9000, 'Utopia', 'Democracy', 'Leader1', 4080);"
            },
            {
                "User": "The population of Angola has changed. Can we update it to 13000000?",
                "Answer": "UPDATE country SET Population = 13000000 WHERE Name = 'Angola';"
            },
            {
                "User": "Can we create a view that shows each country's official language and its percentage?",
                "Answer": "CREATE VIEW official_languages AS SELECT c.Name, l.Language, l.Percentage FROM country c JOIN countrylanguage l ON c.Code = l.CountryCode WHERE l.IsOfficial = 'T';"
            },
            {
                "User": "Can we insert a new official language for Utopia? Let's say the language is 'Utopian' with a 100% percentage.",
                "Answer": "INSERT INTO countrylanguage (CountryCode, Language, IsOfficial, Percentage) VALUES ('XYZ', 'Utopian', 'T', 100);"
            },
            {
                "User": "Can we update the HeadOfState for Aruba to 'Willem-Alexander'?",
                "Answer": "UPDATE country SET HeadOfState = 'Willem-Alexander' WHERE Name = 'Aruba';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 150,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? The new city's ID, Name, CountryCode, District, and Population are 4080, 'Newville', 'USA', 'New District', 50000",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'Newville', 'USA', 'New District', 50000);"
            },
            {
                "User": "Can we update the population of Kabul to reflect the latest census? The new population is 1800000.",
                "Answer": "UPDATE city SET Population = 1800000 WHERE Name = 'Kabul';"
            },
            {
                "User": "I'd like to create a table to track the historical populations of countries. Can we do that?",
                "Answer": "CREATE TABLE country_population_history (RecordId number PRIMARY KEY, CountryCode text, Year number, HistoricalPopulation number, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "Let's add a column to record whether a language is written from left to right or right to left. Can we do that?",
                "Answer": "ALTER TABLE countrylanguage ADD WritingDirection text;"
            },
            {
                "User": "Can we insert historical population data for Afghanistan? RecordId, CountryCode, Year, HistoricalPopulation can be 101, 'AFG', 2000, 20000000",
                "Answer": "INSERT INTO country_population_history (RecordId, CountryCode, Year, HistoricalPopulation) VALUES (101, 'AFG', 2000, 20000000);"
            },
            {
                "User": "Let's update the WritingDirection for Dutch in Aruba to 'LTR' for left to right.",
                "Answer": "UPDATE countrylanguage SET WritingDirection = 'LTR' WHERE CountryCode = 'ABW' AND Language = 'Dutch';"
            },
            {
                "User": "How can I get a list of all countries along with their latest recorded historical population?",
                "Answer": "SELECT c.Name, h.Year, h.HistoricalPopulation FROM country AS c JOIN country_population_history AS h ON c.Code = h.CountryCode ORDER BY h.Year DESC;"
            },
            {
                "User": "Can we add a new official language for Angola? The Language, IsOfficial, and Percentage are 'French', 'F', 5.0",
                "Answer": "INSERT INTO countrylanguage (CountryCode, Language, IsOfficial, Percentage) VALUES ('AGO', 'French', 'F', 5.0);"
            },
            {
                "User": "I want to track the GDP growth rate. Can we create a table for that?",
                "Answer": "CREATE TABLE gdp_growth (GrowthId number PRIMARY KEY, CountryCode text, Year number, GrowthRate number, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "Can we insert the GDP growth rate for Aruba in 2021? GrowthId, CountryCode, Year, GrowthRate can be 201, 'ABW', 2021, 1.5",
                "Answer": "INSERT INTO gdp_growth (GrowthId, CountryCode, Year, GrowthRate) VALUES (201, 'ABW', 2021, 1.5);"
            },
            {
                "User": "Let's correct the spelling of 'Herat' to 'Herāt' for city ID 3.",
                "Answer": "UPDATE city SET Name = 'Herāt' WHERE ID = 3;"
            },
            {
                "User": "How about adding a column to track the elevation of each city?",
                "Answer": "ALTER TABLE city ADD Elevation number;"
            },
            {
                "User": "Can we set the elevation of Kabul to 1791 meters?",
                "Answer": "UPDATE city SET Elevation = 1791 WHERE Name = 'Kabul';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 151,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city for country code 'BRA'? Let's name it 'New Brasilia', with a district 'Futuro', and a population of 50000.",
                "Answer": "INSERT INTO city (Name, CountryCode, District, Population) VALUES ('New Brasilia', 'BRA', 'Futuro', 50000);"
            },
            {
                "User": "I noticed that the population of Kabul is outdated. Can we update it to 4000000?",
                "Answer": "UPDATE city SET Population = 4000000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Let's create a table to track the GDP of each country.",
                "Answer": "CREATE TABLE country_gdp (CountryCode text PRIMARY KEY, GDP number, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "How about adding a column for the mayor's name to the city table?",
                "Answer": "ALTER TABLE city ADD MayorName text;"
            },
            {
                "User": "Can we insert the GDP data for Afghanistan? The GDP is 20 billion USD.",
                "Answer": "INSERT INTO country_gdp (CountryCode, GDP) VALUES ('AFG', 20000000000);"
            },
            {
                "User": "The head of state for Angola has changed. Can we update it to 'João Lourenço'?",
                "Answer": "UPDATE country SET HeadOfState = 'João Lourenço' WHERE Code = 'AGO';"
            },
            {
                "User": "Can we add a new official language for Angola? Let's add Portuguese with a percentage of 80.",
                "Answer": "INSERT INTO countrylanguage (CountryCode, Language, IsOfficial, Percentage) VALUES ('AGO', 'Portuguese', 'T', 80);"
            },
            {
                "User": "I'd like to compare the GNP of countries in South America with their GDP. Can we select both values for each country in that region?",
                "Answer": "SELECT T1.Name, T1.GNP, T2.GDP FROM country AS T1 LEFT JOIN country_gdp AS T2 ON T1.Code = T2.CountryCode WHERE T1.Continent = 'South America';"
            },
            {
                "User": "Let's update the life expectancy for Aruba to 80.5 years.",
                "Answer": "UPDATE country SET LifeExpectancy = 80.5 WHERE Code = 'ABW';"
            },
            {
                "User": "Can we add a column to track the date when the country's data was last updated?",
                "Answer": "ALTER TABLE country ADD LastUpdate date;"
            },
            {
                "User": "Can we set the last update date for Afghanistan to today's date?",
                "Answer": "UPDATE country SET LastUpdate = CURRENT_DATE WHERE Code = 'AFG';"
            },
            {
                "User": "Let's create a table to hold information about international treaties each country is part of.",
                "Answer": "CREATE TABLE international_treaties (TreatyId number PRIMARY KEY, CountryCode text, TreatyName text, DateSigned date, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 152,
        "db": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "User": "Can we add a new template type for memos?",
                "Answer": "INSERT INTO Ref_Template_Types (Template_Type_Code, Template_Type_Description) VALUES ('MEMO', 'Memo');"
            },
            {
                "User": "I need to correct the effective from date for template id 1 to be '2023-04-01 00:00:00'.",
                "Answer": "UPDATE Templates SET Date_Effective_From = '2023-04-01 00:00:00' WHERE Template_ID = 1;"
            },
            {
                "User": "Let's create a new table to store authors of the documents.",
                "Answer": "CREATE TABLE Authors (Author_ID number PRIMARY KEY, Author_Name text, Author_Email text);"
            },
            {
                "User": "How about adding a column to link each document to its author?",
                "Answer": "ALTER TABLE Documents ADD Author_ID number;"
            },
            {
                "User": "Can we insert an author with the details: Author_ID 10, Name 'Jane Doe', Email 'jane.doe@example.com'?",
                "Answer": "INSERT INTO Authors (Author_ID, Author_Name, Author_Email) VALUES (10, 'Jane Doe', 'jane.doe@example.com');"
            },
            {
                "User": "Let's update the name of the template type with code 'AD' to 'Advertising'.",
                "Answer": "UPDATE Ref_Template_Types SET Template_Type_Description = 'Advertising' WHERE Template_Type_Code = 'AD';"
            },
            {
                "User": "Can we add a new template with the following details: Template_ID 26, Version_Number 1, Template_Type_Code 'MEMO', Date_Effective_From '2023-01-01 00:00:00', Date_Effective_To '2023-12-31 23:59:59', Template_Details 'Company internal memo template.'?",
                "Answer": "INSERT INTO Templates (Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Date_Effective_To, Template_Details) VALUES (26, 1, 'MEMO', '2023-01-01 00:00:00', '2023-12-31 23:59:59', 'Company internal memo template.');"
            },
            {
                "User": "Can we link the document with Document_ID 1 to the author with Author_ID 10?",
                "Answer": "UPDATE Documents SET Author_ID = 10 WHERE Document_ID = 1;"
            },
            {
                "User": "How can I list all documents along with their authors' names?",
                "Answer": "SELECT D.Document_Name, A.Author_Name FROM Documents AS D JOIN Authors AS A ON D.Author_ID = A.Author_ID;"
            },
            {
                "User": "I want to remove the 'Other_Details' column from the Paragraphs table.",
                "Answer": "ALTER TABLE Paragraphs DROP COLUMN Other_Details;"
            },
            {
                "User": "Let's insert a new paragraph for document ID 2 with the following details: Paragraph_ID 66, Paragraph_Text 'This is a new paragraph for the document.'",
                "Answer": "INSERT INTO Paragraphs (Paragraph_ID, Document_ID, Paragraph_Text) VALUES (66, 2, 'This is a new paragraph for the document.');"
            },
            {
                "User": "Can we update the document description for Document_ID 3 to 'Annual Summer Showcase'?",
                "Answer": "UPDATE Documents SET Document_Description = 'Annual Summer Showcase' WHERE Document_ID = 3;"
            },
            {
                "User": "Let's create a table to track changes in the templates.",
                "Answer": "CREATE TABLE Template_Changes (Change_ID number PRIMARY KEY, Template_ID number, Change_Description text, Change_Date time, FOREIGN KEY (Template_ID) REFERENCES Templates(Template_ID));"
            },
            {
                "User": "Can we insert a change record for template ID 1 with the details: Change_ID 101, Change_Description 'Updated effective date', Change_Date '2023-04-02 09:00:00'?",
                "Answer": "INSERT INTO Template_Changes (Change_ID, Template_ID, Change_Description, Change_Date) VALUES (101, 1, 'Updated effective date', '2023-04-02 09:00:00');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 153,
        "db": "flight_2",
        "interaction": [
            {
                "User": "Can we add a new airline to the database? The values for uid, Airline, Abbreviation, Country are 13, 'SkyExpress', 'SKYX', 'Greece'",
                "Answer": "INSERT INTO airlines (uid, Airline, Abbreviation, Country) VALUES (13, 'SkyExpress', 'SKYX', 'Greece');"
            },
            {
                "User": "I'd like to update the country of an airport. Can we change the country of 'Phillips AAF' to 'USA'?",
                "Answer": "UPDATE airports SET Country = 'USA' WHERE AirportName = 'Phillips AAF';"
            },
            {
                "User": "Can we create a table to track the maintenance schedules of the aircraft?",
                "Answer": "CREATE TABLE aircraft_maintenance (MaintenanceId number PRIMARY KEY, Airline number, AircraftModel text, LastMaintenanceDate date, NextMaintenanceDate date, FOREIGN KEY (Airline) REFERENCES airlines(uid));"
            },
            {
                "User": "How about adding a column to track the number of seats for each flight?",
                "Answer": "ALTER TABLE flights ADD NumberOfSeats number;"
            },
            {
                "User": "Can we insert maintenance data for a specific aircraft? MaintenanceId, Airline, AircraftModel, LastMaintenanceDate, NextMaintenanceDate can be assigned to 101, 2, 'Boeing 737', '2023-01-15', '2023-06-15'",
                "Answer": "INSERT INTO aircraft_maintenance (MaintenanceId, Airline, AircraftModel, LastMaintenanceDate, NextMaintenanceDate) VALUES (101, 2, 'Boeing 737', '2023-01-15', '2023-06-15');"
            },
            {
                "User": "Let's update the number of seats for flight number 28 to be 180.",
                "Answer": "UPDATE flights SET NumberOfSeats = 180 WHERE FlightNo = 28;"
            },
            {
                "User": "How can I list all flights for 'Delta Airlines' along with the number of seats?",
                "Answer": "SELECT T1.FlightNo, T1.NumberOfSeats FROM flights AS T1 JOIN airlines AS T2 ON T1.Airline = T2.uid WHERE T2.Airline = 'Delta Airlines';"
            },
            {
                "User": "Can we add a new airport? The values for City, AirportCode, AirportName, Country, CountryAbbrev are 'Santorini', 'JTR', 'Santorini Airport', 'Greece', 'GR'",
                "Answer": "INSERT INTO airports (City, AirportCode, AirportName, Country, CountryAbbrev) VALUES ('Santorini', 'JTR', 'Santorini Airport', 'Greece', 'GR');"
            },
            {
                "User": "I need to correct the abbreviation for 'US Airways', can we change it from 'USAir' to 'USAW'?",
                "Answer": "UPDATE airlines SET Abbreviation = 'USAW' WHERE Airline = 'US Airways';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 154,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new student to the database with the following details: student_id 16, current_address_id 2, permanent_address_id 3, first_name 'Alice', middle_name 'B', last_name 'Cooper', cell_mobile_number '555-1234', email_address 'alice.cooper@example.edu', ssn '123-45-6789', date_first_registered '2023-01-15 08:00:00', date_left '2023-12-15 17:00:00'?",
                "Answer": "INSERT INTO Students (student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left) VALUES (16, 2, 3, 'Alice', 'B', 'Cooper', '555-1234', 'alice.cooper@example.edu', '123-45-6789', '2023-01-15 08:00:00', '2023-12-15 17:00:00');"
            },
            {
                "User": "I'd like to update the course description for the course with course_id 2. Can we change it to 'Advanced Mathematics'?",
                "Answer": "UPDATE Courses SET course_description = 'Advanced Mathematics' WHERE course_id = 2;"
            },
            {
                "User": "Can we create a table to track the grades of students in each course?",
                "Answer": "CREATE TABLE Grades (grade_id number PRIMARY KEY, student_course_id number, grade text, FOREIGN KEY (student_course_id) REFERENCES Student_Enrolment_Courses(student_course_id));"
            },
            {
                "User": "How about adding a column to track the year when each semester started?",
                "Answer": "ALTER TABLE Semesters ADD semester_start_year number;"
            },
            {
                "User": "Can we insert a new transcript record? transcript_id, transcript_date can be assigned to 16, '2023-04-01 09:00:00'",
                "Answer": "INSERT INTO Transcripts (transcript_id, transcript_date) VALUES (16, '2023-04-01 09:00:00');"
            },
            {
                "User": "Let's update the semester description for the semester with semester_id 1 to 'Spring 2010 - Start of the new decade'.",
                "Answer": "UPDATE Semesters SET semester_description = 'Spring 2010 - Start of the new decade' WHERE semester_id = 1;"
            },
            {
                "User": "Can we add a new course to the Courses table? The course_id, course_name, and course_description are 16, 'Introduction to Robotics', 'Basics of robotics engineering'.",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description) VALUES (16, 'Introduction to Robotics', 'Basics of robotics engineering');"
            },
            {
                "User": "I need to correct a student's name. Can we change the first_name of the student with student_id 1 to 'Timothy'?",
                "Answer": "UPDATE Students SET first_name = 'Timothy' WHERE student_id = 1;"
            },
            {
                "User": "How can I list all departments along with the number of degree programs they offer?",
                "Answer": "SELECT T1.department_name, COUNT(T2.degree_program_id) AS num_degree_programs FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_name;"
            },
            {
                "User": "Can we create a new table to manage department budgets with columns department_id, budget_amount, and fiscal_year?",
                "Answer": "CREATE TABLE Department_Budgets (budget_id number PRIMARY KEY, department_id number, budget_amount number, fiscal_year number, FOREIGN KEY (department_id) REFERENCES Departments(department_id));"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 155,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database with the following details: ID 4080, Name 'New City', CountryCode 'XYZ', District 'New District', Population 50000?",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'New City', 'XYZ', 'New District', 50000);"
            },
            {
                "User": "I'd like to update the population of Kabul to 1800000. Can you do that?",
                "Answer": "UPDATE city SET Population = 1800000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Can we create a new table to keep track of the mayors of each city?",
                "Answer": "CREATE TABLE city_mayors (CityID number PRIMARY KEY, MayorName text, TermStartYear number, FOREIGN KEY (CityID) REFERENCES city(ID));"
            },
            {
                "User": "How about adding a column for the timezone in which each city is located?",
                "Answer": "ALTER TABLE city ADD Timezone text;"
            },
            {
                "User": "Let's insert a new country into the country table. The details are Code 'XYZ', Name 'Newland', Continent 'Europe', Region 'New Region', SurfaceArea 50000, IndepYear 2020, Population 1000000, LifeExpectancy 75.0, GNP 50000, LocalName 'Newland', GovernmentForm 'Democracy', HeadOfState 'Leader Name', Capital 4080.",
                "Answer": "INSERT INTO country (Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, LocalName, GovernmentForm, HeadOfState, Capital) VALUES ('XYZ', 'Newland', 'Europe', 'New Region', 50000, 2020, 1000000, 75.0, 50000, 'Newland', 'Democracy', 'Leader Name', 4080);"
            },
            {
                "User": "Can we update the government form of Angola to 'Presidential Republic'?",
                "Answer": "UPDATE country SET GovernmentForm = 'Presidential Republic' WHERE Code = 'AGO';"
            },
            {
                "User": "I need to add a new official language for 'Newland'. Can we insert 'Newlandish' as an official language with a 100% percentage?",
                "Answer": "INSERT INTO countrylanguage (CountryCode, Language, IsOfficial, Percentage) VALUES ('XYZ', 'Newlandish', 'T', 100.0);"
            },
            {
                "User": "Can we list all the cities along with their timezones?",
                "Answer": "SELECT Name, Timezone FROM city;"
            },
            {
                "User": "Let's appoint a mayor for 'New City'. Can we insert the mayor's name 'John Doe' with a term starting in 2023?",
                "Answer": "INSERT INTO city_mayors (CityID, MayorName, TermStartYear) VALUES (4080, 'John Doe', 2023);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 156,
        "db": "concert_singer",
        "interaction": [
            {
                "User": "Can we add a new stadium to the database? The values for the new stadium of Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average are 15, 'Glasgow', 'The Glasgow Arena', 50000, 25000, 5000, 15000",
                "Answer": "INSERT INTO stadium (Stadium_ID, Location, Name, Capacity, Highest, Lowest, Average) VALUES (15, 'Glasgow', 'The Glasgow Arena', 50000, 25000, 5000, 15000);"
            },
            {
                "User": "I'd like to update the capacity of Bayview Stadium to 2500. Can you do that?",
                "Answer": "UPDATE stadium SET Capacity = 2500 WHERE Name = 'Bayview Stadium';"
            },
            {
                "User": "Can we create a new table to track the ticket prices for each concert?",
                "Answer": "CREATE TABLE concert_ticket_prices (Price_ID number PRIMARY KEY, Concert_ID number, Stadium_ID number, Min_Price number, Max_Price number, FOREIGN KEY (Concert_ID) REFERENCES concert(concert_ID), FOREIGN KEY (Stadium_ID) REFERENCES stadium(Stadium_ID));"
            },
            {
                "User": "How about adding a column to the singer table to track their debut year?",
                "Answer": "ALTER TABLE singer ADD Debut_Year number;"
            },
            {
                "User": "Can we insert ticket price data for a specific concert? Price_ID, Concert_ID, Stadium_ID, Min_Price, Max_Price can be assigned to 101, 3, 2, 55, 120",
                "Answer": "INSERT INTO concert_ticket_prices (Price_ID, Concert_ID, Stadium_ID, Min_Price, Max_Price) VALUES (101, 3, 2, 55, 120);"
            },
            {
                "User": "Let's update the song name for singer id 1 to 'New Beginnings'. How do we do that?",
                "Answer": "UPDATE singer SET Song_Name = 'New Beginnings' WHERE Singer_ID = 1;"
            },
            {
                "User": "Can we list all the concerts along with their maximum and minimum ticket prices?",
                "Answer": "SELECT T1.concert_Name, T2.Min_Price, T2.Max_Price FROM concert AS T1 JOIN concert_ticket_prices AS T2 ON T1.concert_ID = T2.Concert_ID;"
            },
            {
                "User": "I want to add the debut year for singer id 2 as 1996. Please update the record.",
                "Answer": "UPDATE singer SET Debut_Year = 1996 WHERE Singer_ID = 2;"
            },
            {
                "User": "Can we see a list of all the singers from the United States?",
                "Answer": "SELECT Name FROM singer WHERE Country = 'United States';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 157,
        "db": "employee_hire_evaluation",
        "interaction": [
            {
                "User": "Can we add a new employee to the database? The values for Employee_ID, Name, Age, and City are 11, 'Amanda Smith', 28, 'London'",
                "Answer": "INSERT INTO employee (Employee_ID, Name, Age, City) VALUES (11, 'Amanda Smith', 28, 'London');"
            },
            {
                "User": "I'd like to update the age of George Chuter to 24. Can we do that?",
                "Answer": "UPDATE employee SET Age = 24 WHERE Employee_ID = 1;"
            },
            {
                "User": "Can we create a table to track the annual performance reviews of each employee?",
                "Answer": "CREATE TABLE performance_reviews (Review_ID number PRIMARY KEY, Employee_ID number, Review_Year number, Performance_Score text, FOREIGN KEY (Employee_ID) REFERENCES employee(Employee_ID));"
            },
            {
                "User": "How about adding a column to track the email addresses for each employee?",
                "Answer": "ALTER TABLE employee ADD Email text;"
            },
            {
                "User": "Can we insert a new shop into the database? The Shop_ID, Name, Location, District, Number_products, and Manager_name are 10, 'New Era', 'Manchester', 'Downtown', 5000, 'Sarah Connor'",
                "Answer": "INSERT INTO shop (Shop_ID, Name, Location, District, Number_products, Manager_name) VALUES (10, 'New Era', 'Manchester', 'Downtown', 5000, 'Sarah Connor');"
            },
            {
                "User": "Let's update the number of products for shop FC Haka to 4000. Can we do that?",
                "Answer": "UPDATE shop SET Number_products = 4000 WHERE Shop_ID = 1;"
            },
            {
                "User": "Can we add a new hiring record? The Shop_ID, Employee_ID, Start_from, and Is_full_time values are 2, 11, '2023', 'T'",
                "Answer": "INSERT INTO hiring (Shop_ID, Employee_ID, Start_from, Is_full_time) VALUES (2, 11, '2023', 'T');"
            },
            {
                "User": "I want to give an employee a bonus. Can we add a record for George Chuter with a bonus of 3500 for the year 2021?",
                "Answer": "INSERT INTO evaluation (Employee_ID, Year_awarded, Bonus) VALUES ('1', '2021', 3500);"
            },
            {
                "User": "How can I list all shops along with the number of full-time employees they have?",
                "Answer": "SELECT s.Name, COUNT(h.Employee_ID) AS FullTimeEmployees FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID WHERE h.Is_full_time = 'T' GROUP BY s.Name;"
            },
            {
                "User": "Can we insert the performance review for an employee? Review_ID, Employee_ID, Review_Year, Performance_Score can be assigned to 101, 3, 2023, 'Excellent'",
                "Answer": "INSERT INTO performance_reviews (Review_ID, Employee_ID, Review_Year, Performance_Score) VALUES (101, 3, 2023, 'Excellent');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 158,
        "db": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "User": "Can we add a new template type for 'Report' documents?",
                "Answer": "INSERT INTO Ref_Template_Types (Template_Type_Code, Template_Type_Description) VALUES ('RPT', 'Report');"
            },
            {
                "User": "Let's create a new template for a report with ID 30, version number 1, effective from today, template details ''.",
                "Answer": "INSERT INTO Templates (Template_ID, Version_Number, Template_Type_Code, Date_Effective_From, Template_Details) VALUES (30, 1, 'RPT', CURRENT_DATE, '');"
            },
            {
                "User": "I need to update the document description for the document with ID 1 to 'In-depth Database Analysis'.",
                "Answer": "UPDATE Documents SET Document_Description = 'In-depth Database Analysis' WHERE Document_ID = 1;"
            },
            {
                "User": "Can we add a column to track the author of each document?",
                "Answer": "ALTER TABLE Documents ADD Author_Name text;"
            },
            {
                "User": "Please insert the author name 'John Doe' for the document with ID 0.",
                "Answer": "UPDATE Documents SET Author_Name = 'John Doe' WHERE Document_ID = 0;"
            },
            {
                "User": "How can I get a list of all documents along with their authors?",
                "Answer": "SELECT Document_ID, Document_Name, Author_Name FROM Documents;"
            },
            {
                "User": "Can we create a table to store revision history for each document?",
                "Answer": "CREATE TABLE Document_Revisions (Revision_ID number PRIMARY KEY, Document_ID number, Revision_Date time, Revision_Details text, FOREIGN KEY (Document_ID) REFERENCES Documents(Document_ID));"
            },
            {
                "User": "Let's add a revision record for document ID 1 with the details 'Initial release'.",
                "Answer": "INSERT INTO Document_Revisions (Revision_ID, Document_ID, Revision_Date, Revision_Details) VALUES (101, 1, CURRENT_DATE, 'Initial release');"
            },
            {
                "User": "I want to update the effective to date for template ID 0 to the end of this year.",
                "Answer": "UPDATE Templates SET Date_Effective_To = '2023-12-31' WHERE Template_ID = 0;"
            },
            {
                "User": "Can we insert a new paragraph for document ID 1 with the text 'Database systems are essential...'",
                "Answer": "INSERT INTO Paragraphs (Paragraph_ID, Document_ID, Paragraph_Text) VALUES (101, 1, 'Database systems are essential...');"
            },
            {
                "User": "What are the details of the latest version of the template used by document ID 1?",
                "Answer": "SELECT t1.Template_Details FROM Templates AS t1 JOIN Documents AS t2 ON t1.Template_ID = t2.Template_ID WHERE t2.Document_ID = 1 ORDER BY t1.Version_Number DESC LIMIT 1;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 159,
        "db": "dog_kennels",
        "interaction": [
            {
                "User": "Can we add a new breed to the database? The breed code and name are 'LAB', 'Labrador Retriever'",
                "Answer": "INSERT INTO Breeds (breed_code, breed_name) VALUES ('LAB', 'Labrador Retriever');"
            },
            {
                "User": "I'd like to update the charge amount for 'Health Check' to 650. Can you do that?",
                "Answer": "UPDATE Charges SET charge_amount = 650 WHERE charge_type = 'Health Check';"
            },
            {
                "User": "Can we create a table to keep track of adoption events?",
                "Answer": "CREATE TABLE Adoption_Events (event_id number PRIMARY KEY, dog_id number, date_of_event time, owner_id number, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id), FOREIGN KEY (owner_id) REFERENCES Owners(owner_id));"
            },
            {
                "User": "How about adding a column for microchip number to the Dogs table?",
                "Answer": "ALTER TABLE Dogs ADD microchip_number text;"
            },
            {
                "User": "Can we insert a new charge type? The charge_id, charge_type, and charge_amount can be 4, 'Training Fee', 200",
                "Answer": "INSERT INTO Charges (charge_id, charge_type, charge_amount) VALUES (4, 'Training Fee', 200);"
            },
            {
                "User": "Let's update the size description for 'MED' to 'Medium to Large'.",
                "Answer": "UPDATE Sizes SET size_description = 'Medium to Large' WHERE size_code = 'MED';"
            },
            {
                "User": "Can we add a new professional to the database? The professional_id, role_code, first_name, last_name, and email_address are 16, 'Trainer', 'Alex', 'Johnson', 'alex.johnson@example.com'",
                "Answer": "INSERT INTO Professionals (professional_id, role_code, first_name, last_name, email_address) VALUES (16, 'Trainer', 'Alex', 'Johnson', 'alex.johnson@example.com');"
            },
            {
                "User": "What if we want to record the dogs' favorite toys? Can we add a column for that?",
                "Answer": "ALTER TABLE Dogs ADD favorite_toy text;"
            },
            {
                "User": "I think we should also keep track of the dogs' vaccination status. Can you add a column for this?",
                "Answer": "ALTER TABLE Dogs ADD vaccination_status text;"
            },
            {
                "User": "Let's register a treatment for dog id 2. The treatment_id, professional_id, treatment_type_code, date_of_treatment, and cost_of_treatment can be 16, 3, 'VAC', '2023-04-01 10:00:00', 120",
                "Answer": "INSERT INTO Treatments (treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment) VALUES (16, 2, 3, 'VAC', '2023-04-01 10:00:00', 120);"
            },
            {
                "User": "Can we see a list of owners and the number of dogs they have adopted?",
                "Answer": "SELECT O.first_name, O.last_name, COUNT(D.owner_id) AS number_of_dogs_adopted FROM Owners AS O JOIN Dogs AS D ON O.owner_id = D.owner_id WHERE D.abandoned_yn = '0' GROUP BY O.owner_id;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 160,
        "db": "museum_visit",
        "interaction": [
            {
                "User": "Can we add a new museum to the database? The values for Museum_ID, Name, Num_of_Staff, Open_Year are 9, 'Modern Art Gallery', 40, '2021'",
                "Answer": "INSERT INTO museum (Museum_ID, Name, Num_of_Staff, Open_Year) VALUES (9, 'Modern Art Gallery', 40, '2021');"
            },
            {
                "User": "I'd like to update the number of staff for the 'Plaza Museum'. Can we set it to 65?",
                "Answer": "UPDATE museum SET Num_of_Staff = 65 WHERE Museum_ID = 1;"
            },
            {
                "User": "Can we create a table to track the special exhibitions hosted by each museum?",
                "Answer": "CREATE TABLE special_exhibitions (Exhibition_ID number PRIMARY KEY, Museum_ID number, Exhibition_Name text, Start_Date text, End_Date text, FOREIGN KEY (Museum_ID) REFERENCES museum(Museum_ID));"
            },
            {
                "User": "How about adding a column to track the revenue generated by each museum?",
                "Answer": "ALTER TABLE museum ADD Revenue number;"
            },
            {
                "User": "Can we insert a record for a special exhibition? Exhibition_ID, Museum_ID, Exhibition_Name, Start_Date, End_Date can be 101, 2, 'Impressionist Masters', '2023-06-01', '2023-09-30'",
                "Answer": "INSERT INTO special_exhibitions (Exhibition_ID, Museum_ID, Exhibition_Name, Start_Date, End_Date) VALUES (101, 2, 'Impressionist Masters', '2023-06-01', '2023-09-30');"
            },
            {
                "User": "Let's update the revenue for 'Plaza Museum' to be 120000. Can we do that?",
                "Answer": "UPDATE museum SET Revenue = 120000 WHERE Museum_ID = 1;"
            },
            {
                "User": "How can I list all museums along with the total number of tickets sold?",
                "Answer": "SELECT m.Name, SUM(v.Num_of_Ticket) as Total_Tickets FROM museum AS m JOIN visit AS v ON m.Museum_ID = v.Museum_ID GROUP BY m.Name;"
            },
            {
                "User": "Can we add a new visitor to the database? The values for ID, Name, Level_of_membership, Age are 7, 'Lionel Messi', 9, 34",
                "Answer": "INSERT INTO visitor (ID, Name, Level_of_membership, Age) VALUES (7, 'Lionel Messi', 9, 34);"
            },
            {
                "User": "I noticed a mistake in the name of a visitor. Can we change 'Guti Midfielder' to 'José María Gutiérrez' for visitor id 2?",
                "Answer": "UPDATE visitor SET Name = 'José María Gutiérrez' WHERE ID = 2;"
            },
            {
                "User": "Can we add a new visit record? Museum_ID, visitor_ID, Num_of_Ticket, Total_spent can be 3, '7', 2, 45.00",
                "Answer": "INSERT INTO visit (Museum_ID, visitor_ID, Num_of_Ticket, Total_spent) VALUES (3, '7', 2, 45.00);"
            },
            {
                "User": "How can I find the average amount spent by visitors at each museum?",
                "Answer": "SELECT v.Museum_ID, AVG(v.Total_spent) as Average_Spent FROM visit AS v GROUP BY v.Museum_ID;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 161,
        "db": "dog_kennels",
        "interaction": [
            {
                "User": "Can we add a new breed to the Breeds table? The breed code and name are 'LAB', 'Labrador Retriever'.",
                "Answer": "INSERT INTO Breeds (breed_code, breed_name) VALUES ('LAB', 'Labrador Retriever');"
            },
            {
                "User": "I'd like to update the charge amount for 'Health Check' to 650. Can we do that?",
                "Answer": "UPDATE Charges SET charge_amount = 650 WHERE charge_type = 'Health Check';"
            },
            {
                "User": "Can we create a new table to track adoption events with columns EventId, DogId, DateOfAdoption, and AdoptedBy?",
                "Answer": "CREATE TABLE Adoption_Events (EventId number PRIMARY KEY, DogId number, DateOfAdoption time, AdoptedBy text, FOREIGN KEY (DogId) REFERENCES Dogs(dog_id));"
            },
            {
                "User": "How about adding a column to track the microchip number for each dog in the Dogs table?",
                "Answer": "ALTER TABLE Dogs ADD microchip_number text;"
            },
            {
                "User": "Can we insert a new charge type into the Charges table? The charge_id, charge_type, and charge_amount can be 4, 'Grooming', 120.",
                "Answer": "INSERT INTO Charges (charge_id, charge_type, charge_amount) VALUES (4, 'Grooming', 120);"
            },
            {
                "User": "Let's update the size description for 'MED' to 'Medium to Large'. Can we do that?",
                "Answer": "UPDATE Sizes SET size_description = 'Medium to Large' WHERE size_code = 'MED';"
            },
            {
                "User": "Can we insert a new owner into the Owners table? The owner_id, first_name, last_name, and email_address can be 16, 'Alex', 'Johnson', 'alex.johnson@example.com'.",
                "Answer": "INSERT INTO Owners (owner_id, first_name, last_name, email_address) VALUES (16, 'Alex', 'Johnson', 'alex.johnson@example.com');"
            },
            {
                "User": "I want to add a treatment record for dog_id 2 with professional_id 5 for a 'Physical examination' that costs 300. How can I do that?",
                "Answer": "INSERT INTO Treatments (treatment_id, dog_id, professional_id, treatment_type_code, cost_of_treatment) VALUES ((SELECT MAX(treatment_id) + 1 FROM Treatments), 2, 5, 'EXAM', 300);"
            },
            {
                "User": "How can I list all dogs with their breed names and size descriptions?",
                "Answer": "SELECT D.name, B.breed_name, S.size_description FROM Dogs AS D JOIN Breeds AS B ON D.breed_code = B.breed_code JOIN Sizes AS S ON D.size_code = S.size_code;"
            },
            {
                "User": "Can we add a column for 'email_sent' to track if an email was sent to the owner in the Owners table?",
                "Answer": "ALTER TABLE Owners ADD email_sent text DEFAULT 'No';"
            },
            {
                "User": "Let's record an email sent to owner_id 2. Can we update the 'email_sent' column to 'Yes' for this owner?",
                "Answer": "UPDATE Owners SET email_sent = 'Yes' WHERE owner_id = 2;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 162,
        "db": "wta_1",
        "interaction": [
            {
                "User": "Can we add a new player to the database with the following details: player_id 220673, first_name 'Ashleigh', last_name 'Barty', hand 'R', birth_date '19960424', country_code 'AUS'?",
                "Answer": "INSERT INTO players (player_id, first_name, last_name, hand, birth_date, country_code) VALUES (220673, 'Ashleigh', 'Barty', 'R', 19960424, 'AUS');"
            },
            {
                "User": "I'd like to correct the hand used by player_id 200002 from 'R' to 'L'. Can we update it?",
                "Answer": "UPDATE players SET hand = 'L' WHERE player_id = 200002;"
            },
            {
                "User": "Can we create a new table to store information about the coaches, including coach_id, first_name, last_name, and country_code?",
                "Answer": "CREATE TABLE coaches (coach_id number PRIMARY KEY, first_name text, last_name text, country_code text);"
            },
            {
                "User": "Let's add a column to the matches table to track the type of court used for each match. We'll call it 'court_type'.",
                "Answer": "ALTER TABLE matches ADD court_type text;"
            },
            {
                "User": "Can we insert a new match record with the following details: best_of 3, draw_size 8, loser_age 25, loser_hand 'R', loser_ht 180, loser_id 200005, loser_ioc 'GBR', loser_name 'Jane Doe', loser_rank 50, loser_rank_points 1500, loser_seed NULL, match_num 500, minutes 120, round 'QF', score '6-4 6-4', surface 'Clay', tourney_date 20230410, tourney_id '2023-01', tourney_level 'G', tourney_name 'Grand Slam', winner_age 27, winner_hand 'R', winner_ht 175, winner_id 200006, winner_ioc 'USA', winner_name 'John Smith', winner_rank 5, winner_rank_points 5000, winner_seed 1, year 2023?",
                "Answer": "INSERT INTO matches (best_of, draw_size, loser_age, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year) VALUES (3, 8, 25, 'R', 180, 200005, 'GBR', 'Jane Doe', 50, 1500, NULL, 500, 120, 'QF', '6-4 6-4', 'Clay', 20230410, '2023-01', 'G', 'Grand Slam', 27, 'R', 175, 200006, 'USA', 'John Smith', 5, 5000, 1, 2023);"
            },
            {
                "User": "We need to update the tourney_name for tourney_id '2023-01' to 'Grand Slam Open'. Can you do that?",
                "Answer": "UPDATE matches SET tourney_name = 'Grand Slam Open' WHERE tourney_id = '2023-01';"
            },
            {
                "User": "Can we link players with their coaches by creating a new table called player_coaches containing player_id, coach_id, and start_year?",
                "Answer": "CREATE TABLE player_coaches (player_id number, coach_id number, start_year number, FOREIGN KEY (player_id) REFERENCES players(player_id), FOREIGN KEY (coach_id) REFERENCES coaches(coach_id));"
            },
            {
                "User": "Let's insert a new ranking record for a player. The details are ranking_date 20230101, ranking 25, player_id 200004, ranking_points 2000, tours 12.",
                "Answer": "INSERT INTO rankings (ranking_date, ranking, player_id, ranking_points, tours) VALUES (20230101, 25, 200004, 2000, 12);"
            },
            {
                "User": "I realized we made a mistake with the birth_date of player_id 200003. It should be '19810601'. Can we update this?",
                "Answer": "UPDATE players SET birth_date = 19810601 WHERE player_id = 200003;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 163,
        "db": "singer",
        "interaction": [
            {
                "User": "Can we add a new singer to the database with Singer_ID, Name, Birth_Year, Net_Worth_Millions, and Citizenship as 9, 'Ed Sheeran', 1991, 160, 'United Kingdom'?",
                "Answer": "INSERT INTO singer (Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship) VALUES (9, 'Ed Sheeran', 1991, 160, 'United Kingdom');"
            },
            {
                "User": "I noticed a mistake in the net worth of Christy Walton. Can we update it to 35.2 million?",
                "Answer": "UPDATE singer SET Net_Worth_Millions = 35.2 WHERE Name = 'Christy Walton';"
            },
            {
                "User": "Let's create a new table to track the genres of each song. It should have columns for Genre_ID, Name, and Description.",
                "Answer": "CREATE TABLE song_genre (Genre_ID number PRIMARY KEY, Name text, Description text);"
            },
            {
                "User": "Can we add a column to the song table to include the genre of the song?",
                "Answer": "ALTER TABLE song ADD Genre_ID number;"
            },
            {
                "User": "I'd like to insert a new genre into the song_genre table. Let's add Genre_ID, Name, Description as 1, 'Pop', 'A genre of popular music'.",
                "Answer": "INSERT INTO song_genre (Genre_ID, Name, Description) VALUES (1, 'Pop', 'A genre of popular music');"
            },
            {
                "User": "Can we update the genre of 'Do They Know It's Christmas' to Pop?",
                "Answer": "UPDATE song SET Genre_ID = (SELECT Genre_ID FROM song_genre WHERE Name = 'Pop') WHERE Title = 'Do They Know It''s Christmas';"
            },
            {
                "User": "How can we list all songs with their genres?",
                "Answer": "SELECT s.Title, sg.Name AS Genre FROM song AS s LEFT JOIN song_genre AS sg ON s.Genre_ID = sg.Genre_ID;"
            },
            {
                "User": "Let's add a new record for a song. The Song_ID, Title, Singer_ID, Sales, Highest_Position, and Genre_ID are 9, 'Shape of You', 9, 1500000, 1, 1.",
                "Answer": "INSERT INTO song (Song_ID, Title, Singer_ID, Sales, Highest_Position, Genre_ID) VALUES (9, 'Shape of You', 9, 1500000, 1, 1);"
            },
            {
                "User": "I want to correct the birth year of Alice Walton to 1948. How can I do that?",
                "Answer": "UPDATE singer SET Birth_Year = 1948 WHERE Name = 'Alice Walton';"
            },
            {
                "User": "Can we see the top-selling songs along with the singer's name and net worth?",
                "Answer": "SELECT s.Title, s.Sales, sg.Name, sg.Net_Worth_Millions FROM song AS s JOIN singer AS sg ON s.Singer_ID = sg.Singer_ID ORDER BY s.Sales DESC;"
            },
            {
                "User": "Is it possible to create a view that shows singers and their total sales?",
                "Answer": "CREATE VIEW singer_sales AS SELECT sg.Name, SUM(s.Sales) AS TotalSales FROM singer AS sg JOIN song AS s ON sg.Singer_ID = s.Singer_ID GROUP BY sg.Name;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 164,
        "db": "wta_1",
        "interaction": [
            {
                "User": "Can we add a new player to the database with the following details: player_id 220673, first_name 'Naomi', last_name 'Osaka', hand 'R', birth_date '19971016', and country_code 'JPN'?",
                "Answer": "INSERT INTO players (player_id, first_name, last_name, hand, birth_date, country_code) VALUES (220673, 'Naomi', 'Osaka', 'R', '19971016', 'JPN');"
            },
            {
                "User": "I need to correct the hand used by player with player_id 200002 from 'R' to 'L'. Can we update that?",
                "Answer": "UPDATE players SET hand = 'L' WHERE player_id = 200002;"
            },
            {
                "User": "Can we create a new table to keep track of player injuries with columns for injury_id, player_id, injury_date, injury_type, and recovery_date?",
                "Answer": "CREATE TABLE player_injuries (injury_id number PRIMARY KEY, player_id number, injury_date time, injury_type text, recovery_date time, FOREIGN KEY (player_id) REFERENCES players(player_id));"
            },
            {
                "User": "How about we add a column to the matches table to indicate whether it was an indoor or outdoor match?",
                "Answer": "ALTER TABLE matches ADD match_environment text;"
            },
            {
                "User": "Let's insert a match record with the following details: best_of 3, draw_size 8, loser_age 27, loser_hand 'R', loser_ht 180, loser_id 200003, loser_ioc 'BEL', loser_name 'Justine Henin', loser_rank 5, loser_rank_points 5000, match_num 301, minutes 120, round 'Final', score '6-4 6-3', surface 'Clay', tourney_date '20230402', tourney_id '2023-04-WTA-01A', tourney_level 'WTA', tourney_name 'Charleston Open', winner_age 25, winner_hand 'L', winner_ht 177, winner_id 200100, winner_ioc 'JPN', winner_name 'Naomi Osaka', winner_rank 3, winner_rank_points 6500, winner_seed 1, year 2023.",
                "Answer": "INSERT INTO matches (best_of, draw_size, loser_age, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year) VALUES (3, 8, 27, 'R', 180, 200003, 'BEL', 'Justine Henin', 5, 5000, 301, 120, 'Final', '6-4 6-3', 'Clay', '20230402', '2023-04-WTA-01A', 'WTA', 'Charleston Open', 25, 'L', 177, 200100, 'JPN', 'Naomi Osaka', 3, 6500, 1, 2023);"
            },
            {
                "User": "I realized we made a mistake with the surface of the last inserted match. It was actually played on Hard court. Can we update it?",
                "Answer": "UPDATE matches SET surface = 'Hard' WHERE match_num = 301 AND tourney_id = '2023-04-WTA-01A';"
            },
            {
                "User": "Can we insert a new ranking record for Naomi Osaka with the following details: ranking_date '20230403', ranking 3, player_id 200100, ranking_points 6520, tours 20?",
                "Answer": "INSERT INTO rankings (ranking_date, ranking, player_id, ranking_points, tours) VALUES ('20230403', 3, 200100, 6520, 20);"
            },
            {
                "User": "Let's add a new injury record for a player. The injury_id, player_id, injury_date, injury_type, and recovery_date can be set to 5001, 200003, '20230315', 'ankle sprain', '20230501'.",
                "Answer": "INSERT INTO player_injuries (injury_id, player_id, injury_date, injury_type, recovery_date) VALUES (5001, 200003, '20230315', 'ankle sprain', '20230501');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 165,
        "db": "tvshow",
        "interaction": [
            {
                "User": "Can we add a new TV series to the database? The details are id 13, title 'Mystery in the Park', air date 'April 1, 2023', rating '6.5', share 11, 18-49 rating share '4.0/11', viewers in millions '10.5', weekly rank 25, and channel '702'.",
                "Answer": "INSERT INTO TV_series (id, Episode, Air_Date, Rating, Share, \"18_49_Rating_Share\", Viewers_m, Weekly_Rank, Channel) VALUES (13, 'Mystery in the Park', 'April 1, 2023', '6.5', 11, '4.0/11', '10.5', 25, '702');"
            },
            {
                "User": "I noticed a typo in the series name for channel id 700. Can we update 'Sky Radio' to 'Sky Radio HD'?",
                "Answer": "UPDATE TV_Channel SET series_name = 'Sky Radio HD' WHERE id = '700';"
            },
            {
                "User": "Let's create a table to keep track of the awards won by TV series. It should include AwardId, SeriesId, AwardName, and Year.",
                "Answer": "CREATE TABLE series_awards (AwardId number PRIMARY KEY, SeriesId number, AwardName text, Year number, FOREIGN KEY (SeriesId) REFERENCES TV_series(id));"
            },
            {
                "User": "How about adding a column for the genre of each TV series?",
                "Answer": "ALTER TABLE TV_series ADD Genre text;"
            },
            {
                "User": "Can we insert an award record for the series with id 1? Let's say AwardId 101, SeriesId 1, AwardName 'Best Drama', Year 2023.",
                "Answer": "INSERT INTO series_awards (AwardId, SeriesId, AwardName, Year) VALUES (101, 1, 'Best Drama', 2023);"
            },
            {
                "User": "Let's update the pixel aspect ratio for channel id 703 to '16:9' only.",
                "Answer": "UPDATE TV_Channel SET Pixel_aspect_ratio_PAR = '16:9' WHERE id = '703';"
            },
            {
                "User": "I would like to see a list of all TV series with their genres and ratings.",
                "Answer": "SELECT TV_series.Episode, TV_series.Genre, TV_series.Rating FROM TV_series;"
            },
            {
                "User": "Can we add a new cartoon to the database? The details are id 13, title 'Space Adventures', directed by 'Amy Smith', written by 'John Doe', original air date 'March 15, 2023', production code 201, and channel '704'.",
                "Answer": "INSERT INTO Cartoon (id, Title, Directed_by, Written_by, Original_air_date, Production_code, Channel) VALUES (13, 'Space Adventures', 'Amy Smith', 'John Doe', 'March 15, 2023', 201, '704');"
            },
            {
                "User": "Can we create a table to track the advertisements aired during each TV series episode? It should include AdId, SeriesId, AdvertiserName, and AirTime.",
                "Answer": "CREATE TABLE series_ads (AdId number PRIMARY KEY, SeriesId number, AdvertiserName text, AirTime text, FOREIGN KEY (SeriesId) REFERENCES TV_series(id));"
            },
            {
                "User": "Let's insert an advertisement record for the series with id 2. Assign AdId 301, SeriesId 2, AdvertiserName 'Acme Corp', and AirTime '20:00'.",
                "Answer": "INSERT INTO series_ads (AdId, SeriesId, AdvertiserName, AirTime) VALUES (301, 2, 'Acme Corp', '20:00');"
            },
            {
                "User": "Can we update the language of the TV channel with id 701 to 'English'?",
                "Answer": "UPDATE TV_Channel SET Language = 'English' WHERE id = '701';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 166,
        "db": "museum_visit",
        "interaction": [
            {
                "User": "Can we add a new museum to the database? The new museum's ID, Name, Number of Staff, and Open Year are 10, 'Modern Art Museum', 40, '2021'.",
                "Answer": "INSERT INTO museum (Museum_ID, Name, Num_of_Staff, Open_Year) VALUES (10, 'Modern Art Museum', 40, '2021');"
            },
            {
                "User": "I'd like to update the Open Year of 'Plaza Museum' to 1999.",
                "Answer": "UPDATE museum SET Open_Year = '1999' WHERE Name = 'Plaza Museum';"
            },
            {
                "User": "Can we create a table to track the special events hosted by each museum?",
                "Answer": "CREATE TABLE special_events (Event_ID number PRIMARY KEY, Museum_ID number, Event_Name text, Event_Date text, FOREIGN KEY (Museum_ID) REFERENCES museum(Museum_ID));"
            },
            {
                "User": "How about adding a column to track the revenue for each museum?",
                "Answer": "ALTER TABLE museum ADD Revenue number;"
            },
            {
                "User": "Can we insert data for a special event? Let's say Event_ID, Museum_ID, Event_Name, Event_Date are 101, 1, 'Summer Art Exhibition', '2023-06-15'.",
                "Answer": "INSERT INTO special_events (Event_ID, Museum_ID, Event_Name, Event_Date) VALUES (101, 1, 'Summer Art Exhibition', '2023-06-15');"
            },
            {
                "User": "Let's update the revenue for 'Plaza Museum' to be 50000.",
                "Answer": "UPDATE museum SET Revenue = 50000 WHERE Name = 'Plaza Museum';"
            },
            {
                "User": "Can we add a new visitor to the database? The new visitor's ID, Name, Level of membership, and Age are 7, 'Lionel Messi', 10, 34.",
                "Answer": "INSERT INTO visitor (ID, Name, Level_of_membership, Age) VALUES (7, 'Lionel Messi', 10, 34);"
            },
            {
                "User": "I need to correct the total spent for visitor ID 5 at museum ID 1. The new total should be 350.50.",
                "Answer": "UPDATE visit SET Total_spent = 350.50 WHERE visitor_ID = '5' AND Museum_ID = 1;"
            },
            {
                "User": "How can we list all museums along with the total number of tickets sold?",
                "Answer": "SELECT m.Name, SUM(v.Num_of_Ticket) AS Total_Tickets FROM museum AS m JOIN visit AS v ON m.Museum_ID = v.Museum_ID GROUP BY m.Name;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 167,
        "db": "pets_1",
        "interaction": [
            {
                "User": "Can we add a new student to the database? The details are StuID 1051, LName Doe, Fname John, Age 20, Sex M, Major 601, Advisor 1121, city_code LAX.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1051, 'Doe', 'John', 20, 'M', 601, 1121, 'LAX');"
            },
            {
                "User": "A student has changed their major. Can we update the major for student id 1001 to 602?",
                "Answer": "UPDATE Student SET Major = 602 WHERE StuID = 1001;"
            },
            {
                "User": "Can we create a table to track the number of pets each student has?",
                "Answer": "CREATE TABLE student_pet_count (StuID number PRIMARY KEY, PetCount number, FOREIGN KEY (StuID) REFERENCES Student(StuID));"
            },
            {
                "User": "How about adding a column to track the registration date for each student?",
                "Answer": "ALTER TABLE Student ADD RegDate date;"
            },
            {
                "User": "Can we insert a record for a new pet? PetID, PetType, pet_age, weight can be 2004, parrot, 1, 0.8",
                "Answer": "INSERT INTO Pets (PetID, PetType, pet_age, weight) VALUES (2004, 'parrot', 1, 0.8);"
            },
            {
                "User": "Let's assign the new pet to a student. Can we insert a record in Has_Pet for student id 1002 with the new pet id 2004?",
                "Answer": "INSERT INTO Has_Pet (StuID, PetID) VALUES (1002, 2004);"
            },
            {
                "User": "I want to know the average weight of pets owned by students. Can you provide that information?",
                "Answer": "SELECT AVG(weight) FROM Pets WHERE PetID IN (SELECT PetID FROM Has_Pet);"
            },
            {
                "User": "Can we update the pet age for PetID 2003 to 2 years?",
                "Answer": "UPDATE Pets SET pet_age = 2 WHERE PetID = 2003;"
            },
            {
                "User": "How can I get a list of all students and the total weight of pets they own?",
                "Answer": "SELECT T1.StuID, T1.Fname, SUM(T3.weight) AS TotalPetWeight FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID GROUP BY T1.StuID;"
            },
            {
                "User": "Let's create a view that shows the full name and pet type for all students who own a pet.",
                "Answer": "CREATE VIEW student_pet_info AS SELECT T1.LName || ' ' || T1.Fname AS FullName, T3.PetType FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID;"
            },
            {
                "User": "What if we want to delete the pet records for pets older than 10 years?",
                "Answer": "DELETE FROM Pets WHERE pet_age > 10;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 168,
        "db": "pets_1",
        "interaction": [
            {
                "User": "Can we add a new student to the database? Their StuID, LName, Fname, Age, Sex, Major, Advisor, and city_code are 1041, 'Brown', 'Charlie', 22, 'M', 700, 1121, 'NYC'.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1041, 'Brown', 'Charlie', 22, 'M', 700, 1121, 'NYC');"
            },
            {
                "User": "I'd like to update the major for student Linda Smith. Can we change her major to 700?",
                "Answer": "UPDATE Student SET Major = 700 WHERE StuID = 1001;"
            },
            {
                "User": "Can we create a table to track the pet ownership history of the students?",
                "Answer": "CREATE TABLE pet_ownership_history (HistoryID number PRIMARY KEY, StuID number, PetID number, StartDate date, EndDate date, FOREIGN KEY (StuID) REFERENCES Student(StuID), FOREIGN KEY (PetID) REFERENCES Pets(PetID));"
            },
            {
                "User": "How about adding a column to track the GPA for each student?",
                "Answer": "ALTER TABLE Student ADD GPA number;"
            },
            {
                "User": "Can we insert pet ownership history for student Tracy Kim? HistoryID, StuID, PetID, StartDate, EndDate can be assigned to 3001, 1002, 2002, '2022-09-01', '2023-09-01'.",
                "Answer": "INSERT INTO pet_ownership_history (HistoryID, StuID, PetID, StartDate, EndDate) VALUES (3001, 1002, 2002, '2022-09-01', '2023-09-01');"
            },
            {
                "User": "Let's update the GPA for a specific student. Can we set the GPA of student id 1003 to be 3.5?",
                "Answer": "UPDATE Student SET GPA = 3.5 WHERE StuID = 1003;"
            },
            {
                "User": "How can I list all students along with their GPAs?",
                "Answer": "SELECT Fname, LName, GPA FROM Student;"
            },
            {
                "User": "Can we add a pet to the Pets table? The PetID, PetType, pet_age, and weight are 2004, 'parrot', 2, 0.5.",
                "Answer": "INSERT INTO Pets (PetID, PetType, pet_age, weight) VALUES (2004, 'parrot', 2, 0.5);"
            },
            {
                "User": "I want to record that student Charlie Brown just got a new pet with PetID 2004. How do I add this information?",
                "Answer": "INSERT INTO Has_Pet (StuID, PetID) VALUES (1004, 2004);"
            },
            {
                "User": "Can we update the weight of the pet with PetID 2001 to 13.0?",
                "Answer": "UPDATE Pets SET weight = 13.0 WHERE PetID = 2001;"
            },
            {
                "User": "I need to find all students who have a pet dog. Can you provide me with that list?",
                "Answer": "SELECT T1.Fname, T1.LName FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID WHERE T3.PetType = 'dog';"
            },
            {
                "User": "Is it possible to track the average weight of pets owned by each major?",
                "Answer": "SELECT T1.Major, AVG(T3.weight) AS AvgWeight FROM Student AS T1 JOIN Has_Pet AS T2 ON T1.StuID = T2.StuID JOIN Pets AS T3 ON T2.PetID = T3.PetID GROUP BY T1.Major;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 169,
        "db": "wta_1",
        "interaction": [
            {
                "User": "Can we add a new player to the database with the details: player_id: 220673, first_name: 'Naomi', last_name: 'Osaka', hand: 'R', birth_date: '19971016', country_code: 'JPN'?",
                "Answer": "INSERT INTO players (player_id, first_name, last_name, hand, birth_date, country_code) VALUES (220673, 'Naomi', 'Osaka', 'R', 19971016, 'JPN');"
            },
            {
                "User": "I want to correct the birth date of player with player_id 200003. Can we change it to '19810601'?",
                "Answer": "UPDATE players SET birth_date = 19810601 WHERE player_id = 200003;"
            },
            {
                "User": "Let's create a new table to track the coaches of each player. Can it have columns for coach_id, player_id, coach_name, and start_date?",
                "Answer": "CREATE TABLE coaches (coach_id number PRIMARY KEY, player_id number, coach_name text, start_date time, FOREIGN KEY (player_id) REFERENCES players(player_id));"
            },
            {
                "User": "Can we add a column to the matches table to indicate whether it was an indoor or outdoor match?",
                "Answer": "ALTER TABLE matches ADD indoor_outdoor text;"
            },
            {
                "User": "Let's insert a new match record with the following details: best_of: 3, draw_size: 32, loser_age: 22, loser_hand: 'R', loser_id: 200004, loser_name: 'Naomi Osaka', loser_rank: 10, match_num: 500, round: 'QF', surface: 'Hard', tourney_date: '20210301', tourney_id: '2021-W-AS-01A-2021', winner_id: 200001, year: 2021",
                "Answer": "INSERT INTO matches (best_of, draw_size, loser_age, loser_hand, loser_id, loser_name, loser_rank, match_num, round, surface, tourney_date, tourney_id, winner_id, year) VALUES (3, 32, 22, 'R', 200004, 'Naomi Osaka', 10, 500, 'QF', 'Hard', 20210301, '2021-W-AS-01A-2021', 200001, 2021);"
            },
            {
                "User": "Update the match record with match_num 500 to set the winner_name as 'Martina Hingis' and update the winner_rank to 5.",
                "Answer": "UPDATE matches SET winner_name = 'Martina Hingis', winner_rank = 5 WHERE match_num = 500;"
            },
            {
                "User": "How can we list all players along with their coaches?",
                "Answer": "SELECT p.first_name, p.last_name, c.coach_name FROM players AS p LEFT JOIN coaches AS c ON p.player_id = c.player_id;"
            },
            {
                "User": "Can we insert a new ranking record? The details are: ranking_date: '20210301', ranking: 25, player_id: 200004, ranking_points: 2000, tours: 15",
                "Answer": "INSERT INTO rankings (ranking_date, ranking, player_id, ranking_points, tours) VALUES ('20210301', 25, 200004, 2000, 15);"
            },
            {
                "User": "Let's update the country code for player_id 200002 to 'USA'.",
                "Answer": "UPDATE players SET country_code = 'USA' WHERE player_id = 200002;"
            },
            {
                "User": "Can we add a column to track the prize money won by players in each match?",
                "Answer": "ALTER TABLE matches ADD prize_money number;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 170,
        "db": "wta_1",
        "interaction": [
            {
                "User": "Can we add a new player to the database with the following details: player_id 220673, first_name 'Naomi', last_name 'Osaka', hand 'R', birth_date '19971016', country_code 'JPN'?",
                "Answer": "INSERT INTO players (player_id, first_name, last_name, hand, birth_date, country_code) VALUES (220673, 'Naomi', 'Osaka', 'R', '19971016', 'JPN');"
            },
            {
                "User": "Can we update the hand preference for player id 200002 from 'R' to 'L'?",
                "Answer": "UPDATE players SET hand = 'L' WHERE player_id = 200002;"
            },
            {
                "User": "Let's create a table to keep track of player injuries. What would the SQL statement look like?",
                "Answer": "CREATE TABLE player_injuries (injury_id number PRIMARY KEY, player_id number, injury_date time, injury_type text, recovery_time number, FOREIGN KEY (player_id) REFERENCES players(player_id));"
            },
            {
                "User": "Can we add a column for email addresses in the players table?",
                "Answer": "ALTER TABLE players ADD email text;"
            },
            {
                "User": "I want to insert a new match record. Can you add the following details: best_of 3, draw_size 128, loser_age 25, loser_hand 'R', loser_ht 180, loser_id 200010, loser_ioc 'USA', loser_name 'Jane Doe', loser_rank 50, loser_rank_points 1500, loser_seed NULL, match_num 101, minutes 120, round 'QF', score '6-4 4-6 6-3', surface 'Clay', tourney_date '20230415', tourney_id '2023-001', tourney_level 'G', tourney_name 'Grand Slam', winner_age 23, winner_hand 'L', winner_ht 175, winner_id 206663, winner_ioc 'JPN', winner_name 'Naomi Osaka', winner_rank 10, winner_rank_points 3500, winner_seed 5, year 2023?",
                "Answer": "INSERT INTO matches (best_of, draw_size, loser_age, loser_entry, loser_hand, loser_ht, loser_id, loser_ioc, loser_name, loser_rank, loser_rank_points, loser_seed, match_num, minutes, round, score, surface, tourney_date, tourney_id, tourney_level, tourney_name, winner_age, winner_entry, winner_hand, winner_ht, winner_id, winner_ioc, winner_name, winner_rank, winner_rank_points, winner_seed, year) VALUES (3, 128, 25, '', 'R', 180, 200010, 'USA', 'Jane Doe', 50, 1500, NULL, 101, 120, 'QF', '6-4 4-6 6-3', 'Clay', '20230415', '2023-001', 'G', 'Grand Slam', 23, '', 'L', 175, 206663, 'JPN', 'Naomi Osaka', 10, 3500, 5, 2023);"
            },
            {
                "User": "Let's update the birth_date of player id 200003 to '19810601'.",
                "Answer": "UPDATE players SET birth_date = '19810601' WHERE player_id = 200003;"
            },
            {
                "User": "How can I get a list of all players and their email addresses?",
                "Answer": "SELECT first_name, last_name, email FROM players;"
            },
            {
                "User": "Can we add a new ranking record for player id 206663 with the following details: ranking_date '20230417', ranking 5, player_id 206663, ranking_points 5000, tours 15?",
                "Answer": "INSERT INTO rankings (ranking_date, ranking, player_id, ranking_points, tours) VALUES ('20230417', 5, 206663, 5000, 15);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 171,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? The values for the new city of ID, Name, CountryCode, District, and Population are 4080, 'Atlantis', 'OCE', 'Mythical District', 100000",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'Atlantis', 'OCE', 'Mythical District', 100000);"
            },
            {
                "User": "I'd like to update the population of Kabul. Can we change it to 2000000?",
                "Answer": "UPDATE city SET Population = 2000000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Can we create a table to track the major exports of each country?",
                "Answer": "CREATE TABLE country_exports (CountryCode text PRIMARY KEY, MajorExport text, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "How about adding a column to track the year of the last census in each country?",
                "Answer": "ALTER TABLE country ADD LastCensusYear number;"
            },
            {
                "User": "Can we insert major export data for a specific country? CountryCode and MajorExport can be 'NLD', 'Machinery and Equipment'",
                "Answer": "INSERT INTO country_exports (CountryCode, MajorExport) VALUES ('NLD', 'Machinery and Equipment');"
            },
            {
                "User": "Let's update the life expectancy for Angola. Can we set it to 60.1 years?",
                "Answer": "UPDATE country SET LifeExpectancy = 60.1 WHERE Code = 'AGO';"
            },
            {
                "User": "How can I list all countries along with their major exports?",
                "Answer": "SELECT T1.Name, T2.MajorExport FROM country AS T1 JOIN country_exports AS T2 ON T1.Code = T2.CountryCode;"
            },
            {
                "User": "Can we record the last census year for 'Aruba'? Let's set it to 2010.",
                "Answer": "UPDATE country SET LastCensusYear = 2010 WHERE Code = 'ABW';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 172,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new student to the database with the following details: student_id 16, current_address_id 2, permanent_address_id 3, first_name 'Alice', last_name 'Johnson', cell_mobile_number '555-1234', email_address 'alice.johnson@example.com', ssn '987-65-4321', date_first_registered '2023-01-15 09:00:00'?",
                "Answer": "INSERT INTO Students (student_id, current_address_id, permanent_address_id, first_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered) VALUES (16, 2, 3, 'Alice', 'Johnson', '555-1234', 'alice.johnson@example.com', '987-65-4321', '2023-01-15 09:00:00');"
            },
            {
                "User": "I need to correct a student's email address. Can you update the email for student_id 2 to 'h.balistreri@example.edu'?",
                "Answer": "UPDATE Students SET email_address = 'h.balistreri@example.edu' WHERE student_id = 2;"
            },
            {
                "User": "Can we create a new table to keep track of student attendance?",
                "Answer": "CREATE TABLE Student_Attendance (attendance_id number PRIMARY KEY, student_id number, section_id number, date_attended time, status text, FOREIGN KEY (student_id) REFERENCES Students(student_id), FOREIGN KEY (section_id) REFERENCES Sections(section_id));"
            },
            {
                "User": "Let's add a new column to the Courses table to indicate whether the course is an elective. How would you do that?",
                "Answer": "ALTER TABLE Courses ADD is_elective boolean;"
            },
            {
                "User": "Can we insert a new course into the Courses table? course_id 16, course_name 'Robotics', course_description 'Introduction to Robotics', is_elective true.",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description, is_elective) VALUES (16, 'Robotics', 'Introduction to Robotics', true);"
            },
            {
                "User": "I'd like to change the section name for section_id 1 to 'Advanced Topics'. How can we update that?",
                "Answer": "UPDATE Sections SET section_name = 'Advanced Topics' WHERE section_id = 1;"
            },
            {
                "User": "Can we add a new department? The department_id is 16, department_name 'Engineering', and department_description 'Engineering department'.",
                "Answer": "INSERT INTO Departments (department_id, department_name, department_description) VALUES (16, 'Engineering', 'Engineering department');"
            },
            {
                "User": "How can we enroll a new student in a degree program? Use student_enrolment_id 16, degree_program_id 2, semester_id 1, student_id 16.",
                "Answer": "INSERT INTO Student_Enrolment (student_enrolment_id, degree_program_id, semester_id, student_id) VALUES (16, 2, 1, 16);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 173,
        "db": "concert_singer",
        "interaction": [
            {
                "User": "Can we add a new singer to the database? The singer's details are Singer_ID 7, Name 'Adele', Country 'UK', Song_Name 'Hello', Song_release_year '2015', Age 33, Is_male 'F'",
                "Answer": "INSERT INTO singer (Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male) VALUES (7, 'Adele', 'UK', 'Hello', '2015', 33, 'F');"
            },
            {
                "User": "I'd like to update the capacity of the stadium with Stadium_ID 1 to 15000. Can we do that?",
                "Answer": "UPDATE stadium SET Capacity = 15000 WHERE Stadium_ID = 1;"
            },
            {
                "User": "Can we create a table to track ticket prices for each concert?",
                "Answer": "CREATE TABLE ticket_prices (Price_ID number PRIMARY KEY, concert_ID number, Min_price number, Max_price number, FOREIGN KEY (concert_ID) REFERENCES concert(concert_ID));"
            },
            {
                "User": "How about adding a column to track the genre of music each singer performs?",
                "Answer": "ALTER TABLE singer ADD Genre text;"
            },
            {
                "User": "Can we insert ticket price data for a specific concert? Price_ID, concert_ID, Min_price, Max_price can be assigned to 101, 3, 50, 200",
                "Answer": "INSERT INTO ticket_prices (Price_ID, concert_ID, Min_price, Max_price) VALUES (101, 3, 50, 200);"
            },
            {
                "User": "Let's update the theme of the concert with concert_ID 2 to 'Rock Anthems'. Can we do that?",
                "Answer": "UPDATE concert SET Theme = 'Rock Anthems' WHERE concert_ID = 2;"
            },
            {
                "User": "I want to know the highest and lowest ticket prices for each concert. Can you provide that information?",
                "Answer": "SELECT T1.concert_Name, T2.Min_price, T2.Max_price FROM concert AS T1 JOIN ticket_prices AS T2 ON T1.concert_ID = T2.concert_ID;"
            },
            {
                "User": "Can we add a new concert to the database? The concert details are concert_ID 7, concert_Name 'Global Music Fest', Theme 'Pop', Stadium_ID '3', Year '2023'",
                "Answer": "INSERT INTO concert (concert_ID, concert_Name, Theme, Stadium_ID, Year) VALUES (7, 'Global Music Fest', 'Pop', '3', '2023');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 174,
        "db": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "User": "Can we add a new template type for reports?",
                "Answer": "INSERT INTO Ref_Template_Types (Template_Type_Code, Template_Type_Description) VALUES ('RP', 'Report');"
            },
            {
                "User": "I need to correct the effective to date for template ID 1 to December 31, 2025. Can you update it?",
                "Answer": "UPDATE Templates SET Date_Effective_To = '2025-12-31 23:59:59' WHERE Template_ID = 1;"
            },
            {
                "User": "Let's create a table to store users who create documents. What should it look like?",
                "Answer": "CREATE TABLE Document_Creators (Creator_ID number PRIMARY KEY, Creator_Name text, Document_ID number, Creation_Date time, FOREIGN KEY (Document_ID) REFERENCES Documents(Document_ID));"
            },
            {
                "User": "Could we add a column to track the approval status of each document?",
                "Answer": "ALTER TABLE Documents ADD Approval_Status text;"
            },
            {
                "User": "Can we insert a new document created by user id 42? The Document_ID, Template_ID, Document_Name, and Document_Description are 101, 5, 'Annual Report', 'The comprehensive annual report for 2023'.",
                "Answer": "INSERT INTO Documents (Document_ID, Template_ID, Document_Name, Document_Description) VALUES (101, 5, 'Annual Report', 'The comprehensive annual report for 2023');"
            },
            {
                "User": "Update the paragraph text for paragraph id 7 to 'The economic outlook of South Korea is positive'.",
                "Answer": "UPDATE Paragraphs SET Paragraph_Text = 'The economic outlook of South Korea is positive' WHERE Paragraph_ID = 7;"
            },
            {
                "User": "Can we add a new record for a document creator? Assign Creator_ID, Creator_Name, Document_ID, Creation_Date to 12, 'Jane Doe', 101, '2023-04-01 10:00:00'",
                "Answer": "INSERT INTO Document_Creators (Creator_ID, Creator_Name, Document_ID, Creation_Date) VALUES (12, 'Jane Doe', 101, '2023-04-01 10:00:00');"
            },
            {
                "User": "Let's set the approval status of document id 1 to 'Pending'.",
                "Answer": "UPDATE Documents SET Approval_Status = 'Pending' WHERE Document_ID = 1;"
            },
            {
                "User": "How can I find all documents along with their approval status?",
                "Answer": "SELECT Document_ID, Document_Name, Approval_Status FROM Documents;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 175,
        "db": "museum_visit",
        "interaction": [
            {
                "User": "Can we add a new museum to the database? The values for Museum_ID, Name, Num_of_Staff, Open_Year are 9, 'Modern Art Museum', 40, '2021'.",
                "Answer": "INSERT INTO museum (Museum_ID, Name, Num_of_Staff, Open_Year) VALUES (9, 'Modern Art Museum', 40, '2021');"
            },
            {
                "User": "I'd like to update the number of staff for the Jefferson Development Museum to 25. What's the id for this museum?",
                "Answer": "UPDATE museum SET Num_of_Staff = 25 WHERE Name = 'Jefferson Development Museum';"
            },
            {
                "User": "Can we create a new table to track the special exhibitions hosted by each museum?",
                "Answer": "CREATE TABLE special_exhibitions (Exhibition_ID number PRIMARY KEY, Museum_ID number, Exhibition_Name text, Start_Date text, End_Date text, FOREIGN KEY (Museum_ID) REFERENCES museum(Museum_ID));"
            },
            {
                "User": "How about adding a column to the visitor table to track the home country of each visitor?",
                "Answer": "ALTER TABLE visitor ADD Country text;"
            },
            {
                "User": "Can we insert a new visitor? The values for ID, Name, Level_of_membership, Age, Country are 7, 'Lionel Messi', 3, 34, 'Argentina'.",
                "Answer": "INSERT INTO visitor (ID, Name, Level_of_membership, Age, Country) VALUES (7, 'Lionel Messi', 3, 34, 'Argentina');"
            },
            {
                "User": "Let's update the level of membership for visitor Gonzalo Higuaín to the highest level which is 10.",
                "Answer": "UPDATE visitor SET Level_of_membership = 10 WHERE Name = 'Gonzalo Higuaín';"
            },
            {
                "User": "Can we record a new visit? The values for Museum_ID, visitor_ID, Num_of_Ticket, Total_spent are 2, '7', 2, 45.50.",
                "Answer": "INSERT INTO visit (Museum_ID, visitor_ID, Num_of_Ticket, Total_spent) VALUES (2, '7', 2, 45.50);"
            },
            {
                "User": "How can I find the total number of tickets sold by the Plaza Museum?",
                "Answer": "SELECT SUM(Num_of_Ticket) FROM visit WHERE Museum_ID = (SELECT Museum_ID FROM museum WHERE Name = 'Plaza Museum');"
            },
            {
                "User": "Can we add a column to the visit table to record the date of each visit?",
                "Answer": "ALTER TABLE visit ADD Visit_Date text;"
            },
            {
                "User": "I need to correct the open year of the Capital Plaza Museum to 2011. Can you update that?",
                "Answer": "UPDATE museum SET Open_Year = '2011' WHERE Name = 'Capital Plaza Museum';"
            },
            {
                "User": "Let's add a new special exhibition for the Modern Art Museum. The values for Exhibition_ID, Museum_ID, Exhibition_Name, Start_Date, End_Date are 101, 9, 'Impressionist Icons', '2023-06-01', '2023-12-31'.",
                "Answer": "INSERT INTO special_exhibitions (Exhibition_ID, Museum_ID, Exhibition_Name, Start_Date, End_Date) VALUES (101, 9, 'Impressionist Icons', '2023-06-01', '2023-12-31');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 176,
        "db": "network_1",
        "interaction": [
            {
                "User": "Can we add a new highschooler to the database? Their ID, name, and grade are 2001, 'Alex', 10.",
                "Answer": "INSERT INTO Highschooler (ID, name, grade) VALUES (2001, 'Alex', 10);"
            },
            {
                "User": "A student has just moved up a grade. Can we update the grade of the student with ID 1510 to 10?",
                "Answer": "UPDATE Highschooler SET grade = 10 WHERE ID = 1510;"
            },
            {
                "User": "I'd like to add a new table to track the sports each student plays. Can we create that table?",
                "Answer": "CREATE TABLE Sports (StudentId number, Sport text, PRIMARY KEY (StudentId, Sport), FOREIGN KEY (StudentId) REFERENCES Highschooler(ID));"
            },
            {
                "User": "Let's add a column to the Highschooler table to include their favorite subject.",
                "Answer": "ALTER TABLE Highschooler ADD FavoriteSubject text;"
            },
            {
                "User": "Can we insert a record for a student who likes another student? The student ID is 1381 and they like a student with ID 1510.",
                "Answer": "INSERT INTO Likes (student_id, liked_id) VALUES (1381, 1510);"
            },
            {
                "User": "Can we update the name of the student with ID 1689 to 'Gabby'?",
                "Answer": "UPDATE Highschooler SET name = 'Gabby' WHERE ID = 1689;"
            },
            {
                "User": "I want to see all the highschoolers and their friends' names. Can you provide that?",
                "Answer": "SELECT H1.name AS HighschoolerName, H2.name AS FriendName FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID;"
            },
            {
                "User": "How about inserting a new sport for student ID 1510? They just started playing 'Basketball'.",
                "Answer": "INSERT INTO Sports (StudentId, Sport) VALUES (1510, 'Basketball');"
            },
            {
                "User": "Let's update the favorite subject for student ID 1381 to 'Mathematics'.",
                "Answer": "UPDATE Highschooler SET FavoriteSubject = 'Mathematics' WHERE ID = 1381;"
            },
            {
                "User": "Can we add a new friend connection between students 1381 and 2001?",
                "Answer": "INSERT INTO Friend (student_id, friend_id) VALUES (1381, 2001);"
            },
            {
                "User": "I need to see a list of all highschoolers, their grades, and their favorite subjects.",
                "Answer": "SELECT ID, name, grade, FavoriteSubject FROM Highschooler;"
            },
            {
                "User": "Can we create a table to track the clubs each student is part of?",
                "Answer": "CREATE TABLE Clubs (StudentId number, ClubName text, PRIMARY KEY (StudentId, ClubName), FOREIGN KEY (StudentId) REFERENCES Highschooler(ID));"
            },
            {
                "User": "Let's add a student to the 'Chess Club'. The student ID is 1689.",
                "Answer": "INSERT INTO Clubs (StudentId, ClubName) VALUES (1689, 'Chess Club');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 177,
        "db": "dog_kennels",
        "interaction": [
            {
                "User": "Can we add a new size category for dogs called 'Extra Large' with the code 'XLG'?",
                "Answer": "INSERT INTO Sizes (size_code, size_description) VALUES ('XLG', 'Extra Large');"
            },
            {
                "User": "I realized we made a mistake with the breed name for breed_code 'ESK'. Can we correct the breed name to 'American Eskimo'?",
                "Answer": "UPDATE Breeds SET breed_name = 'American Eskimo' WHERE breed_code = 'ESK';"
            },
            {
                "User": "We need to keep track of the vaccination history for each dog. Can we create a new table for that?",
                "Answer": "CREATE TABLE Vaccination_History (history_id number PRIMARY KEY, dog_id number, vaccination_date time, vaccination_type text, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id));"
            },
            {
                "User": "We should also be able to record the color of the dogs. Can we add a color column to the Dogs table?",
                "Answer": "ALTER TABLE Dogs ADD color text;"
            },
            {
                "User": "Let's insert a new treatment type for grooming with the code 'GRM' and description 'Grooming'.",
                "Answer": "INSERT INTO Treatment_Types (treatment_type_code, treatment_type_description) VALUES ('GRM', 'Grooming');"
            },
            {
                "User": "I'd like to update the charge amount for 'Health Check' to 650. Can you do that?",
                "Answer": "UPDATE Charges SET charge_amount = 650 WHERE charge_type = 'Health Check';"
            },
            {
                "User": "Can we insert a new owner with the following details? Owner ID: 16, First Name: 'Alex', Last Name: 'Johnson', Street: '1234 Maple St', City: 'Springfield', State: 'IL', Zip Code: '62704', Email: 'alex.j@example.com', Home Phone: '555-1234', Cell Number: '555-5678'",
                "Answer": "INSERT INTO Owners (owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number) VALUES (16, 'Alex', 'Johnson', '1234 Maple St', 'Springfield', 'IL', '62704', 'alex.j@example.com', '555-1234', '555-5678');"
            },
            {
                "User": "Let's update the weight of the dog named 'Kacey' to 8.5.",
                "Answer": "UPDATE Dogs SET weight = '8.5' WHERE name = 'Kacey';"
            },
            {
                "User": "Can we add a new charge type for 'Grooming' with an amount of 100?",
                "Answer": "INSERT INTO Charges (charge_id, charge_type, charge_amount) VALUES ((SELECT MAX(charge_id) + 1 FROM Charges), 'Grooming', 100);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 178,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? The city's ID, Name, CountryCode, District, and Population are 4080, 'New City', 'NWC', 'New District', 500000.",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'New City', 'NWC', 'New District', 500000);"
            },
            {
                "User": "I noticed the population for Kabul is outdated. Can we update it to 1800000?",
                "Answer": "UPDATE city SET Population = 1800000 WHERE ID = 1;"
            },
            {
                "User": "We need to keep track of the mayor for each city. Can we add a 'Mayor' column to the city table?",
                "Answer": "ALTER TABLE city ADD Mayor text;"
            },
            {
                "User": "Let's add the mayor's name for Kabul. Can we set the mayor of Kabul to 'Mohammad Daoud Khan'?",
                "Answer": "UPDATE city SET Mayor = 'Mohammad Daoud Khan' WHERE Name = 'Kabul';"
            },
            {
                "User": "Can we create a new table to store historical population data for cities?",
                "Answer": "CREATE TABLE city_population_history (RecordID number PRIMARY KEY, CityID number, Year number, HistoricalPopulation number, FOREIGN KEY (CityID) REFERENCES city(ID));"
            },
            {
                "User": "Insert historical population data for Kabul for the year 2000 with a population of 1500000.",
                "Answer": "INSERT INTO city_population_history (RecordID, CityID, Year, HistoricalPopulation) VALUES (1, 1, 2000, 1500000);"
            },
            {
                "User": "What is the new average population of all cities after updating Kabul's population?",
                "Answer": "SELECT avg(Population) FROM city;"
            },
            {
                "User": "Can we track the percentage of urban population in each country? We need a new table for that.",
                "Answer": "CREATE TABLE country_urban_population (CountryCode text PRIMARY KEY, UrbanPopulationPct number, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "Let's add the urban population percentage for Afghanistan. Assume it's 25%.",
                "Answer": "INSERT INTO country_urban_population (CountryCode, UrbanPopulationPct) VALUES ('AFG', 25);"
            },
            {
                "User": "Can we update the government form of Afghanistan to 'Republic'?",
                "Answer": "UPDATE country SET GovernmentForm = 'Republic' WHERE Code = 'AFG';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 179,
        "db": "museum_visit",
        "interaction": [
            {
                "User": "Can we add a new visitor to the database? The values for ID, Name, Level_of_membership, and Age are 7, 'Leo Messi', 9, 34.",
                "Answer": "INSERT INTO visitor (ID, Name, Level_of_membership, Age) VALUES (7, 'Leo Messi', 9, 34);"
            },
            {
                "User": "I want to update the membership level of 'Guti Midfielder' to 6. Can you do that?",
                "Answer": "UPDATE visitor SET Level_of_membership = 6 WHERE Name = 'Guti Midfielder';"
            },
            {
                "User": "Can we track the date of each visit? We need to add a new column for the visit date.",
                "Answer": "ALTER TABLE visit ADD Visit_Date date;"
            },
            {
                "User": "Let's insert a record for a new visit. Can we add a visit entry where Museum_ID is 2, visitor_ID is 7, Num_of_Ticket is 2, Total_spent is 45.99, and Visit_Date is '2023-04-01'?",
                "Answer": "INSERT INTO visit (Museum_ID, visitor_ID, Num_of_Ticket, Total_spent, Visit_Date) VALUES (2, 7, 2, 45.99, '2023-04-01');"
            },
            {
                "User": "Can we create a table to track special exhibits at each museum?",
                "Answer": "CREATE TABLE special_exhibits (Exhibit_ID number PRIMARY KEY, Museum_ID number, Exhibit_Name text, Start_Date date, End_Date date, FOREIGN KEY (Museum_ID) REFERENCES museum(Museum_ID));"
            },
            {
                "User": "How about adding a column to track the city where each museum is located?",
                "Answer": "ALTER TABLE museum ADD City text;"
            },
            {
                "User": "Can we update the city for 'Plaza Museum' to 'New York'?",
                "Answer": "UPDATE museum SET City = 'New York' WHERE Name = 'Plaza Museum';"
            },
            {
                "User": "Can we list all visits that had more than 5 tickets purchased?",
                "Answer": "SELECT * FROM visit WHERE Num_of_Ticket > 5;"
            },
            {
                "User": "What's the total revenue generated by each museum from ticket sales?",
                "Answer": "SELECT Museum_ID, SUM(Total_spent) AS Total_Revenue FROM visit GROUP BY Museum_ID;"
            },
            {
                "User": "Can we insert a new special exhibit for the Jefferson Development Museum? The exhibit 'Space Exploration' will start on '2023-05-15' and end on '2023-08-30'.",
                "Answer": "INSERT INTO special_exhibits (Exhibit_ID, Museum_ID, Exhibit_Name, Start_Date, End_Date) VALUES (101, 3, 'Space Exploration', '2023-05-15', '2023-08-30');"
            },
            {
                "User": "Let's update the number of staff for 'Capital Plaza Museum' to 30.",
                "Answer": "UPDATE museum SET Num_of_Staff = 30 WHERE Name = 'Capital Plaza Museum';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 180,
        "db": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "User": "Can we add a new template type for 'Report' documents?",
                "Answer": "INSERT INTO Ref_Template_Types (Template_Type_Code, Template_Type_Description) VALUES ('RP', 'Report');"
            },
            {
                "User": "I need to update the effective date for template ID 1 to start from today. Can you do that?",
                "Answer": "UPDATE Templates SET Date_Effective_From = CURRENT_DATE WHERE Template_ID = 1;"
            },
            {
                "User": "Let's create a new table to keep track of the authors of these documents. Can you create that table?",
                "Answer": "CREATE TABLE Authors (Author_ID number PRIMARY KEY, Author_Name text, Author_Email text);"
            },
            {
                "User": "Can we add a column to track the last updated timestamp for each document?",
                "Answer": "ALTER TABLE Documents ADD Last_Updated time;"
            },
            {
                "User": "I want to insert a new document with the following details: Document_ID 16, Template_ID 2, Document_Name 'Annual Report', Document_Description 'Financial performance annual report', Other_Details 'FY2023'.",
                "Answer": "INSERT INTO Documents (Document_ID, Template_ID, Document_Name, Document_Description, Other_Details) VALUES (16, 2, 'Annual Report', 'Financial performance annual report', 'FY2023');"
            },
            {
                "User": "Please update the paragraph text for Paragraph_ID 7 to 'Updated Korea economic status'.",
                "Answer": "UPDATE Paragraphs SET Paragraph_Text = 'Updated Korea economic status' WHERE Paragraph_ID = 7;"
            },
            {
                "User": "How can I list all template types with the number of templates available for each type?",
                "Answer": "SELECT T1.Template_Type_Code, T1.Template_Type_Description, COUNT(T2.Template_ID) AS NumberOfTemplates FROM Ref_Template_Types AS T1 LEFT JOIN Templates AS T2 ON T1.Template_Type_Code = T2.Template_Type_Code GROUP BY T1.Template_Type_Code, T1.Template_Type_Description;"
            },
            {
                "User": "Can we insert a new author into the Authors table? Author_ID, Author_Name, and Author_Email can be 101, 'John Doe', 'john.doe@example.com'.",
                "Answer": "INSERT INTO Authors (Author_ID, Author_Name, Author_Email) VALUES (101, 'John Doe', 'john.doe@example.com');"
            },
            {
                "User": "Let's update the last updated timestamp for Document_ID 1 to the current time.",
                "Answer": "UPDATE Documents SET Last_Updated = CURRENT_TIMESTAMP WHERE Document_ID = 1;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 181,
        "db": "singer",
        "interaction": [
            {
                "User": "Can we add a new singer to the database with the following details: Singer_ID 9, Name 'Sam Smith', Birth_Year 1992, Net_Worth_Millions 25, Citizenship 'United Kingdom'?",
                "Answer": "INSERT INTO singer (Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship) VALUES (9, 'Sam Smith', 1992, 25, 'United Kingdom');"
            },
            {
                "User": "I noticed a mistake in the net worth of 'Alice Walton'. Can we update her net worth to 33 million dollars?",
                "Answer": "UPDATE singer SET Net_Worth_Millions = 33 WHERE Name = 'Alice Walton';"
            },
            {
                "User": "Let's create a new table to store information about concerts with columns Concert_ID, Singer_ID, Venue, Date, and Audience_Count.",
                "Answer": "CREATE TABLE concert (Concert_ID number PRIMARY KEY, Singer_ID number, Venue text, Date text, Audience_Count number, FOREIGN KEY (Singer_ID) REFERENCES singer(Singer_ID));"
            },
            {
                "User": "Can we add a column to the song table to keep track of the release year?",
                "Answer": "ALTER TABLE song ADD Release_Year number;"
            },
            {
                "User": "Let's insert a new song with the details: Song_ID 9, Title 'Stay With Me', Singer_ID 9, Sales 500000, Highest_Position 1, Release_Year 2014.",
                "Answer": "INSERT INTO song (Song_ID, Title, Singer_ID, Sales, Highest_Position, Release_Year) VALUES (9, 'Stay With Me', 9, 500000, 1, 2014);"
            },
            {
                "User": "I want to update the sales for the song 'Cha Cha Slide' to 400000. Can we do that?",
                "Answer": "UPDATE song SET Sales = 400000 WHERE Title = 'Cha Cha Slide';"
            },
            {
                "User": "How can we get a list of all songs released after the year 2000 along with their singer names?",
                "Answer": "SELECT s.Title, sg.Name FROM song AS s JOIN singer AS sg ON s.Singer_ID = sg.Singer_ID WHERE s.Release_Year > 2000;"
            },
            {
                "User": "Can we organize a concert for Liliane Bettencourt? Insert the following details: Concert_ID 101, Singer_ID 1, Venue 'Madison Square Garden', Date '2023-09-15', Audience_Count 20000.",
                "Answer": "INSERT INTO concert (Concert_ID, Singer_ID, Venue, Date, Audience_Count) VALUES (101, 1, 'Madison Square Garden', '2023-09-15', 20000);"
            },
            {
                "User": "Let's correct the birth year for Christy Walton to 1949. How can we update this?",
                "Answer": "UPDATE singer SET Birth_Year = 1949 WHERE Name = 'Christy Walton';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 182,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new student to the database? Their details are student_id 16, current_address_id 2, permanent_address_id 5, first_name 'Laura', middle_name 'Beth', last_name 'Johnson', cell_mobile_number '555-1234', email_address 'laura.j@example.edu', ssn '987-65-4321', date_first_registered '2023-01-15 08:00:00', date_left 'NULL', other_student_details 'Enrolled in computer science'.",
                "Answer": "INSERT INTO Students (student_id, current_address_id, permanent_address_id, first_name, middle_name, last_name, cell_mobile_number, email_address, ssn, date_first_registered, date_left, other_student_details) VALUES (16, 2, 5, 'Laura', 'Beth', 'Johnson', '555-1234', 'laura.j@example.edu', '987-65-4321', '2023-01-15 08:00:00', NULL, 'Enrolled in computer science');"
            },
            {
                "User": "I need to update the course description for the 'math' course. Can we change it to 'Mathematics fundamentals'?",
                "Answer": "UPDATE Courses SET course_description = 'Mathematics fundamentals' WHERE course_name = 'math';"
            },
            {
                "User": "Can we create a table to track the professors for each course?",
                "Answer": "CREATE TABLE Professors (professor_id number PRIMARY KEY, first_name text, last_name text, email_address text, department_id number, FOREIGN KEY (department_id) REFERENCES Departments(department_id));"
            },
            {
                "User": "How about adding a column to track the GPA for each student?",
                "Answer": "ALTER TABLE Students ADD GPA decimal(3,2);"
            },
            {
                "User": "Can we insert a new semester into the database? The semester_id, semester_name, and semester_description can be 16, 'Spring 2023', 'Current semester'.",
                "Answer": "INSERT INTO Semesters (semester_id, semester_name, semester_description) VALUES (16, 'Spring 2023', 'Current semester');"
            },
            {
                "User": "Let's update the address for student id 2. Can we change their current_address_id to 3?",
                "Answer": "UPDATE Students SET current_address_id = 3 WHERE student_id = 2;"
            },
            {
                "User": "Can we add a new course and then enroll student id 16 in that course for the current semester?",
                "Answer": [
                    "INSERT INTO Courses (course_id, course_name, course_description) VALUES (16, 'Data Science', 'Introduction to Data Science concepts');",
                    "INSERT INTO Student_Enrolment (student_enrolment_id, degree_program_id, semester_id, student_id) VALUES (16, 1, 16, 16);",
                    "INSERT INTO Student_Enrolment_Courses (student_course_id, course_id, student_enrolment_id) VALUES (16, 16, 16);"
                ]
            },
            {
                "User": "How can I list all students along with their GPA?",
                "Answer": "SELECT first_name, middle_name, last_name, GPA FROM Students;"
            },
            {
                "User": "I want to create a new transcript for a student. Can we create a new transcript record for student_course_id 16?",
                "Answer": [
                    "INSERT INTO Transcripts (transcript_id, transcript_date) VALUES (16, '2023-05-01 10:00:00');",
                    "INSERT INTO Transcript_Contents (student_course_id, transcript_id) VALUES (16, 16);"
                ]
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 183,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? The values for the new city of ID, Name, CountryCode, District, Population are 4080, 'Newtown', 'XYZ', 'New District', 50000",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'Newtown', 'XYZ', 'New District', 50000);"
            },
            {
                "User": "I'd like to update the population of Kabul to reflect the latest census. Can we change it to 1800000?",
                "Answer": "UPDATE city SET Population = 1800000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Let's create a table to keep track of the languages spoken in each city.",
                "Answer": "CREATE TABLE city_language (CityID number, Language text, IsOfficial text, Percentage number, FOREIGN KEY (CityID) REFERENCES city(ID));"
            },
            {
                "User": "Can we add a 'Mayor' column to the city table to keep track of the current mayors?",
                "Answer": "ALTER TABLE city ADD Mayor text;"
            },
            {
                "User": "Let's insert language data for Newtown. The values for CityID, Language, IsOfficial, Percentage are 4080, 'English', 'T', 80.0",
                "Answer": "INSERT INTO city_language (CityID, Language, IsOfficial, Percentage) VALUES (4080, 'English', 'T', 80.0);"
            },
            {
                "User": "Can we update the government form of Afghanistan to 'Republic'?",
                "Answer": "UPDATE country SET GovernmentForm = 'Republic' WHERE Code = 'AFG';"
            },
            {
                "User": "How can I find the capital city name and its population for each country in Asia?",
                "Answer": "SELECT c1.Name AS CapitalCity, c1.Population FROM city c1 JOIN country c2 ON c1.ID = c2.Capital WHERE c2.Continent = 'Asia';"
            },
            {
                "User": "Can we record the previous names of countries that have changed names? I want to create a history table.",
                "Answer": "CREATE TABLE country_name_history (CountryCode text, PreviousName text, YearChanged number, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "Let's add a historical name for Angola with the previous name 'Portuguese Angola' changed in the year 1975.",
                "Answer": "INSERT INTO country_name_history (CountryCode, PreviousName, YearChanged) VALUES ('AGO', 'Portuguese Angola', 1975);"
            },
            {
                "User": "Can we list all the official languages and their percentages for the country with code 'ABW'?",
                "Answer": "SELECT Language, Percentage FROM countrylanguage WHERE CountryCode = 'ABW' AND IsOfficial = 'T';"
            },
            {
                "User": "I want to add a new column 'TimeZone' to the country table to help with time-sensitive queries. Could you do that?",
                "Answer": "ALTER TABLE country ADD TimeZone text;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 184,
        "db": "singer",
        "interaction": [
            {
                "User": "Can we add a new singer to the database? The new singer's ID, Name, Birth Year, Net Worth in Millions, and Citizenship are 9, 'Sam Smith', 1992, 33, 'United Kingdom'",
                "Answer": "INSERT INTO singer (Singer_ID, Name, Birth_Year, Net_Worth_Millions, Citizenship) VALUES (9, 'Sam Smith', 1992, 33, 'United Kingdom');"
            },
            {
                "User": "I'd like to update the net worth of a singer. Can we change the net worth of 'Liliane Bettencourt' to 35 million?",
                "Answer": "UPDATE singer SET Net_Worth_Millions = 35 WHERE Name = 'Liliane Bettencourt';"
            },
            {
                "User": "Can we create a table to track the genres of each song?",
                "Answer": "CREATE TABLE song_genre (Genre_ID number PRIMARY KEY, Genre_Name text);"
            },
            {
                "User": "How about adding a column to the song table to include the genre ID?",
                "Answer": "ALTER TABLE song ADD Genre_ID number;"
            },
            {
                "User": "Let's insert a genre into the song_genre table. The Genre_ID and Genre_Name can be 1, 'Pop'",
                "Answer": "INSERT INTO song_genre (Genre_ID, Genre_Name) VALUES (1, 'Pop');"
            },
            {
                "User": "Can we update the genre of the song with Song_ID 1 to be 'Pop'?",
                "Answer": "UPDATE song SET Genre_ID = 1 WHERE Song_ID = 1;"
            },
            {
                "User": "How can I list all songs along with their genres?",
                "Answer": "SELECT T1.Title, T2.Genre_Name FROM song AS T1 JOIN song_genre AS T2 ON T1.Genre_ID = T2.Genre_ID;"
            },
            {
                "User": "Let's add a new song for 'Sam Smith'. The Song_ID, Title, Sales, and Highest_Position are 9, 'Stay With Me', 500000, 1",
                "Answer": "INSERT INTO song (Song_ID, Title, Singer_ID, Sales, Highest_Position) VALUES (9, 'Stay With Me', 9, 500000, 1);"
            },
            {
                "User": "Can we list all singers who have a net worth of more than 25 million?",
                "Answer": "SELECT Name FROM singer WHERE Net_Worth_Millions > 25;"
            },
            {
                "User": "I want to see the top 3 songs with the highest sales. Can we do that?",
                "Answer": "SELECT Title, Sales FROM song ORDER BY Sales DESC LIMIT 3;"
            },
            {
                "User": "Let's update the citizenship of 'Christy Walton' to 'Canada'.",
                "Answer": "UPDATE singer SET Citizenship = 'Canada' WHERE Name = 'Christy Walton';"
            },
            {
                "User": "Can we create a table to store the awards received by singers?",
                "Answer": "CREATE TABLE singer_awards (Award_ID number PRIMARY KEY, Singer_ID number, Award_Title text, Year number, FOREIGN KEY (Singer_ID) REFERENCES singer(Singer_ID));"
            },
            {
                "User": "Let's insert an award for 'Alice Walton'. The Award_ID, Award_Title, and Year are 101, 'Best Vocalist', 2020",
                "Answer": "INSERT INTO singer_awards (Award_ID, Singer_ID, Award_Title, Year) VALUES (101, 3, 'Best Vocalist', 2020);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 185,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? The values for the new city of ID, Name, CountryCode, District, and Population are 4080, 'New Atlantis', 'OCE', 'Fantasy District', 120000",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'New Atlantis', 'OCE', 'Fantasy District', 120000);"
            },
            {
                "User": "I would like to update the population of Kabul to reflect recent census data. The new population is 1800000.",
                "Answer": "UPDATE city SET Population = 1800000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Is it possible to create a table to keep track of historical population data for cities?",
                "Answer": "CREATE TABLE city_population_history (RecordId number PRIMARY KEY, CityId number, Year number, HistoricalPopulation number, FOREIGN KEY (CityId) REFERENCES city(ID));"
            },
            {
                "User": "Could you add a column to the country table to record whether the country is landlocked?",
                "Answer": "ALTER TABLE country ADD Landlocked text;"
            },
            {
                "User": "Let's insert historical population data for Kabul. RecordId, CityId, Year, HistoricalPopulation can be 1001, 1, 2010, 1500000",
                "Answer": "INSERT INTO city_population_history (RecordId, CityId, Year, HistoricalPopulation) VALUES (1001, 1, 2010, 1500000);"
            },
            {
                "User": "We need to correct the head of state for Afghanistan. Can you update it to 'Ashraf Ghani'?",
                "Answer": "UPDATE country SET HeadOfState = 'Ashraf Ghani' WHERE Code = 'AFG';"
            },
            {
                "User": "How can we list all countries along with their landlocked status?",
                "Answer": "SELECT Name, Landlocked FROM country;"
            },
            {
                "User": "Can we add a new official language to a country? Let's say we want to add 'Chinese' as an official language for 'Aruba' with a percentage of 2.5.",
                "Answer": "INSERT INTO countrylanguage (CountryCode, Language, IsOfficial, Percentage) VALUES ('ABW', 'Chinese', 'T', 2.5);"
            },
            {
                "User": "Let's update the continent name from 'North America' to 'Americas' for the country 'Aruba'.",
                "Answer": "UPDATE country SET Continent = 'Americas' WHERE Code = 'ABW';"
            },
            {
                "User": "Could you provide a list of cities that have seen a population increase since 2010 according to the historical data?",
                "Answer": "SELECT c.Name, c.Population, h.HistoricalPopulation FROM city AS c JOIN city_population_history AS h ON c.ID = h.CityId WHERE h.Year = 2010 AND c.Population > h.HistoricalPopulation;"
            },
            {
                "User": "Is there a way to track the changes in GNP for countries? I'd like to create a table for that.",
                "Answer": "CREATE TABLE country_gnp_history (RecordId number PRIMARY KEY, CountryCode text, Year number, GNP number, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 186,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new course called 'Introduction to AI' with description 'Basics of artificial intelligence'?",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description) VALUES (16, 'Introduction to AI', 'Basics of artificial intelligence');"
            },
            {
                "User": "I want to update the email address of student Timmothy Ward to 'timmothy.ward@example.edu'.",
                "Answer": "UPDATE Students SET email_address = 'timmothy.ward@example.edu' WHERE first_name = 'Timmothy' AND last_name = 'Ward';"
            },
            {
                "User": "Can we create a table to keep track of professors with columns for id, name, department, and email?",
                "Answer": "CREATE TABLE Professors (professor_id number PRIMARY KEY, name text, department_id number, email text, FOREIGN KEY (department_id) REFERENCES Departments(department_id));"
            },
            {
                "User": "How about adding a phone number column for the professors' table?",
                "Answer": "ALTER TABLE Professors ADD phone_number text;"
            },
            {
                "User": "Let's insert a new student enrolment for student id 1, in degree program id 1, for the semester id 1.",
                "Answer": "INSERT INTO Student_Enrolment (student_enrolment_id, degree_program_id, semester_id, student_id) VALUES (16, 1, 1, 1);"
            },
            {
                "User": "Can we update the course description of the course with id 1 to 'Data Science fundamentals'?",
                "Answer": "UPDATE Courses SET course_description = 'Data Science fundamentals' WHERE course_id = 1;"
            },
            {
                "User": "Add a new department for 'Data Science' with a brief description 'Department for data science studies'.",
                "Answer": "INSERT INTO Departments (department_id, department_name, department_description) VALUES (16, 'Data Science', 'Department for data science studies');"
            },
            {
                "User": "I need to change the transcript date for transcript id 1 to '2023-01-01 00:00:00'.",
                "Answer": "UPDATE Transcripts SET transcript_date = '2023-01-01 00:00:00' WHERE transcript_id = 1;"
            },
            {
                "User": "How can I retrieve the full names of students who are enrolled in the 'Introduction to AI' course?",
                "Answer": "SELECT s.first_name, s.last_name FROM Students s JOIN Student_Enrolment se ON s.student_id = se.student_id JOIN Student_Enrolment_Courses sec ON se.student_enrolment_id = sec.student_enrolment_id JOIN Courses c ON sec.course_id = c.course_id WHERE c.course_name = 'Introduction to AI';"
            },
            {
                "User": "Can we insert a new section for the 'Introduction to AI' course with the name 'Section A' and a description 'Morning section'?",
                "Answer": "INSERT INTO Sections (section_id, course_id, section_name, section_description) VALUES (16, 16, 'Section A', 'Morning section');"
            },
            {
                "User": "Let's add a new semester called 'Winter 2023' with a description 'First semester of 2023'.",
                "Answer": "INSERT INTO Semesters (semester_id, semester_name, semester_description) VALUES (16, 'Winter 2023', 'First semester of 2023');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 187,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new course called 'Introduction to AI' with the description 'Basics of Artificial Intelligence'?",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description) VALUES (16, 'Introduction to AI', 'Basics of Artificial Intelligence');"
            },
            {
                "User": "I want to update the email address for student id 1 to 'timothy.ward@example.edu'.",
                "Answer": "UPDATE Students SET email_address = 'timothy.ward@example.edu' WHERE student_id = 1;"
            },
            {
                "User": "Can we create a new table to keep track of the instructors for each course?",
                "Answer": "CREATE TABLE Instructors (instructor_id number PRIMARY KEY, first_name text, last_name text, email_address text);"
            },
            {
                "User": "Let's also create a table to assign instructors to courses.",
                "Answer": "CREATE TABLE Course_Instructors (course_id number, instructor_id number, FOREIGN KEY (course_id) REFERENCES Courses(course_id), FOREIGN KEY (instructor_id) REFERENCES Instructors(instructor_id));"
            },
            {
                "User": "How about adding a new column to store the date when a student last updated their address?",
                "Answer": "ALTER TABLE Students ADD last_address_update_date time;"
            },
            {
                "User": "Can we insert a new department named 'Data Science' with a brief description 'Department of Data Science and Analytics'?",
                "Answer": "INSERT INTO Departments (department_id, department_name, department_description) VALUES (16, 'Data Science', 'Department of Data Science and Analytics');"
            },
            {
                "User": "Let's update the course description for course id 2 to 'Advanced Mathematics'.",
                "Answer": "UPDATE Courses SET course_description = 'Advanced Mathematics' WHERE course_id = 2;"
            },
            {
                "User": "Can we add a new student to the database? Assign the following values: student_id 16, current_address_id 1, permanent_address_id 1, first_name 'Alice', last_name 'Johnson', email 'alice.johnson@example.edu'.",
                "Answer": "INSERT INTO Students (student_id, current_address_id, permanent_address_id, first_name, last_name, email_address) VALUES (16, 1, 1, 'Alice', 'Johnson', 'alice.johnson@example.edu');"
            },
            {
                "User": "I need to record a new transcript entry for student_course_id 3 with today's date. How do I do that?",
                "Answer": [
                    "INSERT INTO Transcripts (transcript_id, transcript_date) VALUES (16, CURRENT_DATE);",
                    "INSERT INTO Transcript_Contents (student_course_id, transcript_id) VALUES (3, 16);"
                ]
            },
            {
                "User": "Can we add a column for a phone number to the Instructors table?",
                "Answer": "ALTER TABLE Instructors ADD phone_number text;"
            },
            {
                "User": "Insert a new instructor with the following details: instructor_id 1, first_name 'John', last_name 'Doe', email 'john.doe@example.edu', phone_number '123-456-7890'.",
                "Answer": "INSERT INTO Instructors (instructor_id, first_name, last_name, email_address, phone_number) VALUES (1, 'John', 'Doe', 'john.doe@example.edu', '123-456-7890');"
            },
            {
                "User": "Assign instructor id 1 to course id 2.",
                "Answer": "INSERT INTO Course_Instructors (course_id, instructor_id) VALUES (2, 1);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 188,
        "db": "network_1",
        "interaction": [
            {
                "User": "Can we add a new highschooler to the database? Their ID, name, and grade are 1729, 'Ramanujan', 10.",
                "Answer": "INSERT INTO Highschooler (ID, name, grade) VALUES (1729, 'Ramanujan', 10);"
            },
            {
                "User": "I noticed a mistake in a student's name. Can we change 'Jon' to 'John' for student ID 1510?",
                "Answer": "UPDATE Highschooler SET name = 'John' WHERE ID = 1510;"
            },
            {
                "User": "Can we create a table to track the clubs each student is a member of?",
                "Answer": "CREATE TABLE Clubs (ClubID number PRIMARY KEY, ClubName text, StudentID number, FOREIGN KEY (StudentID) REFERENCES Highschooler(ID));"
            },
            {
                "User": "Let's add a column to track the year each student became friends. Can we do that?",
                "Answer": "ALTER TABLE Friend ADD YearStarted number;"
            },
            {
                "User": "Can we insert the friendship data for two students? The student_id, friend_id, and YearStarted can be 1510, 1729, 2023.",
                "Answer": "INSERT INTO Friend (student_id, friend_id, YearStarted) VALUES (1510, 1729, 2023);"
            },
            {
                "User": "I want to update the grade for a student. Can we set the grade of student ID 1381 to 10?",
                "Answer": "UPDATE Highschooler SET grade = 10 WHERE ID = 1381;"
            },
            {
                "User": "Can you show me all students who are in grade 10?",
                "Answer": "SELECT * FROM Highschooler WHERE grade = 10;"
            },
            {
                "User": "Let's create a table to keep track of who has been class president. What would that look like?",
                "Answer": "CREATE TABLE ClassPresidents (Year number, StudentID number PRIMARY KEY, FOREIGN KEY (StudentID) REFERENCES Highschooler(ID));"
            },
            {
                "User": "Can we add a new like to the database? The student_id and liked_id are 1381, 1729.",
                "Answer": "INSERT INTO Likes (student_id, liked_id) VALUES (1381, 1729);"
            },
            {
                "User": "How can I find out the total number of friends each student has?",
                "Answer": "SELECT T1.student_id, COUNT(*) as TotalFriends FROM Friend AS T1 GROUP BY T1.student_id;"
            },
            {
                "User": "Can we update the YearStarted for the friendship between student ID 1510 and 1729 to 2022?",
                "Answer": "UPDATE Friend SET YearStarted = 2022 WHERE student_id = 1510 AND friend_id = 1729;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 189,
        "db": "cre_Doc_Template_Mgt",
        "interaction": [
            {
                "User": "I need to add a new document template type for reports. The code and description should be 'RPT' and 'Report' respectively.",
                "Answer": "INSERT INTO Ref_Template_Types (Template_Type_Code, Template_Type_Description) VALUES ('RPT', 'Report');"
            },
            {
                "User": "Could we update the template details for the template with ID 1 to include 'Updated for compliance'?",
                "Answer": "UPDATE Templates SET Template_Details = 'Updated for compliance' WHERE Template_ID = 1;"
            },
            {
                "User": "Let's create a new table to store the authors of the documents. It should have Author_ID, Document_ID, and Author_Name.",
                "Answer": "CREATE TABLE Authors (Author_ID number PRIMARY KEY, Document_ID number, Author_Name text, FOREIGN KEY (Document_ID) REFERENCES Documents(Document_ID));"
            },
            {
                "User": "Can we add a new column to the Documents table to track the creation date of each document?",
                "Answer": "ALTER TABLE Documents ADD Creation_Date time;"
            },
            {
                "User": "Insert a new document with the following details: Document_ID 16, Template_ID 2, Document_Name 'Annual Finance Report', Document_Description 'Detailed financial report for the year', Creation_Date '2023-04-01 00:00:00'.",
                "Answer": "INSERT INTO Documents (Document_ID, Template_ID, Document_Name, Document_Description, Creation_Date) VALUES (16, 2, 'Annual Finance Report', 'Detailed financial report for the year', '2023-04-01 00:00:00');"
            },
            {
                "User": "Update the date effective to '2025-01-01 00:00:00' for the template with ID 4.",
                "Answer": "UPDATE Templates SET Date_Effective_To = '2025-01-01 00:00:00' WHERE Template_ID = 4;"
            },
            {
                "User": "Let's insert a new paragraph for document ID 0. The Paragraph_ID is 66, and the text is 'This is the introduction to our operating system'.",
                "Answer": "INSERT INTO Paragraphs (Paragraph_ID, Document_ID, Paragraph_Text) VALUES (66, 0, 'This is the introduction to our operating system');"
            },
            {
                "User": "Can we see a list of all documents along with the total number of paragraphs and the name of the template type?",
                "Answer": "SELECT T1.Document_ID, T1.Document_Name, COUNT(T2.Paragraph_ID) AS Total_Paragraphs, T3.Template_Type_Description FROM Documents AS T1 JOIN Paragraphs AS T2 ON T1.Document_ID = T2.Document_ID JOIN Ref_Template_Types AS T3 ON T1.Template_ID = T3.Template_Type_Code GROUP BY T1.Document_ID;"
            },
            {
                "User": "We need to add an author to our documents. Insert the following author data: Author_ID 101, Document_ID 0, Author_Name 'Alex Smith'.",
                "Answer": "INSERT INTO Authors (Author_ID, Document_ID, Author_Name) VALUES (101, 0, 'Alex Smith');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 190,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? The values for the new city of ID, Name, CountryCode, District, Population are 4080, 'Newtown', 'USA', 'Fictionland', 50000",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'Newtown', 'USA', 'Fictionland', 50000);"
            },
            {
                "User": "I noticed a mistake in the population of Kabul. Can we update it to 1800000?",
                "Answer": "UPDATE city SET Population = 1800000 WHERE ID = 1;"
            },
            {
                "User": "Can we create a new table to track historical population data for cities?",
                "Answer": "CREATE TABLE city_population_history (HistoryId number PRIMARY KEY, CityId number, Year number, Population number, FOREIGN KEY (CityId) REFERENCES city(ID));"
            },
            {
                "User": "Let's add a historical population record for Kabul for the year 2000 with a population of 1500000.",
                "Answer": "INSERT INTO city_population_history (HistoryId, CityId, Year, Population) VALUES (1, 1, 2000, 1500000);"
            },
            {
                "User": "Can we add a column that specifies whether the language is written from left to right in the countrylanguage table?",
                "Answer": "ALTER TABLE countrylanguage ADD LeftToRight text;"
            },
            {
                "User": "Let's set the LeftToRight column to 'Yes' for English and 'No' for Arabic.",
                "Answer": [
                    "UPDATE countrylanguage SET LeftToRight = 'Yes' WHERE Language = 'English';",
                    "UPDATE countrylanguage SET LeftToRight = 'No' WHERE Language = 'Arabic';"
                ]
            },
            {
                "User": "What are the languages spoken in Aruba and are they written from left to right?",
                "Answer": "SELECT Language, LeftToRight FROM countrylanguage WHERE CountryCode = 'ABW';"
            },
            {
                "User": "Can we update the GNP of Afghanistan to 6600?",
                "Answer": "UPDATE country SET GNP = 6600 WHERE Code = 'AFG';"
            },
            {
                "User": "How about we track the changes in GNP over time? Can we create a table for that?",
                "Answer": "CREATE TABLE gnp_history (HistoryId number PRIMARY KEY, CountryCode text, Year number, GNP number, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "Let's insert a historical GNP record for Afghanistan for the year 2005 with a GNP of 5800.",
                "Answer": "INSERT INTO gnp_history (HistoryId, CountryCode, Year, GNP) VALUES (1, 'AFG', 2005, 5800);"
            },
            {
                "User": "Can we see a list of countries with their current and historical GNP for the year 2005?",
                "Answer": "SELECT T1.Name, T1.GNP AS CurrentGNP, T2.GNP AS HistoricalGNP FROM country AS T1 LEFT JOIN gnp_history AS T2 ON T1.Code = T2.CountryCode AND T2.Year = 2005;"
            },
            {
                "User": "I'd like to add a new country to the database. The values for the new country of Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, LocalName, GovernmentForm, HeadOfState, Capital, Code2 are 'XYZ', 'Utopia', 'Fantasy', 'Dreamland', 12345, 2023, 800000, 85.0, 15000, 'Utopia', 'Democratic', 'Leader Name', 4080, 'XY'",
                "Answer": "INSERT INTO country (Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, LocalName, GovernmentForm, HeadOfState, Capital, Code2) VALUES ('XYZ', 'Utopia', 'Fantasy', 'Dreamland', 12345, 2023, 800000, 85.0, 15000, 'Utopia', 'Democratic', 'Leader Name', 4080, 'XY');"
            },
            {
                "User": "Can we alter the city table to include a 'YearFounded' column?",
                "Answer": "ALTER TABLE city ADD YearFounded number;"
            },
            {
                "User": "Let's update the 'YearFounded' for Kabul to the year 1504.",
                "Answer": "UPDATE city SET YearFounded = 1504 WHERE ID = 1;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 191,
        "db": "museum_visit",
        "interaction": [
            {
                "User": "Can we add a new museum to the database with the following details: Museum_ID 10, Name 'Art & History Museum', Num_of_Staff 40, Open_Year '2021'?",
                "Answer": "INSERT INTO museum (Museum_ID, Name, Num_of_Staff, Open_Year) VALUES (10, 'Art & History Museum', 40, '2021');"
            },
            {
                "User": "I've noticed a mistake in the name of visitor ID 2. Can we correct the name to 'Guti Hernandez'?",
                "Answer": "UPDATE visitor SET Name = 'Guti Hernandez' WHERE ID = 2;"
            },
            {
                "User": "We need to track the date of each visit. Can we add a 'Visit_Date' column to the 'visit' table?",
                "Answer": "ALTER TABLE visit ADD Visit_Date text;"
            },
            {
                "User": "Can we insert a new record for a visitor who just signed up? The details are: ID 7, Name 'Lionel Messi', Level_of_membership 3, Age 34",
                "Answer": "INSERT INTO visitor (ID, Name, Level_of_membership, Age) VALUES (7, 'Lionel Messi', 3, 34);"
            },
            {
                "User": "We should also record the date for the new visit. Can you update the visit with Museum_ID 1, visitor_ID 5 to have a Visit_Date '2023-04-01'?",
                "Answer": "UPDATE visit SET Visit_Date = '2023-04-01' WHERE Museum_ID = 1 AND visitor_ID = '5';"
            },
            {
                "User": "Let's create a table to keep track of museum events. Can you create a table with Event_ID, Museum_ID, Event_Name, and Event_Date?",
                "Answer": "CREATE TABLE museum_events (Event_ID number PRIMARY KEY, Museum_ID number, Event_Name text, Event_Date text, FOREIGN KEY (Museum_ID) REFERENCES museum(Museum_ID));"
            },
            {
                "User": "Can we insert an event into the new table? The event details are: Event_ID 101, Museum_ID 2, Event_Name 'Summer Art Exhibition', Event_Date '2023-06-15'",
                "Answer": "INSERT INTO museum_events (Event_ID, Museum_ID, Event_Name, Event_Date) VALUES (101, 2, 'Summer Art Exhibition', '2023-06-15');"
            },
            {
                "User": "I'd like to increase the number of staff by 2 for the 'Plaza Museum'. Can we update this?",
                "Answer": "UPDATE museum SET Num_of_Staff = Num_of_Staff + 2 WHERE Name = 'Plaza Museum';"
            },
            {
                "User": "How can we retrieve the list of events happening at the 'Capital Plaza Museum'?",
                "Answer": "SELECT Event_Name, Event_Date FROM museum_events WHERE Museum_ID = (SELECT Museum_ID FROM museum WHERE Name = 'Capital Plaza Museum');"
            },
            {
                "User": "Can we also keep track of visitor feedback? Let's add a 'Feedback' column to the 'visit' table.",
                "Answer": "ALTER TABLE visit ADD Feedback text;"
            },
            {
                "User": "A visitor just provided feedback for their visit. Can we update the visit record for Museum_ID 3, visitor_ID 3 with the feedback 'Excellent experience'?",
                "Answer": "UPDATE visit SET Feedback = 'Excellent experience' WHERE Museum_ID = 3 AND visitor_ID = '3';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 192,
        "db": "course_teach",
        "interaction": [
            {
                "User": "Can we add a new course called 'History' starting on '8 May'?",
                "Answer": "INSERT INTO course (Staring_Date, Course) VALUES ('8 May', 'History');"
            },
            {
                "User": "I made a mistake with the starting date. Can we change the starting date of the 'History' course to '10 May'?",
                "Answer": "UPDATE course SET Staring_Date = '10 May' WHERE Course = 'History';"
            },
            {
                "User": "Can we create a table to track the attendance of each course?",
                "Answer": "CREATE TABLE course_attendance (Attendance_ID number PRIMARY KEY, Course_ID number, Date text, Attendance_Count number, FOREIGN KEY (Course_ID) REFERENCES course(Course_ID));"
            },
            {
                "User": "Let's add a column to track the room number where each course is being held.",
                "Answer": "ALTER TABLE course_arrange ADD Room_Number text;"
            },
            {
                "User": "Can we insert attendance data for the 'Math' course on '8 May' with 25 students?",
                "Answer": "INSERT INTO course_attendance (Attendance_ID, Course_ID, Date, Attendance_Count) VALUES (101, 2, '8 May', 25);"
            },
            {
                "User": "We need to update the age of teacher 'Joseph Huts' to 33, can we do that?",
                "Answer": "UPDATE teacher SET Age = '33' WHERE Name = 'Joseph Huts';"
            },
            {
                "User": "Can we assign teacher 'Joseph Huts' to the 'History' course with a grade of 2?",
                "Answer": "INSERT INTO course_arrange (Course_ID, Teacher_ID, Grade) VALUES (4, 1, 2);"
            },
            {
                "User": "How can I find out which room the 'Science' course is being held in?",
                "Answer": "SELECT Room_Number FROM course_arrange JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'Science';"
            },
            {
                "User": "Let's add a new teacher named 'Alice Smith', age 28, from 'Greenwich'.",
                "Answer": "INSERT INTO teacher (Teacher_ID, Name, Age, Hometown) VALUES (8, 'Alice Smith', '28', 'Greenwich');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 193,
        "db": "course_teach",
        "interaction": [
            {
                "User": "Can we add a new course to the database? The course details are Course_ID 11, Starting_Date '8 May', Course 'History'.",
                "Answer": "INSERT INTO course (Course_ID, Staring_Date, Course) VALUES (11, '8 May', 'History');"
            },
            {
                "User": "I'd like to update the starting date for the Math course to '10 May'. Can you do that?",
                "Answer": "UPDATE course SET Staring_Date = '10 May' WHERE Course = 'Math';"
            },
            {
                "User": "Can we create a table to keep track of teacher salaries?",
                "Answer": "CREATE TABLE teacher_salary (Teacher_ID number PRIMARY KEY, Salary number, FOREIGN KEY (Teacher_ID) REFERENCES teacher(Teacher_ID));"
            },
            {
                "User": "How about adding a column for email addresses to the teacher table?",
                "Answer": "ALTER TABLE teacher ADD Email text;"
            },
            {
                "User": "Can we insert the salary data for a teacher? The Teacher_ID and Salary are 4 and 50000 respectively.",
                "Answer": "INSERT INTO teacher_salary (Teacher_ID, Salary) VALUES (4, 50000);"
            },
            {
                "User": "Let's update the hometown of teacher id 2 to 'Manchester'.",
                "Answer": "UPDATE teacher SET Hometown = 'Manchester' WHERE Teacher_ID = 2;"
            },
            {
                "User": "Can you show me the list of teachers with their email addresses?",
                "Answer": "SELECT Name, Email FROM teacher;"
            },
            {
                "User": "I want to assign a teacher to a new course. Can we add a record with Course_ID 11, Teacher_ID 1, and Grade 3?",
                "Answer": "INSERT INTO course_arrange (Course_ID, Teacher_ID, Grade) VALUES (11, 1, 3);"
            },
            {
                "User": "Could you show me the average age of teachers for each hometown?",
                "Answer": "SELECT Hometown, AVG(CAST(Age AS number)) AS Average_Age FROM teacher GROUP BY Hometown;"
            },
            {
                "User": "I need to correct the age of Joseph Huts to 33. Can you update it?",
                "Answer": "UPDATE teacher SET Age = '33' WHERE Name = 'Joseph Huts';"
            },
            {
                "User": "Can we add a new teacher to the database? The teacher's details are Teacher_ID 8, Name 'Alice Smith', Age '28', Hometown 'Liverpool'.",
                "Answer": "INSERT INTO teacher (Teacher_ID, Name, Age, Hometown) VALUES (8, 'Alice Smith', '28', 'Liverpool');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 194,
        "db": "dog_kennels",
        "interaction": [
            {
                "User": "Can we add a new breed to the Breeds table? The breed code and breed name should be 'LAB' and 'Labrador Retriever'.",
                "Answer": "INSERT INTO Breeds (breed_code, breed_name) VALUES ('LAB', 'Labrador Retriever');"
            },
            {
                "User": "I want to update the charge amount for 'Drugs' to 350. Can you do that?",
                "Answer": "UPDATE Charges SET charge_amount = 350 WHERE charge_type = 'Drugs';"
            },
            {
                "User": "Can we create a new table to keep track of dog vaccinations?",
                "Answer": "CREATE TABLE Vaccinations (vaccination_id number PRIMARY KEY, dog_id number, vaccination_date time, vaccine_type text, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id));"
            },
            {
                "User": "Could you add a new column to the Owners table to store their preferred contact method?",
                "Answer": "ALTER TABLE Owners ADD preferred_contact_method text;"
            },
            {
                "User": "Let's insert a new professional into the Professionals table. The values are: professional_id 16, role_code 'Vet', first_name 'Sarah', last_name 'Connor', street '123 Skynet Ave', city 'Cyberdyne', state 'CA', zip_code '90001', email_address 'sarah.connor@example.com', home_phone '555-1010', cell_number '555-2020'.",
                "Answer": "INSERT INTO Professionals (professional_id, role_code, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number) VALUES (16, 'Vet', 'Sarah', 'Connor', '123 Skynet Ave', 'Cyberdyne', 'CA', '90001', 'sarah.connor@example.com', '555-1010', '555-2020');"
            },
            {
                "User": "We need to update the size description for 'SML' to 'Small to Medium'. Can you update it?",
                "Answer": "UPDATE Sizes SET size_description = 'Small to Medium' WHERE size_code = 'SML';"
            },
            {
                "User": "Can you insert a new treatment for dog_id 1 with professional_id 2, treatment_type_code 'VAC', date_of_treatment '2023-04-01 10:00:00', and cost_of_treatment 200?",
                "Answer": "INSERT INTO Treatments (treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment) VALUES ((SELECT MAX(treatment_id) + 1 FROM Treatments), 1, 2, 'VAC', '2023-04-01 10:00:00', 200);"
            },
            {
                "User": "Let's add a new owner with the following details: owner_id 16, first_name 'John', last_name 'Doe', street '789 Unknown Rd', city 'Mysteryville', state 'TX', zip_code '75001', email_address 'john.doe@example.com', home_phone '555-3030', cell_number '555-4040', preferred_contact_method 'Email'.",
                "Answer": "INSERT INTO Owners (owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number, preferred_contact_method) VALUES (16, 'John', 'Doe', '789 Unknown Rd', 'Mysteryville', 'TX', '75001', 'john.doe@example.com', '555-3030', '555-4040', 'Email');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 195,
        "db": "course_teach",
        "interaction": [
            {
                "User": "Can we add a new teacher to the database? The teacher's ID, name, age, and hometown are 8, 'Alice Smith', '40', 'Springfield'.",
                "Answer": "INSERT INTO teacher (Teacher_ID, Name, Age, Hometown) VALUES (8, 'Alice Smith', '40', 'Springfield');"
            },
            {
                "User": "I'd like to update the starting date for the Science course. Can we change it to '8 May' for course id 3?",
                "Answer": "UPDATE course SET Staring_Date = '8 May' WHERE Course_ID = 3;"
            },
            {
                "User": "Can we create a table to track the enrollment of each course?",
                "Answer": "CREATE TABLE course_enrollment (Enrollment_ID number PRIMARY KEY, Course_ID number, Student_Count number, FOREIGN KEY (Course_ID) REFERENCES course(Course_ID));"
            },
            {
                "User": "How about adding a column for the email address of each teacher?",
                "Answer": "ALTER TABLE teacher ADD Email text;"
            },
            {
                "User": "Can we insert the enrollment data for a specific course? Enrollment_ID, Course_ID, Student_Count can be assigned to 101, 2, 35.",
                "Answer": "INSERT INTO course_enrollment (Enrollment_ID, Course_ID, Student_Count) VALUES (101, 2, 35);"
            },
            {
                "User": "Let's update the grade for the course arrangement of course id 2 and teacher id 5 to be 2.",
                "Answer": "UPDATE course_arrange SET Grade = 2 WHERE Course_ID = 2 AND Teacher_ID = 5;"
            },
            {
                "User": "How can I list all courses along with their teacher's email addresses?",
                "Answer": "SELECT T2.Course, T3.Email FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID = T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID = T3.Teacher_ID;"
            },
            {
                "User": "Can we add a new course to the database? The course's ID, starting date, and name are 11, '10 May', 'Art History'.",
                "Answer": "INSERT INTO course (Course_ID, Staring_Date, Course) VALUES (11, '10 May', 'Art History');"
            },
            {
                "User": "I noticed a typo in the teacher's name. Can we correct 'Gustaaf Deloor' to 'Gustaf Deloor' for teacher id 2?",
                "Answer": "UPDATE teacher SET Name = 'Gustaf Deloor' WHERE Teacher_ID = 2;"
            },
            {
                "User": "Can we update the enrollment count for course id 1? The new student count is 28.",
                "Answer": "UPDATE course_enrollment SET Student_Count = 28 WHERE Course_ID = 1;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 196,
        "db": "car_1",
        "interaction": [
            {
                "User": "Can we add a new country to the database? The values for CountryId, CountryName, and Continent are 16, 'South Korea', 3.",
                "Answer": "INSERT INTO countries (CountryId, CountryName, Continent) VALUES (16, 'South Korea', 3);"
            },
            {
                "User": "I need to correct the continent for Germany. It should be in Europe, which has the id 2. Can we update this?",
                "Answer": "UPDATE countries SET Continent = 2 WHERE CountryName = 'Germany';"
            },
            {
                "User": "Can we create a new table to keep track of car features like air conditioning and navigation?",
                "Answer": "CREATE TABLE car_features (FeatureId number PRIMARY KEY, ModelId number, AirConditioning boolean, Navigation boolean, FOREIGN KEY (ModelId) REFERENCES model_list(ModelId));"
            },
            {
                "User": "Let's add a new feature to the car_features table to track if a model has leather seats.",
                "Answer": "ALTER TABLE car_features ADD LeatherSeats boolean;"
            },
            {
                "User": "Can we insert a new car maker? The Id, Maker, FullName, and Country for the new maker are 24, 'kia', 'Kia Motors', '16'.",
                "Answer": "INSERT INTO car_makers (Id, Maker, FullName, Country) VALUES (24, 'kia', 'Kia Motors', '16');"
            },
            {
                "User": "The model 'audi' should be updated to 'Audi' for ModelId 2 in the model_list.",
                "Answer": "UPDATE model_list SET Model = 'Audi' WHERE ModelId = 2;"
            },
            {
                "User": "I want to insert a new model into model_list. The ModelId, Maker, and Model are 37, 23, 'kia optima'.",
                "Answer": "INSERT INTO model_list (ModelId, Maker, Model) VALUES (37, 23, 'kia optima');"
            },
            {
                "User": "Can we update the car_names table to correct the Make 'chevrolet' to 'Chevrolet' for MakeId 1?",
                "Answer": "UPDATE car_names SET Make = 'Chevrolet' WHERE MakeId = 1;"
            },
            {
                "User": "Let's add a record to the cars_data table. The Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, and Year are 407, '25', 4, 2.0, '150', 2800, 8.5, 2021.",
                "Answer": "INSERT INTO cars_data (Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year) VALUES (407, '25', 4, 2.0, '150', 2800, 8.5, 2021);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 197,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? The values for the new city of ID, Name, CountryCode, District, Population are 4080, 'New Atlantis', 'OCE', 'Fantasy District', 50000",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'New Atlantis', 'OCE', 'Fantasy District', 50000);"
            },
            {
                "User": "I'd like to update the population of Kabul to reflect the latest census. Can we change it to 1800000?",
                "Answer": "UPDATE city SET Population = 1800000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Can we create a table to track the languages spoken in each city?",
                "Answer": "CREATE TABLE city_language (CityID number, Language text, IsOfficial text, Percentage number, FOREIGN KEY (CityID) REFERENCES city(ID));"
            },
            {
                "User": "How about adding a column to track the mayor of each city?",
                "Answer": "ALTER TABLE city ADD Mayor text;"
            },
            {
                "User": "Can we insert the official language data for Kabul? CityID, Language, IsOfficial, Percentage can be assigned to 1, 'Dari', 'T', 77",
                "Answer": "INSERT INTO city_language (CityID, Language, IsOfficial, Percentage) VALUES (1, 'Dari', 'T', 77);"
            },
            {
                "User": "Let's update the mayor for the city of 'Herat'. Can we set the mayor's name to 'Ahmad Shah Durrani'?",
                "Answer": "UPDATE city SET Mayor = 'Ahmad Shah Durrani' WHERE Name = 'Herat';"
            },
            {
                "User": "How can I list all cities along with their mayors?",
                "Answer": "SELECT Name, Mayor FROM city WHERE Mayor IS NOT NULL;"
            },
            {
                "User": "Can we add a new country to the database? The values for the new country of Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, LocalName, GovernmentForm, HeadOfState, Capital are 'XYZ', 'Utopia', 'Fantasy', 'Imaginary Region', 50000, 2023, 1000000, 100, 500000, 'Utopia', 'Democratic', 'Leader Name', 4080",
                "Answer": "INSERT INTO country (Code, Name, Continent, Region, SurfaceArea, IndepYear, Population, LifeExpectancy, GNP, LocalName, GovernmentForm, HeadOfState, Capital) VALUES ('XYZ', 'Utopia', 'Fantasy', 'Imaginary Region', 50000, 2023, 1000000, 100, 500000, 'Utopia', 'Democratic', 'Leader Name', 4080);"
            },
            {
                "User": "Can we update the name of the continent from 'North America' to 'Northern America' for country Aruba?",
                "Answer": "UPDATE country SET Continent = 'Northern America' WHERE Name = 'Aruba';"
            },
            {
                "User": "I need to correct the spelling of Angola's local name to 'Angola'. Can we update this?",
                "Answer": "UPDATE country SET LocalName = 'Angola' WHERE Code = 'AGO';"
            },
            {
                "User": "Let's add a new language for Utopia. Can we insert the language 'Utopian' with CountryCode 'XYZ', marking it as official and spoken by 95% of the population?",
                "Answer": "INSERT INTO countrylanguage (CountryCode, Language, IsOfficial, Percentage) VALUES ('XYZ', 'Utopian', 'T', 95);"
            },
            {
                "User": "How can I find the total population of countries that have a life expectancy greater than 75?",
                "Answer": "SELECT SUM(Population) AS TotalPopulation FROM country WHERE LifeExpectancy > 75;"
            },
            {
                "User": "What is the average surface area of countries within the 'Caribbean' region?",
                "Answer": "SELECT AVG(SurfaceArea) AS AvgSurfaceArea FROM country WHERE Region = 'Caribbean';"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 198,
        "db": "dog_kennels",
        "interaction": [
            {
                "User": "Can we add a new breed to the database? The breed code and breed name are 'LAB', 'Labrador'.",
                "Answer": "INSERT INTO Breeds (breed_code, breed_name) VALUES ('LAB', 'Labrador');"
            },
            {
                "User": "I want to update the charge amount for 'Health Check' to 650. Could you do that?",
                "Answer": "UPDATE Charges SET charge_amount = 650 WHERE charge_type = 'Health Check';"
            },
            {
                "User": "Can we create a new table to keep track of dog vaccinations?",
                "Answer": "CREATE TABLE Vaccinations (vaccination_id number PRIMARY KEY, dog_id number, date_of_vaccination time, vaccination_type text, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id));"
            },
            {
                "User": "Let's add a new column to track the adoption status of the dogs. Can you add that?",
                "Answer": "ALTER TABLE Dogs ADD adoption_status text DEFAULT 'Available';"
            },
            {
                "User": "Please insert a new charge type for 'Grooming' with a charge amount of 150.",
                "Answer": "INSERT INTO Charges (charge_id, charge_type, charge_amount) VALUES ((SELECT MAX(charge_id) + 1 FROM Charges), 'Grooming', 150);"
            },
            {
                "User": "Can we update the size description for 'MED' to 'Medium to Large'?",
                "Answer": "UPDATE Sizes SET size_description = 'Medium to Large' WHERE size_code = 'MED';"
            },
            {
                "User": "How can I list all the dogs with their breed names?",
                "Answer": "SELECT T1.name, T2.breed_name FROM Dogs AS T1 JOIN Breeds AS T2 ON T1.breed_code = T2.breed_code;"
            },
            {
                "User": "Let's add a record of a treatment for dog id 2 by professional id 5 for 'Vaccination' on '2023-04-01' costing 200.",
                "Answer": "INSERT INTO Treatments (treatment_id, dog_id, professional_id, treatment_type_code, date_of_treatment, cost_of_treatment) VALUES ((SELECT MAX(treatment_id) + 1 FROM Treatments), 2, 5, 'VAC', '2023-04-01', 200);"
            },
            {
                "User": "Can we change the email address of the owner with id 1 to 'nora.haley@example.com'?",
                "Answer": "UPDATE Owners SET email_address = 'nora.haley@example.com' WHERE owner_id = 1;"
            },
            {
                "User": "Could you add a new owner with the following details: Id 16, First Name 'John', Last Name 'Doe', Street '123 Main St', City 'Anytown', State 'CA', Zip '90210', Email 'john.doe@example.com', Home Phone '555-1234', Cell Number '555-5678'?",
                "Answer": "INSERT INTO Owners (owner_id, first_name, last_name, street, city, state, zip_code, email_address, home_phone, cell_number) VALUES (16, 'John', 'Doe', '123 Main St', 'Anytown', 'CA', '90210', 'john.doe@example.com', '555-1234', '555-5678');"
            },
            {
                "User": "Let's create a new table for dog allergies with columns for allergy_id, dog_id, and allergy_description.",
                "Answer": "CREATE TABLE Dog_Allergies (allergy_id number PRIMARY KEY, dog_id number, allergy_description text, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id));"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 199,
        "db": "car_1",
        "interaction": [
            {
                "User": "Can we add a new country to the database? The country's name is 'Spain' and it belongs to the continent 'Europe'.",
                "Answer": "INSERT INTO countries (CountryId, CountryName, Continent) VALUES (16, 'Spain', 2);"
            },
            {
                "User": "I noticed that we don't have a record for Tesla in our car makers. Can we add Tesla with Id 24, Maker 'tesla', FullName 'Tesla, Inc.', and Country 'USA'?",
                "Answer": "INSERT INTO car_makers (Id, Maker, FullName, Country) VALUES (24, 'tesla', 'Tesla, Inc.', '1');"
            },
            {
                "User": "Can we update the country for Volkswagen to be 'Germany' instead of just '2'?",
                "Answer": "UPDATE car_makers SET Country = 'Germany' WHERE Maker = 'volkswagen';"
            },
            {
                "User": "Let's create a table to keep track of car features like 'Color' and 'InteriorMaterial'.",
                "Answer": "CREATE TABLE car_features (FeatureId number PRIMARY KEY, ModelId number, Color text, InteriorMaterial text, FOREIGN KEY (ModelId) REFERENCES model_list(ModelId));"
            },
            {
                "User": "How about adding a column to track the number of doors for each car model in the cars_data table?",
                "Answer": "ALTER TABLE cars_data ADD Doors number;"
            },
            {
                "User": "Can we insert a new car model for Tesla? The model is 'Model S' and the ModelId can be 37.",
                "Answer": "INSERT INTO model_list (ModelId, Maker, Model) VALUES (37, 23, 'Model S');"
            },
            {
                "User": "We should also add a new car name for the 'Model S'. Let's use MakeId 407, Make 'tesla', and Model 'tesla model s'.",
                "Answer": "INSERT INTO car_names (MakeId, Model, Make) VALUES (407, 'tesla model s', 'tesla');"
            },
            {
                "User": "Let's update the MPG for the car with Id 1 to '20'.",
                "Answer": "UPDATE cars_data SET MPG = '20' WHERE Id = 1;"
            },
            {
                "User": "I'd like to see a list of all car models with their features. Can you provide a query for that?",
                "Answer": "SELECT T1.Model, T2.Color, T2.InteriorMaterial FROM model_list AS T1 LEFT JOIN car_features AS T2 ON T1.ModelId = T2.ModelId;"
            },
            {
                "User": "Could you tell me which cars have more than 4 cylinders and are made in the USA?",
                "Answer": "SELECT car_names.Model FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id JOIN car_makers ON car_names.MakeId = car_makers.Id WHERE cars_data.Cylinders > 4 AND car_makers.Country = (SELECT CountryId FROM countries WHERE CountryName = 'USA');"
            },
            {
                "User": "What if we want to track the engine type for each car? Can we add a column for that in the cars_data table?",
                "Answer": "ALTER TABLE cars_data ADD EngineType text;"
            },
            {
                "User": "Can we insert a new record in cars_data for the 'Model S' with the following specs: Id 407, MPG '100', Cylinders 0 (since it's electric), Edispl 0, Horsepower 'NA', Weight 4647, Accelerate 2.4, Year 2021, Doors 4, EngineType 'Electric'?",
                "Answer": "INSERT INTO cars_data (Id, MPG, Cylinders, Edispl, Horsepower, Weight, Accelerate, Year, Doors, EngineType) VALUES (407, '100', 0, 0, 'NA', 4647, 2.4, 2021, 4, 'Electric');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 200,
        "db": "world_1",
        "interaction": [
            {
                "User": "Can we add a new city to the database? The values for the new city of ID, Name, CountryCode, District, Population are 4080, 'Newville', 'NVC', 'New District', 50000",
                "Answer": "INSERT INTO city (ID, Name, CountryCode, District, Population) VALUES (4080, 'Newville', 'NVC', 'New District', 50000);"
            },
            {
                "User": "I'd like to update the population of Kabul. Can we change it to 1800000?",
                "Answer": "UPDATE city SET Population = 1800000 WHERE Name = 'Kabul';"
            },
            {
                "User": "Can we create a table to keep track of the mayors of each city?",
                "Answer": "CREATE TABLE city_mayors (MayorID number PRIMARY KEY, CityID number, Name text, TermStart number, TermEnd number, FOREIGN KEY (CityID) REFERENCES city(ID));"
            },
            {
                "User": "How about adding a column for the date of the last census in the city table?",
                "Answer": "ALTER TABLE city ADD LastCensusDate date;"
            },
            {
                "User": "Let's update the GNP of Afghanistan to reflect new economic data. Can we set it to 6200?",
                "Answer": "UPDATE country SET GNP = 6200 WHERE Code = 'AFG';"
            },
            {
                "User": "How can I list all cities with their population and the name of their mayors?",
                "Answer": "SELECT T1.Name AS CityName, T1.Population, T2.Name AS MayorName FROM city AS T1 LEFT JOIN city_mayors AS T2 ON T1.ID = T2.CityID;"
            },
            {
                "User": "Can we add a new record for a city mayor? The MayorID, CityID, Name, TermStart, TermEnd can be 101, 1, 'Ahmad Wali Massoud', 2021, 2025",
                "Answer": "INSERT INTO city_mayors (MayorID, CityID, Name, TermStart, TermEnd) VALUES (101, 1, 'Ahmad Wali Massoud', 2021, 2025);"
            },
            {
                "User": "I want to know the average life expectancy in countries where English is an official language.",
                "Answer": "SELECT AVG(T1.LifeExpectancy) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T';"
            },
            {
                "User": "Can we track the changes in GNP over time? Let's create a table called country_gnp_history with columns for CountryCode, Year, and GNP.",
                "Answer": "CREATE TABLE country_gnp_history (HistoryID number PRIMARY KEY, CountryCode text, Year number, GNP number, FOREIGN KEY (CountryCode) REFERENCES country(Code));"
            },
            {
                "User": "Let's insert historical GNP data for Afghanistan. HistoryID, CountryCode, Year, GNP can be 301, 'AFG', 2000, 5500",
                "Answer": "INSERT INTO country_gnp_history (HistoryID, CountryCode, Year, GNP) VALUES (301, 'AFG', 2000, 5500);"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 201,
        "db": "flight_2",
        "interaction": [
            {
                "User": "Can we add a new airline to the database with Airline 'SkyHigh', Abbreviation 'SKH', and Country 'Fantasia'?",
                "Answer": "INSERT INTO airlines (Airline, Abbreviation, Country) VALUES ('SkyHigh', 'SKH', 'Fantasia');"
            },
            {
                "User": "I noticed a typo in the abbreviation for 'US Airways', can we correct it from 'USAir' to 'USAR'?",
                "Answer": "UPDATE airlines SET Abbreviation = 'USAR' WHERE uid = 2;"
            },
            {
                "User": "We need to track the number of gates at each airport. Can we add a 'Gates' column to the airports table?",
                "Answer": "ALTER TABLE airports ADD Gates number;"
            },
            {
                "User": "Let's insert the number of gates for 'Phillips AAF'. Assume it has 5 gates.",
                "Answer": "UPDATE airports SET Gates = 5 WHERE AirportCode = 'APG';"
            },
            {
                "User": "Can we create a table to store information about frequent flyer programs?",
                "Answer": "CREATE TABLE frequent_flyer_programs (ProgramId number PRIMARY KEY, AirlineId number, ProgramName text, FOREIGN KEY (AirlineId) REFERENCES airlines(uid));"
            },
            {
                "User": "Let's add a new frequent flyer program for 'United Airlines' called 'MileagePlus' with ProgramId 101.",
                "Answer": "INSERT INTO frequent_flyer_programs (ProgramId, AirlineId, ProgramName) VALUES (101, 1, 'MileagePlus');"
            },
            {
                "User": "Can we update the flight number from 28 to 128 for 'United Airlines'?",
                "Answer": "UPDATE flights SET FlightNo = 128 WHERE Airline = 1 AND FlightNo = 28;"
            },
            {
                "User": "How can I find all airlines that have flights departing from 'Phillips AAF'?",
                "Answer": "SELECT a.Airline FROM airlines AS a JOIN flights AS f ON a.uid = f.Airline WHERE f.SourceAirport = 'APG';"
            },
            {
                "User": "I'd like to see a list of airports and the number of flights departing from each airport. Can we create a view for that?",
                "Answer": "CREATE VIEW airport_departure_count AS SELECT a.AirportName, COUNT(f.FlightNo) AS DepartureCount FROM airports AS a LEFT JOIN flights AS f ON a.AirportCode = f.SourceAirport GROUP BY a.AirportName;"
            },
            {
                "User": "Can we add a new flight record? The values for Airline, FlightNo, SourceAirport, DestAirport are 3, 302, 'ABR', 'DYS'.",
                "Answer": "INSERT INTO flights (Airline, FlightNo, SourceAirport, DestAirport) VALUES (3, 302, 'ABR', 'DYS');"
            },
            {
                "User": "Can we have a list of all airlines in the 'USA' and the total number of flights they operate?",
                "Answer": "SELECT al.Airline, COUNT(fl.FlightNo) AS TotalFlights FROM airlines AS al JOIN flights AS fl ON al.uid = fl.Airline WHERE al.Country = 'USA' GROUP BY al.Airline;"
            },
            {
                "User": "Let's change the country of 'Delta Airlines' to 'United States'.",
                "Answer": "UPDATE airlines SET Country = 'United States' WHERE uid = 3;"
            },
            {
                "User": "How about we add a 'LastMaintenanceDate' column to track the last maintenance date for each airplane?",
                "Answer": "ALTER TABLE flights ADD LastMaintenanceDate date;"
            },
            {
                "User": "Let's set the last maintenance date for FlightNo 300 to '2023-04-01'.",
                "Answer": "UPDATE flights SET LastMaintenanceDate = '2023-04-01' WHERE FlightNo = 300;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 202,
        "db": "network_1",
        "interaction": [
            {
                "User": "Can we add a new highschooler to the database? The values for ID, name, and grade are 1725, 'Alex', and 10.",
                "Answer": "INSERT INTO Highschooler (ID, name, grade) VALUES (1725, 'Alex', 10);"
            },
            {
                "User": "I'd like to update the grade for Tiffany. Can we change it to 11?",
                "Answer": "UPDATE Highschooler SET grade = 11 WHERE name = 'Tiffany';"
            },
            {
                "User": "Can we create a table to track the hobbies of each highschooler?",
                "Answer": "CREATE TABLE Hobbies (student_id number, hobby text, PRIMARY KEY (student_id, hobby), FOREIGN KEY (student_id) REFERENCES Highschooler(ID));"
            },
            {
                "User": "How about adding a column to track the year each highschooler joined the school?",
                "Answer": "ALTER TABLE Highschooler ADD JoinYear number;"
            },
            {
                "User": "Can we insert a hobby for a specific highschooler? Let's say student ID 1510 is interested in 'Basketball'.",
                "Answer": "INSERT INTO Hobbies (student_id, hobby) VALUES (1510, 'Basketball');"
            },
            {
                "User": "Let's update the name of a student. Can we change the name of the student with ID 1689 to 'Gabe'?",
                "Answer": "UPDATE Highschooler SET name = 'Gabe' WHERE ID = 1689;"
            },
            {
                "User": "How can I list all highschoolers along with their hobbies?",
                "Answer": "SELECT T1.name, T2.hobby FROM Highschooler AS T1 JOIN Hobbies AS T2 ON T1.ID = T2.student_id;"
            },
            {
                "User": "Can we add a new friendship relation between student ID 1725 and 1510?",
                "Answer": "INSERT INTO Friend (student_id, friend_id) VALUES (1725, 1510);"
            },
            {
                "User": "I want to remove a like relationship where student 1689 liked student 1709. How do I do that?",
                "Answer": "DELETE FROM Likes WHERE student_id = 1689 AND liked_id = 1709;"
            },
            {
                "User": "Can we track the number of friends each highschooler has? Maybe add a column for it?",
                "Answer": "ALTER TABLE Highschooler ADD FriendsCount number;"
            },
            {
                "User": "Let's update the number of friends for Jordan. Suppose Jordan has 5 friends.",
                "Answer": "UPDATE Highschooler SET FriendsCount = 5 WHERE name = 'Jordan';"
            },
            {
                "User": "Can we create a table to track the extracurricular activities of highschoolers?",
                "Answer": "CREATE TABLE Activities (ActivityId number PRIMARY KEY, student_id number, ActivityName text, FOREIGN KEY (student_id) REFERENCES Highschooler(ID));"
            },
            {
                "User": "Let's insert a new activity for student ID 1381, say 'Chess Club'.",
                "Answer": "INSERT INTO Activities (ActivityId, student_id, ActivityName) VALUES (101, 1381, 'Chess Club');"
            },
            {
                "User": "Can we see a list of highschoolers who have a grade greater than 9 and their respective hobbies?",
                "Answer": "SELECT T1.name, T2.hobby FROM Highschooler AS T1 JOIN Hobbies AS T2 ON T1.ID = T2.student_id WHERE T1.grade > 9;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 203,
        "db": "dog_kennels",
        "interaction": [
            {
                "User": "Can we add a new breed to the Breeds table? Let's add a breed with code 'LAB' and name 'Labrador'.",
                "Answer": "INSERT INTO Breeds (breed_code, breed_name) VALUES ('LAB', 'Labrador');"
            },
            {
                "User": "I noticed an error in the breed name for code 'HUS'. Can we update it to 'Siberian Husky'?",
                "Answer": "UPDATE Breeds SET breed_name = 'Siberian Husky' WHERE breed_code = 'HUS';"
            },
            {
                "User": "We should track the vaccinations for each dog. Can we create a table for this?",
                "Answer": "CREATE TABLE Vaccinations (vaccination_id number PRIMARY KEY, dog_id number, vaccination_date time, vaccine_type text, FOREIGN KEY (dog_id) REFERENCES Dogs(dog_id));"
            },
            {
                "User": "Let's add a new column to the Dogs table to record if they are vaccinated or not. The column should be named 'vaccinated_yn' with type 'text'.",
                "Answer": "ALTER TABLE Dogs ADD vaccinated_yn text;"
            },
            {
                "User": "Can we insert a record into the new Vaccinations table? The details are vaccination_id 101, dog_id 2, vaccination_date '2023-04-01 10:00:00', vaccine_type 'Rabies'.",
                "Answer": "INSERT INTO Vaccinations (vaccination_id, dog_id, vaccination_date, vaccine_type) VALUES (101, 2, '2023-04-01 10:00:00', 'Rabies');"
            },
            {
                "User": "Now that we have the Vaccinations table, can we update dog_id 2 in the Dogs table to show they are vaccinated?",
                "Answer": "UPDATE Dogs SET vaccinated_yn = '1' WHERE dog_id = 2;"
            },
            {
                "User": "I'd like to see a list of all large dogs that have been vaccinated. Can you provide that?",
                "Answer": "SELECT D.name FROM Dogs AS D JOIN Sizes AS S ON D.size_code = S.size_code WHERE D.vaccinated_yn = '1' AND S.size_description = 'Large';"
            },
            {
                "User": "Let's add a new charge type for vaccinations in the Charges table. The charge_id can be 4, charge_type 'Vaccination', and charge_amount 150.",
                "Answer": "INSERT INTO Charges (charge_id, charge_type, charge_amount) VALUES (4, 'Vaccination', 150);"
            },
            {
                "User": "Can we update the address for owner_id 1 to '1234 New Address St, New City, New State, 12345'?",
                "Answer": "UPDATE Owners SET street = '1234 New Address St', city = 'New City', state = 'New State', zip_code = '12345' WHERE owner_id = 1;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 204,
        "db": "car_1",
        "interaction": [
            {
                "User": "Can we add a new country to the countries table? The country is 'China' with a continent id of 3.",
                "Answer": "INSERT INTO countries (CountryName, Continent) VALUES ('China', 3);"
            },
            {
                "User": "Let's add a new car maker called 'Tesla' with id 24 from the USA.",
                "Answer": "INSERT INTO car_makers (Id, Maker, FullName, Country) VALUES (24, 'tesla', 'Tesla, Inc.', '1');"
            },
            {
                "User": "I want to correct the country name for country id 2 to 'Germany'.",
                "Answer": "UPDATE countries SET CountryName = 'Germany' WHERE CountryId = 2;"
            },
            {
                "User": "Can we create a table to keep track of the designers for each car model?",
                "Answer": "CREATE TABLE model_designers (DesignerId number PRIMARY KEY, ModelId number, DesignerName text, FOREIGN KEY (ModelId) REFERENCES model_list(ModelId));"
            },
            {
                "User": "Let's add a column to the car_names table to include the year the model was released.",
                "Answer": "ALTER TABLE car_names ADD YearReleased number;"
            },
            {
                "User": "Insert a new record into the car_names table with MakeId 407, Model 'tesla model s', Make 'tesla', and YearReleased 2012.",
                "Answer": "INSERT INTO car_names (MakeId, Model, Make, YearReleased) VALUES (407, 'tesla model s', 'tesla', 2012);"
            },
            {
                "User": "Update the MPG for car data id 1 to '19'.",
                "Answer": "UPDATE cars_data SET MPG = '19' WHERE Id = 1;"
            },
            {
                "User": "How can we list the car makers along with their country names instead of country ids?",
                "Answer": "SELECT T1.FullName, T2.CountryName FROM car_makers AS T1 JOIN countries AS T2 ON T1.Country = T2.CountryId;"
            },
            {
                "User": "Can we add a new model to the model_list? The ModelId is 37, Maker is 23, and the Model is 'model y'.",
                "Answer": "INSERT INTO model_list (ModelId, Maker, Model) VALUES (37, 23, 'model y');"
            },
            {
                "User": "Let's update the continent for country id 3 to be in continent 4.",
                "Answer": "UPDATE countries SET Continent = 4 WHERE CountryId = 3;"
            },
            {
                "User": "I need to add a new designer to the model_designers table. DesignerId is 101, ModelId is 37, and DesignerName is 'Franz von Holzhausen'.",
                "Answer": "INSERT INTO model_designers (DesignerId, ModelId, DesignerName) VALUES (101, 37, 'Franz von Holzhausen');"
            },
            {
                "User": "Can we update the Horsepower for car data id 2 to '170'?",
                "Answer": "UPDATE cars_data SET Horsepower = '170' WHERE Id = 2;"
            },
            {
                "User": "Let's create a table to track the features of each car model, like safety ratings.",
                "Answer": "CREATE TABLE model_features (FeatureId number PRIMARY KEY, ModelId number, SafetyRating text, FOREIGN KEY (ModelId) REFERENCES model_list(ModelId));"
            },
            {
                "User": "How about adding a column to track the type of fuel each car uses in the cars_data table?",
                "Answer": "ALTER TABLE cars_data ADD FuelType text;"
            },
            {
                "User": "Can we insert the fuel type for car data id 3 as 'Gasoline'?",
                "Answer": "UPDATE cars_data SET FuelType = 'Gasoline' WHERE Id = 3;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 205,
        "db": "car_1",
        "interaction": [
            {
                "User": "Can we add a new country to the countries table? Let's add India with ContinentId 3.",
                "Answer": "INSERT INTO countries (CountryName, Continent) VALUES ('India', 3);"
            },
            {
                "User": "Let's add a new car maker. The maker's details are Id 24, Maker 'tesla', FullName 'Tesla, Inc.', Country 'USA'.",
                "Answer": "INSERT INTO car_makers (Id, Maker, FullName, Country) VALUES (24, 'tesla', 'Tesla, Inc.', '1');"
            },
            {
                "User": "We need to correct the country for maker id 2. It should be 'Germany', not '2'. Can we update this?",
                "Answer": "UPDATE car_makers SET Country = (SELECT CountryId FROM countries WHERE CountryName = 'Germany') WHERE Id = 2;"
            },
            {
                "User": "Can we insert a new model into the model_list? Let's add ModelId 37, Maker 23 (Tesla), and Model 'Model S'.",
                "Answer": "INSERT INTO model_list (ModelId, Maker, Model) VALUES (37, 23, 'Model S');"
            },
            {
                "User": "Let's create a table to store the features of each car model. We'll need columns for ModelId, FeatureId, and Description.",
                "Answer": "CREATE TABLE model_features (ModelId number, FeatureId number, Description text, PRIMARY KEY (ModelId, FeatureId), FOREIGN KEY (ModelId) REFERENCES model_list(ModelId));"
            },
            {
                "User": "Can we add a new feature for the Tesla Model S? FeatureId 101, Description 'Electric powertrain'.",
                "Answer": "INSERT INTO model_features (ModelId, FeatureId, Description) VALUES (37, 101, 'Electric powertrain');"
            },
            {
                "User": "The car_names table should also include the year the car was made. Can we add this column?",
                "Answer": "ALTER TABLE car_names ADD Year number;"
            },
            {
                "User": "Let's update the year for the 'chevrolet chevelle malibu' to be 1970.",
                "Answer": "UPDATE car_names SET Year = 1970 WHERE Make = 'chevrolet' AND Model = 'chevrolet chevelle malibu';"
            },
            {
                "User": "I noticed we don't have a table for car colors. Can we create one with columns ColorId, ColorName?",
                "Answer": "CREATE TABLE car_colors (ColorId number PRIMARY KEY, ColorName text);"
            },
            {
                "User": "Let's add three colors to the car_colors table: Red, Blue, and Green with ColorIds 1, 2, and 3 respectively.",
                "Answer": "INSERT INTO car_colors (ColorId, ColorName) VALUES (1, 'Red'), (2, 'Blue'), (3, 'Green');"
            },
            {
                "User": "Can we list all car models along with their features and descriptions?",
                "Answer": "SELECT T1.Model, T2.Description FROM model_list AS T1 JOIN model_features AS T2 ON T1.ModelId = T2.ModelId;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 206,
        "db": "student_transcripts_tracking",
        "interaction": [
            {
                "User": "Can we add a new course to the database? The course details are course_id 16, course_name 'Data Science', and course_description 'Introduction to Data Science'.",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description) VALUES (16, 'Data Science', 'Introduction to Data Science');"
            },
            {
                "User": "I'd like to change the description of the 'art' department. Can we update it to 'Study of visual and conceptual art forms'?",
                "Answer": "UPDATE Departments SET department_description = 'Study of visual and conceptual art forms' WHERE department_name = 'art';"
            },
            {
                "User": "Can we create a table to track extra-curricular activities for students?",
                "Answer": "CREATE TABLE Extra_Curricular (activity_id number PRIMARY KEY, student_id number, activity_name text, activity_description text, FOREIGN KEY (student_id) REFERENCES Students(student_id));"
            },
            {
                "User": "How about adding a column to track the GPA for each student?",
                "Answer": "ALTER TABLE Students ADD GPA decimal;"
            },
            {
                "User": "Can we insert a new student into the database? The student details are student_id 16, current_address_id 2, permanent_address_id 3, first_name 'Alice', last_name 'Johnson', email_address 'alice.johnson@example.com', and GPA 3.8",
                "Answer": "INSERT INTO Students (student_id, current_address_id, permanent_address_id, first_name, last_name, email_address, GPA) VALUES (16, 2, 3, 'Alice', 'Johnson', 'alice.johnson@example.com', 3.8);"
            },
            {
                "User": "Let's update the GPA for student id 1 to 3.9",
                "Answer": "UPDATE Students SET GPA = 3.9 WHERE student_id = 1;"
            },
            {
                "User": "How can I list all departments along with the number of degree programs they offer?",
                "Answer": "SELECT T1.department_name, COUNT(T2.degree_program_id) AS number_of_programs FROM Departments AS T1 LEFT JOIN Degree_Programs AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_name;"
            },
            {
                "User": "Can we add a new semester to the database? The semester details are semester_id 16, semester_name 'Winter 2023', and semester_description 'Courses offered in Winter 2023'.",
                "Answer": "INSERT INTO Semesters (semester_id, semester_name, semester_description) VALUES (16, 'Winter 2023', 'Courses offered in Winter 2023');"
            },
            {
                "User": "Can we update the course description for course_id 2 to 'Advanced Mathematics'?",
                "Answer": "UPDATE Courses SET course_description = 'Advanced Mathematics' WHERE course_id = 2;"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 207,
        "db": "concert_singer",
        "interaction": [
            {
                "User": "Can we add a new concert called 'Summer Festival' in stadium 3 for the year 2021?",
                "Answer": "INSERT INTO concert (concert_ID, concert_Name, Theme, Stadium_ID, Year) VALUES (7, 'Summer Festival', 'Summer Vibes', '3', '2021');"
            },
            {
                "User": "I want to update the capacity of 'Stark's Park' stadium to 15000. Can we do that?",
                "Answer": "UPDATE stadium SET Capacity = 15000 WHERE Name = 'Stark''s Park';"
            },
            {
                "User": "Can we create a new table to keep track of ticket sales for each concert?",
                "Answer": "CREATE TABLE ticket_sales (Sale_ID number PRIMARY KEY, concert_ID number, Tickets_Sold number, FOREIGN KEY (concert_ID) REFERENCES concert(concert_ID));"
            },
            {
                "User": "Let's add a column for the manager's name in the stadium table.",
                "Answer": "ALTER TABLE stadium ADD Manager_Name text;"
            },
            {
                "User": "Can we insert ticket sales data for the 'Summer Festival'? Sale_ID, concert_ID, Tickets_Sold can be 101, 7, 7500",
                "Answer": "INSERT INTO ticket_sales (Sale_ID, concert_ID, Tickets_Sold) VALUES (101, 7, 7500);"
            },
            {
                "User": "Can we update the song name 'You' by Joe Sharp to 'Only You'?",
                "Answer": "UPDATE singer SET Song_Name = 'Only You' WHERE Name = 'Joe Sharp';"
            },
            {
                "User": "How can we list all concerts with their respective stadium names?",
                "Answer": "SELECT c.concert_Name, s.Name FROM concert AS c JOIN stadium AS s ON c.Stadium_ID = s.Stadium_ID;"
            },
            {
                "User": "Can we add a new singer named 'Lily Green' from Canada with the song 'Northern Lights' released in 2021?",
                "Answer": "INSERT INTO singer (Singer_ID, Name, Country, Song_Name, Song_release_year, Age, Is_male) VALUES (7, 'Lily Green', 'Canada', 'Northern Lights', '2021', 28, 'F');"
            },
            {
                "User": "Let's update the highest attendance for 'Somerset Park' stadium to 5000.",
                "Answer": "UPDATE stadium SET Highest = 5000 WHERE Name = 'Somerset Park';"
            },
            {
                "User": "Can we create a table to track the genres of songs by each singer?",
                "Answer": "CREATE TABLE song_genre (Singer_ID number, Genre text, FOREIGN KEY (Singer_ID) REFERENCES singer(Singer_ID));"
            },
            {
                "User": "How about adding a column to indicate if a singer is currently on tour?",
                "Answer": "ALTER TABLE singer ADD On_Tour others DEFAULT 'False';"
            },
            {
                "User": "Can we insert the genre 'Pop' for singer id 2?",
                "Answer": "INSERT INTO song_genre (Singer_ID, Genre) VALUES (2, 'Pop');"
            }
        ],
        "from_data": "dev",
        "type": "single"
    },
    {
        "idx": 208,
        "db": "college_2",
        "interaction": [
            {
                "User": "I would like to add a new department named 'Data Science' with a budget of 500000 in the 'Gates' building.",
                "Answer": "INSERT INTO department (dept_name, building, budget) VALUES ('Data Science', 'Gates', 500000)"
            },
            {
                "User": "The budget for the Biology department has increased by 50000. Can you update it?",
                "Answer": "UPDATE department SET budget = budget + 50000 WHERE dept_name = 'Biology'"
            },
            {
                "User": "Can you create a new table for campus events with columns for event_id, title, location, and date?",
                "Answer": "CREATE TABLE campus_events (event_id TEXT PRIMARY KEY, title TEXT, location TEXT, date TEXT)"
            },
            {
                "User": "I need to record the email addresses of instructors. Please add a new column for email in the instructor table.",
                "Answer": "ALTER TABLE instructor ADD COLUMN email TEXT"
            },
            {
                "User": "A new classroom 'A32' with a capacity of 50 has been built in the 'Fairchild' building. Please add this to the database.",
                "Answer": "INSERT INTO classroom (building, room_number, capacity) VALUES ('Fairchild', 'A32', 50)"
            },
            {
                "User": "We've hired a new instructor named 'Alice Johnson' for the Data Science department with an ID of '10234' and a salary of 75000. Could you add her record?",
                "Answer": "INSERT INTO instructor (ID, name, dept_name, salary) VALUES ('10234', 'Alice Johnson', 'Data Science', 75000)"
            },
            {
                "User": "The 'Cybernetics' department has been renamed to 'Robotics'. Can you update the records?",
                "Answer": "UPDATE department SET dept_name = 'Robotics' WHERE dept_name = 'Cybernetics'"
            },
            {
                "User": "I need to assign an advisor with ID '22591' to a new student with ID '99999'. Can you insert this data?",
                "Answer": "INSERT INTO advisor (s_ID, i_ID) VALUES ('99999', '22591')"
            },
            {
                "User": "We need to track the duration of each course section. Please add a 'duration' column to the section table.",
                "Answer": "ALTER TABLE section ADD COLUMN duration NUMBER"
            },
            {
                "User": "A student with ID '76672' has changed their major to 'Data Science'. Can you update their record?",
                "Answer": "UPDATE student SET dept_name = 'Data Science' WHERE ID = '76672'"
            },
            {
                "User": "Can you create a new table to store information about textbooks with columns for ISBN, title, author, and publisher?",
                "Answer": "CREATE TABLE textbooks (ISBN TEXT PRIMARY KEY, title TEXT, author TEXT, publisher TEXT)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 209,
        "db": "train_station",
        "interaction": [
            {
                "User": "Add a new train called 'Midnight Express' that runs daily at 23:30.",
                "Answer": "INSERT INTO train (Train_ID, Name, Time, Service) VALUES (13, 'Midnight Express', '23:30', 'Daily');"
            },
            {
                "User": "Update the annual entry and exit figures for London Waterloo to 95 million.",
                "Answer": "UPDATE station SET Annual_entry_exit = 95000000 WHERE Name = 'London Waterloo';"
            },
            {
                "User": "Create a new table for train maintenance schedules.",
                "Answer": "CREATE TABLE train_maintenance (Maintenance_ID number PRIMARY KEY, Train_ID number, Maintenance_Date text, Description text);"
            },
            {
                "User": "Schedule maintenance for the 'Ananthapuri Express' on 2023-04-15 for engine checks.",
                "Answer": "INSERT INTO train_maintenance (Maintenance_ID, Train_ID, Maintenance_Date, Description) VALUES (1, 1, '2023-04-15', 'Engine checks');"
            },
            {
                "User": "Link the 'Midnight Express' with the London Bridge station.",
                "Answer": "INSERT INTO train_station (Train_ID, Station_ID) VALUES (4, 3);"
            },
            {
                "User": "What is the total number of platforms at stations served by the 'Midnight Express'?",
                "Answer": "SELECT SUM(T2.Number_of_Platforms) FROM train_station AS T1 JOIN station AS T2 ON T1.Station_ID = T2.Station_ID WHERE T1.Train_ID = (SELECT Train_ID FROM train WHERE Name = 'Midnight Express');"
            },
            {
                "User": "Alter the station table to include a new column for 'Accessibility' features.",
                "Answer": "ALTER TABLE station ADD Accessibility text;"
            },
            {
                "User": "Set the 'Accessibility' column for London Waterloo to 'Wheelchair accessible with staff assistance'.",
                "Answer": "UPDATE station SET Accessibility = 'Wheelchair accessible with staff assistance' WHERE Name = 'London Waterloo';"
            },
            {
                "User": "What trains run between 22:00 and 05:00?",
                "Answer": "SELECT Name FROM train WHERE Time >= '22:00' OR Time <= '05:00';"
            },
            {
                "User": "Delete the 'Guruvayur Express' that runs at 4:49 from the train table.",
                "Answer": "DELETE FROM train WHERE Name = 'Guruvayur Express' AND Time = '4:49';"
            },
            {
                "User": "How many trains are there in the train table now?",
                "Answer": "SELECT COUNT(*) FROM train;"
            },
            {
                "User": "Add a new station called 'Cambridge Central' with 5 platforms and located in 'Cambridge'.",
                "Answer": "INSERT INTO station (Station_ID, Name, Annual_entry_exit, Annual_interchanges, Total_Passengers, Location, Main_Services, Number_of_Platforms) VALUES (13, 'Cambridge Central', 0, 0, 0, 'Cambridge', 'N/A', 5);"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 210,
        "db": "train_station",
        "interaction": [
            {
                "User": "I want to add a new station called 'Green Park' with an ID of 13, can you insert it into the database?",
                "Answer": "INSERT INTO station (Station_ID, Name) VALUES (13, 'Green Park')"
            },
            {
                "User": "Green Park should have an annual entry and exit of 50,000, annual interchanges of 5,000, and total passengers of 55,000. Please update the record.",
                "Answer": "UPDATE station SET Annual_entry_exit = 50000, Annual_interchanges = 5000, Total_Passengers = 55000 WHERE Station_ID = 13"
            },
            {
                "User": "The location for Green Park is 'Bristol' and it has 10 platforms. Update this information as well.",
                "Answer": "UPDATE station SET Location = 'Bristol', Number_of_Platforms = 10 WHERE Station_ID = 13"
            },
            {
                "User": "Can you create a table to track maintenance schedules for each station?",
                "Answer": "CREATE TABLE maintenance_schedule (Station_ID number, Maintenance_Date text, Description text, PRIMARY KEY (Station_ID, Maintenance_Date))"
            },
            {
                "User": "Add a maintenance schedule for London Waterloo on 2023-04-15 for a routine check.",
                "Answer": "INSERT INTO maintenance_schedule (Station_ID, Maintenance_Date, Description) VALUES (1, '2023-04-15', 'Routine Check')"
            },
            {
                "User": "We need to track the number of employees at each station. Can you add a column for it?",
                "Answer": "ALTER TABLE station ADD COLUMN Number_of_Employees number"
            },
            {
                "User": "Set the number of employees for London Waterloo to 350.",
                "Answer": "UPDATE station SET Number_of_Employees = 350 WHERE Station_ID = 1"
            },
            {
                "User": "Let's see a list of all stations with more than 10 employees.",
                "Answer": "SELECT * FROM station WHERE Number_of_Employees > 10"
            },
            {
                "User": "Can you show me the stations that have more total passengers than London Bridge?",
                "Answer": "SELECT Name FROM station WHERE Total_Passengers > (SELECT Total_Passengers FROM station WHERE Name = 'London Bridge')"
            },
            {
                "User": "I'd like to add a new train called 'Coastal Express' that runs daily at 21:00, can you insert this record?",
                "Answer": "INSERT INTO train (Train_ID, Name, Time, Service) VALUES (12, 'Coastal Express', '21:00', 'Daily')"
            },
            {
                "User": "Please link the Coastal Express with Green Park and London Waterloo stations.",
                "Answer": "INSERT INTO train_station (Train_ID, Station_ID) VALUES (12, 13), (12, 1)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 211,
        "db": "performance_attendance",
        "interaction": [
            {
                "User": "Can we add a new member named 'Elena Torres' from Spain who is a cellist?",
                "Answer": "INSERT INTO member (Member_ID, Name, Nationality, Role) VALUES ('12', 'Elena Torres', 'Spain', 'Cellist')"
            },
            {
                "User": "Update the role of member with ID 2 to 'First Violin'",
                "Answer": "UPDATE member SET Role = 'First Violin' WHERE Member_ID = '2'"
            },
            {
                "User": "I'd like to record the number of solos each member has performed. Can we add a column for that?",
                "Answer": "ALTER TABLE member ADD COLUMN Solos_Performed number"
            },
            {
                "User": "Let's record that member ID 1 has performed 3 solos.",
                "Answer": "UPDATE member SET Solos_Performed = 3 WHERE Member_ID = '1'"
            },
            {
                "User": "How many members have performed at least one solo?",
                "Answer": "SELECT COUNT(*) FROM member WHERE Solos_Performed > 0"
            },
            {
                "User": "Create a new table to log all performances with a unique identifier, date, and name of the piece.",
                "Answer": "CREATE TABLE performance_log (Log_ID number PRIMARY KEY, Performance_Date text, Piece_Name text)"
            },
            {
                "User": "Log a new performance for February 10th with the piece 'Four Seasons'",
                "Answer": "INSERT INTO performance_log (Log_ID, Performance_Date, Piece_Name) VALUES (1, 'February 10', 'Four Seasons')"
            },
            {
                "User": "Who hosted the performance on February 4?",
                "Answer": "SELECT Host FROM performance WHERE Date = 'February 4'"
            },
            {
                "User": "Let's correct the attendance for the performance on February 5th at the Verizon Center to 1900.",
                "Answer": "UPDATE performance SET Attendance = 1900 WHERE Date = 'February 5' AND Location = 'Verizon Center'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 212,
        "db": "cinema",
        "interaction": [
            {
                "User": "Add a new film titled 'The Enigma of Arrival' directed by 'Jane Doe' with a production code '60011' that aired on 'March 10, 2023'.",
                "Answer": "INSERT INTO film (Title, Directed_by, Original_air_date, Production_code) VALUES ('The Enigma of Arrival', 'Jane Doe', 'March 10, 2023', '60011')"
            },
            {
                "User": "Update the capacity of the cinema named 'Codling' to 1200.",
                "Answer": "UPDATE cinema SET Capacity = 1200 WHERE Name = 'Codling'"
            },
            {
                "User": "Create a new table for cinema reviews with columns for review_id, cinema_id, review_text, and rating.",
                "Answer": "CREATE TABLE cinema_reviews (Review_ID number PRIMARY KEY, Cinema_ID number, Review_Text text, Rating number)"
            },
            {
                "User": "Insert a review for the cinema with ID 2, giving it a rating of 4.5 and the review text 'Great experience, comfortable seats and excellent sound quality.'",
                "Answer": "INSERT INTO cinema_reviews (Cinema_ID, Review_Text, Rating) VALUES (2, 'Great experience, comfortable seats and excellent sound quality.', 4.5)"
            },
            {
                "User": "Add a new column to the schedule table to record whether a show is 3D or not.",
                "Answer": "ALTER TABLE schedule ADD COLUMN Is_3D boolean"
            },
            {
                "User": "Set the 'Is_3D' column to true for all showtimes of film with ID 1.",
                "Answer": "UPDATE schedule SET Is_3D = true WHERE Film_ID = 1"
            },
            {
                "User": "How many cinemas opened before 2015?",
                "Answer": "SELECT count(*) FROM cinema WHERE Openning_year < 2015"
            },
            {
                "User": "What is the average rating of all cinema reviews?",
                "Answer": "SELECT AVG(Rating) FROM cinema_reviews"
            },
            {
                "User": "List all films directed by 'Jane Doe'.",
                "Answer": "SELECT * FROM film WHERE Directed_by = 'Jane Doe'"
            },
            {
                "User": "Delete the showtime for film with ID 2 on '21 May'.",
                "Answer": "DELETE FROM schedule WHERE Film_ID = 2 AND Date = '21 May'"
            },
            {
                "User": "Increase the price of all showtimes in June by 10%.",
                "Answer": "UPDATE schedule SET Price = Price * 1.10 WHERE Date LIKE '%Jun%'"
            },
            {
                "User": "Create a view to show cinema names with their total number of showtimes.",
                "Answer": "CREATE VIEW cinema_showtime_counts AS SELECT c.Name, count(s.Cinema_ID) AS Total_Showtimes FROM cinema c JOIN schedule s ON c.Cinema_ID = s.Cinema_ID GROUP BY c.Name"
            },
            {
                "User": "What is the highest capacity of all cinemas?",
                "Answer": "SELECT MAX(Capacity) FROM cinema"
            },
            {
                "User": "Rename the column 'Openning_year' to 'Opening_year' in the cinema table.",
                "Answer": "ALTER TABLE cinema RENAME COLUMN Openning_year TO Opening_year"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 213,
        "db": "ship_1",
        "interaction": [
            {
                "User": "Add a new captain named John Smith who is 36 years old, commands the ship with ID 4, and has a rank of Commander.",
                "Answer": "INSERT INTO captain (Captain_ID, Name, Ship_ID, age, Class, Rank) VALUES (8, 'Captain John Smith', 4, '36', 'Frigate', 'Commander')"
            },
            {
                "User": "The captain with ID 2 has been promoted to Commodore. Update his rank.",
                "Answer": "UPDATE captain SET Rank = 'Commodore' WHERE Captain_ID = 2"
            },
            {
                "User": "Create a new table to track the battles each ship has been involved in, with columns for battle name, date, and the ship's ID.",
                "Answer": "CREATE TABLE battles (Battle_Name text, Date text, Ship_ID number, PRIMARY KEY(Battle_Name, Ship_ID))"
            },
            {
                "User": "Add a column to the Ship table to record the weight of each ship.",
                "Answer": "ALTER TABLE Ship ADD COLUMN Weight number"
            },
            {
                "User": "Insert a record of a battle named 'Battle of the Nile' that occurred on 1798-08-01 involving the ship with ID 1.",
                "Answer": "INSERT INTO battles (Battle_Name, Date, Ship_ID) VALUES ('Battle of the Nile', '1798-08-01', 1)"
            },
            {
                "User": "The ship with ID 3 has been reclassified as a 'Brig'. Update its class in the database.",
                "Answer": "UPDATE Ship SET Class = 'Brig' WHERE Ship_ID = 3"
            },
            {
                "User": "We need to decommission the oldest ship in the fleet. Which ship should it be?",
                "Answer": "SELECT Name FROM Ship ORDER BY Built_Year ASC LIMIT 1"
            },
            {
                "User": "The ship named 'HMS Gorgon' has been sold to another country. Remove it from our database.",
                "Answer": "DELETE FROM Ship WHERE Name = 'HMS Gorgon'"
            },
            {
                "User": "Record that Captain Sir Henry Langford has received a medal for distinguished service.",
                "Answer": "ALTER TABLE captain ADD COLUMN Medals text"
            },
            {
                "User": "Update the record for Captain Sir Henry Langford to include his new medal 'Navy Cross'.",
                "Answer": "UPDATE captain SET Medals = 'Navy Cross' WHERE Captain_ID = 1"
            },
            {
                "User": "Create a view to show all ships built after 1995 with their captains' names.",
                "Answer": "CREATE VIEW Ships_Post_1995 AS SELECT s.Name AS Ship_Name, c.Name AS Captain_Name FROM Ship s JOIN captain c ON s.Ship_ID = c.Ship_ID WHERE s.Built_Year > 1995"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 214,
        "db": "ship_1",
        "interaction": [
            {
                "User": "Add a new ship called HMS Endeavour with Ship_ID 10, type 'Frigate', built in 2000, class 'LR', and flag 'UK'.",
                "Answer": "INSERT INTO Ship (Ship_ID, Name, Type, Built_Year, Class, Flag) VALUES (10, 'HMS Endeavour', 'Frigate', 2000, 'LR', 'UK')"
            },
            {
                "User": "Update the age of Captain Sir Henry Langford to 42.",
                "Answer": "UPDATE captain SET age = '42' WHERE Name = 'Captain Sir Henry Langford'"
            },
            {
                "User": "Create a new table for recording the maintenance history with columns Maintenance_ID, Ship_ID, Date, and Description.",
                "Answer": "CREATE TABLE Maintenance (Maintenance_ID number PRIMARY KEY, Ship_ID number, Date text, Description text)"
            },
            {
                "User": "Insert a maintenance record for the HMS Manxman with Maintenance_ID 1, on the date '2023-04-01', with description 'Annual engine overhaul'.",
                "Answer": "INSERT INTO Maintenance (Maintenance_ID, Ship_ID, Date, Description) VALUES (1, 1, '2023-04-01', 'Annual engine overhaul')"
            },
            {
                "User": "Alter the captain table to add a column for years of service.",
                "Answer": "ALTER TABLE captain ADD COLUMN Years_of_Service number"
            },
            {
                "User": "Set the years of service for Captain Sir Henry Langford to 18 years.",
                "Answer": "UPDATE captain SET Years_of_Service = 18 WHERE Name = 'Captain Sir Henry Langford'"
            },
            {
                "User": "List all ships built after 1997 with their Ship_ID and Flag.",
                "Answer": "SELECT Ship_ID, Flag FROM Ship WHERE Built_Year > 1997"
            },
            {
                "User": "Assign Captain Beves Conway to the newly added HMS Endeavour.",
                "Answer": "UPDATE captain SET Ship_ID = 10 WHERE Name = 'Captain Beves Conway'"
            },
            {
                "User": "Find the average age of captains who are ranked as 'Midshipman'.",
                "Answer": "SELECT AVG(CAST(age AS INTEGER)) FROM captain WHERE Rank = 'Midshipman'"
            },
            {
                "User": "Create a view that lists all captains with their ships' names.",
                "Answer": "CREATE VIEW CaptainsWithShips AS SELECT c.Name AS CaptainName, s.Name AS ShipName FROM captain c JOIN Ship s ON c.Ship_ID = s.Ship_ID"
            },
            {
                "User": "Show the full list of captains with their ships' names from the view created.",
                "Answer": "SELECT * FROM CaptainsWithShips"
            },
            {
                "User": "Delete the ship with Ship_ID 3 from the Ship table.",
                "Answer": "DELETE FROM Ship WHERE Ship_ID = 3"
            },
            {
                "User": "What is the total number of ships currently registered?",
                "Answer": "SELECT COUNT(*) FROM Ship"
            },
            {
                "User": "Add a column 'Docked_Port' to the Ship table to record where each ship is currently docked.",
                "Answer": "ALTER TABLE Ship ADD COLUMN Docked_Port text"
            },
            {
                "User": "Record that HMS Endeavour is currently docked at Port Southampton.",
                "Answer": "UPDATE Ship SET Docked_Port = 'Port Southampton' WHERE Name = 'HMS Endeavour'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 215,
        "db": "machine_repair",
        "interaction": [
            {
                "User": "Add a new technician named Alex Smith to the technician table with ID 11, starting in 2021, age 29, and assigned to team 'BOS'.",
                "Answer": "INSERT INTO technician (technician_id, Name, Team, Starting_Year, Age) VALUES (11, 'Alex Smith', 'BOS', 2021, 29)"
            },
            {
                "User": "Update the name of the technician with ID 1 to 'Joe Smith'.",
                "Answer": "UPDATE technician SET Name = 'Joe Smith' WHERE technician_id = 1"
            },
            {
                "User": "Create a new table named maintenance_schedule with columns schedule_id, machine_id, technician_id, and date.",
                "Answer": "CREATE TABLE maintenance_schedule (schedule_id number PRIMARY KEY, machine_id number, technician_id number, date text)"
            },
            {
                "User": "Insert a new maintenance schedule with ID 1 for machine ID 2 assigned to technician ID 3 on '15 Apr 2023'.",
                "Answer": "INSERT INTO maintenance_schedule (schedule_id, machine_id, technician_id, date) VALUES (1, 2, 3, '15 Apr 2023')"
            },
            {
                "User": "Add a new column to the machine table named 'last_maintenance_date' of type text.",
                "Answer": "ALTER TABLE machine ADD COLUMN last_maintenance_date text"
            },
            {
                "User": "Set the last maintenance date of the machine with ID 3 to '01 Jan 2023'.",
                "Answer": "UPDATE machine SET last_maintenance_date = '01 Jan 2023' WHERE Machine_ID = 3"
            },
            {
                "User": "Create a view that shows the machine ID, technician name, and the last maintenance date for all machines.",
                "Answer": "CREATE VIEW machine_maintenance AS SELECT M.Machine_ID, T.Name, M.last_maintenance_date FROM machine M JOIN repair_assignment RA ON M.Machine_ID = RA.Machine_ID JOIN technician T ON RA.technician_id = T.technician_id"
            },
            {
                "User": "Show the full list of machines and their last maintenance dates.",
                "Answer": "SELECT Machine_ID, last_maintenance_date FROM machine"
            },
            {
                "User": "Assign technician with ID 2 to repair ID 1 and machine ID 1 in the repair_assignment table.",
                "Answer": "INSERT INTO repair_assignment (technician_id, repair_ID, Machine_ID) VALUES (2, 1, 1)"
            },
            {
                "User": "Show the schedule of all upcoming maintenance sorted by date.",
                "Answer": "SELECT * FROM maintenance_schedule ORDER BY date"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 216,
        "db": "machine_repair",
        "interaction": [
            {
                "User": "Add a new technician named Alex Smith to the technician team 'NYY' who started in 2021 and is 30 years old.",
                "Answer": "INSERT INTO technician (Name, Team, Starting_Year, Age) VALUES ('Alex Smith', 'NYY', 2021, 30)"
            },
            {
                "User": "Update the value points of the 'RS125' machine series made by 'Hero Sports TS- Honda' to 120.",
                "Answer": "UPDATE machine SET value_points = 120 WHERE Machine_series = 'RS125' AND Team = 'Hero Sports TS- Honda'"
            },
            {
                "User": "Create a new table to log maintenance activities with columns for activity_id, machine_id, technician_id, activity_date, and description.",
                "Answer": "CREATE TABLE maintenance_log (activity_id number PRIMARY KEY, machine_id number, technician_id number, activity_date text, description text)"
            },
            {
                "User": "Add a new column 'Status' to the repair table to indicate the current status of the repair.",
                "Answer": "ALTER TABLE repair ADD COLUMN Status text"
            },
            {
                "User": "Record a new repair assignment where technician with id 2 is assigned to repair machine with id 3.",
                "Answer": "INSERT INTO repair_assignment (technician_id, repair_ID, Machine_ID) VALUES (2, (SELECT MAX(repair_ID)+1 FROM repair), 3)"
            },
            {
                "User": "Change the quality rank of machine with Machine_ID 1 to 5.",
                "Answer": "UPDATE machine SET quality_rank = 5 WHERE Machine_ID = 1"
            },
            {
                "User": "Insert a new repair entry for 'Explorer X' that was launched on '15 Mar 2021' with notes saying 'Successful launch'.",
                "Answer": "INSERT INTO repair (name, Launch_Date, Notes) VALUES ('Explorer X', '15 Mar 2021', 'Successful launch')"
            },
            {
                "User": "List all technicians who started after the year 2010 and are under the age of 40.",
                "Answer": "SELECT * FROM technician WHERE Starting_Year > 2010 AND Age < 40"
            },
            {
                "User": "What is the average age of technicians in the 'CLE' team?",
                "Answer": "SELECT AVG(Age) FROM technician WHERE Team = 'CLE'"
            },
            {
                "User": "Delete the machine with the lowest value points from the database.",
                "Answer": "DELETE FROM machine WHERE Machine_ID = (SELECT Machine_ID FROM machine ORDER BY value_points LIMIT 1)"
            },
            {
                "User": "How many machines were made in the year 1993?",
                "Answer": "SELECT COUNT(*) FROM machine WHERE Making_Year = 1993"
            },
            {
                "User": "Create a view that shows the repair ID and name of machines that failed to achieve orbit.",
                "Answer": "CREATE VIEW failed_orbit AS SELECT repair_ID, name FROM repair WHERE Notes LIKE '%failed to achieve orbit%'"
            },
            {
                "User": "Rename the 'Notes' column in the repair table to 'Details'.",
                "Answer": "ALTER TABLE repair RENAME COLUMN Notes TO Details"
            },
            {
                "User": "What is the total number of value points for all machines made by 'Marlboro Pileri - Honda'?",
                "Answer": "SELECT SUM(value_points) FROM machine WHERE Team = 'Marlboro Pileri - Honda'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 217,
        "db": "student_1",
        "interaction": [
            {
                "User": "Add a new student named Alex Smith to grade 4 in classroom 102.",
                "Answer": "INSERT INTO list (LastName, FirstName, Grade, Classroom) VALUES ('Smith', 'Alex', 4, 102)"
            },
            {
                "User": "Update the grade for student Maude Car to grade 3.",
                "Answer": "UPDATE list SET Grade = 3 WHERE LastName = 'CAR' AND FirstName = 'MAUDE'"
            },
            {
                "User": "Create a new table to track the subjects each teacher teaches with columns for the teacher's last name, subject name, and a primary key on the teacher's last name.",
                "Answer": "CREATE TABLE teacher_subjects (LastName text PRIMARY KEY, SubjectName text)"
            },
            {
                "User": "Add a new subject 'Mathematics' for teacher Min Macrostie.",
                "Answer": "INSERT INTO teacher_subjects (LastName, SubjectName) VALUES ('MACROSTIE', 'Mathematics')"
            },
            {
                "User": "Alter the 'list' table to include a new column 'Birthdate' with the type date.",
                "Answer": "ALTER TABLE list ADD COLUMN Birthdate date"
            },
            {
                "User": "Set the birthdate for student Stormy Kristensen to '2007-05-22'.",
                "Answer": "UPDATE list SET Birthdate = '2007-05-22' WHERE LastName = 'KRISTENSEN' AND FirstName = 'STORMY'"
            },
            {
                "User": "Create a table to track student attendance with columns for student last name, date, and status.",
                "Answer": "CREATE TABLE attendance (LastName text, Date date, Status text)"
            },
            {
                "User": "Record that Maude Car was present on '2023-04-05'.",
                "Answer": "INSERT INTO attendance (LastName, Date, Status) VALUES ('CAR', '2023-04-05', 'Present')"
            },
            {
                "User": "Find all students who were present on '2023-04-05'.",
                "Answer": "SELECT LastName FROM attendance WHERE Date = '2023-04-05' AND Status = 'Present'"
            },
            {
                "User": "Add a new teacher named Sarah Connor to classroom 104.",
                "Answer": "INSERT INTO teachers (LastName, FirstName, Classroom) VALUES ('Connor', 'Sarah', 104)"
            },
            {
                "User": "Update Jerome Covin's classroom to 105.",
                "Answer": "UPDATE teachers SET Classroom = 105 WHERE LastName = 'COVIN' AND FirstName = 'JEROME'"
            },
            {
                "User": "Alter the 'teachers' table to include a new column 'HireDate' with the type date.",
                "Answer": "ALTER TABLE teachers ADD COLUMN HireDate date"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 218,
        "db": "chinook_1",
        "interaction": [
            {
                "User": "Add a new artist named 'The Midnight'.",
                "Answer": "INSERT INTO Artist (Name) VALUES ('The Midnight');"
            },
            {
                "User": "Create a new album for 'The Midnight' with the title 'Endless Summer'.",
                "Answer": "INSERT INTO Album (Title, ArtistId) VALUES ('Endless Summer', (SELECT ArtistId FROM Artist WHERE Name = 'The Midnight'));"
            },
            {
                "User": "How many customers do we have from Brazil?",
                "Answer": "SELECT COUNT(*) FROM Customer WHERE Country = 'Brazil';"
            },
            {
                "User": "Update the phone number of customer Luís Gonçalves to '+55 (12) 3456-7890'.",
                "Answer": "UPDATE Customer SET Phone = '+55 (12) 3456-7890' WHERE FirstName = 'Luís' AND LastName = 'Gonçalves';"
            },
            {
                "User": "Create a new table to store concert events with columns for event ID, name, date, and location.",
                "Answer": "CREATE TABLE ConcertEvent (EventId number PRIMARY KEY, Name text, EventDate time, Location text);"
            },
            {
                "User": "Add a new concert event for 'The Midnight' in New York on 2023-07-15.",
                "Answer": "INSERT INTO ConcertEvent (Name, EventDate, Location) VALUES ('The Midnight', '2023-07-15', 'New York');"
            },
            {
                "User": "How many tracks are there in the 'Rock' genre?",
                "Answer": "SELECT COUNT(*) FROM Track WHERE GenreId = (SELECT GenreId FROM Genre WHERE Name = 'Rock');"
            },
            {
                "User": "Add a new column 'Website' to the Artist table to store their official website URLs.",
                "Answer": "ALTER TABLE Artist ADD Website text;"
            },
            {
                "User": "Set the website for 'AC/DC' to 'http://www.acdc.com'.",
                "Answer": "UPDATE Artist SET Website = 'http://www.acdc.com' WHERE Name = 'AC/DC';"
            },
            {
                "User": "Create a playlist named 'Workout Jams' and add the track 'Fast As a Shark' to it.",
                "Answer": [
                    "INSERT INTO Playlist (Name) VALUES ('Workout Jams');",
                    "INSERT INTO PlaylistTrack (PlaylistId, TrackId) VALUES ((SELECT PlaylistId FROM Playlist WHERE Name = 'Workout Jams'), (SELECT TrackId FROM Track WHERE Name = 'Fast As a Shark'));"
                ]
            },
            {
                "User": "How many employees have the title 'Sales Support Agent'?",
                "Answer": "SELECT COUNT(*) FROM Employee WHERE Title = 'Sales Support Agent';"
            },
            {
                "User": "Change the title of employee Jane Peacock to 'Senior Sales Support Agent'.",
                "Answer": "UPDATE Employee SET Title = 'Senior Sales Support Agent' WHERE FirstName = 'Jane' AND LastName = 'Peacock';"
            },
            {
                "User": "What is the total revenue from invoices billed to customers in Canada?",
                "Answer": "SELECT SUM(Total) FROM Invoice WHERE BillingCountry = 'Canada';"
            },
            {
                "User": "Add a new genre called 'Synthwave'.",
                "Answer": "INSERT INTO Genre (Name) VALUES ('Synthwave');"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 219,
        "db": "music_1",
        "interaction": [
            {
                "User": "Can you add a new genre called 'soundtrack' with a rating of 5 that is most popular in 'China'?",
                "Answer": "INSERT INTO genre (g_name, rating, most_popular_in) VALUES ('soundtrack', '5', 'China')"
            },
            {
                "User": "Update the rating of the 'folk' genre to 10.",
                "Answer": "UPDATE genre SET rating = '10' WHERE g_name = 'folk'"
            },
            {
                "User": "Create a new table for album information with album name, release date, and genre.",
                "Answer": "CREATE TABLE album (album_name text PRIMARY KEY, release_date time, genre_is text)"
            },
            {
                "User": "Can you insert a new album called 'Folk Roots' released on '1-JAN-2000' with genre 'folk'?",
                "Answer": "INSERT INTO album (album_name, release_date, genre_is) VALUES ('Folk Roots', '1-JAN-2000', 'folk')"
            },
            {
                "User": "Add a new column 'album_name' to the song table to link each song to an album.",
                "Answer": "ALTER TABLE song ADD COLUMN album_name text"
            },
            {
                "User": "Link the song 'Ami opar hoye' to the album 'Folk Roots'.",
                "Answer": "UPDATE song SET album_name = 'Folk Roots' WHERE song_name = 'Ami opar hoye'"
            },
            {
                "User": "Can we have a list of all artists from 'Bangladesh' who prefer the 'folk' genre?",
                "Answer": "SELECT artist_name FROM artist WHERE country = 'Bangladesh' AND preferred_genre = 'folk'"
            },
            {
                "User": "Insert a new song called 'Bhalobashi' by 'Farida', released in Bangladesh on '15-MAR-2020', file id 4, in the 'folk' genre, with a rating of 9, in 'bangla' language, with a resolution of 1080.",
                "Answer": "INSERT INTO song (song_name, artist_name, country, f_id, genre_is, rating, languages, releasedate, resolution) VALUES ('Bhalobashi', 'Farida', 'Bangladesh', 4, 'folk', 9, 'bangla', '15-MAR-2020', 1080)"
            },
            {
                "User": "Increase the file size of the file with id 1 to '4 MB'.",
                "Answer": "UPDATE files SET file_size = '4 MB' WHERE f_id = 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 220,
        "db": "music_1",
        "interaction": [
            {
                "User": "Add a new genre called 'classical' with a rating of '9' and most popular in 'India'.",
                "Answer": "INSERT INTO genre (g_name, rating, most_popular_in) VALUES ('classical', '9', 'India')"
            },
            {
                "User": "Update the file size of the song with f_id 2 to '5 MB'.",
                "Answer": "UPDATE files SET file_size = '5 MB' WHERE f_id = 2"
            },
            {
                "User": "Create a new table for concerts with columns for concert_id, artist_name, location, and date.",
                "Answer": "CREATE TABLE concerts (concert_id number PRIMARY KEY, artist_name text, location text, date time)"
            },
            {
                "User": "Insert a record into the concerts table for artist 'Shrikanta' performing in 'Mumbai' on '2023-05-15'.",
                "Answer": "INSERT INTO concerts (concert_id, artist_name, location, date) VALUES (1, 'Shrikanta', 'Mumbai', '2023-05-15')"
            },
            {
                "User": "Which artists have concerts scheduled in 'Mumbai'?",
                "Answer": "SELECT artist_name FROM concerts WHERE location = 'Mumbai'"
            },
            {
                "User": "Add a new column to the artist table to store the number of albums they have.",
                "Answer": "ALTER TABLE artist ADD COLUMN albums_count number"
            },
            {
                "User": "Set the number of albums for artist 'Shrikanta' to 5.",
                "Answer": "UPDATE artist SET albums_count = 5 WHERE artist_name = 'Shrikanta'"
            },
            {
                "User": "List all artists who have more than 3 albums.",
                "Answer": "SELECT artist_name FROM artist WHERE albums_count > 3"
            },
            {
                "User": "Create a new table to track song downloads with columns for download_id, song_name, and download_date.",
                "Answer": "CREATE TABLE song_downloads (download_id number PRIMARY KEY, song_name text, download_date time)"
            },
            {
                "User": "Record a download for the song 'Tumi robe nirobe' on '2023-04-01'.",
                "Answer": "INSERT INTO song_downloads (download_id, song_name, download_date) VALUES (1, 'Tumi robe nirobe', '2023-04-01')"
            },
            {
                "User": "How many downloads were recorded for the song 'Tumi robe nirobe'?",
                "Answer": "SELECT COUNT(*) FROM song_downloads WHERE song_name = 'Tumi robe nirobe'"
            },
            {
                "User": "Alter the genre table to include a new column 'origin_country' to represent the country of origin.",
                "Answer": "ALTER TABLE genre ADD COLUMN origin_country text"
            },
            {
                "User": "Set the origin country of the 'folk' genre to 'Bangladesh'.",
                "Answer": "UPDATE genre SET origin_country = 'Bangladesh' WHERE g_name = 'folk'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 221,
        "db": "apartment_rentals",
        "interaction": [
            {
                "User": "Can we add a new apartment building to the database?",
                "Answer": "INSERT INTO Apartment_Buildings (building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone) VALUES (192, 'Skyline Towers', 'Skyline Towers', 'Luxury High-rise', '123 Skyline Blvd, Big City', 'Jane Doe', '555-123-4567')"
            },
            {
                "User": "I'd like to update the phone number of the building manager for Normandie Court.",
                "Answer": "UPDATE Apartment_Buildings SET building_phone = '555-987-6543' WHERE building_short_name = 'Normandie Court'"
            },
            {
                "User": "Can we create a new table to track maintenance requests for apartments?",
                "Answer": "CREATE TABLE Maintenance_Requests (request_id number PRIMARY KEY, apt_id number, request_date time, issue_description text, status_code text)"
            },
            {
                "User": "Can we add a column to track the date when an apartment was last renovated?",
                "Answer": "ALTER TABLE Apartments ADD COLUMN last_renovation_date time"
            },
            {
                "User": "Let's insert a maintenance request for apartment with id 2 reporting a plumbing issue.",
                "Answer": "INSERT INTO Maintenance_Requests (request_id, apt_id, request_date, issue_description, status_code) VALUES (1, 2, CURRENT_TIMESTAMP, 'Plumbing issue in bathroom', 'Open')"
            },
            {
                "User": "I want to update the status of the maintenance request with id 1 to 'Completed'.",
                "Answer": "UPDATE Maintenance_Requests SET status_code = 'Completed' WHERE request_id = 1"
            },
            {
                "User": "How many apartments have been booked more than once?",
                "Answer": "SELECT apt_id FROM Apartment_Bookings GROUP BY apt_id HAVING count(apt_id) > 1"
            },
            {
                "User": "Could you add a new guest to the database?",
                "Answer": "INSERT INTO Guests (guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth) VALUES (16, 'Female', 'Alice', 'Johnson', '1985-07-12 00:00:00')"
            },
            {
                "User": "Can you book apartment 3 for the new guest Alice Johnson starting from next Monday for two weeks?",
                "Answer": "INSERT INTO Apartment_Bookings (apt_booking_id, apt_id, guest_id, booking_status_code, booking_start_date, booking_end_date) VALUES (338, 3, 16, 'Confirmed', '2023-07-17 00:00:00', '2023-07-31 00:00:00')"
            },
            {
                "User": "I need to update the apartment type for apartment id 3 to 'Penthouse'.",
                "Answer": "UPDATE Apartments SET apt_type_code = 'Penthouse' WHERE apt_id = 3"
            },
            {
                "User": "Let's create a view to show the full name and phone number of building managers.",
                "Answer": "CREATE VIEW Building_Managers_Info AS SELECT building_full_name, building_manager, building_phone FROM Apartment_Buildings"
            },
            {
                "User": "Can we track the total number of facilities per apartment?",
                "Answer": "ALTER TABLE Apartments ADD COLUMN total_facilities_count number"
            },
            {
                "User": "Update the total facilities count for apartment id 1 to 5.",
                "Answer": "UPDATE Apartments SET total_facilities_count = 5 WHERE apt_id = 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 222,
        "db": "race_track",
        "interaction": [
            {
                "User": "I want to add a new race called 'Sunset Sprint' in the 'GT' class on May 5th at track 3.",
                "Answer": "INSERT INTO race (Name, Class, Date, Track_ID) VALUES ('Sunset Sprint', 'GT', 'May 5', '3')"
            },
            {
                "User": "Change the seating capacity of the 'Darlington Raceway' to 65000.",
                "Answer": "UPDATE track SET Seating = 65000 WHERE Name = 'Darlington Raceway'"
            },
            {
                "User": "Create a new table to log race winners with columns for race ID, winner's name, and their team.",
                "Answer": "CREATE TABLE race_winners (Race_ID number, Winner_Name text, Team text, PRIMARY KEY (Race_ID))"
            },
            {
                "User": "Add a column to the 'track' table to indicate whether it has a roof.",
                "Answer": "ALTER TABLE track ADD COLUMN Has_Roof boolean"
            },
            {
                "User": "Insert the winner of the first race, 'Michael Johnson' from 'Team Lightning'.",
                "Answer": "INSERT INTO race_winners (Race_ID, Winner_Name, Team) VALUES (1, 'Michael Johnson', 'Team Lightning')"
            },
            {
                "User": "Update the 'Sunset Sprint' race to be held on May 6th instead.",
                "Answer": "UPDATE race SET Date = 'May 6' WHERE Name = 'Sunset Sprint'"
            },
            {
                "User": "I want to know the total seating capacity of all tracks combined.",
                "Answer": "SELECT SUM(Seating) FROM track"
            },
            {
                "User": "Mark the 'Auto Club Speedway' track as having a roof.",
                "Answer": "UPDATE track SET Has_Roof = TRUE WHERE Name = 'Auto Club Speedway'"
            },
            {
                "User": "List all tracks that have a roof.",
                "Answer": "SELECT Name FROM track WHERE Has_Roof = TRUE"
            },
            {
                "User": "Delete the race named 'Sunset Sprint' as it has been canceled.",
                "Answer": "DELETE FROM race WHERE Name = 'Sunset Sprint'"
            },
            {
                "User": "Show me the races and their corresponding winners' names.",
                "Answer": "SELECT r.Name, rw.Winner_Name FROM race r JOIN race_winners rw ON r.Race_ID = rw.Race_ID"
            },
            {
                "User": "Increase the seating capacity by 10% for all tracks opened before the year 2000.",
                "Answer": "UPDATE track SET Seating = Seating * 1.10 WHERE Year_Opened < 2000"
            },
            {
                "User": "How many tracks have a seating capacity greater than 80000?",
                "Answer": "SELECT COUNT(*) FROM track WHERE Seating > 80000"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 223,
        "db": "film_rank",
        "interaction": [
            {
                "User": "Add a new film with ID 14 titled 'Interstellar', directed by 'Christopher Nolan', produced by 'Paramount', and grossed 675000000 dollars.",
                "Answer": "INSERT INTO film (Film_ID, Title, Studio, Director, Gross_in_dollar) VALUES (14, 'Interstellar', 'Paramount', 'Christopher Nolan', 675000000)"
            },
            {
                "User": "Update the gross revenue in dollars for the film 'ET the Extra-Terrestrial' to 500000000.",
                "Answer": "UPDATE film SET Gross_in_dollar = 500000000 WHERE Title = 'ET the Extra-Terrestrial'"
            },
            {
                "User": "Create a new table for film genres with columns for Genre_ID, Genre_Name, and Description.",
                "Answer": "CREATE TABLE film_genre (Genre_ID number PRIMARY KEY, Genre_Name text, Description text)"
            },
            {
                "User": "Add a new genre with Genre_ID 1, Genre_Name as 'Science Fiction', and a brief Description.",
                "Answer": "INSERT INTO film_genre (Genre_ID, Genre_Name, Description) VALUES (1, 'Science Fiction', 'A genre that uses speculative, fictional science-based depictions of phenomena that are not fully accepted by mainstream science.')"
            },
            {
                "User": "Add a column for the Release_Year in the film table.",
                "Answer": "ALTER TABLE film ADD COLUMN Release_Year number"
            },
            {
                "User": "Set the Release_Year for 'ET the Extra-Terrestrial' to 1982.",
                "Answer": "UPDATE film SET Release_Year = 1982 WHERE Title = 'ET the Extra-Terrestrial'"
            },
            {
                "User": "Create a new table to link films with their genres, with columns Film_ID, Genre_ID, and a foreign key constraint on both.",
                "Answer": "CREATE TABLE film_to_genre (Film_ID number, Genre_ID number, FOREIGN KEY (Film_ID) REFERENCES film(Film_ID), FOREIGN KEY (Genre_ID) REFERENCES film_genre(Genre_ID))"
            },
            {
                "User": "Link the film 'Interstellar' with the 'Science Fiction' genre.",
                "Answer": "INSERT INTO film_to_genre (Film_ID, Genre_ID) VALUES (14, 1)"
            },
            {
                "User": "Increase the number of cities for the 'USA' market by 50.",
                "Answer": "UPDATE market SET Number_cities = Number_cities + 50 WHERE Country = 'USA'"
            },
            {
                "User": "Add a new market entry for 'Germany' with Market_ID 7 and 300 cities.",
                "Answer": "INSERT INTO market (Market_ID, Country, Number_cities) VALUES (7, 'Germany', 300)"
            },
            {
                "User": "How many films have a gross revenue of over 200 million dollars?",
                "Answer": "SELECT count(*) FROM film WHERE Gross_in_dollar > 200000000"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 224,
        "db": "department_store",
        "interaction": [
            {
                "User": "I want to add a new supplier called 'FreshFoods' with the phone number '123-456-7890'.",
                "Answer": "INSERT INTO Suppliers (supplier_id, supplier_name, supplier_phone) VALUES (5, 'FreshFoods', '123-456-7890')"
            },
            {
                "User": "Update the phone number of supplier 'Lidl' to '999-888-7777'.",
                "Answer": "UPDATE Suppliers SET supplier_phone = '999-888-7777' WHERE supplier_name = 'Lidl'"
            },
            {
                "User": "Create a new table to track inventory levels for products in each department store.",
                "Answer": "CREATE TABLE Inventory (inventory_id number PRIMARY KEY, dept_store_id number, product_id number, quantity number)"
            },
            {
                "User": "Add a new column to the Staff table to store their email addresses.",
                "Answer": "ALTER TABLE Staff ADD staff_email text"
            },
            {
                "User": "Insert a new department store into the chain with the name 'North' and contact information.",
                "Answer": "INSERT INTO Department_Store_Chain (dept_store_chain_id, dept_store_chain_name) VALUES (5, 'North')"
            },
            {
                "User": "Add a new customer with the name 'Alice Smith', using direct debit, living at '123 Wonderland Ave', with the email 'alice.smith@example.com'.",
                "Answer": "INSERT INTO Customers (customer_id, payment_method_code, customer_code, customer_name, customer_address, customer_phone, customer_email) VALUES (16, 'Direct Debit', '999', 'Alice Smith', '123 Wonderland Ave', '555-4242', 'alice.smith@example.com')"
            },
            {
                "User": "Update the email address of customer Lukas to 'lukas.newemail@example.com'.",
                "Answer": "UPDATE Customers SET customer_email = 'lukas.newemail@example.com' WHERE customer_name = 'Lukas'"
            },
            {
                "User": "Record a new order for customer id 1 with the status 'Processing' made today.",
                "Answer": "INSERT INTO Customer_Orders (order_id, customer_id, order_status_code, order_date) VALUES (16, 1, 'Processing', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Add a record to Order_Items for order id 16 with product id 5.",
                "Answer": "INSERT INTO Order_Items (order_item_id, order_id, product_id) VALUES (16, 16, 5)"
            },
            {
                "User": "Create a new table to track the sales of each product by store location.",
                "Answer": "CREATE TABLE Product_Sales (sale_id number PRIMARY KEY, dept_store_id number, product_id number, sale_date time, quantity_sold number)"
            },
            {
                "User": "Alter the Product_Suppliers table to include a new column for the unit purchase price.",
                "Answer": "ALTER TABLE Product_Suppliers ADD unit_purchase_price number"
            },
            {
                "User": "Insert a new address into the Addresses table for '456 Dreamland Street'.",
                "Answer": "INSERT INTO Addresses (address_id, address_details) VALUES (16, '456 Dreamland Street')"
            },
            {
                "User": "We need to track the staff's date of birth. Please add this to the Staff table.",
                "Answer": "ALTER TABLE Staff ADD staff_dob date"
            },
            {
                "User": "A new product category 'Electronics' has been introduced. Update the product_type_code for product_id 3 to 'Electronics'.",
                "Answer": "UPDATE Products SET product_type_code = 'Electronics' WHERE product_id = 3"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 225,
        "db": "department_store",
        "interaction": [
            {
                "User": "Can we add a new supplier named 'NewTech' with phone number '123-456-7890'?",
                "Answer": "INSERT INTO Suppliers (supplier_id, supplier_name, supplier_phone) VALUES (5, 'NewTech', '123-456-7890')"
            },
            {
                "User": "I'd like to update the phone number of supplier 'Lidl' to '555-010-2020'.",
                "Answer": "UPDATE Suppliers SET supplier_phone = '555-010-2020' WHERE supplier_name = 'Lidl'"
            },
            {
                "User": "Please create a new table to track the departments' budget with columns for department_id, budget_amount, and budget_year.",
                "Answer": "CREATE TABLE Department_Budgets (department_id number, budget_amount number, budget_year text, PRIMARY KEY (department_id))"
            },
            {
                "User": "Let's insert the budget for the 'human resource' department for the year 2023 as 50000.",
                "Answer": "INSERT INTO Department_Budgets (department_id, budget_amount, budget_year) VALUES ((SELECT department_id FROM Departments WHERE department_name = 'human resource'), 50000, '2023')"
            },
            {
                "User": "Add a new column 'last_updated' to the Addresses table to track the last update timestamp.",
                "Answer": "ALTER TABLE Addresses ADD last_updated time"
            },
            {
                "User": "We need to record a new address for supplier 'Tesco', can you insert it?",
                "Answer": "INSERT INTO Addresses (address_id, address_details) VALUES (16, '7890 New St, Techville, TX 12345')"
            },
            {
                "User": "Now, link Tesco's new address with the one we just added, effective from today.",
                "Answer": "INSERT INTO Supplier_Addresses (supplier_id, address_id, date_from, date_to) VALUES (3, 16, CURRENT_DATE, NULL)"
            },
            {
                "User": "Create a new table to store customer feedback with columns for feedback_id, customer_id, feedback_text, and feedback_date.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number, customer_id number, feedback_text text, feedback_date time, PRIMARY KEY (feedback_id))"
            },
            {
                "User": "Customer with ID 1 left feedback saying 'Great service!'. Can you add this to the new table with today's date?",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES (1, 1, 'Great service!', CURRENT_DATE)"
            },
            {
                "User": "I realized we need to track the job title description in Staff_Department_Assignments. Can you add a column for it?",
                "Answer": "ALTER TABLE Staff_Department_Assignments ADD job_title_description text"
            },
            {
                "User": "Update the job title description for the 'Department Manager' to 'Oversees department operations'.",
                "Answer": "UPDATE Staff_Department_Assignments SET job_title_description = 'Oversees department operations' WHERE job_title_code = 'Department Manager'"
            },
            {
                "User": "Let's add a new product called 'smartwatch' supplied by 'NewTech' priced at 249.99.",
                "Answer": "INSERT INTO Products (product_id, product_type_code, product_name, product_price) VALUES (16, 'Electronics', 'smartwatch', 249.99)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 226,
        "db": "club_1",
        "interaction": [
            {
                "User": "what is the club id of stud 1001",
                "Answer": "SELECT ClubID FROM Member_of_club WHERE StuID = 1001"
            },
            {
                "User": "what is the club name of AKW",
                "Answer": "SELECT ClubName FROM Club WHERE ClubLocation = 'AKW'"
            },
            {
                "User": "what is the position of club id 1",
                "Answer": "SELECT Position FROM Member_of_club WHERE ClubID = 1"
            },
            {
                "User": "what is the club name of HHH",
                "Answer": "SELECT ClubName FROM Club WHERE ClubLocation = 'HHH'"
            },
            {
                "User": "Add a new student named John Doe, age 20, male, majoring in 700, with advisor 2233, from city code NYC",
                "Answer": "INSERT INTO Student (LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES ('Doe', 'John', 20, 'M', 700, 2233, 'NYC')"
            },
            {
                "User": "Update the club description of 'Hopkins Student Enterprises' to include 'Support for student entrepreneurs'",
                "Answer": "UPDATE Club SET ClubDesc = 'Venture capital fund for student business. Support for student entrepreneurs' WHERE ClubName = 'Hopkins Student Enterprises'"
            },
            {
                "User": "Create a new table for club advisors including advisor ID, name, and contact number",
                "Answer": "CREATE TABLE Club_Advisors (AdvisorID number PRIMARY KEY, AdvisorName text, ContactNumber text)"
            },
            {
                "User": "Insert new club advisor with ID 2233, name 'Jane Smith', and contact number '123-456-7890'",
                "Answer": "INSERT INTO Club_Advisors (AdvisorID, AdvisorName, ContactNumber) VALUES (2233, 'Jane Smith', '123-456-7890')"
            },
            {
                "User": "Add a column for student email addresses to the Student table",
                "Answer": "ALTER TABLE Student ADD COLUMN Email text"
            },
            {
                "User": "Set the email of student with StuID 1002 to 'tracy.kim@university.edu'",
                "Answer": "UPDATE Student SET Email = 'tracy.kim@university.edu' WHERE StuID = 1002"
            },
            {
                "User": "Create a new table for club events including event ID, club ID, event name, and event date",
                "Answer": "CREATE TABLE Club_Events (EventID number PRIMARY KEY, ClubID number, EventName text, EventDate date)"
            },
            {
                "User": "Insert a new event for club ID 2 named 'Entrepreneur Workshop' on '2023-05-15'",
                "Answer": "INSERT INTO Club_Events (EventID, ClubID, EventName, EventDate) VALUES (101, 2, 'Entrepreneur Workshop', '2023-05-15')"
            },
            {
                "User": "Who is the advisor for the student with StuID 1001?",
                "Answer": "SELECT Advisor FROM Student WHERE StuID = 1001"
            },
            {
                "User": "Link the advisor with the clubs they advise by creating a new table Club_Advisor_Link",
                "Answer": "CREATE TABLE Club_Advisor_Link (ClubID number, AdvisorID number, PRIMARY KEY (ClubID, AdvisorID))"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 227,
        "db": "flight_1",
        "interaction": [
            {
                "User": "Add a new flight from New York to Los Angeles with distance 2450, departure on 04/15/2005 14:00, arrival on 04/15/2005 17:00, price 300, and aircraft id 3.",
                "Answer": "INSERT INTO flight (origin, destination, distance, departure_date, arrival_date, price, aid) VALUES ('New York', 'Los Angeles', 2450, '04/15/2005 14:00', '04/15/2005 17:00', 300, 3)"
            },
            {
                "User": "Update the salary of employee John Williams to 160000.",
                "Answer": "UPDATE employee SET salary = 160000 WHERE name = 'John Williams'"
            },
            {
                "User": "Create a new table for airport information with columns for airport code, name, city, and state.",
                "Answer": "CREATE TABLE airport (code number PRIMARY KEY, name text, city text, state text)"
            },
            {
                "User": "Add a new column to the flight table to include the number of passengers.",
                "Answer": "ALTER TABLE flight ADD COLUMN passengers number"
            },
            {
                "User": "Insert a new employee named Alice Brown with an employee id of 301224 and a salary of 135000.",
                "Answer": "INSERT INTO employee (eid, name, salary) VALUES (301224, 'Alice Brown', 135000)"
            },
            {
                "User": "Certify the employee with id 141582651 to fly the aircraft with id 1.",
                "Answer": "INSERT INTO certificate (eid, aid) VALUES (141582651, 1)"
            },
            {
                "User": "Change the name of the aircraft with id 2 to 'Boeing 737 MAX'.",
                "Answer": "UPDATE aircraft SET name = 'Boeing 737 MAX' WHERE aid = 2"
            },
            {
                "User": "List all employees who are certified to fly more than one type of aircraft.",
                "Answer": "SELECT e.name FROM employee e JOIN certificate c ON e.eid = c.eid GROUP BY e.eid HAVING COUNT(DISTINCT c.aid) > 1"
            },
            {
                "User": "Increase the salary of all employees by 5%.",
                "Answer": "UPDATE employee SET salary = salary * 1.05"
            },
            {
                "User": "Create a new table for tracking flight delays with columns for flight number, delay time, and reason.",
                "Answer": "CREATE TABLE flight_delays (flno number, delay_time number, reason text, FOREIGN KEY (flno) REFERENCES flight(flno))"
            },
            {
                "User": "Add a new record for a flight delay for flight number 99 with a delay time of 30 minutes due to weather.",
                "Answer": "INSERT INTO flight_delays (flno, delay_time, reason) VALUES (99, 30, 'weather')"
            },
            {
                "User": "Update the departure and arrival times of flight number 13 to be delayed by 1 hour.",
                "Answer": "UPDATE flight SET departure_date = datetime(departure_date, '+1 hour'), arrival_date = datetime(arrival_date, '+1 hour') WHERE flno = 13;"
            },
            {
                "User": "Delete the certificate record for employee id 90873519 and aircraft id 6.",
                "Answer": "DELETE FROM certificate WHERE eid = 90873519 AND aid = 6"
            },
            {
                "User": "Add a column 'maintenance_required' to the aircraft table to indicate if maintenance is needed (yes/no).",
                "Answer": "ALTER TABLE aircraft ADD COLUMN maintenance_required text"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 228,
        "db": "dorm_1",
        "interaction": [
            {
                "User": "Add a new student named John Doe, aged 20, studying major 601 with advisor 1122, living in city code 'LAX'.",
                "Answer": "INSERT INTO Student (LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES ('Doe', 'John', 20, 'M', 601, 1122, 'LAX')"
            },
            {
                "User": "John Doe has decided to switch his major to 602. Update his record.",
                "Answer": "UPDATE Student SET Major = 602 WHERE StuID = 1004"
            },
            {
                "User": "I want to assign John Doe to live in 'Smith Hall' in room number 200.",
                "Answer": "INSERT INTO Lives_in (stuid, dormid, room_number) VALUES (1004, 100, 200)"
            },
            {
                "User": "We need to track the enrollment date for students. Add a new column 'EnrollmentDate' to the Student table.",
                "Answer": "ALTER TABLE Student ADD COLUMN EnrollmentDate DATE"
            },
            {
                "User": "Set the enrollment date for John Doe to '2023-09-01'.",
                "Answer": "UPDATE Student SET EnrollmentDate = '2023-09-01' WHERE StuID = 1004"
            },
            {
                "User": "Create a new table to track student parking permits with columns for permit ID, student ID, and expiration date.",
                "Answer": "CREATE TABLE Student_Parking (PermitID number PRIMARY KEY, StuID number, ExpirationDate DATE)"
            },
            {
                "User": "John Doe has received a parking permit. Insert his permit details with permit ID 3001, expiring on '2024-08-31'.",
                "Answer": "INSERT INTO Student_Parking (PermitID, StuID, ExpirationDate) VALUES (3001, 1004, '2024-08-31')"
            },
            {
                "User": "How many amenities does 'Smith Hall' have?",
                "Answer": "SELECT COUNT(amenid) FROM Has_amenity WHERE dormid = 100"
            },
            {
                "User": "Which dorms accommodate females and have a 'Study Room' amenity?",
                "Answer": "SELECT D.dorm_name FROM Dorm D JOIN Has_amenity HA ON D.dormid = HA.dormid JOIN Dorm_amenity DA ON HA.amenid = DA.amenid WHERE D.gender = 'F' AND DA.amenity_name = 'Study Room'"
            },
            {
                "User": "Add a new amenity called 'Gym' to the list of dorm amenities.",
                "Answer": "INSERT INTO Dorm_amenity (amenid, amenity_name) VALUES (903, 'Gym')"
            },
            {
                "User": "Assign the 'Gym' amenity to 'Bud Jones Hall'.",
                "Answer": "INSERT INTO Has_amenity (dormid, amenid) VALUES (110, 903)"
            },
            {
                "User": "A new dorm called 'Einstein Hall' has been built with a capacity of 150, accommodating all genders. Add it to the database.",
                "Answer": "INSERT INTO Dorm (dormid, dorm_name, student_capacity, gender) VALUES (141, 'Einstein Hall', 150, 'X')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 229,
        "db": "dorm_1",
        "interaction": [
            {
                "User": "Can you add a new student named John Doe, aged 20, male, majoring in 610, advised by 1121, from city code 'NYC'?",
                "Answer": "INSERT INTO Student (LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES ('Doe', 'John', 20, 'M', 610, 1121, 'NYC')"
            },
            {
                "User": "I'd like to update the student capacity of Smith Hall to 90. Can you do that?",
                "Answer": "UPDATE Dorm SET student_capacity = 90 WHERE dorm_name = 'Smith Hall'"
            },
            {
                "User": "Can you create a new table to track the study group sessions with columns for session_id, topic, and scheduled_time?",
                "Answer": "CREATE TABLE Study_Groups (session_id number PRIMARY KEY, topic text, scheduled_time datetime)"
            },
            {
                "User": "Please add a new column to the Dorm table to indicate if the dorm has internet access. The column should be called 'internet_access' and should be of type text.",
                "Answer": "ALTER TABLE Dorm ADD COLUMN internet_access text"
            },
            {
                "User": "Insert a new amenity called 'Gym' into the Dorm_amenity table.",
                "Answer": "INSERT INTO Dorm_amenity (amenid, amenity_name) VALUES (903, 'Gym')"
            },
            {
                "User": "Link the 'Gym' amenity to 'Bud Jones Hall' in the Has_amenity table.",
                "Answer": "INSERT INTO Has_amenity (dormid, amenid) VALUES (110, 903)"
            },
            {
                "User": "Change the room number for student Linda Smith in Lives_in table to 210.",
                "Answer": "UPDATE Lives_in SET room_number = 210 WHERE stuid = 1001"
            },
            {
                "User": "Can you tell me which dorms have a 'Study Room' amenity?",
                "Answer": "SELECT T1.dorm_name FROM Dorm AS T1 JOIN Has_amenity AS T2 ON T1.dormid = T2.dormid JOIN Dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'"
            },
            {
                "User": "How many students live in dorms with a capacity greater than 100?",
                "Answer": "SELECT COUNT(*) FROM Lives_in AS T1 JOIN Dorm AS T2 ON T1.dormid = T2.dormid WHERE T2.student_capacity > 100"
            },
            {
                "User": "Can you create a view that lists all male students with their dorm names and room numbers?",
                "Answer": "CREATE VIEW Male_Students_Dorm_Info AS SELECT T1.Fname, T1.LName, T3.dorm_name, T2.room_number FROM Student AS T1 JOIN Lives_in AS T2 ON T1.StuID = T2.stuid JOIN Dorm AS T3 ON T2.dormid = T3.dormid WHERE T1.Sex = 'M'"
            },
            {
                "User": "Please insert a new dorm called 'Maple House' with a capacity of 120, gender neutral, and with internet access.",
                "Answer": "INSERT INTO Dorm (dormid, dorm_name, student_capacity, gender, internet_access) VALUES (150, 'Maple House', 120, 'X', 'Yes')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 230,
        "db": "hr_1",
        "interaction": [
            {
                "User": "Can you add a new region called 'Middle East'?",
                "Answer": "INSERT INTO regions (REGION_ID, REGION_NAME) VALUES (5, 'Middle East')"
            },
            {
                "User": "I noticed we don't have a state_province for some locations. Can we add this information for location with ID 1000?",
                "Answer": "UPDATE locations SET STATE_PROVINCE = 'Lazio' WHERE LOCATION_ID = 1000"
            },
            {
                "User": "Let's create a new table for storing temporary project assignments.",
                "Answer": "CREATE TABLE project_assignments (ASSIGNMENT_ID number PRIMARY KEY, EMPLOYEE_ID number, PROJECT_ID number, START_DATE time, END_DATE time)"
            },
            {
                "User": "Can we add a column to track the reason for leaving in the job history table?",
                "Answer": "ALTER TABLE job_history ADD COLUMN LEAVE_REASON TEXT;"
            },
            {
                "User": "What if we need to record the languages our employees speak? Can we set up a table for that?",
                "Answer": "CREATE TABLE employee_languages (EMPLOYEE_ID number, LANGUAGE text, PROFICIENCY_LEVEL text)"
            },
            {
                "User": "Please insert a record for an employee who speaks Spanish with high proficiency.",
                "Answer": "INSERT INTO employee_languages (EMPLOYEE_ID, LANGUAGE, PROFICIENCY_LEVEL) VALUES (100, 'Spanish', 'High')"
            },
            {
                "User": "We need to keep track of employee benefits. Could you create a table for that purpose?",
                "Answer": "CREATE TABLE employee_benefits (EMPLOYEE_ID number, BENEFIT_NAME text, BENEFIT_VALUE number)"
            },
            {
                "User": "Add a benefit record for employee 101, stating that they have health insurance valued at 3000.",
                "Answer": "INSERT INTO employee_benefits (EMPLOYEE_ID, BENEFIT_NAME, BENEFIT_VALUE) VALUES (101, 'Health Insurance', 3000)"
            },
            {
                "User": "Can you update the maximum salary for the 'Administration Assistant' job to 7000?",
                "Answer": "UPDATE jobs SET MAX_SALARY = 7000 WHERE JOB_TITLE = 'Administration Assistant'"
            },
            {
                "User": "Let's add a new department called 'Data Science' with a department ID of 280, managed by employee ID 102, and located at location ID 1200.",
                "Answer": "INSERT INTO departments (DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID) VALUES (280, 'Data Science', 102, 1200)"
            },
            {
                "User": "Insert a new employee record for 'Jane Doe' who is a 'Data Scientist', hired today, with a salary of 9000, working in the 'Data Science' department.",
                "Answer": "INSERT INTO employees (FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) VALUES ('Jane', 'Doe', 'JDOE', '515.123.4571', CURRENT_DATE, 'DS_SCI', 9000, 0, 102, 50)"
            },
            {
                "User": "We should also record the previous jobs of our employees. Add a past job for employee 108 as 'Data Analyst' in department 20, starting from '2018-01-01' to '2020-12-31'.",
                "Answer": "INSERT INTO job_history (EMPLOYEE_ID, START_DATE, END_DATE, JOB_ID, DEPARTMENT_ID) VALUES (108, '2018-01-01', '2020-12-31', 'DA_ANLYST', 20)"
            },
            {
                "User": "We've expanded our operations in Asia. Update the region name from 'Asia' to 'Asia-Pacific'.",
                "Answer": "UPDATE regions SET REGION_NAME = 'Asia-Pacific' WHERE REGION_NAME = 'Asia'"
            },
            {
                "User": "An employee from the 'Data Science' department has just won 'Employee of the Year'. Can we add a column to the departments table to record this?",
                "Answer": "ALTER TABLE departments ADD COLUMN EMPLOYEE_OF_THE_YEAR_ID INTEGER;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 231,
        "db": "tracking_orders",
        "interaction": [
            {
                "User": "Add a new customer with ID 16 named 'Olivia' with details 'fugit'.",
                "Answer": "INSERT INTO Customers (customer_id, customer_name, customer_details) VALUES (16, 'Olivia', 'fugit');"
            },
            {
                "User": "Update the order status to 'Delivered' for order ID 2.",
                "Answer": "UPDATE Orders SET order_status = 'Delivered' WHERE order_id = 2;"
            },
            {
                "User": "Create a new table called 'Returns' with columns return_id, order_id, product_id, and return_reason.",
                "Answer": "CREATE TABLE Returns (return_id number PRIMARY KEY, order_id number, product_id number, return_reason text);"
            },
            {
                "User": "Add a new column 'email' to the Customers table.",
                "Answer": "ALTER TABLE Customers ADD COLUMN email text;"
            },
            {
                "User": "Insert a new product with ID 16, name 'electronics', and details 'latest model'.",
                "Answer": "INSERT INTO Products (product_id, product_name, product_details) VALUES (16, 'electronics', 'latest model');"
            },
            {
                "User": "Record a new shipment with ID 16, order ID 3, invoice number 3, tracking number 'AB123', and shipment date '2023-01-15 10:00:00'.",
                "Answer": "INSERT INTO Shipments (shipment_id, order_id, invoice_number, shipment_tracking_number, shipment_date) VALUES (16, 3, 3, 'AB123', '2023-01-15 10:00:00');"
            },
            {
                "User": "Add a shipment item linking shipment ID 16 with order item ID 3.",
                "Answer": "INSERT INTO Shipment_Items (shipment_id, order_item_id) VALUES (16, 3);"
            },
            {
                "User": "Create a view 'Active_Customers' that lists all customers who have placed an order within the last year.",
                "Answer": "CREATE VIEW Active_Customers AS SELECT DISTINCT T1.customer_id, T1.customer_name FROM Customers AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= date('now', '-1 year');"
            },
            {
                "User": "Change the product name of product ID 2 to 'novel'.",
                "Answer": "UPDATE Products SET product_name = 'novel' WHERE product_id = 2;"
            },
            {
                "User": "Delete the order with order ID 1 as it was placed by mistake.",
                "Answer": "DELETE FROM Orders WHERE order_id = 1;"
            },
            {
                "User": "Add a new column 'customer_since' to track when the customer was added to the database.",
                "Answer": "ALTER TABLE Customers ADD COLUMN customer_since time;"
            },
            {
                "User": "Set the 'customer_since' date for customer ID 1 to '2010-06-01 00:00:00'.",
                "Answer": "UPDATE Customers SET customer_since = '2010-06-01 00:00:00' WHERE customer_id = 1;"
            },
            {
                "User": "How many products have been ordered in total?",
                "Answer": "SELECT SUM(order_item_id) FROM Order_Items;"
            },
            {
                "User": "Link the invoice number 3 to all shipments that occurred on '2006-01-17'.",
                "Answer": "UPDATE Shipments SET invoice_number = 3 WHERE shipment_date = '2006-01-17';"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 232,
        "db": "manufactory_1",
        "interaction": [
            {
                "User": "Add a new manufacturer called 'TechGuru' headquartered in 'New York' with founder 'Sarah' and revenue of 200.",
                "Answer": "INSERT INTO Manufacturers (Name, Headquarter, Founder, Revenue) VALUES ('TechGuru', 'New York', 'Sarah', 200)"
            },
            {
                "User": "How many manufacturers do we have now?",
                "Answer": "SELECT COUNT(*) FROM Manufacturers"
            },
            {
                "User": "Update the revenue of 'Creative Labs' to 150.",
                "Answer": "UPDATE Manufacturers SET Revenue = 150 WHERE Name = 'Creative Labs'"
            },
            {
                "User": "What is the updated revenue of 'Creative Labs'?",
                "Answer": "SELECT Revenue FROM Manufacturers WHERE Name = 'Creative Labs'"
            },
            {
                "User": "Create a new table called 'Categories' with columns 'Id' as number and primary key, and 'CategoryName' as text.",
                "Answer": "CREATE TABLE Categories (Id number PRIMARY KEY, CategoryName text)"
            },
            {
                "User": "Insert into 'Categories' table with Id 1 and CategoryName as 'Electronics'.",
                "Answer": "INSERT INTO Categories (Id, CategoryName) VALUES (1, 'Electronics')"
            },
            {
                "User": "Add a new column 'Category' to the 'Products' table referencing 'Categories' Id.",
                "Answer": "ALTER TABLE Products ADD Category number REFERENCES Categories(Id)"
            },
            {
                "User": "Assign category 1 to all products in 'Products' table.",
                "Answer": "UPDATE Products SET Category = 1"
            },
            {
                "User": "List all products with their names, prices, and category names.",
                "Answer": "SELECT P.Name, P.Price, C.CategoryName FROM Products AS P JOIN Categories AS C ON P.Category = C.Id"
            },
            {
                "User": "Increase the price of all products by 10 percent.",
                "Answer": "UPDATE Products SET Price = Price * 1.10"
            },
            {
                "User": "What are the new prices of the products?",
                "Answer": "SELECT Name, Price FROM Products"
            },
            {
                "User": "Delete the manufacturer with the lowest revenue.",
                "Answer": "DELETE FROM Manufacturers WHERE Revenue = (SELECT MIN(Revenue) FROM Manufacturers)"
            },
            {
                "User": "How many manufacturers are left after the deletion?",
                "Answer": "SELECT COUNT(*) FROM Manufacturers"
            },
            {
                "User": "Create a view that shows manufacturers and their average product price.",
                "Answer": "CREATE VIEW ManufacturerAvgPrices AS SELECT T2.Name, AVG(T1.Price) AS AvgPrice FROM Products T1 JOIN Manufacturers T2 ON T1.Manufacturer = T2.Code GROUP BY T2.Name"
            },
            {
                "User": "Show me the manufacturers and their average product price from the view.",
                "Answer": "SELECT * FROM ManufacturerAvgPrices"
            },
            {
                "User": "Add a new product called 'Smartphone' with price 500 and link it to 'TechGuru' manufacturer.",
                "Answer": "INSERT INTO Products (Name, Price, Manufacturer, Category) VALUES ('Smartphone', 500, (SELECT Code FROM Manufacturers WHERE Name = 'TechGuru'), 1)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 233,
        "db": "game_injury",
        "interaction": [
            {
                "User": "Add a new stadium called 'Liberty Stadium' with an average attendance of 50000, home games 10, total attendance 500000, and capacity percentage of 80.",
                "Answer": "INSERT INTO stadium (name, Home_Games, Average_Attendance, Total_Attendance, Capacity_Percentage) VALUES ('Liberty Stadium', 10, 50000, 500000, 80)"
            },
            {
                "User": "The stadium 'Cowboys Stadium' has increased its capacity. Update its capacity percentage to 110.",
                "Answer": "UPDATE stadium SET Capacity_Percentage = 110 WHERE name = 'Cowboys Stadium'"
            },
            {
                "User": "Create a new table to track the ticket prices for each game, with columns for game_id, price_category, and price_amount.",
                "Answer": "CREATE TABLE ticket_prices (game_id number, price_category text, price_amount number, PRIMARY KEY (game_id, price_category))"
            },
            {
                "User": "Insert ticket price data for game 1 with categories 'Standard' priced at 120 and 'Premium' priced at 240.",
                "Answer": "INSERT INTO ticket_prices (game_id, price_category, price_amount) VALUES (1, 'Standard', 120), (1, 'Premium', 240)"
            },
            {
                "User": "We need to start tracking the duration of injuries. Add a column to the injury_accident table to record the number of days a player is out.",
                "Answer": "ALTER TABLE injury_accident ADD COLUMN Days_Out number"
            },
            {
                "User": "Update the injury record for player 'Davide Santon' to reflect that he was out for 30 days.",
                "Answer": "UPDATE injury_accident SET Days_Out = 30 WHERE Player = 'Davide Santon'"
            },
            {
                "User": "How much total revenue was generated from ticket sales for the game on '18 May 2007'?",
                "Answer": "SELECT sum(price_amount) FROM ticket_prices WHERE game_id = (SELECT id FROM game WHERE Date = '18 May 2007')"
            },
            {
                "User": "Create a view that shows the average ticket price for each game.",
                "Answer": "CREATE VIEW avg_ticket_price AS SELECT game_id, AVG(price_amount) AS average_price FROM ticket_prices GROUP BY game_id"
            },
            {
                "User": "For the newly added 'Liberty Stadium', schedule a game on '1 June 2023' between 'Team A' and 'Team B' with the score '2-1' for a league match.",
                "Answer": "INSERT INTO game (stadium_id, Season, Date, Home_team, Away_team, Score, Competition) VALUES ((SELECT id FROM stadium WHERE name = 'Liberty Stadium'), 2023, '1 June 2023', 'Team A', 'Team B', '2-1', 'League')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 234,
        "db": "document_management",
        "interaction": [
            {
                "User": "Add a new role for 'Intern' with a description 'Internship Role'",
                "Answer": "INSERT INTO Roles (role_code, role_description) VALUES ('INTERN', 'Internship Role')"
            },
            {
                "User": "Change the role description of 'DBA' to 'Senior Database Administrator'",
                "Answer": "UPDATE Roles SET role_description = 'Senior Database Administrator' WHERE role_code = 'DBA'"
            },
            {
                "User": "Create a new table for storing document types with a code and description",
                "Answer": "CREATE TABLE Document_Types (document_type_code TEXT PRIMARY KEY, document_type_description TEXT)"
            },
            {
                "User": "Add a new document type with code 'MEMO' and description 'Internal Memorandum'",
                "Answer": "INSERT INTO Document_Types (document_type_code, document_type_description) VALUES ('MEMO', 'Internal Memorandum')"
            },
            {
                "User": "Insert a new user with id 16, role code 'INTERN', username 'john.doe', login 'johndoe', and password 'password123'",
                "Answer": "INSERT INTO Users (user_id, role_code, user_name, user_login, password) VALUES (16, 'INTERN', 'john.doe', 'johndoe', 'password123')"
            },
            {
                "User": "Update the access count for the document with the name 'Learning English' to 2000",
                "Answer": "UPDATE Documents SET access_count = 2000 WHERE document_name = 'Learning English'"
            },
            {
                "User": "Add a new column 'last_access_date' to the Documents table to track the last access date",
                "Answer": "ALTER TABLE Documents ADD COLUMN last_access_date DATE"
            },
            {
                "User": "Set the last access date for the document 'Learning English' to '2023-04-01'",
                "Answer": "UPDATE Documents SET last_access_date = '2023-04-01' WHERE document_name = 'Learning English'"
            },
            {
                "User": "Create a table to track document edits with columns for edit_id, document_code, user_id, and edit_timestamp",
                "Answer": "CREATE TABLE Document_Edits (edit_id NUMBER PRIMARY KEY, document_code TEXT, user_id NUMBER, edit_timestamp TIMESTAMP)"
            },
            {
                "User": "Insert a record into the Document_Edits table for a change made by user 2 on document '217' with edit_id 1",
                "Answer": "INSERT INTO Document_Edits (edit_id, document_code, user_id, edit_timestamp) VALUES (1, '217', 2, CURRENT_TIMESTAMP)"
            },
            {
                "User": "Show me the role descriptions for all roles except 'DBA'",
                "Answer": "SELECT role_description FROM Roles WHERE role_code != 'DBA'"
            },
            {
                "User": "I want to add a new functional area called 'Compliance' with the parent code '1'",
                "Answer": "INSERT INTO Functional_Areas (functional_area_code, parent_functional_area_code, functional_area_description) VALUES ('10', '1', 'Compliance')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 235,
        "db": "document_management",
        "interaction": [
            {
                "User": "I'd like to add a new role for 'Content Editor'.",
                "Answer": "INSERT INTO Roles (role_code, role_description) VALUES ('CNT-EDT', 'Content Editor');"
            },
            {
                "User": "Update the role description of 'DBA' to 'Lead Database Administrator'.",
                "Answer": "UPDATE Roles SET role_description = 'Lead Database Administrator' WHERE role_code = 'DBA';"
            },
            {
                "User": "Create a new table for tracking document types with a code and description.",
                "Answer": "CREATE TABLE Document_Types (document_type_code text PRIMARY KEY, document_type_description text);"
            },
            {
                "User": "Add a new document type code 'MEMO' with the description 'Internal Memorandum'.",
                "Answer": "INSERT INTO Document_Types (document_type_code, document_type_description) VALUES ('MEMO', 'Internal Memorandum');"
            },
            {
                "User": "I need to track the creation date of documents. Can you add a column for that?",
                "Answer": "ALTER TABLE Documents ADD COLUMN creation_date date;"
            },
            {
                "User": "Set the creation date of the document with code '217' to January 1st, 2021.",
                "Answer": "UPDATE Documents SET creation_date = '2021-01-01' WHERE document_code = '217';"
            },
            {
                "User": "Can we record the last accessed date for documents? We need a new column.",
                "Answer": "ALTER TABLE Documents ADD COLUMN last_accessed_date date;"
            },
            {
                "User": "Record that the document 'Learning English' was last accessed on March 10th, 2023.",
                "Answer": "UPDATE Documents SET last_accessed_date = '2023-03-10' WHERE document_name = 'Learning English';"
            },
            {
                "User": "Create a table for user activity logs with columns for user ID, action, and timestamp.",
                "Answer": "CREATE TABLE User_Activity_Logs (log_id number PRIMARY KEY, user_id number, action text, timestamp datetime);"
            },
            {
                "User": "Log an activity for user ID 2 who just logged in.",
                "Answer": "INSERT INTO User_Activity_Logs (log_id, user_id, action, timestamp) VALUES (1, 2, 'Login', CURRENT_TIMESTAMP);"
            },
            {
                "User": "We need to assign roles to document sections. Please add a role_code column to the Document_Sections table.",
                "Answer": "ALTER TABLE Document_Sections ADD COLUMN role_code text;"
            },
            {
                "User": "Assign the 'Content Editor' role to the section with ID 12.",
                "Answer": "UPDATE Document_Sections SET role_code = 'CNT-EDT' WHERE section_id = 12;"
            },
            {
                "User": "For auditing, add a column to track who last modified a document section.",
                "Answer": "ALTER TABLE Document_Sections ADD COLUMN last_modified_by text;"
            },
            {
                "User": "Update the last_modified_by for section ID 15 to user 'dickens.elta'.",
                "Answer": "UPDATE Document_Sections SET last_modified_by = 'dickens.elta' WHERE section_id = 15;"
            },
            {
                "User": "We need to track the number of images per document. Can you create a view for that?",
                "Answer": "CREATE VIEW Document_Image_Count AS SELECT t1.document_code, COUNT(t2.image_id) AS image_count FROM Documents AS t1 LEFT JOIN Document_Sections_Images AS t2 ON t1.document_code = t2.section_id GROUP BY t1.document_code;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 236,
        "db": "movie_1",
        "interaction": [
            {
                "User": "Can you add a new movie called 'The Great Adventure' directed by 'John Smith' released in 2021 to the database?",
                "Answer": "INSERT INTO Movie (mID, title, year, director) VALUES (109, 'The Great Adventure', 2021, 'John Smith')"
            },
            {
                "User": "I noticed a mistake in the director's name for the movie 'The Great Adventure'. Can you correct it to 'Jane Doe'?",
                "Answer": "UPDATE Movie SET director = 'Jane Doe' WHERE title = 'The Great Adventure'"
            },
            {
                "User": "I would like to add a new reviewer named 'Alex Johnson'. Could you do that for me?",
                "Answer": "INSERT INTO Reviewer (rID, name) VALUES (209, 'Alex Johnson')"
            },
            {
                "User": "Alex Johnson just reviewed 'The Great Adventure' and gave it 5 stars on March 5, 2023. Can you update the ratings?",
                "Answer": "INSERT INTO Rating (rID, mID, stars, ratingDate) VALUES (209, 109, 5, '2023-03-05')"
            },
            {
                "User": "Could we create a new table to track the genres of the movies?",
                "Answer": "CREATE TABLE Genre (mID number, genre text, PRIMARY KEY (mID, genre))"
            },
            {
                "User": "Let's add the genre 'Adventure' for the movie 'The Great Adventure'.",
                "Answer": "INSERT INTO Genre (mID, genre) VALUES (109, 'Adventure')"
            },
            {
                "User": "Can we add a column to the Movie table to store the language of the movie?",
                "Answer": "ALTER TABLE Movie ADD COLUMN language text"
            },
            {
                "User": "Please update the movie 'The Great Adventure' to have the language 'English'.",
                "Answer": "UPDATE Movie SET language = 'English' WHERE title = 'The Great Adventure'"
            },
            {
                "User": "Can you create a view that lists all movies with their genres and languages?",
                "Answer": "CREATE VIEW MovieDetails AS SELECT M.title, M.year, M.director, G.genre, M.language FROM Movie M LEFT JOIN Genre G ON M.mID = G.mID"
            },
            {
                "User": "I would like to see the average rating for each movie. Can you help with that?",
                "Answer": "SELECT M.title, AVG(R.stars) AS average_rating FROM Movie M LEFT JOIN Rating R ON M.mID = R.mID GROUP BY M.title"
            },
            {
                "User": "Let's update the rating for 'The Great Adventure' made by Alex Johnson to 4 stars.",
                "Answer": "UPDATE Rating SET stars = 4 WHERE rID = 209 AND mID = 109"
            },
            {
                "User": "I think we should also track the budget of the movies. Could you add a 'budget' column to the Movie table?",
                "Answer": "ALTER TABLE Movie ADD COLUMN budget number"
            },
            {
                "User": "The budget for 'The Great Adventure' was $120 million. Please add this information.",
                "Answer": "UPDATE Movie SET budget = 120000000 WHERE title = 'The Great Adventure'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 237,
        "db": "movie_1",
        "interaction": [
            {
                "User": "Add a new movie with ID 109, title 'Inception', released in 2010, directed by 'Christopher Nolan'.",
                "Answer": "INSERT INTO Movie (mID, title, year, director) VALUES (109, 'Inception', 2010, 'Christopher Nolan')"
            },
            {
                "User": "Insert a new reviewer named 'Alex Smith' with an ID of 209.",
                "Answer": "INSERT INTO Reviewer (rID, name) VALUES (209, 'Alex Smith')"
            },
            {
                "User": "Alex Smith just rated the movie 'Inception' with 5 stars on March 15, 2023. Record this rating.",
                "Answer": "INSERT INTO Rating (rID, mID, stars, ratingDate) VALUES ((SELECT rID FROM Reviewer WHERE name = 'Alex Smith'), (SELECT mID FROM Movie WHERE title = 'Inception'), 5, '2023-03-15')"
            },
            {
                "User": "Update the rating for 'Gone with the Wind' by Sarah Martinez to 5 stars.",
                "Answer": "UPDATE Rating SET stars = 5 WHERE rID = (SELECT rID FROM Reviewer WHERE name = 'Sarah Martinez') AND mID = (SELECT mID FROM Movie WHERE title = 'Gone with the Wind')"
            },
            {
                "User": "Create a new table to store movie genres with columns for genre ID and genre name.",
                "Answer": "CREATE TABLE Genre (gID number PRIMARY KEY, name text)"
            },
            {
                "User": "Add a new genre 'Sci-Fi' with ID 301 to the genres table.",
                "Answer": "INSERT INTO Genre (gID, name) VALUES (301, 'Sci-Fi')"
            },
            {
                "User": "Create a bridge table to associate movies with genres, including movie ID and genre ID.",
                "Answer": "CREATE TABLE MovieGenre (mID number, gID number, FOREIGN KEY (mID) REFERENCES Movie(mID), FOREIGN KEY (gID) REFERENCES Genre(gID))"
            },
            {
                "User": "Associate the movie 'Star Wars' with the 'Sci-Fi' genre.",
                "Answer": "INSERT INTO MovieGenre (mID, gID) VALUES ((SELECT mID FROM Movie WHERE title = 'Star Wars'), (SELECT gID FROM Genre WHERE name = 'Sci-Fi'))"
            },
            {
                "User": "Add a column 'budget' to the movies table to store the production budget.",
                "Answer": "ALTER TABLE Movie ADD COLUMN budget number"
            },
            {
                "User": "Set the budget for 'Inception' to 160 million dollars.",
                "Answer": "UPDATE Movie SET budget = 160000000 WHERE title = 'Inception'"
            },
            {
                "User": "What is the average budget of the movies recorded in the database?",
                "Answer": "SELECT AVG(budget) FROM Movie"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 238,
        "db": "wrestler",
        "interaction": [
            {
                "User": "Add a new wrestler with the ID 11, named 'El Santo', who held the title for 500 days in Mexico City at a Pay-Per-View event.",
                "Answer": "INSERT INTO wrestler (Wrestler_ID, Name, Reign, Days_held, Location, Event) VALUES (11, 'El Santo', '1', '500', 'Mexico City', 'Pay-Per-View')"
            },
            {
                "User": "Update the record for wrestler with ID 2, set the number of days held to 150.",
                "Answer": "UPDATE wrestler SET Days_held = '150' WHERE Wrestler_ID = 2"
            },
            {
                "User": "Create a new table called 'Titles' with columns 'Title_ID' as a number, 'Title_Name' as text, and 'Wrestler_ID' as number.",
                "Answer": "CREATE TABLE Titles (Title_ID number, Title_Name text, Wrestler_ID number)"
            },
            {
                "User": "Insert a new title record with ID 1, name 'Heavyweight Champion', and assign it to wrestler ID 3.",
                "Answer": "INSERT INTO Titles (Title_ID, Title_Name, Wrestler_ID) VALUES (1, 'Heavyweight Champion', 3)"
            },
            {
                "User": "Add a column 'Weight_Class' to the 'wrestler' table to classify wrestlers.",
                "Answer": "ALTER TABLE wrestler ADD Weight_Class text"
            },
            {
                "User": "Set the weight class of wrestler ID 1 to 'Lightweight'.",
                "Answer": "UPDATE wrestler SET Weight_Class = 'Lightweight' WHERE Wrestler_ID = 1"
            },
            {
                "User": "Show me the wrestlers who have a 'Lightweight' weight class.",
                "Answer": "SELECT * FROM wrestler WHERE Weight_Class = 'Lightweight'"
            },
            {
                "User": "How many titles has wrestler ID 3 won? Assume the 'Titles' table has been updated with the relevant data.",
                "Answer": "SELECT COUNT(*) FROM Titles WHERE Wrestler_ID = 3"
            },
            {
                "User": "List all the wrestlers and their respective titles. Assume the 'Titles' table has been updated with the relevant data.",
                "Answer": "SELECT w.Name, t.Title_Name FROM wrestler w LEFT JOIN Titles t ON w.Wrestler_ID = t.Wrestler_ID"
            },
            {
                "User": "Which wrestler has held their title for the longest period?",
                "Answer": "SELECT Name FROM wrestler ORDER BY Days_held DESC LIMIT 1"
            },
            {
                "User": "Remove wrestler with ID 2 from the 'wrestler' table.",
                "Answer": "DELETE FROM wrestler WHERE Wrestler_ID = 2"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 239,
        "db": "soccer_2",
        "interaction": [
            {
                "User": "Can we add a new college with the name 'MIT', state 'MA', and enrollment 10000?",
                "Answer": "INSERT INTO College (cName, state, enr) VALUES ('MIT', 'MA', 10000)"
            },
            {
                "User": "I want to update the enrollment of 'ASU' to 13000. How do you do that?",
                "Answer": "UPDATE College SET enr = 13000 WHERE cName = 'ASU'"
            },
            {
                "User": "Can you create a new table to track the coaches with their ID, name, and the college they coach for?",
                "Answer": "CREATE TABLE Coach (cID number PRIMARY KEY, cName text, college text)"
            },
            {
                "User": "Please insert data for a new coach with ID 5005, name 'John Smith', and who coaches for 'LSU'.",
                "Answer": "INSERT INTO Coach (cID, cName, college) VALUES (5005, 'John Smith', 'LSU')"
            },
            {
                "User": "Can we add a column to store the red cards for the players?",
                "Answer": "ALTER TABLE Player ADD COLUMN rCard text"
            },
            {
                "User": "Update player 'Andrew' to have 2 red cards.",
                "Answer": "UPDATE Player SET rCard = '2' WHERE pName = 'Andrew'"
            },
            {
                "User": "Create a table to record the match results with columns for match ID, winning college, and score.",
                "Answer": "CREATE TABLE MatchResult (matchID number PRIMARY KEY, winnerCollege text, score text)"
            },
            {
                "User": "Insert a match result where 'LSU' won with a score of '3-0' and the match ID is 101.",
                "Answer": "INSERT INTO MatchResult (matchID, winnerCollege, score) VALUES (101, 'LSU', '3-0')"
            },
            {
                "User": "Can you show me the total number of yellow cards per player?",
                "Answer": "SELECT pName, COUNT(yCard) as TotalYellowCards FROM Player GROUP BY pName"
            },
            {
                "User": "Let's add a decision date column to the Tryout table.",
                "Answer": "ALTER TABLE Tryout ADD COLUMN decisionDate date"
            },
            {
                "User": "Record that player with ID 10001 had a tryout decision made on '2023-04-01'.",
                "Answer": "UPDATE Tryout SET decisionDate = '2023-04-01' WHERE pID = 10001"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 240,
        "db": "soccer_2",
        "interaction": [
            {
                "User": "Can we track the number of yellow cards for each player?",
                "Answer": "ALTER TABLE Player ADD COLUMN yellowCards INTEGER DEFAULT 0;"
            },
            {
                "User": "Update the yellow card count for player with ID 10001 to 2.",
                "Answer": "UPDATE Player SET yellowCards = 2 WHERE pID = 10001;"
            },
            {
                "User": "I want to add a new college to the database. Can you add 'MIT' located in 'MA' with an enrollment of 11000?",
                "Answer": "INSERT INTO College (cName, state, enr) VALUES ('MIT', 'MA', 11000);"
            },
            {
                "User": "Create a new table to keep track of the scholarships offered by each college.",
                "Answer": "CREATE TABLE Scholarships (cName TEXT, scholarshipName TEXT, amount NUMBER, PRIMARY KEY (cName, scholarshipName));"
            },
            {
                "User": "Insert a scholarship offered by 'LSU' called 'Academic Excellence' with an amount of 5000.",
                "Answer": "INSERT INTO Scholarships (cName, scholarshipName, amount) VALUES ('LSU', 'Academic Excellence', 5000);"
            },
            {
                "User": "How can we record the preferred position for each player?",
                "Answer": "ALTER TABLE Player ADD COLUMN preferredPosition TEXT;"
            },
            {
                "User": "Set the preferred position for player with ID 20002 to 'striker'.",
                "Answer": "UPDATE Player SET preferredPosition = 'striker' WHERE pID = 20002;"
            },
            {
                "User": "Can we create a table to log the tryout dates for each player?",
                "Answer": "CREATE TABLE TryoutDates (pID NUMBER, cName TEXT, tryoutDate DATE, PRIMARY KEY (pID, cName));"
            },
            {
                "User": "Log a tryout date for player with ID 30003 at 'OU' for '2023-05-15'.",
                "Answer": "INSERT INTO TryoutDates (pID, cName, tryoutDate) VALUES (30003, 'OU', '2023-05-15');"
            },
            {
                "User": "Can we see which colleges have enrollments greater than 15000?",
                "Answer": "SELECT cName FROM College WHERE enr > 15000;"
            },
            {
                "User": "Let's update the enrollment number for 'OU' to 23000.",
                "Answer": "UPDATE College SET enr = 23000 WHERE cName = 'OU';"
            },
            {
                "User": "Create a view that shows the total number of yes decisions for each college.",
                "Answer": "CREATE VIEW CollegeTryoutSuccess AS SELECT cName, COUNT(*) AS TotalYes FROM Tryout WHERE decision = 'yes' GROUP BY cName;"
            },
            {
                "User": "Can you add a new player named 'Derek' with ID 40003 who has not received any yellow cards and has a high school score of 1100?",
                "Answer": "INSERT INTO Player (pID, pName, yCard, HS) VALUES (40003, 'Derek', 'no', 1100);"
            },
            {
                "User": "I'd like to see a list of all players and their tryout decisions for 'LSU'.",
                "Answer": "SELECT T1.pID, T2.pName, T1.decision FROM Tryout AS T1 JOIN Player AS T2 ON T1.pID = T2.pID WHERE T1.cName = 'LSU';"
            },
            {
                "User": "Let's add a column to record the number of goals scored by each player during tryouts.",
                "Answer": "ALTER TABLE Tryout ADD COLUMN goalsScored INTEGER DEFAULT 0;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 241,
        "db": "products_gen_characteristics",
        "interaction": [
            {
                "User": "Add a new color with code '10' and description 'blue' to the Ref_Colors table.",
                "Answer": "INSERT INTO Ref_Colors (color_code, color_description) VALUES ('10', 'blue');"
            },
            {
                "User": "Update the typical buying price of the product named 'cumin' to '3000'.",
                "Answer": "UPDATE Products SET typical_buying_price = '3000' WHERE product_name = 'cumin';"
            },
            {
                "User": "Create a new table to log product price changes with columns for product_id, old_price, new_price, and change_date.",
                "Answer": "CREATE TABLE Product_Price_Log (product_id number, old_price text, new_price text, change_date date, PRIMARY KEY (product_id, change_date));"
            },
            {
                "User": "Log a price change for product id '2' where the old price was '352447.2874677' and the new price is '360000', on '2023-04-01'.",
                "Answer": "INSERT INTO Product_Price_Log (product_id, old_price, new_price, change_date) VALUES (2, '352447.2874677', '360000', '2023-04-01');"
            },
            {
                "User": "Add a new column 'last_updated' to the Products table to track the last update timestamp.",
                "Answer": "ALTER TABLE Products ADD last_updated timestamp;"
            },
            {
                "User": "Insert a new product characteristic for product id '3' with characteristic id '4' and value 'medium'.",
                "Answer": "INSERT INTO Product_Characteristics (product_id, characteristic_id, product_characteristic_value) VALUES (3, 4, 'medium');"
            },
            {
                "User": "Change the color of the product named 'basil' to the color code '10' which represents blue.",
                "Answer": "UPDATE Products SET color_code = '10' WHERE product_name = 'basil';"
            },
            {
                "User": "Create a new product category called 'Oils' with code 'OIL' and unit of measure 'Volume - liter'.",
                "Answer": "INSERT INTO Ref_Product_Categories (product_category_code, product_category_description, unit_of_measure) VALUES ('OIL', 'Oils', 'Volume - liter');"
            },
            {
                "User": "What is the new typical selling price of the product named 'peper' after the update?",
                "Answer": "SELECT typical_selling_price FROM Products WHERE product_name = 'peper';"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 242,
        "db": "products_gen_characteristics",
        "interaction": [
            {
                "User": "Insert the new color 'blue' with code '10'.",
                "Answer": "INSERT INTO Ref_Colors (color_code, color_description) VALUES ('10', 'blue');"
            },
            {
                "User": "I'd like to update the typical buying price of the product with id 3 to 600.0.",
                "Answer": "UPDATE Products SET typical_buying_price = '600.0' WHERE product_id = 3;"
            },
            {
                "User": "Change the product name of product id 1 to 'black pepper'.",
                "Answer": "UPDATE Products SET product_name = 'black pepper' WHERE product_id = 1;"
            },
            {
                "User": "Can we track the suppliers for each product? We need a new table for that.",
                "Answer": "CREATE TABLE Product_Suppliers (supplier_id number PRIMARY KEY, supplier_name text, product_id number, FOREIGN KEY (product_id) REFERENCES Products(product_id));"
            },
            {
                "User": "Add a new supplier 'SpiceWorld' with id 1 for product id 2.",
                "Answer": "INSERT INTO Product_Suppliers (supplier_id, supplier_name, product_id) VALUES (1, 'SpiceWorld', 2);"
            },
            {
                "User": "I realized we also need to store the supplier's contact information. Add a 'contact_info' column to the Product_Suppliers table.",
                "Answer": "ALTER TABLE Product_Suppliers ADD contact_info text;"
            },
            {
                "User": "Update the contact info of supplier with id 1 to 'contact@spiceworld.com'.",
                "Answer": "UPDATE Product_Suppliers SET contact_info = 'contact@spiceworld.com' WHERE supplier_id = 1;"
            },
            {
                "User": "How many suppliers do we have for the 'Herbs' category?",
                "Answer": "SELECT COUNT(DISTINCT PS.supplier_id) FROM Product_Suppliers PS JOIN Products P ON PS.product_id = P.product_id WHERE P.product_category_code = 'Herbs';"
            },
            {
                "User": "Create a view that lists all products with their category descriptions and color descriptions.",
                "Answer": "CREATE VIEW Product_Details AS SELECT P.product_id, P.product_name, PC.product_category_description, C.color_description FROM Products P JOIN Ref_Product_Categories PC ON P.product_category_code = PC.product_category_code JOIN Ref_Colors C ON P.color_code = C.color_code;"
            },
            {
                "User": "List all products from the 'Product_Details' view with the color 'red'.",
                "Answer": "SELECT * FROM Product_Details WHERE color_description = 'red';"
            },
            {
                "User": "We should track the discontinued products. Can we add a 'discontinued' flag to the Products table?",
                "Answer": "ALTER TABLE Products ADD discontinued boolean DEFAULT FALSE;"
            },
            {
                "User": "Mark the product with id 2 as discontinued.",
                "Answer": "UPDATE Products SET discontinued = TRUE WHERE product_id = 2;"
            },
            {
                "User": "Let's add a unit price column to the Characteristics table to store the price per unit of measure.",
                "Answer": "ALTER TABLE Characteristics ADD unit_price text;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 243,
        "db": "department_management",
        "interaction": [
            {
                "User": "Add a new department called 'Cybersecurity' with an ID of 16, created in 2021, ranking 4, a budget of 5.8 billion, and 15000 employees.",
                "Answer": "INSERT INTO department (Department_ID, Name, Creation, Ranking, Budget_in_Billions, Num_Employees) VALUES (16, 'Cybersecurity', '2021', 4, 5.8, 15000)"
            },
            {
                "User": "The budget for the Defense department has increased to 450 billion. Update the record.",
                "Answer": "UPDATE department SET Budget_in_Billions = 450 WHERE Name = 'Defense'"
            },
            {
                "User": "Create a new table called 'projects' with columns for project_id, department_id, project_name, start_date, and end_date.",
                "Answer": "CREATE TABLE projects (project_id number PRIMARY KEY, department_id number, project_name text, start_date text, end_date text)"
            },
            {
                "User": "Insert a new project with ID 101 for the Defense department called 'Project Falcon' starting on 2023-01-15 and with no end date yet.",
                "Answer": "INSERT INTO projects (project_id, department_id, project_name, start_date) VALUES (101, 3, 'Project Falcon', '2023-01-15')"
            },
            {
                "User": "The head of the Commerce department has changed to head ID 3. Update the management table to reflect this change.",
                "Answer": "UPDATE management SET head_ID = 3 WHERE department_ID = 7"
            },
            {
                "User": "Add a column to the 'head' table to include the 'appointment_year' of each head.",
                "Answer": "ALTER TABLE head ADD COLUMN appointment_year number"
            },
            {
                "User": "Set the appointment year for head ID 1 to 2010, head ID 2 to 2015, and head ID 3 to 2018.",
                "Answer": [
                    "UPDATE head SET appointment_year = 2010 WHERE head_ID = 1;",
                    "UPDATE head SET appointment_year = 2015 WHERE head_ID = 2;",
                    "UPDATE head SET appointment_year = 2018 WHERE head_ID = 3"
                ]
            },
            {
                "User": "Show me the departments that have a budget greater than 10 billion and are managed by heads over the age of 65.",
                "Answer": "SELECT d.Name FROM department d JOIN management m ON d.Department_ID = m.department_ID JOIN head h ON m.head_ID = h.head_ID WHERE d.Budget_in_Billions > 10 AND h.age > 65"
            },
            {
                "User": "The department 'State' has been renamed to 'Foreign Affairs'. Update the department name in the database.",
                "Answer": "UPDATE department SET Name = 'Foreign Affairs' WHERE Name = 'State'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 244,
        "db": "department_management",
        "interaction": [
            {
                "User": "How many departments have a budget over 10 billion?",
                "Answer": "SELECT COUNT(*) FROM department WHERE Budget_in_Billions > 10"
            },
            {
                "User": "Increase the budget by 1 billion for the Defense department.",
                "Answer": "UPDATE department SET Budget_in_Billions = Budget_in_Billions + 1 WHERE Name = 'Defense'"
            },
            {
                "User": "Add a new department called 'Cybersecurity' with a budget of 3 billion and 500 employees.",
                "Answer": "INSERT INTO department (Name, Creation, Ranking, Budget_in_Billions, Num_Employees) VALUES ('Cybersecurity', '2023', 0, 3, 500)"
            },
            {
                "User": "Who is the youngest department head?",
                "Answer": "SELECT name FROM head ORDER BY age ASC LIMIT 1"
            },
            {
                "User": "Add a new column 'Head_Term' in years to the head table.",
                "Answer": "ALTER TABLE head ADD Head_Term number"
            },
            {
                "User": "Set the term for the head of the State department to 4 years.",
                "Answer": "UPDATE head SET Head_Term = 4 WHERE head_ID = (SELECT head_ID FROM management WHERE department_ID = (SELECT Department_ID FROM department WHERE Name = 'State'))"
            },
            {
                "User": "Create a new table 'projects' with project ID, department ID, project name, and start year.",
                "Answer": "CREATE TABLE projects (Project_ID number PRIMARY KEY, Department_ID number, Name text, Start_Year text)"
            },
            {
                "User": "Add a new project for the Treasury department starting in 2023 called 'Fiscal Reform'.",
                "Answer": "INSERT INTO projects (Department_ID, Name, Start_Year) VALUES ((SELECT Department_ID FROM department WHERE Name = 'Treasury'), 'Fiscal Reform', '2023')"
            },
            {
                "User": "Can you list the departments that have temporary acting heads?",
                "Answer": "SELECT T1.Name FROM department AS T1 JOIN management AS T2 ON T1.Department_ID = T2.department_ID WHERE T2.temporary_acting = 'Yes'"
            },
            {
                "User": "Add a column 'End_Year' to the projects table to represent the year a project ends.",
                "Answer": "ALTER TABLE projects ADD End_Year text"
            },
            {
                "User": "Update the 'Fiscal Reform' project to end in 2025.",
                "Answer": "UPDATE projects SET End_Year = '2025' WHERE Name = 'Fiscal Reform'"
            },
            {
                "User": "List all projects that are planned to start in 2023.",
                "Answer": "SELECT * FROM projects WHERE Start_Year = '2023'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 245,
        "db": "small_bank_1",
        "interaction": [
            {
                "User": "Add a new customer named 'Smith' with customer ID 8.",
                "Answer": "INSERT INTO ACCOUNTS (custid, name) VALUES (8, 'Smith')"
            },
            {
                "User": "Create a savings account for customer ID 8 with an initial balance of 50000.",
                "Answer": "INSERT INTO SAVINGS (custid, balance) VALUES (8, 50000)"
            },
            {
                "User": "Create a checking account for customer ID 8 with an initial balance of 15000.",
                "Answer": "INSERT INTO CHECKING (custid, balance) VALUES (8, 15000)"
            },
            {
                "User": "Increase the savings balance by 5000 for customer ID 2.",
                "Answer": "UPDATE SAVINGS SET balance = balance + 5000 WHERE custid = 2"
            },
            {
                "User": "Customer ID 3 has changed their name to 'O'Reilly'. Update the records.",
                "Answer": "UPDATE ACCOUNTS SET name = 'O''Reilly' WHERE custid = 3"
            },
            {
                "User": "Create a new table to track customer transactions with columns: trans_id (number), custid (number), trans_type (text), amount (number), and trans_date (date).",
                "Answer": "CREATE TABLE TRANSACTIONS (trans_id number PRIMARY KEY, custid number, trans_type text, amount number, trans_date date)"
            },
            {
                "User": "Add a new column 'email' to the ACCOUNTS table to store customer email addresses.",
                "Answer": "ALTER TABLE ACCOUNTS ADD COLUMN email text"
            },
            {
                "User": "Set the email for customer ID 1 to 'brown@example.com'.",
                "Answer": "UPDATE ACCOUNTS SET email = 'brown@example.com' WHERE custid = 1"
            },
            {
                "User": "Record a new transaction for customer ID 2: a deposit of 20000 into savings on March 10th, 2023.",
                "Answer": "INSERT INTO TRANSACTIONS (trans_id, custid, trans_type, amount, trans_date) VALUES (1, 2, 'Deposit', 20000, '2023-03-10')"
            },
            {
                "User": "Customer ID 1 has closed their savings account. Remove them from the SAVINGS table.",
                "Answer": "DELETE FROM SAVINGS WHERE custid = 1"
            },
            {
                "User": "How many transactions have been recorded so far?",
                "Answer": "SELECT COUNT(*) FROM TRANSACTIONS"
            },
            {
                "User": "What is the total sum of all deposits made by customer ID 2?",
                "Answer": "SELECT SUM(amount) FROM TRANSACTIONS WHERE custid = 2 AND trans_type = 'Deposit'"
            },
            {
                "User": "Customer ID 2 has changed their email to 'wang@bankexample.com'. Update their email address.",
                "Answer": "UPDATE ACCOUNTS SET email = 'wang@bankexample.com' WHERE custid = 2"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 246,
        "db": "party_host",
        "interaction": [
            {
                "User": "Add a new party with the theme 'Summer Fiesta', located at 'Sunshine Park', starting from 2021 to 2022 with 15 hosts.",
                "Answer": "INSERT INTO party (Party_Theme, Location, First_year, Last_year, Number_of_hosts) VALUES ('Summer Fiesta', 'Sunshine Park', '2021', '2022', 15)"
            },
            {
                "User": "Update the location of the 'Spring' party to 'Green Meadows'.",
                "Answer": "UPDATE party SET Location = 'Green Meadows' WHERE Party_Theme = 'Spring'"
            },
            {
                "User": "Create a table for party feedback with columns for party ID, host ID, feedback text, and a rating out of 5.",
                "Answer": "CREATE TABLE party_feedback (Party_ID number, Host_ID number, Feedback_Text text, Rating number)"
            },
            {
                "User": "Insert feedback for the party with ID 2 by host with ID 1, saying 'Incredible experience!', with a rating of 5.",
                "Answer": "INSERT INTO party_feedback (Party_ID, Host_ID, Feedback_Text, Rating) VALUES (2, 1, 'Incredible experience!', 5)"
            },
            {
                "User": "Add a column to the host table to record the number of parties hosted.",
                "Answer": "ALTER TABLE host ADD COLUMN Parties_Hosted number"
            },
            {
                "User": "Set the number of parties hosted for host ID 1 to 8.",
                "Answer": "UPDATE host SET Parties_Hosted = 8 WHERE Host_ID = 1"
            },
            {
                "User": "What is the average age of hosts who have hosted a 'Club Q-BASE' party?",
                "Answer": "SELECT AVG(T2.Age) FROM party_host AS T1 JOIN host AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T3.Party_Theme = 'Club Q-BASE'"
            },
            {
                "User": "List all parties that have never been held by joining the party and party_host tables and finding unmatched records.",
                "Answer": "SELECT T1.* FROM party AS T1 LEFT JOIN party_host AS T2 ON T1.Party_ID = T2.Party_ID WHERE T2.Host_ID IS NULL"
            },
            {
                "User": "Delete the party with the theme 'Hardcore Resurrection' from the database.",
                "Answer": "DELETE FROM party WHERE Party_Theme = 'Hardcore Resurrection'"
            },
            {
                "User": "What is the total number of parties hosted by 'Austin Daye'?",
                "Answer": "SELECT COUNT(*) FROM party_host AS T1 JOIN host AS T2 ON T1.Host_ID = T2.Host_ID WHERE T2.Name = 'Austin Daye'"
            },
            {
                "User": "Create a view that shows the party theme, location, and the main host's name for all parties.",
                "Answer": "CREATE VIEW party_overview AS SELECT T3.Party_Theme, T3.Location, T2.Name FROM party_host AS T1 JOIN host AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T1.Is_Main_in_Charge = 'T'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 247,
        "db": "party_host",
        "interaction": [
            {
                "User": "Can we track the attendance of each party?",
                "Answer": "CREATE TABLE party_attendance (Party_ID number, Attendance number, PRIMARY KEY (Party_ID))"
            },
            {
                "User": "Add a new party with the theme 'Summer Fest', location 'Beach Park', starting from 2021 and still ongoing.",
                "Answer": "INSERT INTO party (Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts) VALUES (9, 'Summer Fest', 'Beach Park', '2021', 'NULL', 0)"
            },
            {
                "User": "Update the number of hosts for the 'Summer Fest' to 3.",
                "Answer": "UPDATE party SET Number_of_hosts = 3 WHERE Party_Theme = 'Summer Fest'"
            },
            {
                "User": "I want to record whether a host is currently active. Can you add a column for that in the host table?",
                "Answer": "ALTER TABLE host ADD COLUMN IsActive text"
            },
            {
                "User": "Set the host with ID 1 as active.",
                "Answer": "UPDATE host SET IsActive = 'Yes' WHERE Host_ID = 1"
            },
            {
                "User": "Create a new host entry for 'Emma Stone', from 'Canada', 29 years old.",
                "Answer": "INSERT INTO host (Host_ID, Name, Nationality, Age) VALUES (11, 'Emma Stone', 'Canada', '29')"
            },
            {
                "User": "Link the new host 'Emma Stone' with the 'Summer Fest' as the main host.",
                "Answer": "INSERT INTO party_host (Party_ID, Host_ID, Is_Main_in_Charge) VALUES (9, 11, 'T')"
            },
            {
                "User": "Record the attendance for 'Summer Fest' as 5000.",
                "Answer": "INSERT INTO party_attendance (Party_ID, Attendance) VALUES (9, 5000)"
            },
            {
                "User": "Who is the main host for 'Hardcore Resurrection'?",
                "Answer": "SELECT H.Name FROM host AS H JOIN party_host AS PH ON H.Host_ID = PH.Host_ID JOIN party AS P ON PH.Party_ID = P.Party_ID WHERE P.Party_Theme = 'Hardcore Resurrection' AND PH.Is_Main_in_Charge = 'T'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 248,
        "db": "driving_school",
        "interaction": [
            {
                "User": "Add a new staff member with the id 16, who lives at address id 1, nicknamed 'speedy', first name 'Sam', last name 'Swift', born on '1990-01-01', and joined the staff today.",
                "Answer": "INSERT INTO Staff (staff_id, staff_address_id, nickname, first_name, last_name, date_of_birth, date_joined_staff) VALUES (16, 1, 'speedy', 'Sam', 'Swift', '1990-01-01', CURRENT_DATE)"
            },
            {
                "User": "Update the phone number of customer id 1 to '123-456-7890'.",
                "Answer": "UPDATE Customers SET phone_number = '123-456-7890' WHERE customer_id = 1"
            },
            {
                "User": "Create a new table for vehicle maintenance records with columns for record_id, vehicle_id, maintenance_date, and description.",
                "Answer": "CREATE TABLE Vehicle_Maintenance (record_id NUMBER PRIMARY KEY, vehicle_id NUMBER, maintenance_date TIMESTAMP, description TEXT)"
            },
            {
                "User": "Add a column to the Lessons table to track the duration of each lesson in minutes.",
                "Answer": "ALTER TABLE Lessons ADD COLUMN duration_minutes NUMBER"
            },
            {
                "User": "Insert a vehicle maintenance record for vehicle id 2 with the description 'Oil change' done on '2023-04-01'.",
                "Answer": "INSERT INTO Vehicle_Maintenance (record_id, vehicle_id, maintenance_date, description) VALUES (1, 2, '2023-04-01', 'Oil change')"
            },
            {
                "User": "Change the status of all 'Cancelled' lessons to 'Rescheduled' for customer id 6.",
                "Answer": "UPDATE Lessons SET lesson_status_code = 'Rescheduled' WHERE customer_id = 6 AND lesson_status_code = 'Cancelled'"
            },
            {
                "User": "Record a payment of $200 made by customer id 3 using 'Credit Card' on today's date.",
                "Answer": "INSERT INTO Customer_Payments (customer_id, datetime_payment, payment_method_code, amount_payment) VALUES (3, CURRENT_TIMESTAMP, 'Credit Card', 200.00)"
            },
            {
                "User": "What is the total amount paid by customer id 2?",
                "Answer": "SELECT SUM(amount_payment) FROM Customer_Payments WHERE customer_id = 2"
            },
            {
                "User": "List all customers who have an outstanding amount greater than $1000.",
                "Answer": "SELECT * FROM Customers WHERE amount_outstanding > 1000"
            },
            {
                "User": "Add a new column 'emergency_contact_phone' to the Customers table to store emergency contact numbers.",
                "Answer": "ALTER TABLE Customers ADD COLUMN emergency_contact_phone TEXT"
            },
            {
                "User": "Set the emergency contact phone for customer id 1 to '987-654-3210'.",
                "Answer": "UPDATE Customers SET emergency_contact_phone = '987-654-3210' WHERE customer_id = 1"
            },
            {
                "User": "Create a new table called 'Instructors' with columns for instructor_id, staff_id, and certification_date.",
                "Answer": "CREATE TABLE Instructors (instructor_id NUMBER PRIMARY KEY, staff_id NUMBER, certification_date TIMESTAMP)"
            },
            {
                "User": "Insert a new instructor with instructor_id 1, staff_id 2, and a certification_date of '2023-01-15'.",
                "Answer": "INSERT INTO Instructors (instructor_id, staff_id, certification_date) VALUES (1, 2, '2023-01-15')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 249,
        "db": "workshop_paper",
        "interaction": [
            {
                "User": "Add a new submission with ID 11, scored 85 by author John Doe from Stanford.",
                "Answer": "INSERT INTO submission (Submission_ID, Scores, Author, College) VALUES (11, 85, 'John Doe', 'Stanford')"
            },
            {
                "User": "Update the score of submission ID 3 to 80.",
                "Answer": "UPDATE submission SET Scores = 80 WHERE Submission_ID = 3"
            },
            {
                "User": "Create a new table to track reviewers with fields ID, Name, and Affiliation.",
                "Answer": "CREATE TABLE reviewers (Reviewer_ID number PRIMARY KEY, Name text, Affiliation text)"
            },
            {
                "User": "Insert three reviewers: (1, 'Alice Smith', 'Harvard'), (2, 'Bob Johnson', 'MIT'), (3, 'Carol Taylor', 'Stanford').",
                "Answer": "INSERT INTO reviewers (Reviewer_ID, Name, Affiliation) VALUES (1, 'Alice Smith', 'Harvard'), (2, 'Bob Johnson', 'MIT'), (3, 'Carol Taylor', 'Stanford')"
            },
            {
                "User": "How many submissions have been accepted for workshop ID 2?",
                "Answer": "SELECT COUNT(*) FROM Acceptance WHERE Workshop_ID = 2 AND Result = 'Accepted'"
            },
            {
                "User": "Add a new column to the workshop table to track the number of participants.",
                "Answer": "ALTER TABLE workshop ADD COLUMN Participants number"
            },
            {
                "User": "Set the number of participants for 'ABC 2007' to 150.",
                "Answer": "UPDATE workshop SET Participants = 150 WHERE Name = 'ABC 2007'"
            },
            {
                "User": "For the workshop 'Conference 2007', update the venue to 'Manchester UK' and the date to 'August 22, 2007'.",
                "Answer": "UPDATE workshop SET Venue = 'Manchester UK', Date = 'August 22, 2007' WHERE Name = 'Conference 2007'"
            },
            {
                "User": "Link each submission to a reviewer by creating a new table called reviews with Submission_ID, Reviewer_ID, and Comments.",
                "Answer": "CREATE TABLE reviews (Submission_ID number, Reviewer_ID number, Comments text, FOREIGN KEY (Submission_ID) REFERENCES submission(Submission_ID), FOREIGN KEY (Reviewer_ID) REFERENCES reviewers(Reviewer_ID))"
            },
            {
                "User": "Insert a review for submission ID 1 by reviewer ID 2 with comments 'Excellent work'.",
                "Answer": "INSERT INTO reviews (Submission_ID, Reviewer_ID, Comments) VALUES (1, 2, 'Excellent work')"
            },
            {
                "User": "How many submissions does each college have?",
                "Answer": "SELECT College, COUNT(*) AS Submission_Count FROM submission GROUP BY College"
            },
            {
                "User": "Delete the submission with ID 10.",
                "Answer": "DELETE FROM submission WHERE Submission_ID = 10"
            },
            {
                "User": "Add a result 'Under Review' for submission ID 11 to workshop ID 1.",
                "Answer": "INSERT INTO Acceptance (Submission_ID, Workshop_ID, Result) VALUES (11, 1, 'Under Review')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 250,
        "db": "workshop_paper",
        "interaction": [
            {
                "User": "How can I add a new submission record for an author named John Doe from Stanford with a score of 85?",
                "Answer": "INSERT INTO submission (Submission_ID, Scores, Author, College) VALUES ((SELECT MAX(Submission_ID) + 1 FROM submission), 85, 'John Doe', 'Stanford')"
            },
            {
                "User": "Can we update the score of submission ID 2 to 82?",
                "Answer": "UPDATE submission SET Scores = 82 WHERE Submission_ID = 2"
            },
            {
                "User": "I would like to create a new table to track reviewers. Can you create it with fields for ID, name, and email?",
                "Answer": "CREATE TABLE reviewers (Reviewer_ID number PRIMARY KEY, Name text, Email text)"
            },
            {
                "User": "Can you add a new column to the workshop table to indicate whether it's an international event?",
                "Answer": "ALTER TABLE workshop ADD COLUMN International text"
            },
            {
                "User": "Please insert a new workshop called 'Data Science 2023' on 'July 15, 2023' in 'Berlin Germany' and mark it as an international event.",
                "Answer": "INSERT INTO workshop (Workshop_ID, Date, Venue, Name, International) VALUES ((SELECT MAX(Workshop_ID) + 1 FROM workshop), 'July 15, 2023', 'Berlin Germany', 'Data Science 2023', 'Yes')"
            },
            {
                "User": "Update the name of the workshop with ID 1 to 'Advanced Computing 2007'.",
                "Answer": "UPDATE workshop SET Name = 'Advanced Computing 2007' WHERE Workshop_ID = 1"
            },
            {
                "User": "Can we have a list of workshops along with the number of accepted submissions for each?",
                "Answer": "SELECT w.Workshop_ID, w.Name, COUNT(a.Submission_ID) AS Accepted_Submissions FROM workshop w LEFT JOIN Acceptance a ON w.Workshop_ID = a.Workshop_ID WHERE a.Result = 'Accepted' GROUP BY w.Workshop_ID"
            },
            {
                "User": "What if we want to track the number of rejections as well? Can you add a column for that to the workshops table?",
                "Answer": "ALTER TABLE workshop ADD COLUMN Rejections number"
            },
            {
                "User": "Let's update the number of rejections for 'Conference 2007' to 5.",
                "Answer": "UPDATE workshop SET Rejections = 5 WHERE Name = 'Conference 2007'"
            },
            {
                "User": "We need to add a new result type in the Acceptance table. Can you add a 'Pending' option?",
                "Answer": "ALTER TABLE Acceptance ADD COLUMN Pending text"
            },
            {
                "User": "Insert a new acceptance record for submission ID 4 to workshop ID 2 with the result 'Pending'.",
                "Answer": "INSERT INTO Acceptance (Submission_ID, Workshop_ID, Result) VALUES (4, 2, 'Pending')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 251,
        "db": "wine_1",
        "interaction": [
            {
                "User": "Add a new grape variety called 'Gewurztraminer' which is white in color.",
                "Answer": "INSERT INTO grapes (Grape, Color) VALUES ('Gewurztraminer', 'White');"
            },
            {
                "User": "Update the price of 'Old Kraft Vineyard' wine to $50.",
                "Answer": "UPDATE wine SET Price = 50 WHERE Name = 'Old Kraft Vineyard';"
            },
            {
                "User": "Create a new table to track wine awards with columns for award name, year, and wine number.",
                "Answer": "CREATE TABLE wine_awards (AwardID number PRIMARY KEY, AwardName text, Year number, WineNo number, FOREIGN KEY (WineNo) REFERENCES wine(No));"
            },
            {
                "User": "Insert a record into the wine awards for 'Old Kraft Vineyard' winning 'Best Zinfandel' in 2010.",
                "Answer": "INSERT INTO wine_awards (AwardName, Year, WineNo) VALUES ('Best Zinfandel', 2010, (SELECT No FROM wine WHERE Name = 'Old Kraft Vineyard'));"
            },
            {
                "User": "What is the highest score that a wine from 'California' has received?",
                "Answer": "SELECT MAX(Score) FROM wine WHERE State = 'California';"
            },
            {
                "User": "Alter the wine table to include a new column for 'Description' of type text.",
                "Answer": "ALTER TABLE wine ADD COLUMN Description text;"
            },
            {
                "User": "Add a description for 'Old Kraft Vineyard' wine stating 'A robust Zinfandel with a rich oak finish'.",
                "Answer": "UPDATE wine SET Description = 'A robust Zinfandel with a rich oak finish' WHERE Name = 'Old Kraft Vineyard';"
            },
            {
                "User": "List all wines with a score above 90 and their corresponding appellations.",
                "Answer": "SELECT T1.Name, T1.Score, T2.Appelation FROM wine AS T1 JOIN appellations AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Score > 90;"
            },
            {
                "User": "How many cases of wine were produced in 'Napa Valley' in 2008?",
                "Answer": "SELECT SUM(Cases) FROM wine WHERE Appelation = 'Napa Valley' AND Year = 2008;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 252,
        "db": "wine_1",
        "interaction": [
            {
                "User": "I'd like to add a new grape variety called 'Gewurztraminer' which is white.",
                "Answer": "INSERT INTO GRAPES (ID, Grape, Color) VALUES ((SELECT MAX(ID) + 1 FROM GRAPES), 'Gewurztraminer', 'White')"
            },
            {
                "User": "Update the price of 'Old Kraft Vineyard' wine to $50.",
                "Answer": "UPDATE WINE SET Price = 50 WHERE Name = 'Old Kraft Vineyard'"
            },
            {
                "User": "Create a new table to track wine awards with columns for award name, year, and wine number.",
                "Answer": "CREATE TABLE wine_awards (Award_ID number PRIMARY KEY, Award_Name text, Year number, Wine_No number, FOREIGN KEY (Wine_No) REFERENCES wine(No))"
            },
            {
                "User": "Insert a record into the wine awards for 'Old Kraft Vineyard' with the award 'Best Zinfandel' for the year 2009.",
                "Answer": "INSERT INTO wine_awards (Award_ID, Award_Name, Year, Wine_No) VALUES ((SELECT MAX(Award_ID) + 1 FROM wine_awards), 'Best Zinfandel', 2009, (SELECT No FROM WINE WHERE Name = 'Old Kraft Vineyard'))"
            },
            {
                "User": "We need to track the vineyard location for each wine. Please add a 'Vineyard_Location' column to the wine table.",
                "Answer": "ALTER TABLE WINE ADD COLUMN Vineyard_Location text"
            },
            {
                "User": "Set the 'Vineyard_Location' for 'Old Kraft Vineyard' to 'St. Helena Valley'.",
                "Answer": "UPDATE WINE SET Vineyard_Location = 'St. Helena Valley' WHERE Name = 'Old Kraft Vineyard'"
            },
            {
                "User": "How many different states are represented in our appellations?",
                "Answer": "SELECT COUNT(DISTINCT State) FROM appellations"
            },
            {
                "User": "Let's create a view that shows us wines with a score above 90 and their respective grape color.",
                "Answer": "CREATE VIEW high_score_wines AS SELECT T1.Grape, T1.Color, T2.Name, T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T2.Score > 90"
            },
            {
                "User": "List all the wines in the high score wines view.",
                "Answer": "SELECT * FROM high_score_wines"
            },
            {
                "User": "I want to record tasting notes for each wine. Can you add a 'Tasting_Notes' column to the wine table?",
                "Answer": "ALTER TABLE WINE ADD COLUMN Tasting_Notes text"
            },
            {
                "User": "Add tasting notes 'Rich and full-bodied with a velvety texture' to 'Old Kraft Vineyard'.",
                "Answer": "UPDATE WINE SET Tasting_Notes = 'Rich and full-bodied with a velvety texture' WHERE Name = 'Old Kraft Vineyard'"
            },
            {
                "User": "Can we see a list of all wines that are available to drink now and cost less than $45?",
                "Answer": "SELECT * FROM WINE WHERE Drink = 'now' AND Price < 45"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 253,
        "db": "roller_coaster",
        "interaction": [
            {
                "User": "how many countries are there",
                "Answer": "SELECT count(*) FROM country"
            },
            {
                "User": "what is the languages of Finland",
                "Answer": "SELECT Languages FROM country WHERE Name = 'Finland'"
            },
            {
                "User": "what is the speed of Dauling Dragon",
                "Answer": "SELECT Speed FROM roller_coaster WHERE Name = 'Dauling Dragon'"
            },
            {
                "User": "Add a new roller coaster with ID 7 called 'Sky Scream' in park 'Holiday Park' in country with ID 2, length 863, height 150, speed '62', opened on 'April 12, 2014', and status 'Operating'",
                "Answer": "INSERT INTO roller_coaster (Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status) VALUES (7, 'Sky Scream', 'Holiday Park', 2, 863, 150, '62', 'April 12, 2014', 'Operating')"
            },
            {
                "User": "Update the speed of 'Boardwalk Bullet' to '54'",
                "Answer": "UPDATE roller_coaster SET Speed = '54' WHERE Name = 'Boardwalk Bullet'"
            },
            {
                "User": "Create a new table for park information with columns Park_ID (number), Name (text), Country_ID (number), and Size (number)",
                "Answer": "CREATE TABLE park_info (Park_ID number PRIMARY KEY, Name text, Country_ID number, Size number)"
            },
            {
                "User": "Add a new column to the country table to store the GDP of each country",
                "Answer": "ALTER TABLE country ADD COLUMN GDP number"
            },
            {
                "User": "Insert GDP data for Austria with a value of 416.6 billion",
                "Answer": "UPDATE country SET GDP = 416600000000 WHERE Name = 'Austria'"
            },
            {
                "User": "List all roller coasters in Finland",
                "Answer": "SELECT * FROM roller_coaster WHERE Country_ID = (SELECT Country_ID FROM country WHERE Name = 'Finland')"
            },
            {
                "User": "Delete the roller coaster with the name 'Hades 360'",
                "Answer": "DELETE FROM roller_coaster WHERE Name = 'Hades 360'"
            },
            {
                "User": "Create a view that shows roller coasters and their respective countries",
                "Answer": "CREATE VIEW roller_coaster_country AS SELECT r.Name, r.Park, c.Name AS Country_Name FROM roller_coaster r JOIN country c ON r.Country_ID = c.Country_ID"
            },
            {
                "User": "What is the average length of roller coasters in the database?",
                "Answer": "SELECT AVG(Length) FROM roller_coaster"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 254,
        "db": "gas_company",
        "interaction": [
            {
                "User": "Can you create a table to track the maintenance records for gas stations?",
                "Answer": "CREATE TABLE maintenance_records (Record_ID number PRIMARY KEY, Station_ID number, Maintenance_Date date, Description text, Cost number)"
            },
            {
                "User": "Please add a new maintenance record for station 2 with a cost of 500 on March 10, 2023, for pump repair.",
                "Answer": "INSERT INTO maintenance_records (Record_ID, Station_ID, Maintenance_Date, Description, Cost) VALUES (1, 2, '2023-03-10', 'Pump repair', 500)"
            },
            {
                "User": "Add a column to track the number of pumps at each gas station.",
                "Answer": "ALTER TABLE gas_station ADD COLUMN Number_of_Pumps number"
            },
            {
                "User": "Update the number of pumps for station 1 to 8.",
                "Answer": "UPDATE gas_station SET Number_of_Pumps = 8 WHERE Station_ID = 1"
            },
            {
                "User": "Record a new gas station opening this year in 'Downtown' with the manager 'Alice Smith' and her vice manager 'Bob Johnson'.",
                "Answer": "INSERT INTO gas_station (Station_ID, Open_Year, Location, Manager_Name, Vice_Manager_Name) VALUES (12, 2023, 'Downtown', 'Alice Smith', 'Bob Johnson')"
            },
            {
                "User": "Link the new station to company 2 and set its rank of the year to 5.",
                "Answer": "INSERT INTO station_company (Station_ID, Company_ID, Rank_of_the_Year) VALUES (12, 2, 5)"
            },
            {
                "User": "I'd like to see the total sales and profits for companies headquartered in the USA.",
                "Answer": "SELECT SUM(Sales_billion) AS Total_Sales, SUM(Profits_billion) AS Total_Profits FROM company WHERE Headquarters = 'USA'"
            },
            {
                "User": "Can we track the performance rating of managers at gas stations? Please add a relevant column.",
                "Answer": "ALTER TABLE gas_station ADD COLUMN Performance_Rating number"
            },
            {
                "User": "Set the performance rating of 'Brian Wingrave' to 4.5.",
                "Answer": "UPDATE gas_station SET Performance_Rating = 4.5 WHERE Manager_Name = 'BrianWingrave'"
            },
            {
                "User": "Create a view to show the ranking of companies by market value.",
                "Answer": "CREATE VIEW company_rankings AS SELECT Company, Market_Value FROM company ORDER BY Market_Value DESC"
            },
            {
                "User": "Update the headquarters of 'Royal Dutch Shell' to 'UK'.",
                "Answer": "UPDATE company SET Headquarters = 'UK' WHERE Company = 'Royal Dutch Shell'"
            },
            {
                "User": "What's the average number of years since the gas stations were opened?",
                "Answer": "SELECT AVG(2023 - Open_Year) AS Average_Years_Open FROM gas_station"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 255,
        "db": "gas_company",
        "interaction": [
            {
                "User": "Add a new company with ID 11, named 'NewEnergy Corp', headquartered in 'Germany', operating in the 'Renewable Energy' industry with sales of 120.5 billion, profits of 5.2 billion, assets of 200 billion, and market value of 150 billion.",
                "Answer": "INSERT INTO company (Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value) VALUES (11, NULL, 'NewEnergy Corp', 'Germany', 'Renewable Energy', 120.5, 5.2, 200, 150)"
            },
            {
                "User": "Update the headquarters of 'General Electric' to 'Boston, USA'.",
                "Answer": "UPDATE company SET Headquarters = 'Boston, USA' WHERE Company = 'General Electric'"
            },
            {
                "User": "Create a new table to track the maintenance records of gas stations, with fields for record ID, station ID, maintenance date, and description of maintenance.",
                "Answer": "CREATE TABLE maintenance_records (Record_ID number PRIMARY KEY, Station_ID number, Maintenance_Date date, Description text)"
            },
            {
                "User": "Insert a maintenance record for station ID 2 with a maintenance date of '2023-04-15' and a description of 'Regular inspection and pump maintenance'.",
                "Answer": "INSERT INTO maintenance_records (Record_ID, Station_ID, Maintenance_Date, Description) VALUES (1, 2, '2023-04-15', 'Regular inspection and pump maintenance')"
            },
            {
                "User": "Alter the 'gas_station' table to include a new column 'Number_of_Pumps' of type number.",
                "Answer": "ALTER TABLE gas_station ADD Number_of_Pumps number"
            },
            {
                "User": "Set the number of pumps for the 'Herne Hill' gas station to 5.",
                "Answer": "UPDATE gas_station SET Number_of_Pumps = 5 WHERE Location = 'Herne Hill'"
            },
            {
                "User": "How many companies have assets worth over 300 billion?",
                "Answer": "SELECT COUNT(*) FROM company WHERE Assets_billion > 300"
            },
            {
                "User": "Create a view that shows the station ID, company name, and rank of the year for stations that are ranked in the top 3.",
                "Answer": "CREATE VIEW top_ranked_stations AS SELECT T1.Station_ID, T2.Company, T1.Rank_of_the_Year FROM station_company AS T1 JOIN company AS T2 ON T1.Company_ID = T2.Company_ID WHERE T1.Rank_of_the_Year <= 3"
            },
            {
                "User": "Delete the gas station with a station ID of 10 as it is no longer operational.",
                "Answer": "DELETE FROM gas_station WHERE Station_ID = 10"
            },
            {
                "User": "Add a new column 'Annual_Visitors' to the 'gas_station' table to track the number of visitors per year.",
                "Answer": "ALTER TABLE gas_station ADD Annual_Visitors number"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 256,
        "db": "insurance_and_eClaims",
        "interaction": [
            {
                "User": "I'd like to add a new policy type called 'Comprehensive' with a start date of '2021-01-01' and an end date of '2022-01-01' for customer id 334. Could you do that?",
                "Answer": "INSERT INTO Policies (Customer_ID, Policy_Type_Code, Start_Date, End_Date) VALUES (334, 'Comprehensive', '2021-01-01', '2022-01-01')"
            },
            {
                "User": "Can we update the claim status code to 'Resolved' for claim header id 15?",
                "Answer": "UPDATE Claim_Headers SET Claim_Status_Code = 'Resolved' WHERE Claim_Header_ID = 15"
            },
            {
                "User": "I need to create a new table to store information about policy premiums. It should have columns for policy id, premium amount, and due date.",
                "Answer": "CREATE TABLE Policy_Premiums (Policy_ID number, Premium_Amount number, Due_Date time, PRIMARY KEY (Policy_ID))"
            },
            {
                "User": "Let's add a column for email addresses to the Customers table.",
                "Answer": "ALTER TABLE Customers ADD COLUMN Email_Address text"
            },
            {
                "User": "We need to record a new document for claim id 27. It's a 'Receipt' created by staff id 510 on date 20210301. Please insert this record.",
                "Answer": "INSERT INTO Claims_Documents (Claim_ID, Document_Type_Code, Created_by_Staff_ID, Created_Date) VALUES (27, 'Receipt', 510, 20210301)"
            },
            {
                "User": "Could you update the amount claimed to 500 for claim header id 24?",
                "Answer": "UPDATE Claim_Headers SET Amount_Claimed = 500 WHERE Claim_Header_ID = 24"
            },
            {
                "User": "Please add a new customer with Customer_ID 345 and Customer_Details as 'Mr. John Doe'.",
                "Answer": "INSERT INTO Customers (Customer_ID, Customer_Details) VALUES (345, 'Mr. John Doe')"
            },
            {
                "User": "I want to add a new staff member with Staff_ID 511 and Staff_Details as 'Jane'.",
                "Answer": "INSERT INTO Staff (Staff_ID, Staff_Details) VALUES (511, 'Jane')"
            },
            {
                "User": "What's the total amount claimed for all settled claims?",
                "Answer": "SELECT SUM(Amount_Claimed) FROM Claim_Headers WHERE Claim_Status_Code = 'Settled'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 257,
        "db": "insurance_and_eClaims",
        "interaction": [
            {
                "User": "I want to add a new customer named John Doe with an ID of 345.",
                "Answer": "INSERT INTO Customers (Customer_ID, Customer_Details) VALUES (345, 'John Doe');"
            },
            {
                "User": "Update the policy end date for policy ID 125 to 2023-12-31.",
                "Answer": "UPDATE Policies SET End_Date = '2023-12-31' WHERE Policy_ID = 125;"
            },
            {
                "User": "Create a new table to track customer feedback with columns for feedback ID, customer ID, feedback text, and date received.",
                "Answer": "CREATE TABLE Customer_Feedback (Feedback_ID number PRIMARY KEY, Customer_ID number, Feedback_Text text, Date_Received time);"
            },
            {
                "User": "Add a new column to the Staff table to record their email addresses.",
                "Answer": "ALTER TABLE Staff ADD COLUMN Email_Address text;"
            },
            {
                "User": "Insert a feedback entry for customer ID 252 with feedback ID 101, saying 'Very satisfied with the service' received on 2023-01-10.",
                "Answer": "INSERT INTO Customer_Feedback (Feedback_ID, Customer_ID, Feedback_Text, Date_Received) VALUES (101, 252, 'Very satisfied with the service', '2023-01-10');"
            },
            {
                "User": "Add a column 'Total_Claims' to the Customers table to track the number of claims each customer has made.",
                "Answer": "ALTER TABLE Customers ADD COLUMN Total_Claims number;"
            },
            {
                "User": "Record that customer ID 263 has made a total of 5 claims.",
                "Answer": "UPDATE Customers SET Total_Claims = 5 WHERE Customer_ID = 263;"
            },
            {
                "User": "Create a table to log changes made to the Policies table, including the policy ID, the staff ID who made the change, and the timestamp of the change.",
                "Answer": "CREATE TABLE Policy_Change_Log (Policy_ID number, Staff_ID number, Change_Timestamp time);"
            },
            {
                "User": "Log a change to policy ID 287 by staff ID 406 on 2023-03-15.",
                "Answer": "INSERT INTO Policy_Change_Log (Policy_ID, Staff_ID, Change_Timestamp) VALUES (287, 406, '2023-03-15');"
            },
            {
                "User": "I need to correct the amount paid for claim header ID 15 to $350.00.",
                "Answer": "UPDATE Claim_Headers SET Amount_Piad = 350.00 WHERE Claim_Header_ID = 15;"
            },
            {
                "User": "Create a new table to store policy renewals with columns for renewal ID, policy ID, renewal date, and renewed by staff ID.",
                "Answer": "CREATE TABLE Policy_Renewals (Renewal_ID number PRIMARY KEY, Policy_ID number, Renewal_Date time, Renewed_By_Staff_ID number);"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 258,
        "db": "local_govt_mdm",
        "interaction": [
            {
                "User": "Add a new customer with id 10 and details 'Becker-Little' to the Customer Master Index.",
                "Answer": "INSERT INTO Customer_Master_Index (master_customer_id, cmi_details) VALUES (10, 'Becker-Little');"
            },
            {
                "User": "Update the details of the customer with id 2 to 'Volkman, Smith and Co'.",
                "Answer": "UPDATE Customer_Master_Index SET cmi_details = 'Volkman, Smith and Co' WHERE master_customer_id = 2;"
            },
            {
                "User": "Create a new table to track Vehicle Registrations with columns for registration_id, cmi_cross_ref_id, and vehicle_details.",
                "Answer": "CREATE TABLE Vehicle_Registrations (registration_id number PRIMARY KEY, cmi_cross_ref_id number, vehicle_details text);"
            },
            {
                "User": "Add a new column 'date_of_birth' of type 'date' to the Electoral_Register table.",
                "Answer": "ALTER TABLE Electoral_Register ADD date_of_birth date;"
            },
            {
                "User": "Insert a record in the newly created Vehicle_Registrations table with registration_id 1, cmi_cross_ref_id 101, and vehicle_details 'Blue Ford Fiesta'.",
                "Answer": "INSERT INTO Vehicle_Registrations (registration_id, cmi_cross_ref_id, vehicle_details) VALUES (1, 101, 'Blue Ford Fiesta');"
            },
            {
                "User": "Record a new Parking Fine for customer with cmi_cross_ref_id 4, with an id of 11.",
                "Answer": "INSERT INTO Parking_Fines (council_tax_id, cmi_cross_ref_id) VALUES (11, 4);"
            },
            {
                "User": "I need to correct the source system code for cmi_cross_ref_id 2. It should be 'Council Tax' instead of 'Rent'.",
                "Answer": "UPDATE CMI_Cross_References SET source_system_code = 'Council Tax' WHERE cmi_cross_ref_id = 2;"
            },
            {
                "User": "Create a new table to track Customer Addresses with columns for address_id, master_customer_id, and address_details.",
                "Answer": "CREATE TABLE Customer_Addresses (address_id number PRIMARY KEY, master_customer_id number, address_details text);"
            },
            {
                "User": "Add a new address for customer id 3 with address_id 1 and address_details '123 Baker Street, London'.",
                "Answer": "INSERT INTO Customer_Addresses (address_id, master_customer_id, address_details) VALUES (1, 3, '123 Baker Street, London');"
            },
            {
                "User": "Update the electoral register to add a date of birth '1985-04-12' for the record with electoral_register_id 2.",
                "Answer": "UPDATE Electoral_Register SET date_of_birth = '1985-04-12' WHERE electoral_register_id = 2;"
            },
            {
                "User": "Delete the record from Council Tax for cmi_cross_ref_id 104 as it was added by mistake.",
                "Answer": "DELETE FROM Council_Tax WHERE cmi_cross_ref_id = 104;"
            },
            {
                "User": "Can you show me all customer details including their address details?",
                "Answer": "SELECT CMI.master_customer_id, CMI.cmi_details, CA.address_details FROM Customer_Master_Index CMI LEFT JOIN Customer_Addresses CA ON CMI.master_customer_id = CA.master_customer_id;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 259,
        "db": "local_govt_mdm",
        "interaction": [
            {
                "User": "Can you add a new master customer with the id 10 and details 'Smith & Co' to the Customer Master Index?",
                "Answer": "INSERT INTO Customer_Master_Index (master_customer_id, cmi_details) VALUES (10, 'Smith & Co')"
            },
            {
                "User": "Please update the cmi details for master customer id 2 to 'Volkman, Mills and Smith'.",
                "Answer": "UPDATE Customer_Master_Index SET cmi_details = 'Volkman, Mills and Smith' WHERE master_customer_id = 2"
            },
            {
                "User": "I need to track email addresses for our customers. Can you add a new column for email addresses to the Customer Master Index?",
                "Answer": "ALTER TABLE Customer_Master_Index ADD COLUMN email_address text"
            },
            {
                "User": "Now that we have an email address column, please insert 'john@smithco.com' for our new customer with id 10.",
                "Answer": "UPDATE Customer_Master_Index SET email_address = 'john@smithco.com' WHERE master_customer_id = 10"
            },
            {
                "User": "Create a new table to track vehicle registrations for each master customer id, including registration number and vehicle type.",
                "Answer": "CREATE TABLE Vehicle_Registrations (vehicle_registration_id number PRIMARY KEY, master_customer_id number, registration_number text, vehicle_type text, FOREIGN KEY (master_customer_id) REFERENCES Customer_Master_Index(master_customer_id))"
            },
            {
                "User": "Can you insert a new vehicle registration for customer id 1 with registration number 'ABC123' and vehicle type 'Sedan'?",
                "Answer": "INSERT INTO Vehicle_Registrations (vehicle_registration_id, master_customer_id, registration_number, vehicle_type) VALUES (1, 1, 'ABC123', 'Sedan')"
            },
            {
                "User": "I'd like to add a new customer and their vehicle registration in one go. The customer is 'Doe Enterprises' with id 11, email 'contact@doeent.com', and their vehicle is a 'Truck' with registration 'XYZ789'.",
                "Answer": [
                    "INSERT INTO Customer_Master_Index (master_customer_id, cmi_details, email_address) VALUES (11, 'Doe Enterprises', 'contact@doeent.com');",
                    "INSERT INTO Vehicle_Registrations (vehicle_registration_id, master_customer_id, registration_number, vehicle_type) VALUES (2, 11, 'XYZ789', 'Truck');"
                ]
            },
            {
                "User": "We need to track payments for parking fines. Can you create a table for this with columns for the fine id, master customer id, and amount?",
                "Answer": "CREATE TABLE Parking_Fine_Payments (fine_id number, master_customer_id number, amount decimal, PRIMARY KEY (fine_id), FOREIGN KEY (master_customer_id) REFERENCES Customer_Master_Index(master_customer_id))"
            },
            {
                "User": "Insert a payment record for the parking fine with id 9 for customer id 4 with an amount of 50.00.",
                "Answer": "INSERT INTO Parking_Fine_Payments (fine_id, master_customer_id, amount) VALUES (9, 4, 50.00)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 260,
        "db": "store_product",
        "interaction": [
            {
                "User": "Add a new product with ID 7, named 'Epson WorkForce DS-560', dimensions '297 x 154 x 67', dpi 300, 26 pages per minute color, max page size 'A4', and interface 'Wi-Fi'.",
                "Answer": "INSERT INTO product (product_id, product, dimensions, dpi, pages_per_minute_color, max_page_size, interface) VALUES (7, 'Epson WorkForce DS-560', '297 x 154 x 67', 300, 26, 'A4', 'Wi-Fi')"
            },
            {
                "User": "The store with Store_ID 2 has expanded its area size to 35. What is the updated area size?",
                "Answer": [
                    "UPDATE store SET Area_size = 35 WHERE Store_ID = 2;",
                    "SELECT Area_size FROM store WHERE Store_ID = 2"
                ]
            },
            {
                "User": "Create a new table called 'employee' with columns 'Employee_ID' as number, 'Name' as text, 'Store_ID' as number, and 'Position' as text. Make 'Employee_ID' the primary key.",
                "Answer": "CREATE TABLE employee (Employee_ID number PRIMARY KEY, Name text, Store_ID number, Position text)"
            },
            {
                "User": "Insert three new records into the 'employee' table for Store_ID 1, with the following details: Employee_ID 101, Name 'Alice Smith', Position 'Manager'; Employee_ID 102, Name 'Bob Johnson', Position 'Cashier'; Employee_ID 103, Name 'Charlie Lee', Position 'Sales Associate'.",
                "Answer": "INSERT INTO employee (Employee_ID, Name, Store_ID, Position) VALUES (101, 'Alice Smith', 1, 'Manager'), (102, 'Bob Johnson', 1, 'Cashier'), (103, 'Charlie Lee', 1, 'Sales Associate')"
            },
            {
                "User": "We need to track the email addresses of our employees. Add a column 'Email' to the 'employee' table.",
                "Answer": "ALTER TABLE employee ADD Email text"
            },
            {
                "User": "Update the ranking of the store with Store_ID 3 to 5.",
                "Answer": "UPDATE store SET Ranking = 5 WHERE Store_ID = 3"
            },
            {
                "User": "Link each store to its district by creating a new table 'store_district_link' with columns 'Link_ID' as number, 'Store_ID' as number, and 'District_ID' as number. Ensure 'Link_ID' is the primary key.",
                "Answer": "CREATE TABLE store_district_link (Link_ID number PRIMARY KEY, Store_ID number, District_ID number)"
            },
            {
                "User": "Insert a new district with District_ID 16, named 'Multan District', headquartered in 'Multan City', with a population of 1875000 and an area of 50.",
                "Answer": "INSERT INTO district (District_ID, District_name, Headquartered_City, City_Population, City_Area) VALUES (16, 'Multan District', 'Multan City', 1875000, 50)"
            },
            {
                "User": "Associate the store with Store_ID 1 to the new district with District_ID 16 in the 'store_district_link' table.",
                "Answer": "INSERT INTO store_district_link (Link_ID, Store_ID, District_ID) VALUES (1, 1, 16)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 261,
        "db": "store_product",
        "interaction": [
            {
                "User": "Can we add a new column 'Stock' to the 'product' table to track the inventory?",
                "Answer": "ALTER TABLE product ADD Stock number;"
            },
            {
                "User": "Insert a new product with ID 7, name 'Epson FastFoto FF-680W', dimensions '296 x 169 x 176', dpi 600, pages per minute color 45, max page size 'A4', interface 'USB 3.0', and stock 50.",
                "Answer": "INSERT INTO product (product_id, product, dimensions, dpi, pages_per_minute_color, max_page_size, interface, Stock) VALUES (7, 'Epson FastFoto FF-680W', '296 x 169 x 176', 600, 45, 'A4', 'USB 3.0', 50);"
            },
            {
                "User": "The store 'Miramichi' has expanded its area size to 200 square meters. Update the record.",
                "Answer": "UPDATE store SET Area_size = 200 WHERE Store_Name = 'Miramichi';"
            },
            {
                "User": "Create a new table 'employee' to store employee details, with columns 'Employee_ID', 'Name', 'Store_ID', and 'Position'.",
                "Answer": "CREATE TABLE employee (Employee_ID number PRIMARY KEY, Name text, Store_ID number, Position text);"
            },
            {
                "User": "Add an employee with ID 101, name 'John Doe', working at store ID 2, position 'Manager'.",
                "Answer": "INSERT INTO employee (Employee_ID, Name, Store_ID, Position) VALUES (101, 'John Doe', 2, 'Manager');"
            },
            {
                "User": "We need to track the email addresses of our district headquarters. Add a new column 'Email' to the 'district' table.",
                "Answer": "ALTER TABLE district ADD Email text;"
            },
            {
                "User": "Set the email for 'Attock District' headquarters to 'contact@attockdistrict.com'.",
                "Answer": "UPDATE district SET Email = 'contact@attockdistrict.com' WHERE District_name = 'Attock District';"
            },
            {
                "User": "Create a new table 'sales' to record the sales data, with columns 'Sale_ID', 'Store_ID', 'Product_ID', 'Quantity', and 'Sale_Date'.",
                "Answer": "CREATE TABLE sales (Sale_ID number PRIMARY KEY, Store_ID number, Product_ID number, Quantity number, Sale_Date date);"
            },
            {
                "User": "Record a sale with ID 501, at store ID 1, product ID 2, quantity 10, on the date '2023-04-01'.",
                "Answer": "INSERT INTO sales (Sale_ID, Store_ID, Product_ID, Quantity, Sale_Date) VALUES (501, 1, 2, 10, '2023-04-01');"
            },
            {
                "User": "The product with ID 3 is discontinued, remove it from the 'product' table.",
                "Answer": "DELETE FROM product WHERE product_id = 3;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 262,
        "db": "election",
        "interaction": [
            {
                "User": "Can we track the number of elections each party has won?",
                "Answer": "ALTER TABLE party ADD COLUMN Elections_Won number"
            },
            {
                "User": "Please initialize the 'Elections_Won' for all parties to zero.",
                "Answer": "UPDATE party SET Elections_Won = 0"
            },
            {
                "User": "The Democratic party just won an election, can you update their record?",
                "Answer": "UPDATE party SET Elections_Won = Elections_Won + 1 WHERE Party = 'Democratic'"
            },
            {
                "User": "I want to add a new county with ID 6, named 'Riverdale', with a population of 45000, and zip code 'D25'.",
                "Answer": "INSERT INTO county (County_Id, County_name, Population, Zip_code) VALUES (6, 'Riverdale', 45000, 'D25')"
            },
            {
                "User": "Can we create a table to keep track of election results?",
                "Answer": "CREATE TABLE election_results (Result_ID number PRIMARY KEY, Election_ID number, Party_ID number, Votes number, Winner text)"
            },
            {
                "User": "Add a record of election results where election ID is 4, party ID is 1, the number of votes is 5000, and the winner is 'Democratic'.",
                "Answer": "INSERT INTO election_results (Result_ID, Election_ID, Party_ID, Votes, Winner) VALUES (1, 4, 1, 5000, 'Democratic')"
            },
            {
                "User": "The population of 'Howard' county has increased by 500. Can you update it?",
                "Answer": "UPDATE county SET Population = Population + 500 WHERE County_name = 'Howard'"
            },
            {
                "User": "Let's add a column 'Area' to the county table to record the area size in square miles.",
                "Answer": "ALTER TABLE county ADD COLUMN Area number"
            },
            {
                "User": "Update the area of 'Howard' county to be 251.6 square miles.",
                "Answer": "UPDATE county SET Area = 251.6 WHERE County_name = 'Howard'"
            },
            {
                "User": "Can you show me the total population for counties with zip codes starting with 'D'?",
                "Answer": "SELECT SUM(Population) FROM county WHERE Zip_code LIKE 'D%'"
            },
            {
                "User": "Let's add a new party called 'Green' with the year 2023, and initialize all other fields with default values.",
                "Answer": "INSERT INTO party (Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate) VALUES (8, 2023, 'Green', 'TBD', 'TBD', 'TBD', 'TBD', 'TBD')"
            },
            {
                "User": "I need to correct the name of the lieutenant governor for the Liberal party in 1998. It should be 'Mark Green'.",
                "Answer": "UPDATE party SET Lieutenant_Governor = 'Mark Green' WHERE Party = 'Liberal' AND Year = 1998"
            },
            {
                "User": "Let's create a view that shows all parties and the number of delegates they have.",
                "Answer": "CREATE VIEW party_delegates AS SELECT p.Party, COUNT(e.Delegate) AS Delegate_Count FROM party p JOIN election e ON p.Party_ID = e.Party GROUP BY p.Party"
            },
            {
                "User": "Can we add a column 'Population_Density' to county table to calculate population per square mile?",
                "Answer": "ALTER TABLE county ADD COLUMN Population_Density number"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 263,
        "db": "election",
        "interaction": [
            {
                "User": "Can you add a new county with the following details: County_Id 6, County_name 'Riverside', Population 45000, Zip_code 'D10'?",
                "Answer": "INSERT INTO county (County_Id, County_name, Population, Zip_code) VALUES (6, 'Riverside', 45000, 'D10')"
            },
            {
                "User": "What are the details of the newly added county 'Riverside'?",
                "Answer": "SELECT * FROM county WHERE County_name = 'Riverside'"
            },
            {
                "User": "I'd like to update the population of 'Riverside' county to 46000. Can you do that?",
                "Answer": "UPDATE county SET Population = 46000 WHERE County_name = 'Riverside'"
            },
            {
                "User": "I made a mistake with the zip code of Riverside. It should be 'D11'. Can you correct it?",
                "Answer": "UPDATE county SET Zip_code = 'D11' WHERE County_name = 'Riverside'"
            },
            {
                "User": "Can you create a new table 'candidates' with columns: Candidate_ID (number), Name (text), Party_ID (number), and Election_ID (number)?",
                "Answer": "CREATE TABLE candidates (Candidate_ID number, Name text, Party_ID number, Election_ID number)"
            },
            {
                "User": "Now, insert a candidate with the following details: Candidate_ID 1, Name 'John Doe', Party_ID 1, Election_ID 1.",
                "Answer": "INSERT INTO candidates (Candidate_ID, Name, Party_ID, Election_ID) VALUES (1, 'John Doe', 1, 1)"
            },
            {
                "User": "Add a new column 'Email' of type text to the 'candidates' table.",
                "Answer": "ALTER TABLE candidates ADD COLUMN Email text"
            },
            {
                "User": "Please update the email address of candidate John Doe to 'john.doe@example.com'.",
                "Answer": "UPDATE candidates SET Email = 'john.doe@example.com' WHERE Name = 'John Doe'"
            },
            {
                "User": "Can we add a column 'Age' of type number to the 'county' table to store the average age of the population?",
                "Answer": "ALTER TABLE county ADD COLUMN Age number"
            },
            {
                "User": "Set the average age for Howard county to 35.",
                "Answer": "UPDATE county SET Age = 35 WHERE County_name = 'Howard'"
            },
            {
                "User": "Can you provide a list of all counties along with their average age and population?",
                "Answer": "SELECT County_name, Age, Population FROM county"
            },
            {
                "User": "Create a new table 'voting_records' with columns: Record_ID (number), County_Id (number), Party_ID (number), Total_Votes (number), Election_Year (number).",
                "Answer": "CREATE TABLE voting_records (Record_ID number, County_Id number, Party_ID number, Total_Votes number, Election_Year number)"
            },
            {
                "User": "Insert a voting record with these details: Record_ID 1, County_Id 1, Party_ID 1, Total_Votes 5000, Election_Year 2020.",
                "Answer": "INSERT INTO voting_records (Record_ID, County_Id, Party_ID, Total_Votes, Election_Year) VALUES (1, 1, 1, 5000, 2020)"
            },
            {
                "User": "Now, let's update the total votes to 5500 for the record we just inserted.",
                "Answer": "UPDATE voting_records SET Total_Votes = 5500 WHERE Record_ID = 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 264,
        "db": "phone_market",
        "interaction": [
            {
                "User": "How many different markets are there?",
                "Answer": "SELECT COUNT(DISTINCT Market_ID) FROM phone_market"
            },
            {
                "User": "How many different phones are there?",
                "Answer": "SELECT COUNT(DISTINCT Name) FROM phone"
            },
            {
                "User": "Which phone is sold in the most different markets?",
                "Answer": "SELECT T1.Name FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T1.Phone_ID ORDER BY COUNT(*) DESC LIMIT 1"
            },
            {
                "User": "How many phones are not available in any markets?",
                "Answer": "SELECT COUNT(Name) FROM phone WHERE Phone_ID NOT IN (SELECT Phone_ID FROM phone_market)"
            },
            {
                "User": "What is the name of that phone?",
                "Answer": "SELECT Name FROM phone WHERE Phone_ID NOT IN (SELECT Phone_ID FROM phone_market)"
            },
            {
                "User": "Add a new phone model called 'IPhone 12' with ID 10, 256GB memory, carried by 'Verizon', priced at 999.99.",
                "Answer": "INSERT INTO phone (Name, Phone_ID, Memory_in_G, Carrier, Price) VALUES ('IPhone 12', 10, 256, 'Verizon', 999.99)"
            },
            {
                "User": "Update the price of 'IPhone 6' to 450.00.",
                "Answer": "UPDATE phone SET Price = 450.00 WHERE Name = 'IPhone 6'"
            },
            {
                "User": "Create a new table 'manufacturer' with columns 'Manufacturer_ID' as number and primary key, 'Name' as text, and 'Headquarters' as text.",
                "Answer": "CREATE TABLE manufacturer (Manufacturer_ID number PRIMARY KEY, Name text, Headquarters text)"
            },
            {
                "User": "Insert into 'manufacturer' table the manufacturer with ID 1, name 'Apple', and headquarters in 'California'.",
                "Answer": "INSERT INTO manufacturer (Manufacturer_ID, Name, Headquarters) VALUES (1, 'Apple', 'California')"
            },
            {
                "User": "Add a new column 'Year_Released' to the 'phone' table to store the release year as a number.",
                "Answer": "ALTER TABLE phone ADD COLUMN Year_Released number"
            },
            {
                "User": "Insert the release year 2020 for the 'IPhone 12' model.",
                "Answer": "UPDATE phone SET Year_Released = 2020 WHERE Name = 'IPhone 12'"
            },
            {
                "User": "How many phones were released after the year 2018?",
                "Answer": "SELECT COUNT(*) FROM phone WHERE Year_Released > 2018"
            },
            {
                "User": "Create a new table 'sales' with columns 'Sale_ID' as number and primary key, 'Phone_ID' as number, 'Units_Sold' as number, and 'Sale_Date' as date.",
                "Answer": "CREATE TABLE sales (Sale_ID number PRIMARY KEY, Phone_ID number, Units_Sold number, Sale_Date date)"
            },
            {
                "User": "Record a sale of 50 units for phone ID 5 on March 1st, 2023.",
                "Answer": "INSERT INTO sales (Sale_ID, Phone_ID, Units_Sold, Sale_Date) VALUES (1, 5, 50, '2023-03-01')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 265,
        "db": "phone_market",
        "interaction": [
            {
                "User": "I want to add a new phone model called 'Galaxy S21' with ID 6, 256 GB memory, carried by Verizon, priced at 800. Can you insert this record?",
                "Answer": "INSERT INTO phone (Name, Phone_ID, Memory_in_G, Carrier, Price) VALUES ('Galaxy S21', 6, 256, 'Verizon', 800)"
            },
            {
                "User": "The price of the IPhone 6 has dropped to 450. Update the database with this new price.",
                "Answer": "UPDATE phone SET Price = 450 WHERE Name = 'IPhone 6'"
            },
            {
                "User": "We need to track the color of each phone model. Please add a new column 'Color' to the 'phone' table.",
                "Answer": "ALTER TABLE phone ADD Color text"
            },
            {
                "User": "Now that we have a color column, set the color of the 'IPhone 5s' to 'Black'.",
                "Answer": "UPDATE phone SET Color = 'Black' WHERE Name = 'IPhone 5s'"
            },
            {
                "User": "Create a new table called 'employee' to store employee information with columns 'Employee_ID' as a number and primary key, 'Name' as text, 'Market_ID' as a number referencing the 'market' table, and 'Position' as text.",
                "Answer": "CREATE TABLE employee (Employee_ID number PRIMARY KEY, Name text, Market_ID number, Position text, FOREIGN KEY (Market_ID) REFERENCES market(Market_ID))"
            },
            {
                "User": "Insert a new employee record with ID 101, name 'John Doe', working at market ID 1, and position 'Manager'.",
                "Answer": "INSERT INTO employee (Employee_ID, Name, Market_ID, Position) VALUES (101, 'John Doe', 1, 'Manager')"
            },
            {
                "User": "The 'Num_of_shops' in the 'British Columbia' market has increased to 50. Update the 'market' table with this information.",
                "Answer": "UPDATE market SET Num_of_shops = 50 WHERE District = 'British Columbia'"
            },
            {
                "User": "We've opened a new market in 'Ontario' with ID 7, 1200 employees, 35 shops, and ranking 7. Add this to the 'market' table.",
                "Answer": "INSERT INTO market (Market_ID, District, Num_of_employees, Num_of_shops, Ranking) VALUES (7, 'Ontario', 1200, 35, 7)"
            },
            {
                "User": "The IPhone 5s is now available in 'White'. Update the color for this model.",
                "Answer": "UPDATE phone SET Color = 'White' WHERE Name = 'IPhone 5s'"
            },
            {
                "User": "I would like to see a list of all phone models along with their colors.",
                "Answer": "SELECT Name, Color FROM phone"
            },
            {
                "User": "Can you create a table to log changes in phone prices with columns 'Log_ID' as a number and primary key, 'Phone_ID' as a number, 'Old_Price' as a number, 'New_Price' as a number, and 'Change_Date' as a date?",
                "Answer": "CREATE TABLE price_change_log (Log_ID number PRIMARY KEY, Phone_ID number, Old_Price number, New_Price number, Change_Date date, FOREIGN KEY (Phone_ID) REFERENCES phone(Phone_ID))"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 266,
        "db": "school_finance",
        "interaction": [
            {
                "User": "I would like to add a new school to the database. The school's name is 'Maple High', located in 'Mapleton', with the mascot 'Maples', an enrollment of 350, class 'AA', football class 'AA', and in '51 Monroe' county.",
                "Answer": "INSERT INTO School (School_id, School_name, Location, Mascot, Enrollment, IHSAA_Class, IHSAA_Football_Class, County) VALUES ((SELECT COALESCE(MAX(School_id), 0) + 1 FROM School), 'Maple High', 'Mapleton', 'Maples', 350, 'AA', 'AA', '51 Monroe')"
            },
            {
                "User": "Update the enrollment for 'Bremen' to 510 students.",
                "Answer": "UPDATE School SET Enrollment = 510 WHERE School_name = 'Bremen'"
            },
            {
                "User": "Create a new table to track sports achievements, with fields for achievement_id, school_id, sport, and title.",
                "Answer": "CREATE TABLE sports_achievements (achievement_id INTEGER PRIMARY KEY, School_id TEXT, sport TEXT, title TEXT)"
            },
            {
                "User": "Add a new column to the budget table to track the percentage of budget spent on sports.",
                "Answer": "ALTER TABLE budget ADD COLUMN sports_budget_percent NUMBER"
            },
            {
                "User": "Insert data into the sports achievements table for 'Bremen' winning the 'Soccer State Championship'.",
                "Answer": "INSERT INTO sports_achievements (achievement_id, School_id, sport, title) VALUES ((SELECT COALESCE(MAX(achievement_id), 0) + 1 FROM sports_achievements), (SELECT School_id FROM School WHERE School_name = 'Bremen'), 'Soccer', 'State Championship')"
            },
            {
                "User": "What is the total amount donated to 'Culver Community' school?",
                "Answer": "SELECT SUM(amount) FROM endowment WHERE School_id = (SELECT School_id FROM School WHERE School_name = 'Culver Community')"
            },
            {
                "User": "Add a record to the endowment table with a new donation of $5000 from 'Jane Doe' to 'Glenn' school.",
                "Answer": "INSERT INTO endowment (endowment_id, School_id, donator_name, amount) VALUES ((SELECT COALESCE(MAX(endowment_id), 0) + 1 FROM endowment), (SELECT School_id FROM School WHERE School_name = 'Glenn'), 'Jane Doe', 5000)"
            },
            {
                "User": "Can we see the updated average enrollment after adding 'Maple High'?",
                "Answer": "SELECT avg (Enrollment) FROM School"
            },
            {
                "User": "Show me the percentage of the budget that is invested for each school.",
                "Answer": "SELECT School_name, total_budget_percent_invested FROM School JOIN budget ON School.School_id = budget.School_id"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 267,
        "db": "school_finance",
        "interaction": [
            {
                "User": "Hello, can you provide me with the names of the donors?",
                "Answer": "SELECT donator_name FROM endowment"
            },
            {
                "User": "How many donors were there total?",
                "Answer": "SELECT count(distinct donator_name) FROM endowment"
            },
            {
                "User": "Can we track the total amount each donor has contributed? If not, please add a new table for this purpose.",
                "Answer": "CREATE TABLE donor_contributions (donor_name text, total_amount number, PRIMARY KEY (donor_name))"
            },
            {
                "User": "I want to add a new donor 'John Doe' who donated $5000 to school with id 2. Please update the records.",
                "Answer": "INSERT INTO endowment (endowment_id, School_id, donator_name, amount) VALUES ((SELECT max(endowment_id)+1 FROM endowment), 2, 'John Doe', 5000)"
            },
            {
                "User": "Can you update the budget for school with id 2 for the year 2001 to $7500?",
                "Answer": "UPDATE budget SET Budgeted = 7500 WHERE School_id = 2 AND Year = 2001"
            },
            {
                "User": "We need to add a new column 'New_Building' to the School table to track if they are planning new construction. The type should be boolean.",
                "Answer": "ALTER TABLE School ADD COLUMN New_Building boolean"
            },
            {
                "User": "For school with id 3, set the 'New_Building' flag to true as they are planning a new gym.",
                "Answer": "UPDATE School SET New_Building = true WHERE School_id = '3'"
            },
            {
                "User": "Let's create a table to record the school's sports achievements. Include columns for sport name, year, and a boolean for if they won the championship.",
                "Answer": "CREATE TABLE sports_achievements (achievement_id number, School_id number, sport_name text, year number, championship_won boolean, PRIMARY KEY (achievement_id))"
            },
            {
                "User": "Insert a record that Bremen High School won the football championship in 2021.",
                "Answer": "INSERT INTO sports_achievements (achievement_id, School_id, sport_name, year, championship_won) VALUES ((SELECT max(achievement_id)+1 FROM sports_achievements), 1, 'Football', 2021, true)"
            },
            {
                "User": "We should have a record of the last renovation for each school. Can you add a 'Last_Renovation_Year' column to the School table?",
                "Answer": "ALTER TABLE School ADD COLUMN Last_Renovation_Year number"
            },
            {
                "User": "Update the 'Last_Renovation_Year' for 'Culver Community' to 2018.",
                "Answer": "UPDATE School SET Last_Renovation_Year = 2018 WHERE School_name = 'Culver Community'"
            },
            {
                "User": "Let's add a new school to the database. The school's name is 'Riverdale', located in 'River Town', the mascot is 'Ravens', enrollment is 800, IHSAA Class is 'AAAA', Football Class is 'AAAA', County is '78 River', and they are planning a new building.",
                "Answer": "INSERT INTO School (School_id, School_name, Location, Mascot, Enrollment, IHSAA_Class, IHSAA_Football_Class, County, New_Building) VALUES ((SELECT max(cast(School_id as integer))+1 FROM School), 'Riverdale', 'River Town', 'Ravens', 800, 'AAAA', 'AAAA', '78 River', true)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 268,
        "db": "city_record",
        "interaction": [
            {
                "User": "Add a new city with ID 14, name 'Beijing', Hanzi '北京', Hanyu Pinyin 'Běijīng', Regional Population of 21500000, and GDP of 2500.00.",
                "Answer": "INSERT INTO city (City_ID, City, Hanzi, Hanyu_Pinyin, Regional_Population, GDP) VALUES (14, 'Beijing', '北京', 'Běijīng', 21500000, 2500.00)"
            },
            {
                "User": "Update the GDP of Nanjing (City ID 2) to 650.00.",
                "Answer": "UPDATE city SET GDP = 650.00 WHERE City_ID = 2"
            },
            {
                "User": "Create a new table 'city_details' with columns 'City_ID' as number, 'Mayor' as text, and 'Established_Year' as number.",
                "Answer": "CREATE TABLE city_details (City_ID number, Mayor text, Established_Year number, PRIMARY KEY (City_ID))"
            },
            {
                "User": "Insert the Mayor name 'Wang Anshun' and Established Year 1949 for Beijing into the 'city_details' table.",
                "Answer": "INSERT INTO city_details (City_ID, Mayor, Established_Year) VALUES (14, 'Wang Anshun', 1949)"
            },
            {
                "User": "Add a new column 'Stadium_Capacity' of type number to the 'hosting_city' table.",
                "Answer": "ALTER TABLE hosting_city ADD COLUMN Stadium_Capacity number"
            },
            {
                "User": "Set the stadium capacity for Match ID 1 to 50000.",
                "Answer": "UPDATE hosting_city SET Stadium_Capacity = 50000 WHERE Match_ID = 1"
            },
            {
                "User": "Create a table 'city_sports' that records sports facilities, with columns 'Facility_ID' as number, 'City_ID' as number, 'Facility_Name' as text, and 'Facility_Type' as text.",
                "Answer": "CREATE TABLE city_sports (Facility_ID number, City_ID number, Facility_Name text, Facility_Type text, PRIMARY KEY (Facility_ID))"
            },
            {
                "User": "Insert a record for a sports facility in Shanghai with Facility ID 101, name 'Shanghai Stadium', and type 'Football Stadium'.",
                "Answer": "INSERT INTO city_sports (Facility_ID, City_ID, Facility_Name, Facility_Type) VALUES (101, 1, 'Shanghai Stadium', 'Football Stadium')"
            },
            {
                "User": "What are the names of the cities that have a GDP higher than 700.00?",
                "Answer": "SELECT City FROM city WHERE GDP > 700.00"
            },
            {
                "User": "Delete the match record with Match ID 2.",
                "Answer": "DELETE FROM match WHERE Match_ID = 2"
            },
            {
                "User": "How many cities have a Regional Population greater than 10 million?",
                "Answer": "SELECT COUNT(*) FROM city WHERE Regional_Population > 10000000"
            },
            {
                "User": "Add a new column 'TimeZone' of type text to the 'city' table to record the time zone of each city.",
                "Answer": "ALTER TABLE city ADD COLUMN TimeZone text"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 269,
        "db": "city_record",
        "interaction": [
            {
                "User": "Add a new city record for 'Beijing' with a population of 21540000 and a GDP of 2568.9.",
                "Answer": "INSERT INTO city (City, Hanzi, Hanyu_Pinyin, Regional_Population, GDP) VALUES ('Beijing', '北京', 'Běijīng', 21540000, 2568.9);"
            },
            {
                "User": "Update the GDP of 'Shanghai' to 2100.00.",
                "Answer": "UPDATE city SET GDP = 2100.00 WHERE City = 'Shanghai';"
            },
            {
                "User": "Create a new table to track the mayors of each city with fields for City_ID, Mayor_Name, and Term_Start.",
                "Answer": "CREATE TABLE mayors (City_ID number, Mayor_Name text, Term_Start text, PRIMARY KEY(City_ID));"
            },
            {
                "User": "Who is the mayor of Nanjing and when did their term start?",
                "Answer": "SELECT Mayor_Name, Term_Start FROM mayors WHERE City_ID = (SELECT City_ID FROM city WHERE City = 'Nanjing ( Jiangsu )');"
            },
            {
                "User": "Insert a new match record for a friendly match on '12 March 1993' at 'Estadio Nacional, Lima, Peru' with a score of '2-2'.",
                "Answer": "INSERT INTO match (Date, Venue, Score, Result, Competition) VALUES ('12 March 1993', 'Estadio Nacional, Lima, Peru', '2-2', 'Draw', 'Friendly match');"
            },
            {
                "User": "Alter the temperature table to include a column for the average yearly temperature.",
                "Answer": "ALTER TABLE temperature ADD COLUMN Yearly_Avg number;"
            },
            {
                "User": "Calculate the average yearly temperature for Shanghai and update the temperature table with this information.",
                "Answer": "UPDATE temperature SET Yearly_Avg = (Jan + Feb + Mar + Apr + Jun + Jul + Aug + Sep + Oct + Nov + Dec) / 11 WHERE City_ID = (SELECT City_ID FROM city WHERE City = 'Shanghai');"
            },
            {
                "User": "Create a new table to keep track of city attractions with columns for Attraction_ID, City_ID, Attraction_Name, and Attraction_Type.",
                "Answer": "CREATE TABLE attractions (Attraction_ID number PRIMARY KEY, City_ID number, Attraction_Name text, Attraction_Type text);"
            },
            {
                "User": "Add the 'Bund' as an attraction for Shanghai with the type 'Historical Site'.",
                "Answer": "INSERT INTO attractions (City_ID, Attraction_Name, Attraction_Type) VALUES ((SELECT City_ID FROM city WHERE City = 'Shanghai'), 'Bund', 'Historical Site');"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 270,
        "db": "protein_institute",
        "interaction": [
            {
                "User": "Add a new building with the following details: ID '8', Name 'Protein Research Tower', Street Address '123 DNA Lane', Years as tallest '2020-Present', Height in feet '500', Floors '30'.",
                "Answer": "INSERT INTO building (building_id, Name, Street_address, Years_as_tallest, Height_feet, Floors) VALUES ('8', 'Protein Research Tower', '123 DNA Lane', '2020-Present', 500, 30)"
            },
            {
                "User": "Update the height of the Floridan Hotel to be 210 feet.",
                "Answer": "UPDATE building SET Height_feet = 210 WHERE Name = 'Floridan Hotel'"
            },
            {
                "User": "Create a new table named 'department' with columns 'department_id' as text, 'department_name' as text, and 'Institution_id' as text, which is a foreign key referencing 'Institution_id' in the 'Institution' table.",
                "Answer": "CREATE TABLE department (department_id text PRIMARY KEY, department_name text, Institution_id text, FOREIGN KEY (Institution_id) REFERENCES Institution(Institution_id))"
            },
            {
                "User": "Add a new column 'Zip_code' to the 'building' table with datatype text.",
                "Answer": "ALTER TABLE building ADD COLUMN Zip_code text"
            },
            {
                "User": "Insert a new protein record with the following details: Common Name 'Green Sea Turtle', Protein Name 'shell-forming protein', Divergence 200.5, Accession Number 'XP_013425331.2', Sequence Length 1700, Identity to Human Protein '55%', Institution ID '2'.",
                "Answer": "INSERT INTO protein (common_name, protein_name, divergence_from_human_lineage, accession_number, sequence_length, sequence_identity_to_human_protein, Institution_id) VALUES ('Green Sea Turtle', 'shell-forming protein', 200.5, 'XP_013425331.2', 1700, '55%', '2')"
            },
            {
                "User": "Update the Enrollment of Edward Waters College to 850 students.",
                "Answer": "UPDATE Institution SET Enrollment = 850 WHERE Institution = 'Edward Waters College'"
            },
            {
                "User": "Add a new department with ID 'D01', Name 'Bioinformatics', and associated with Institution ID '1'.",
                "Answer": "INSERT INTO department (department_id, department_name, Institution_id) VALUES ('D01', 'Bioinformatics', '1')"
            },
            {
                "User": "Change the name of the 'Institution' column in the 'Institution' table to 'Institution_Name'.",
                "Answer": "ALTER TABLE Institution RENAME COLUMN Institution TO Institution_Name"
            },
            {
                "User": "In the building table, how many buildings have more than 15 floors?",
                "Answer": "SELECT COUNT(*) FROM building WHERE Floors > 15"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 271,
        "db": "college_1",
        "interaction": [
            {
                "User": "I want to add a new course on 'Data Science Fundamentals'.",
                "Answer": "INSERT INTO COURSE (CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT) VALUES ('DS-101', 'CIS', 'Data Science Fundamentals', 4)"
            },
            {
                "User": "Update the credit hours for the Accounting I course to 4.",
                "Answer": "UPDATE COURSE SET CRS_CREDIT = 4 WHERE CRS_CODE = 'ACCT-211'"
            },
            {
                "User": "Create a new table to track students' attendance.",
                "Answer": "CREATE TABLE STUDENT_ATTENDANCE (ATTENDANCE_ID number PRIMARY KEY, STU_NUM number, CLASS_CODE text, ATTENDANCE_DATE time, ATTENDANCE_STATUS text)"
            },
            {
                "User": "Add a column to the STUDENT table to store their email addresses.",
                "Answer": "ALTER TABLE STUDENT ADD COLUMN STU_EMAIL text"
            },
            {
                "User": "Insert a new student record with the name 'John Doe', born on 1995-07-08, into the computer science department.",
                "Answer": "INSERT INTO STUDENT (STU_NUM, STU_LNAME, STU_FNAME, STU_INIT, STU_DOB, STU_HRS, STU_CLASS, STU_GPA, STU_TRANSFER, DEPT_CODE, STU_PHONE, PROF_NUM) VALUES (324259, 'Doe', 'John', 'A', '1995-07-08', 0, 'Fr', 0.0, 0, 'CIS', 'NULL', NULL)"
            },
            {
                "User": "A professor with employee number 107 has been hired for the History department. Update the database.",
                "Answer": [
                    "INSERT INTO EMPLOYEE (EMP_NUM, EMP_LNAME, EMP_FNAME, EMP_INITIAL, EMP_JOBCODE, EMP_HIREDATE, EMP_DOB) VALUES (107, 'Smith', 'John', 'B', 'PROF', '2023-01-15', '1970-05-22');",
                    "INSERT INTO PROFESSOR (EMP_NUM, DEPT_CODE, PROF_OFFICE, PROF_EXTENSION, PROF_HIGH_DEGREE) VALUES (107, 'HIST', 'DRE 158', '6785', 'Ph.D.')"
                ]
            },
            {
                "User": "We need to enroll a student with number 321452 in a new class with code 10015. The student received a grade 'B'.",
                "Answer": "INSERT INTO ENROLL (CLASS_CODE, STU_NUM, ENROLL_GRADE) VALUES ('10015', 321452, 'B')"
            },
            {
                "User": "Change the office location for the professor in the Accounting department with employee number 105 to 'KLR 230A'.",
                "Answer": "UPDATE PROFESSOR SET PROF_OFFICE = 'KLR 230A' WHERE EMP_NUM = 105 AND DEPT_CODE = 'ACCT'"
            },
            {
                "User": "The Biology department has moved to a new location. Update the address to 'AAK 240, Box 420'.",
                "Answer": "UPDATE DEPARTMENT SET DEPT_ADDRESS = 'AAK 240, Box 420' WHERE DEPT_CODE = 'BIOL'"
            },
            {
                "User": "Create a table to store course prerequisites with course codes and prerequisite course codes.",
                "Answer": "CREATE TABLE COURSE_PREREQUISITES (CRS_CODE text, PREREQ_CRS_CODE text, PRIMARY KEY (CRS_CODE, PREREQ_CRS_CODE))"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 272,
        "db": "customers_and_addresses",
        "interaction": [
            {
                "User": "Add a new customer with the name 'John Doe', preferring to pay with a credit card.",
                "Answer": "INSERT INTO Customers (customer_id, payment_method, customer_name, date_became_customer) VALUES (16, 'Credit Card', 'John Doe', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Update the payment method for Dr. Julia Wuckert MD to 'Debit Card'.",
                "Answer": "UPDATE Customers SET payment_method = 'Debit Card' WHERE customer_name = 'Dr. Julia Wuckert MD'"
            },
            {
                "User": "Create a new table to track customer reviews with fields for review_id, customer_id, product_id, review_text, and review_date.",
                "Answer": "CREATE TABLE Customer_Reviews (review_id number PRIMARY KEY, customer_id number, product_id number, review_text text, review_date time)"
            },
            {
                "User": "Insert a review for customer with ID 2 for product with ID 1 saying 'Great coffee taste!' with today's date.",
                "Answer": "INSERT INTO Customer_Reviews (review_id, customer_id, product_id, review_text, review_date) VALUES (1, 2, 1, 'Great coffee taste!', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Add a column to track the email address of customers in the Customers table.",
                "Answer": "ALTER TABLE Customers ADD COLUMN email_address text"
            },
            {
                "User": "Set the email address for customer Tillman Ernser to 'tillman@example.com'.",
                "Answer": "UPDATE Customers SET email_address = 'tillman@example.com' WHERE customer_name = 'Tillman Ernser'"
            },
            {
                "User": "Create a new table called 'Product_Stock' to maintain inventory levels with fields for product_id, stock_quantity, and last_updated.",
                "Answer": "CREATE TABLE Product_Stock (product_id number PRIMARY KEY, stock_quantity number, last_updated time)"
            },
            {
                "User": "Add a new product to the Products table with product_id 4 named 'Espresso'.",
                "Answer": "INSERT INTO Products (product_id, product_details) VALUES (4, 'Espresso')"
            },
            {
                "User": "Record that we have 100 units of the 'Espresso' product in stock as of now.",
                "Answer": "INSERT INTO Product_Stock (product_id, stock_quantity, last_updated) VALUES (4, 100, CURRENT_TIMESTAMP)"
            },
            {
                "User": "Update the stock quantity for 'Dove Chocolate' to 200 units.",
                "Answer": "UPDATE Product_Stock SET stock_quantity = 200 WHERE product_id = (SELECT product_id FROM Products WHERE product_details = 'Dove Chocolate')"
            },
            {
                "User": "What is the email address of Rodrick Heaney?",
                "Answer": "SELECT email_address FROM Customers WHERE customer_name = 'Rodrick Heaney'"
            },
            {
                "User": "How many units of 'Latte' do we currently have in stock?",
                "Answer": "SELECT stock_quantity FROM Product_Stock WHERE product_id = (SELECT product_id FROM Products WHERE product_details = 'Latte')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 273,
        "db": "customers_and_addresses",
        "interaction": [
            {
                "User": "Can we add a new customer to the database?",
                "Answer": "INSERT INTO customers (customer_id, payment_method, customer_name, date_became_customer) VALUES (16, 'Debit Card', 'Jane Doe', '2023-03-15 14:30:00')"
            },
            {
                "User": "I want to update the payment method for Dr. Julia Wuckert MD to 'Debit Card'.",
                "Answer": "UPDATE customers SET payment_method = 'Debit Card' WHERE customer_name = 'Dr. Julia Wuckert MD'"
            },
            {
                "User": "Let's create a table for storing customer feedback with columns: feedback_id, customer_id, feedback_text, and feedback_date.",
                "Answer": "CREATE TABLE customer_feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text, feedback_date time)"
            },
            {
                "User": "Can we insert a feedback record for customer with id 1?",
                "Answer": "INSERT INTO customer_feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES (1, 1, 'Great service and products.', '2023-03-15 16:45:00')"
            },
            {
                "User": "I need to add a new 'email' column to the Customers table.",
                "Answer": "ALTER TABLE customers ADD COLUMN email text"
            },
            {
                "User": "Please update the email address of customer Tillman Ernser to 'tillman.ernser@example.com'.",
                "Answer": "UPDATE customers SET email = 'tillman.ernser@example.com' WHERE customer_name = 'Tillman Ernser'"
            },
            {
                "User": "Can we add a new product to the Products table?",
                "Answer": "INSERT INTO products (product_id, product_details) VALUES (4, 'Espresso')"
            },
            {
                "User": "How do I change the address details for address_id 2?",
                "Answer": "UPDATE addresses SET address_content = '1234 New Address St', city = 'Newtown', zip_postcode = '12345', state_province_county = 'NewState', country = 'USA' WHERE address_id = 2"
            },
            {
                "User": "Let's create a new order for customer_id 2 with status 'Processing'.",
                "Answer": "INSERT INTO customer_orders (order_id, customer_id, order_status, order_date) VALUES (16, 2, 'Processing', '2023-03-15 17:00:00')"
            },
            {
                "User": "Add an item with product_id 3 to the new order we just created.",
                "Answer": "INSERT INTO order_items (order_id, product_id, order_quantity) VALUES (16, 3, '1')"
            },
            {
                "User": "Can we add a 'loyalty_points' column to the Customers table to track reward points?",
                "Answer": "ALTER TABLE customers ADD COLUMN loyalty_points number"
            },
            {
                "User": "Update the loyalty points for Rodrick Heaney to 150 points.",
                "Answer": "UPDATE customers SET loyalty_points = 150 WHERE customer_name = 'Rodrick Heaney'"
            },
            {
                "User": "Let's create a new table to track the inventory of products with columns: product_id, quantity_in_stock, and last_updated.",
                "Answer": "CREATE TABLE product_inventory (product_id number PRIMARY KEY, quantity_in_stock number, last_updated time)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 274,
        "db": "bike_1",
        "interaction": [
            {
                "User": "Add a new station with id 1, name 'New Station', latitude 37.000000, longitude -121.000000, dock count 25, city 'New City', installed on '2023-03-01'.",
                "Answer": "INSERT INTO station (id, name, lat, long, dock_count, city, installation_date) VALUES (1, 'New Station', 37.000000, -121.000000, 25, 'New City', '2023-03-01')"
            },
            {
                "User": "The dock count for the station with id 2 has increased to 30. Update the record.",
                "Answer": "UPDATE station SET dock_count = 30 WHERE id = 2"
            },
            {
                "User": "Create a new table to log maintenance activities with columns for maintenance_id, station_id, start_time, end_time, and description.",
                "Answer": "CREATE TABLE maintenance (maintenance_id number PRIMARY KEY, station_id number, start_time text, end_time text, description text)"
            },
            {
                "User": "Add a column 'status' to the maintenance table to indicate whether the maintenance is 'scheduled', 'in_progress', or 'completed'.",
                "Answer": "ALTER TABLE maintenance ADD COLUMN status text"
            },
            {
                "User": "Schedule a maintenance for station id 3, with maintenance_id 101, starting on '2023-04-15 09:00', ending on '2023-04-15 12:00', and a description 'Routine check-up'.",
                "Answer": "INSERT INTO maintenance (maintenance_id, station_id, start_time, end_time, description, status) VALUES (101, 3, '2023-04-15 09:00', '2023-04-15 12:00', 'Routine check-up', 'scheduled')"
            },
            {
                "User": "Update the status of maintenance_id 101 to 'in_progress'.",
                "Answer": "UPDATE maintenance SET status = 'in_progress' WHERE maintenance_id = 101"
            },
            {
                "User": "How many stations were installed in 'San Jose' before '2014-01-01'?",
                "Answer": "SELECT COUNT(*) FROM station WHERE city = 'San Jose' AND installation_date < '2014-01-01'"
            },
            {
                "User": "Delete the station with id 71 as the project was cancelled.",
                "Answer": "DELETE FROM station WHERE id = 71"
            },
            {
                "User": "For the trip with id 900506, the end station was incorrect. Update the end_station_id to 65 and the end_station_name to '5th at Howard'.",
                "Answer": "UPDATE trip SET end_station_id = 65, end_station_name = '5th at Howard' WHERE id = 900506"
            },
            {
                "User": "The weather table is missing the 'wind_speed_kmh' column. Add this column to the table.",
                "Answer": "ALTER TABLE weather ADD COLUMN wind_speed_kmh number"
            },
            {
                "User": "Convert all 'max_wind_Speed_mph' values to 'km/h' and populate the new 'wind_speed_kmh' column. (Assume 1 mph = 1.60934 km/h)",
                "Answer": "UPDATE weather SET wind_speed_kmh = ROUND(max_wind_Speed_mph * 1.60934, 2)"
            },
            {
                "User": "Create a view that shows the number of bikes available at each station along with the station name and city.",
                "Answer": "CREATE VIEW station_status AS SELECT s.name, s.city, st.bikes_available FROM station s JOIN status st ON s.id = st.station_id"
            },
            {
                "User": "Rename the 'subscription_type' column in the trip table to 'passholder_type'.",
                "Answer": "ALTER TABLE trip RENAME COLUMN subscription_type TO passholder_type"
            },
            {
                "User": "We need to track the 'last_maintenance_date' for each station. Add this column to the station table.",
                "Answer": "ALTER TABLE station ADD COLUMN last_maintenance_date text"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 275,
        "db": "bike_1",
        "interaction": [
            {
                "User": "How can we record the maintenance history of each bike?",
                "Answer": "CREATE TABLE maintenance_history (maintenance_id number PRIMARY KEY, bike_id number, start_date text, end_date text, description text, FOREIGN KEY (bike_id) REFERENCES trip(bike_id))"
            },
            {
                "User": "Add a new maintenance record for bike 454 that started on March 1, 2023 and ended on March 3, 2023 with a description 'Tire replacement'.",
                "Answer": "INSERT INTO maintenance_history (maintenance_id, bike_id, start_date, end_date, description) VALUES (1, 454, '3/1/2023', '3/3/2023', 'Tire replacement')"
            },
            {
                "User": "I want to track the total trips each bike has made. Can we add a column to store this information?",
                "Answer": "ALTER TABLE station ADD COLUMN total_trips number"
            },
            {
                "User": "Update the total trips for bike id 454 to 120.",
                "Answer": "UPDATE station SET total_trips = 120 WHERE id = (SELECT start_station_id FROM trip WHERE bike_id = 454 LIMIT 1)"
            },
            {
                "User": "We need to add a new station with id 1, name 'New Station', latitude 37.4, longitude -122.1, dock count 25, city 'Mountain View', and installation date '4/1/2023'.",
                "Answer": "INSERT INTO station (id, name, lat, long, dock_count, city, installation_date) VALUES (1, 'New Station', 37.4, -122.1, 25, 'Mountain View', '4/1/2023')"
            },
            {
                "User": "Change the dock count of station id 3 to 20.",
                "Answer": "UPDATE station SET dock_count = 20 WHERE id = 3"
            },
            {
                "User": "We should have a way to record weather events. Can we add a new column to the weather table?",
                "Answer": "ALTER TABLE weather ADD COLUMN weather_event text"
            },
            {
                "User": "Insert a weather event 'Rain' for the date '8/29/2013' with zip code 94107.",
                "Answer": "UPDATE weather SET weather_event = 'Rain' WHERE date = '8/29/2013' AND zip_code = 94107"
            },
            {
                "User": "Create a new table to log customer complaints with complaint id, station id, description, and resolution status.",
                "Answer": "CREATE TABLE customer_complaints (complaint_id number PRIMARY KEY, station_id number, description text, resolution_status text, FOREIGN KEY (station_id) REFERENCES station(id))"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 276,
        "db": "medicine_enzyme_interaction",
        "interaction": [
            {
                "User": "Add a new medicine called Clozapine with Trade Name Clozaril that is FDA approved.",
                "Answer": "INSERT INTO medicine (name, Trade_Name, FDA_approved) VALUES ('Clozapine', 'Clozaril', 'Yes');"
            },
            {
                "User": "What is the FDA approval status of Aripiprazole?",
                "Answer": "SELECT FDA_approved FROM medicine WHERE name = 'Aripiprazole';"
            },
            {
                "User": "Update the FDA approval status of Amisulpride to 'Yes'.",
                "Answer": "UPDATE medicine SET FDA_approved = 'Yes' WHERE name = 'Amisulpride';"
            },
            {
                "User": "Create a new table to log user queries with columns for query_id, user_id, and query_text.",
                "Answer": "CREATE TABLE user_query_log (query_id number PRIMARY KEY, user_id number, query_text text);"
            },
            {
                "User": "Add a new enzyme called Cytochrome P450 with location in the Endoplasmic reticulum and product Cytochrome.",
                "Answer": "INSERT INTO enzyme (name, Location, Product) VALUES ('Cytochrome P450', 'Endoplasmic reticulum', 'Cytochrome');"
            },
            {
                "User": "Record a new interaction between medicine id 8 and enzyme id 1 as an activator.",
                "Answer": "INSERT INTO medicine_enzyme_interaction (enzyme_id, medicine_id, interaction_type) VALUES (1, 8, 'activator');"
            },
            {
                "User": "Add a new column 'Synonyms' to the medicine table to store alternative names.",
                "Answer": "ALTER TABLE medicine ADD COLUMN Synonyms text;"
            },
            {
                "User": "Set the Synonym for Asenapine to 'Saphris Sublingual'.",
                "Answer": "UPDATE medicine SET Synonyms = 'Saphris Sublingual' WHERE name = 'Asenapine';"
            },
            {
                "User": "Create a table to track enzyme deficiencies with columns enzyme_id, deficiency_name, and severity.",
                "Answer": "CREATE TABLE enzyme_deficiency (enzyme_id number, deficiency_name text, severity text, PRIMARY KEY (enzyme_id, deficiency_name));"
            },
            {
                "User": "Log a query made by user 123 that searched for 'FDA approved medicines'.",
                "Answer": "INSERT INTO user_query_log (query_id, user_id, query_text) VALUES (1, 123, 'FDA approved medicines');"
            },
            {
                "User": "Add a deficiency called 'Cytochrome P450 deficiency' for Cytochrome P450 with high severity.",
                "Answer": "INSERT INTO enzyme_deficiency (enzyme_id, deficiency_name, severity) VALUES ((SELECT id FROM enzyme WHERE name = 'Cytochrome P450'), 'Cytochrome P450 deficiency', 'high');"
            },
            {
                "User": "Show all medicines that are FDA approved.",
                "Answer": "SELECT * FROM medicine WHERE FDA_approved = 'Yes';"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 277,
        "db": "medicine_enzyme_interaction",
        "interaction": [
            {
                "User": "I want to add a new medicine called 'Neurozapine' with Trade Name 'NeuroZ' that is FDA approved. Can you add it for me?",
                "Answer": "INSERT INTO medicine (id, name, Trade_Name, FDA_approved) VALUES (22, 'Neurozapine', 'NeuroZ', 'Yes')"
            },
            {
                "User": "We just got approval for 'Amisulpride'. Can you update its FDA approval status?",
                "Answer": "UPDATE medicine SET FDA_approved = 'Yes' WHERE name = 'Amisulpride'"
            },
            {
                "User": "Can you create a table to track the clinical trials for medicines?",
                "Answer": "CREATE TABLE clinical_trials (trial_id number PRIMARY KEY, medicine_id number, trial_phase text, status text, FOREIGN KEY (medicine_id) REFERENCES medicine(id))"
            },
            {
                "User": "Add a new clinical trial for 'Neurozapine' that is in phase 3 and currently active.",
                "Answer": "INSERT INTO clinical_trials (trial_id, medicine_id, trial_phase, status) VALUES (1, 22, 'Phase 3', 'Active')"
            },
            {
                "User": "Can you update the interaction type for 'ALA synthase' with 'Amisulpride' to 'activator'?",
                "Answer": "UPDATE medicine_enzyme_interaction SET interaction_type = 'activator' WHERE enzyme_id = (SELECT id FROM enzyme WHERE name = 'ALA synthase') AND medicine_id = (SELECT id FROM medicine WHERE name = 'Amisulpride')"
            },
            {
                "User": "I realized we need to track the dosage information for medicine-enzyme interactions. Can you add a 'dosage' column to the interactions table?",
                "Answer": "ALTER TABLE medicine_enzyme_interaction ADD dosage text"
            },
            {
                "User": "Set the dosage for the interaction of 'ALA synthase' and 'Amisulpride' to '50mg'.",
                "Answer": "UPDATE medicine_enzyme_interaction SET dosage = '50mg' WHERE enzyme_id = (SELECT id FROM enzyme WHERE name = 'ALA synthase') AND medicine_id = (SELECT id FROM medicine WHERE name = 'Amisulpride')"
            },
            {
                "User": "We need to record the discovery date for enzymes. Please add a 'discovery_date' column to the enzyme table.",
                "Answer": "ALTER TABLE enzyme ADD discovery_date date"
            },
            {
                "User": "The discovery date for 'ALA synthase' was January 1, 1970. Please update the record.",
                "Answer": "UPDATE enzyme SET discovery_date = '1970-01-01' WHERE name = 'ALA synthase'"
            },
            {
                "User": "Create a new table to log changes in the database with columns for change_id, table_name, change_type, and change_date.",
                "Answer": "CREATE TABLE change_log (change_id number PRIMARY KEY, table_name text, change_type text, change_date date)"
            },
            {
                "User": "Log the addition of 'Neurozapine' to the medicine table in the change log.",
                "Answer": "INSERT INTO change_log (change_id, table_name, change_type, change_date) VALUES (1, 'medicine', 'INSERT', CURRENT_DATE)"
            },
            {
                "User": "What is the latest FDA approved medicine in our database?",
                "Answer": "SELECT name FROM medicine WHERE FDA_approved = 'Yes' ORDER BY id DESC LIMIT 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 278,
        "db": "twitter_1",
        "interaction": [
            {
                "User": "Add a new user profile for 'Captain America' with the email 'cap@avengers.com'.",
                "Answer": "INSERT INTO user_profiles (uid, name, email, partitionid, followers) VALUES (100, 'Captain America', 'cap@avengers.com', 1, 0)"
            },
            {
                "User": "Captain America just gained 500 followers. Update his profile.",
                "Answer": "UPDATE user_profiles SET followers = 500 WHERE name = 'Captain America'"
            },
            {
                "User": "Create a new table called 'hashtags' to track hashtag usage in tweets with columns for the hashtag text and the number of times used.",
                "Answer": "CREATE TABLE hashtags (id number PRIMARY KEY, tag text, count number)"
            },
            {
                "User": "Insert a new tweet for user with id 1 saying 'Excited for the new Avengers movie! #Avengers'",
                "Answer": "INSERT INTO tweets (id, uid, text, createdate) VALUES (101, 1, 'Excited for the new Avengers movie! #Avengers', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Add a new column 'bio' to the 'user_profiles' table to include user biographies.",
                "Answer": "ALTER TABLE user_profiles ADD COLUMN bio text"
            },
            {
                "User": "Update the 'bio' of 'Iron Man' to 'Billionaire, playboy, philanthropist.'",
                "Answer": "UPDATE user_profiles SET bio = 'Billionaire, playboy, philanthropist.' WHERE name = 'Iron Man'"
            },
            {
                "User": "Who tweeted about '#Avengers'?",
                "Answer": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid WHERE T2.text LIKE '%#Avengers%'"
            },
            {
                "User": "Increase the follower count for 'Mary' by 100.",
                "Answer": "UPDATE user_profiles SET followers = followers + 100 WHERE name = 'Mary'"
            },
            {
                "User": "Record the use of '#Avengers' with an initial count of 1 in the 'hashtags' table.",
                "Answer": "INSERT INTO hashtags (id, tag, count) VALUES (1, '#Avengers', 1)"
            },
            {
                "User": "Mary has changed her email. Update her profile with 'mary.jane@yale.edu'.",
                "Answer": "UPDATE user_profiles SET email = 'mary.jane@yale.edu' WHERE name = 'Mary'"
            },
            {
                "User": "Show the top 3 users with the most followers.",
                "Answer": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 3"
            },
            {
                "User": "Add a 'retweet_count' column to the 'tweets' table to track the number of retweets.",
                "Answer": "ALTER TABLE tweets ADD COLUMN retweet_count number"
            },
            {
                "User": "Set the initial 'retweet_count' for all existing tweets to 0.",
                "Answer": "UPDATE tweets SET retweet_count = 0"
            },
            {
                "User": "Create a new table 'likes' to track which users liked which tweets.",
                "Answer": "CREATE TABLE likes (user_id number, tweet_id number, PRIMARY KEY (user_id, tweet_id))"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 279,
        "db": "hospital_1",
        "interaction": [
            {
                "User": "Can you add a new department called 'Cardiology' with Dr. Elliot Reid as the head?",
                "Answer": "INSERT INTO Department (Name, Head) VALUES ('Cardiology', (SELECT EmployeeID FROM Physician WHERE Name = 'Elliot Reid'))"
            },
            {
                "User": "I need to update the phone number of patient John Smith to '555-0309'.",
                "Answer": "UPDATE Patient SET Phone = '555-0309' WHERE Name = 'John Smith'"
            },
            {
                "User": "Create a new table for lab results with columns for result ID, patient ID, test type, and result value.",
                "Answer": "CREATE TABLE Lab_Results (ResultID number PRIMARY KEY, PatientID number, TestType text, ResultValue text)"
            },
            {
                "User": "Please add a column for email addresses to the Nurse table.",
                "Answer": "ALTER TABLE Nurse ADD COLUMN Email text"
            },
            {
                "User": "Insert a new medication called 'PainAway' by 'ReliefCorp' with a description 'Pain reliever'.",
                "Answer": "INSERT INTO Medication (Name, Brand, Description) VALUES ('PainAway', 'ReliefCorp', 'Pain reliever')"
            },
            {
                "User": "How many physicians are currently affiliated with the 'General Medicine' department?",
                "Answer": "SELECT COUNT(*) FROM Affiliated_With WHERE Department = (SELECT DepartmentID FROM Department WHERE Name = 'General Medicine')"
            },
            {
                "User": "Add a new nurse named 'Ted Buckland' who is not registered and has an SSN of '444444440'.",
                "Answer": "INSERT INTO Nurse (Name, Position, Registered, SSN) VALUES ('Ted Buckland', 'Nurse', 0, 444444440)"
            },
            {
                "User": "Update the cost of the 'Reverse Rhinopodoplasty' procedure to $2000.",
                "Answer": "UPDATE Procedures SET Cost = 2000 WHERE Name = 'Reverse Rhinopodoplasty'"
            },
            {
                "User": "Create a new appointment for patient John Smith with Dr. John Dorian in room 'C' starting at '2008-05-20 14:00' and ending at '2008-05-20 15:00'.",
                "Answer": "INSERT INTO Appointment (Patient, PrepNurse, Physician, Start, End, ExaminationRoom) VALUES ((SELECT SSN FROM Patient WHERE Name = 'John Smith'), NULL, (SELECT EmployeeID FROM Physician WHERE Name = 'John Dorian'), '2008-05-20 14:00', '2008-05-20 15:00', 'C')"
            },
            {
                "User": "Add a boolean column 'Emergency' to the Appointment table to indicate if the appointment is for an emergency.",
                "Answer": "ALTER TABLE Appointment ADD COLUMN Emergency boolean"
            },
            {
                "User": "Record that patient Random J. Patient underwent a 'Folded Demiophtalmectomy' on '2008-05-10' with Dr. Christopher Turk assisting, stay is 3215.",
                "Answer": "INSERT INTO Undergoes (Patient, Procedures, Stay, DateUndergoes, Physician, AssistingNurse) VALUES ((SELECT SSN FROM Patient WHERE Name = 'Random J. Patient'), (SELECT Code FROM Procedures WHERE Name = 'Folded Demiophtalmectomy'), 3215, '2008-05-10', (SELECT EmployeeID FROM Physician WHERE Name = 'Christopher Turk'), NULL)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 280,
        "db": "assets_maintenance",
        "interaction": [
            {
                "User": "Add a new third-party company called 'Tech Solutions' with the type 'Supplier', located at '1234 Tech Street, Silicon Valley'.",
                "Answer": "INSERT INTO Third_Party_Companies (company_id, company_type, company_name, company_address) VALUES (16, 'Supplier', 'Tech Solutions', '1234 Tech Street, Silicon Valley')"
            },
            {
                "User": "Update the address of 'Langworth-Funk' to '4567 Innovation Drive, Tech Park'.",
                "Answer": "UPDATE Third_Party_Companies SET company_address = '4567 Innovation Drive, Tech Park' WHERE company_name = 'Langworth-Funk'"
            },
            {
                "User": "Create a new table to track the warranty period of parts with columns for part_id, warranty_start_date, and warranty_end_date.",
                "Answer": "CREATE TABLE Part_Warranty (part_id number, warranty_start_date time, warranty_end_date time, PRIMARY KEY (part_id))"
            },
            {
                "User": "Insert warranty details for part_id 1 with a start date of '2023-01-01' and an end date of '2024-01-01'.",
                "Answer": "INSERT INTO Part_Warranty (part_id, warranty_start_date, warranty_end_date) VALUES (1, '2023-01-01', '2024-01-01')"
            },
            {
                "User": "Add a column to track the email address of the maintenance engineers.",
                "Answer": "ALTER TABLE Maintenance_Engineers ADD COLUMN email_address text"
            },
            {
                "User": "Set the email address of engineer Etha Reinger to 'etha.reinger@maintech.com'.",
                "Answer": "UPDATE Maintenance_Engineers SET email_address = 'etha.reinger@maintech.com' WHERE first_name = 'Etha' AND last_name = 'Reinger'"
            },
            {
                "User": "Create a table to log maintenance activities with columns for activity_id, asset_id, activity_date, and description.",
                "Answer": "CREATE TABLE Maintenance_Activity_Log (activity_id number, asset_id number, activity_date time, description text, PRIMARY KEY (activity_id))"
            },
            {
                "User": "Log a new maintenance activity for asset_id 2 on '2023-03-15' with the description 'Regular check-up and cleaning'.",
                "Answer": "INSERT INTO Maintenance_Activity_Log (activity_id, asset_id, activity_date, description) VALUES (1, 2, '2023-03-15', 'Regular check-up and cleaning')"
            },
            {
                "User": "Add a new skill code 'HVAC' with the description 'Heating, Ventilation, and Air Conditioning'.",
                "Answer": "INSERT INTO Skills (skill_id, skill_code, skill_description) VALUES (4, 'HVAC', 'Heating, Ventilation, and Air Conditioning')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 281,
        "db": "assets_maintenance",
        "interaction": [
            {
                "User": "I want to add a new third-party company called 'Tech Solutions' based in 'Germany'.",
                "Answer": "INSERT INTO Third_Party_Companies (company_id, company_type, company_name, company_address) VALUES (16, 'Maintenance Contractor', 'Tech Solutions', '1234 Innovation Drive, Berlin, Germany')"
            },
            {
                "User": "Can you update the address of 'Langworth-Funk' to '626 Jacobs Mews, Uganda'?",
                "Answer": "UPDATE Third_Party_Companies SET company_address = '626 Jacobs Mews, Uganda' WHERE company_name = 'Langworth-Funk'"
            },
            {
                "User": "Create a new table to track asset maintenance history with fields for asset_id, date_of_maintenance, and maintenance_notes.",
                "Answer": "CREATE TABLE Asset_Maintenance_History (asset_id number, date_of_maintenance time, maintenance_notes text, PRIMARY KEY (asset_id, date_of_maintenance))"
            },
            {
                "User": "I realized we need to track the staff_id for each maintenance history record. Can you add this column to the Asset_Maintenance_History table?",
                "Answer": "ALTER TABLE Asset_Maintenance_History ADD COLUMN staff_id number"
            },
            {
                "User": "Insert a maintenance record for asset with id 2, performed today by staff with id 1, with a note 'Routine check-up'.",
                "Answer": "INSERT INTO Asset_Maintenance_History (asset_id, date_of_maintenance, maintenance_notes, staff_id) VALUES (2, CURRENT_DATE, 'Routine check-up', 1)"
            },
            {
                "User": "Can we have a list of all assets that are currently not under any maintenance contract?",
                "Answer": "SELECT * FROM Assets WHERE maintenance_contract_id NOT IN (SELECT maintenance_contract_id FROM Maintenance_Contracts)"
            },
            {
                "User": "Please add a new skill called 'Networking' with code 'NET'.",
                "Answer": "INSERT INTO Skills (skill_id, skill_code, skill_description) VALUES (4, 'NET', 'Networking')"
            },
            {
                "User": "We need to correct the chargeable amount for part with id 3 to '15'. What's the current amount?",
                "Answer": [
                    "SELECT chargeable_amount FROM Parts WHERE part_id = 3;",
                    "UPDATE Parts SET chargeable_amount = '15' WHERE part_id = 3"
                ]
            },
            {
                "User": "Record a new fault log for asset id 1, recorded by staff id 2, with the description 'Hard drive failure'.",
                "Answer": "INSERT INTO Fault_Log (fault_log_entry_id, asset_id, recorded_by_staff_id, fault_log_entry_datetime, fault_description) VALUES (16, 1, 2, CURRENT_TIMESTAMP, 'Hard drive failure')"
            },
            {
                "User": "The engineer with id 2 has developed a new skill in 'Networking'. Please update their skills.",
                "Answer": "INSERT INTO Engineer_Skills (engineer_id, skill_id) VALUES (2, 4)"
            },
            {
                "User": "Let's create a view that shows the asset details along with the name of the maintenance company.",
                "Answer": "CREATE VIEW Asset_Maintenance_Details AS SELECT a.asset_id, a.asset_details, a.asset_make, a.asset_model, t.company_name FROM Assets AS a JOIN Third_Party_Companies AS t ON a.supplier_company_id = t.company_id"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 282,
        "db": "store_1",
        "interaction": [
            {
                "User": "Add a new artist named 'The Weekend' to the artists table.",
                "Answer": "INSERT INTO artists (name) VALUES ('The Weekend')"
            },
            {
                "User": "What is the id of the newly added artist 'The Weekend'?",
                "Answer": "SELECT id FROM artists WHERE name = 'The Weekend'"
            },
            {
                "User": "Create a new table called 'concerts' with columns for id, artist_id, city, and date.",
                "Answer": "CREATE TABLE concerts (id number PRIMARY KEY, artist_id number, city text, date time)"
            },
            {
                "User": "Add a concert for 'The Weekend' in Toronto on 2023-07-22.",
                "Answer": "INSERT INTO concerts (artist_id, city, date) VALUES ((SELECT id FROM artists WHERE name = 'The Weekend'), 'Toronto', '2023-07-22 20:00:00')"
            },
            {
                "User": "Update the address of customer Luís Gonçalves to '1234 New Street, São Paulo, SP, Brazil, 11000-000'.",
                "Answer": "UPDATE customers SET address = '1234 New Street', city = 'São Paulo', state = 'SP', country = 'Brazil', postal_code = '11000-000' WHERE first_name = 'Luís' AND last_name = 'Gonçalves'"
            },
            {
                "User": "How many tracks are there in the 'Rock' genre?",
                "Answer": "SELECT count(*) FROM tracks WHERE genre_id = (SELECT id FROM genres WHERE name = 'Rock')"
            },
            {
                "User": "Add a new media type called 'Vinyl' to the media_types table.",
                "Answer": "INSERT INTO media_types (name) VALUES ('Vinyl')"
            },
            {
                "User": "Change the name of the playlist with id 1 to 'All Music'.",
                "Answer": "UPDATE playlists SET name = 'All Music' WHERE id = 1"
            },
            {
                "User": "Add a column 'nickname' to the employees table to store their nicknames.",
                "Answer": "ALTER TABLE employees ADD COLUMN nickname text"
            },
            {
                "User": "Set the nickname for employee Andrew Adams to 'Andy'.",
                "Answer": "UPDATE employees SET nickname = 'Andy' WHERE first_name = 'Andrew' AND last_name = 'Adams'"
            },
            {
                "User": "Create a report that lists all employees and their supervisors' names.",
                "Answer": "SELECT e1.first_name || ' ' || e1.last_name AS Employee, e2.first_name || ' ' || e2.last_name AS Supervisor FROM employees e1 LEFT JOIN employees e2 ON e1.reports_to = e2.id"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 283,
        "db": "baseball_1",
        "interaction": [
            {
                "User": "Add a new player with id 'johnsmi01', born in 1990 in New York, USA.",
                "Answer": "INSERT INTO player (player_id, birth_year, birth_country, birth_state, birth_city) VALUES ('johnsmi01', 1990, 'USA', 'NY', 'New York')"
            },
            {
                "User": "Update the height of the player with id 'johnsmi01' to 72 inches.",
                "Answer": "UPDATE player SET height = 72 WHERE player_id = 'johnsmi01'"
            },
            {
                "User": "Create a new table to track the equipment provided to players, including equipment_id, player_id, and equipment_name.",
                "Answer": "CREATE TABLE player_equipment (equipment_id TEXT PRIMARY KEY, player_id TEXT, equipment_name TEXT)"
            },
            {
                "User": "Insert a new equipment record for player 'johnsmi01' with equipment_id 'EQ123' and equipment_name 'Baseball Glove'.",
                "Answer": "INSERT INTO player_equipment (equipment_id, player_id, equipment_name) VALUES ('EQ123', 'johnsmi01', 'Baseball Glove')"
            },
            {
                "User": "How many players have been inducted into the Hall of Fame before 1950?",
                "Answer": "SELECT COUNT(*) FROM hall_of_fame WHERE yearid < 1950 AND inducted = 'Y'"
            },
            {
                "User": "Alter the batting table to include a new column for on_base_percentage.",
                "Answer": "ALTER TABLE batting ADD COLUMN on_base_percentage NUMBER"
            },
            {
                "User": "Update the on_base_percentage for player 'johnsmi01' in the year 2010 to 0.345.",
                "Answer": "UPDATE batting SET on_base_percentage = 0.345 WHERE player_id = 'johnsmi01' AND year = 2010"
            },
            {
                "User": "What was the total attendance for the home games of the Boston Red Stockings in 1871?",
                "Answer": "SELECT SUM(attendance) FROM home_game WHERE team_id = 'BS1' AND year = 1871"
            },
            {
                "User": "Create a view to show the player_id and total salary for each player.",
                "Answer": "CREATE VIEW player_total_salary AS SELECT player_id, SUM(salary) AS total_salary FROM salary GROUP BY player_id"
            },
            {
                "User": "I want to see the full names and total salary of players who played for 'NYA' team in 2010.",
                "Answer": "SELECT P.name_first, P.name_last, S.total_salary FROM player AS P JOIN player_total_salary AS S ON P.player_id = S.player_id JOIN team AS T ON T.team_id = P.player_id WHERE T.team_id_br = 'NYA' AND T.year = 2010"
            },
            {
                "User": "Delete the record of player 'johnsmi01' from the player table.",
                "Answer": "DELETE FROM player WHERE player_id = 'johnsmi01'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 284,
        "db": "baseball_1",
        "interaction": [
            {
                "User": "Add a new player to the player table with ID 'smithjo01', born in 1990, from 'USA', 'TX', 'Houston'.",
                "Answer": "INSERT INTO player (player_id, birth_year, birth_country, birth_state, birth_city) VALUES ('smithjo01', 1990, 'USA', 'TX', 'Houston')"
            },
            {
                "User": "Update the salary of player 'barkele01' for the year 1985 to 900000.",
                "Answer": "UPDATE salary SET salary = 900000 WHERE player_id = 'barkele01' AND year = 1985"
            },
            {
                "User": "Create a new table to track team equipment with columns for equipment_id, team_id, equipment_name, and quantity.",
                "Answer": "CREATE TABLE team_equipment (equipment_id TEXT PRIMARY KEY, team_id TEXT, equipment_name TEXT, quantity NUMBER)"
            },
            {
                "User": "Add a new column to the batting table to record the number of fouls made by a player.",
                "Answer": "ALTER TABLE batting ADD COLUMN fouls NUMBER"
            },
            {
                "User": "Insert data for a new college with ID 'texastech', name 'Texas Tech University', located in 'Lubbock', 'TX', 'USA'.",
                "Answer": "INSERT INTO college (college_id, name_full, city, state, country) VALUES ('texastech', 'Texas Tech University', 'Lubbock', 'TX', 'USA')"
            },
            {
                "User": "Increase the attendance by 10% for all home games in the year 1985.",
                "Answer": "UPDATE home_game SET attendance = attendance * 1.10 WHERE year = 1985"
            },
            {
                "User": "Add a new record to the postseason table for the year 2020, with 'NL' team 'LAD' winning against 'AL' team 'TBR' with 4 wins and 2 losses.",
                "Answer": "INSERT INTO postseason (year, round, team_id_winner, league_id_winner, team_id_loser, league_id_loser, wins, losses) VALUES (2020, 'WS', 'LAD', 'NL', 'TBR', 'AL', 4, 2)"
            },
            {
                "User": "Create a new table to store player nicknames with columns for player_id and nickname.",
                "Answer": "CREATE TABLE player_nicknames (player_id TEXT PRIMARY KEY, nickname TEXT)"
            },
            {
                "User": "Add a new column to the manager table to record the number of ejections a manager has received.",
                "Answer": "ALTER TABLE manager ADD COLUMN ejections NUMBER"
            },
            {
                "User": "Insert a new all-star game record for player 'smithjo01' for the year 2021, representing team 'HOU' in the 'AL' league.",
                "Answer": "INSERT INTO all_star (player_id, year, game_num, team_id, league_id, gp) VALUES ('smithjo01', 2021, 0, 'HOU', 'AL', 1)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 285,
        "db": "customers_card_transactions",
        "interaction": [
            {
                "User": "Add a new customer with id 16, first name John, last name Doe, address 123 Main St, phone 555-1234, and email john.doe@example.com.",
                "Answer": "INSERT INTO Customers (customer_id, customer_first_name, customer_last_name, customer_address, customer_phone, customer_email) VALUES (16, 'John', 'Doe', '123 Main St', '555-1234', 'john.doe@example.com')"
            },
            {
                "User": "Update the phone number for customer id 2 to 555-6789.",
                "Answer": "UPDATE Customers SET customer_phone = '555-6789' WHERE customer_id = 2"
            },
            {
                "User": "Create a new table for storing customer preferences with columns for customer_id, preference_type, and preference_details.",
                "Answer": "CREATE TABLE Customer_Preferences (customer_id number, preference_type text, preference_details text, PRIMARY KEY (customer_id))"
            },
            {
                "User": "Insert a preference for customer id 1 with preference type 'newsletter' and details 'weekly'.",
                "Answer": "INSERT INTO Customer_Preferences (customer_id, preference_type, preference_details) VALUES (1, 'newsletter', 'weekly')"
            },
            {
                "User": "Add a new column 'account_status' to the Accounts table to indicate if the account is active or inactive.",
                "Answer": "ALTER TABLE Accounts ADD account_status text"
            },
            {
                "User": "Set the account_status for account_id 2 to 'inactive'.",
                "Answer": "UPDATE Accounts SET account_status = 'inactive' WHERE account_id = 2"
            },
            {
                "User": "What is the total transaction amount for account_id 3?",
                "Answer": "SELECT SUM(transaction_amount) FROM Financial_Transactions WHERE account_id = 3"
            },
            {
                "User": "Record a new financial transaction with id 16, for account_id 5, card_id 2, type 'Withdrawal', date '2023-04-01 10:00:00', amount 500.00, and comment 'ATM withdrawal'.",
                "Answer": "INSERT INTO Financial_Transactions (transaction_id, account_id, card_id, transaction_type, transaction_date, transaction_amount, transaction_comment) VALUES (16, 5, 2, 'Withdrawal', '2023-04-01 10:00:00', 500.00, 'ATM withdrawal')"
            },
            {
                "User": "Show the full name and email of customers who have made a transaction of more than 1000 in the last month.",
                "Answer": "SELECT c.customer_first_name, c.customer_last_name, c.customer_email FROM Customers c JOIN Accounts a ON c.customer_id = a.customer_id JOIN Financial_Transactions ft ON a.account_id = ft.account_id WHERE ft.transaction_amount > 1000 AND ft.transaction_date > date('now', '-1 month');"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 286,
        "db": "customers_card_transactions",
        "interaction": [
            {
                "User": "Add a new customer with the id 16, named Alex Smith, living at 1234 Main St, with the phone number (555) 123-4567 and email alex.smith@example.com.",
                "Answer": "INSERT INTO Customers (customer_id, customer_first_name, customer_last_name, customer_address, customer_phone, customer_email) VALUES (16, 'Alex', 'Smith', '1234 Main St', '(555) 123-4567', 'alex.smith@example.com')"
            },
            {
                "User": "Update the phone number of the customer with id 2 to (555) 987-6543.",
                "Answer": "UPDATE Customers SET customer_phone = '(555) 987-6543' WHERE customer_id = 2"
            },
            {
                "User": "Create a new table for storing customer preferences with columns for customer_id, preference_type, and preference_details.",
                "Answer": "CREATE TABLE Customer_Preferences (preference_id number PRIMARY KEY, customer_id number, preference_type text, preference_details text, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))"
            },
            {
                "User": "Insert a preference for customer id 3, preference type 'newsletter', and preference details 'weekly'.",
                "Answer": "INSERT INTO Customer_Preferences (preference_id, customer_id, preference_type, preference_details) VALUES (1, 3, 'newsletter', 'weekly')"
            },
            {
                "User": "Add a new column 'account_status' to the Accounts table to indicate if the account is 'active' or 'inactive'.",
                "Answer": "ALTER TABLE Accounts ADD COLUMN account_status text"
            },
            {
                "User": "Set the account_status to 'inactive' for account_id 1.",
                "Answer": "UPDATE Accounts SET account_status = 'inactive' WHERE account_id = 1"
            },
            {
                "User": "How many customers have a 'Credit' type card?",
                "Answer": "SELECT COUNT(*) FROM Customers_Cards WHERE card_type_code = 'Credit'"
            },
            {
                "User": "Deactivate all cards that are expired as of today.",
                "Answer": "UPDATE Customers_Cards SET other_card_details = 'Deactivated due to expiration' WHERE date_valid_to < CURRENT_DATE"
            },
            {
                "User": "Create a new table to log customer complaints with complaint_id, customer_id, complaint_text, and complaint_date.",
                "Answer": "CREATE TABLE Customer_Complaints (complaint_id number PRIMARY KEY, customer_id number, complaint_text text, complaint_date time, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 287,
        "db": "game_1",
        "interaction": [
            {
                "User": "Add a new student named John Doe with StuID 1044, age 20, male, majoring in 601, advised by 7788, living in city code LAX.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1044, 'Doe', 'John', 20, 'M', 601, 7788, 'LAX')"
            },
            {
                "User": "Update the game 'Grand Term Assignment' to be a 'Strategy game'.",
                "Answer": "UPDATE Video_Games SET GType = 'Strategy game' WHERE GName = 'Grand Term Assignment'"
            },
            {
                "User": "Create a new table for game reviews with columns for ReviewID, GameID, StuID, Rating, and ReviewText.",
                "Answer": "CREATE TABLE Game_Reviews (ReviewID number PRIMARY KEY, GameID number, StuID number, Rating number, ReviewText text)"
            },
            {
                "User": "Add a new column 'ReleaseYear' to the Video_Games table to store the year the game was released.",
                "Answer": "ALTER TABLE Video_Games ADD ReleaseYear number"
            },
            {
                "User": "Insert a record of Linda Smith playing a new game with GameID 4 for 10 hours.",
                "Answer": "INSERT INTO Plays_Games (StuID, GameID, Hours_Played) VALUES (1001, 4, 10)"
            },
            {
                "User": "Record that John Doe, StuID 1004, played 'RNG Stone' for 5 hours.",
                "Answer": "INSERT INTO Plays_Games (StuID, GameID, Hours_Played) VALUES (1004, 1, 5)"
            },
            {
                "User": "Add a new sport 'Basketball' for student Shiela Jones with 3 hours per week, 10 games played, and not on scholarship.",
                "Answer": "INSERT INTO SportsInfo (StuID, SportName, HoursPerWeek, GamesPlayed, OnScholarship) VALUES (1003, 'Basketball', 3, 10, 'N')"
            },
            {
                "User": "Create a new table for majors with columns for MajorID, MajorName, and DepartmentHead.",
                "Answer": "CREATE TABLE Majors (MajorID number PRIMARY KEY, MajorName text, DepartmentHead text)"
            },
            {
                "User": "Add a column 'Team' to the SportsInfo table to indicate the sports team the student is part of.",
                "Answer": "ALTER TABLE SportsInfo ADD Team text"
            },
            {
                "User": "Update Tracy Kim's major to 602 and change her advisor to 7789.",
                "Answer": "UPDATE Student SET Major = 602, Advisor = 7789 WHERE StuID = 1002"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 288,
        "db": "game_1",
        "interaction": [
            {
                "User": "Add a new student named John Doe with StuID 1050, age 20, sex M, major 601, advisor 7712, and city code NY.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1050, 'Doe', 'John', 20, 'M', 601, 7712, 'NY')"
            },
            {
                "User": "Update the major for student Linda Smith to 605.",
                "Answer": "UPDATE Student SET Major = 605 WHERE Fname = 'Linda' AND LName = 'Smith'"
            },
            {
                "User": "Create a new table for student hobbies with columns for StuID, HName for hobby name, and HHours for hours spent per week.",
                "Answer": "CREATE TABLE Student_Hobbies (StuID number, HName text, HHours number, PRIMARY KEY (StuID, HName))"
            },
            {
                "User": "Add a new column to the SportsInfo table to track the position the student plays in the sport.",
                "Answer": "ALTER TABLE SportsInfo ADD Position text"
            },
            {
                "User": "Record that student Tracy Kim plays the position of Forward in Football.",
                "Answer": "UPDATE SportsInfo SET Position = 'Forward' WHERE StuID = (SELECT StuID FROM Student WHERE LName = 'Kim' AND Fname = 'Tracy') AND SportName = 'Football'"
            },
            {
                "User": "Insert data for a student named Alice Green with StuID 1055, who spends 3 hours per week on Chess and 5 hours on Painting.",
                "Answer": [
                    "INSERT INTO Student (StuID, LName, Fname) VALUES (1055, 'Green', 'Alice');",
                    "INSERT INTO Student_Hobbies (StuID, HName, HHours) VALUES (1055, 'Chess', 3), (1055, 'Painting', 5);"
                ]
            },
            {
                "User": "What are the names of the video games played by students on a scholarship?",
                "Answer": "SELECT GName FROM Video_Games WHERE GameID IN (SELECT GameID FROM Plays_Games WHERE StuID IN (SELECT StuID FROM SportsInfo WHERE OnScholarship = 'Y'))"
            },
            {
                "User": "Increase the Hours_Played by 5 hours for all games played by Linda Smith.",
                "Answer": "UPDATE Plays_Games SET Hours_Played = Hours_Played + 5 WHERE StuID = (SELECT StuID FROM Student WHERE Fname = 'Linda' AND LName = 'Smith')"
            },
            {
                "User": "Delete the record of the student who has StuID 1003 from the Plays_Games table.",
                "Answer": "DELETE FROM Plays_Games WHERE StuID = 1003"
            },
            {
                "User": "How many students are majoring in 600 and are from the city code BAL?",
                "Answer": "SELECT COUNT(*) FROM Student WHERE Major = 600 AND city_code = 'BAL'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 289,
        "db": "phone_1",
        "interaction": [
            {
                "User": "Add a new chip model called 'Z1 Ultra' launched in 2021 with 6144 MiB of RAM, 128000 MiB of ROM, 2 Nano SIM slots, WiFi 6 support, and Bluetooth 5.1.",
                "Answer": "INSERT INTO chip_model (Model_name, Launch_year, RAM_MiB, ROM_MiB, Slots, WiFi, Bluetooth) VALUES ('Z1 Ultra', 2021, 6144, 128000, '2 Nano SIM', 'Yes', 'Yes')"
            },
            {
                "User": "Update the 'X5 high end' model to have WiFi support.",
                "Answer": "UPDATE chip_model SET WiFi = 'Yes' WHERE Model_name = 'X5 high end'"
            },
            {
                "User": "Create a new table for storing user reviews with columns for review id, phone hardware model name, review text, and rating out of 5.",
                "Answer": "CREATE TABLE user_reviews (Review_id integer PRIMARY KEY, Hardware_Model_name text, Review_text text, Rating integer CHECK(Rating >= 1 AND Rating <= 5))"
            },
            {
                "User": "Add a new screen mode with graphics mode 8, 100x40 char cells, 800x320 pixels, 16 hardware colours, 40 used kb, map '4000-9FFF', and type 'Text'.",
                "Answer": "INSERT INTO screen_mode (Graphics_mode, Char_cells, Pixels, Hardware_colours, used_kb, map, Type) VALUES (8, '100 × 40', '800 × 320', 16, 40, '4000–9FFF', 'Text')"
            },
            {
                "User": "Alter the phone table to add a new column named 'Release_Year' to store the year each phone model was released.",
                "Answer": "ALTER TABLE phone ADD COLUMN Release_Year integer"
            },
            {
                "User": "Insert a new phone record for 'Samsung Electronics' company, model name 'Galaxy S21', with full accreditation, joyn hot fixes level, approved date 'Approved (awarded 20.01.21)', chip model 'Z1 Ultra', screen mode '4', and release year 2021.",
                "Answer": "INSERT INTO phone (Company_name, Hardware_Model_name, Accreditation_type, Accreditation_level, Date, chip_model, screen_mode, Release_Year) VALUES ('Samsung Electronics', 'Galaxy S21', 'Full', 'joyn Hot Fixes', 'Approved (awarded 20.01.21)', 'Z1 Ultra', '4', 2021)"
            },
            {
                "User": "Update all phones with the 'X5' chip model to use the 'X5 high end' model instead.",
                "Answer": "UPDATE phone SET chip_model = 'X5 high end' WHERE chip_model = 'X5'"
            },
            {
                "User": "How many phones have been released after the year 2015?",
                "Answer": "SELECT count ( * ) FROM phone WHERE Release_Year > 2015"
            },
            {
                "User": "What is the average rating of the phone model 'Galaxy S21' in user reviews?",
                "Answer": "SELECT AVG(Rating) FROM user_reviews WHERE Hardware_Model_name = 'Galaxy S21'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 290,
        "db": "phone_1",
        "interaction": [
            {
                "User": "Add a new chip model called 'X7 Power' launched in 2021 with 128 MiB RAM, 256 MiB ROM, 2CFII slots, WiFi and Bluetooth support.",
                "Answer": "INSERT INTO chip_model (Model_name, Launch_year, RAM_MiB, ROM_MiB, Slots, WiFi, Bluetooth) VALUES ('X7 Power', 2021, 128, 256, '2CFII', 'Yes', 'Yes')"
            },
            {
                "User": "Update the accreditation level of 'LG-P760' to 'joyn Blackbird'.",
                "Answer": "UPDATE phone SET Accreditation_level = 'joyn Blackbird' WHERE Hardware_Model_name = 'LG-P760'"
            },
            {
                "User": "Create a new table to record customer feedback with fields for feedback ID, phone model, customer name, rating out of 5, and comments.",
                "Answer": "CREATE TABLE customer_feedback (Feedback_id INTEGER PRIMARY KEY, Phone_model TEXT, Customer_name TEXT, Rating INTEGER, Comments TEXT)"
            },
            {
                "User": "Add a new column to the 'phone' table to store the release year of the phone model.",
                "Answer": "ALTER TABLE phone ADD COLUMN Release_year INTEGER"
            },
            {
                "User": "Insert a customer feedback for the 'XPERIA T, XPERIA J' model by customer 'John Doe' with a rating of 4 and a comment 'Great performance but average battery life'.",
                "Answer": "INSERT INTO customer_feedback (Phone_model, Customer_name, Rating, Comments) VALUES ('XPERIA T, XPERIA J', 'John Doe', 4, 'Great performance but average battery life')"
            },
            {
                "User": "Change the graphics mode of screen mode with Graphics_mode 0 to support 16 hardware colours.",
                "Answer": "UPDATE screen_mode SET Hardware_colours = 16 WHERE Graphics_mode = 0"
            },
            {
                "User": "List all the phone models that have a chip with Bluetooth support.",
                "Answer": "SELECT p.Hardware_Model_name FROM phone AS p JOIN chip_model AS c ON p.chip_model = c.Model_name WHERE c.Bluetooth = 'Yes'"
            },
            {
                "User": "Delete the chip model 'X3 Basic' from the database.",
                "Answer": "DELETE FROM chip_model WHERE Model_name = 'X3 Basic'"
            },
            {
                "User": "How many phone models were accredited in 2012?",
                "Answer": "SELECT count(*) FROM phone WHERE Date LIKE '%2012%'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 291,
        "db": "swimming",
        "interaction": [
            {
                "User": "Can we add a new swimmer to the database?",
                "Answer": "INSERT INTO swimmer (ID, name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700, Time) VALUES (9, 'Michael Phelps', 'USA', 50.45, '1:45.32', '2:40.82', '3:36.33', '4:32.84', '5:29.12', '6:25.68', '7:20.91')"
            },
            {
                "User": "I want to update the capacity of 'Nou Mestalla' stadium to 80000.",
                "Answer": "UPDATE stadium SET Capacity = 80000 WHERE name = 'Nou Mestalla'"
            },
            {
                "User": "How many swimmers do we have from 'USA'?",
                "Answer": "SELECT COUNT(*) FROM swimmer WHERE Nationality = 'USA'"
            },
            {
                "User": "Let's create a new table for coaches, including ID, name, and nationality.",
                "Answer": "CREATE TABLE coaches (ID number PRIMARY KEY, name text, Nationality text)"
            },
            {
                "User": "Add a new column 'coach_ID' to the swimmer table to reference their coaches.",
                "Answer": "ALTER TABLE swimmer ADD COLUMN coach_ID number"
            },
            {
                "User": "Insert a new coach into the coaches table with ID 1, name 'Bob Bowman', and nationality 'USA'.",
                "Answer": "INSERT INTO coaches (ID, name, Nationality) VALUES (1, 'Bob Bowman', 'USA')"
            },
            {
                "User": "Link swimmer 'Michael Phelps' with his coach using the coach ID.",
                "Answer": "UPDATE swimmer SET coach_ID = 1 WHERE name = 'Michael Phelps'"
            },
            {
                "User": "Create a new event for the year 2023 in the 'Gazprom Arena' stadium.",
                "Answer": "INSERT INTO event (Name, Stadium_ID, Year) VALUES ('International Swim Meet', 2, '2023')"
            },
            {
                "User": "Can you show me the list of events that will take place in 'Russia'?",
                "Answer": "SELECT e.Name, e.Year FROM event e JOIN stadium s ON e.Stadium_ID = s.ID WHERE s.Country = 'Russia'"
            },
            {
                "User": "Let's add a result for Michael Phelps in the new event with the result 'Win'.",
                "Answer": "INSERT INTO record (ID, Result, Swimmer_ID, Event_ID) VALUES (14, 'Win', 9, 4)"
            },
            {
                "User": "Can we see which swimmers have a coach assigned?",
                "Answer": "SELECT s.name, c.name AS coach_name FROM swimmer s JOIN coaches c ON s.coach_ID = c.ID"
            },
            {
                "User": "I'd like to increase the capacity of all stadiums by 10%.",
                "Answer": "UPDATE stadium SET Capacity = Capacity * 1.1"
            },
            {
                "User": "What is the new average capacity of the stadiums after the increase?",
                "Answer": "SELECT AVG(Capacity) FROM stadium"
            },
            {
                "User": "Add a new record column 'time_seconds' to store the result time in seconds.",
                "Answer": "ALTER TABLE record ADD COLUMN time_seconds number"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 292,
        "db": "swimming",
        "interaction": [
            {
                "User": "Add a new swimmer named 'Michael Phelps' from 'USA' with the following times: 100m in 50.45 seconds, 200m in 1:45.32, 300m in 2:40.82, 400m in 3:38.46, 500m in 4:32.72, 600m in 5:25.48, 700m in 6:12.96.",
                "Answer": "INSERT INTO swimmer (name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700) VALUES ('Michael Phelps', 'USA', 50.45, '1:45.32', '2:40.82', '3:38.46', '4:32.72', '5:25.48', '6:12.96')"
            },
            {
                "User": "Update the city and country of the 'Nou Mestalla' stadium to 'Madrid' and 'Spain' respectively.",
                "Answer": "UPDATE stadium SET City = 'Madrid', Country = 'Spain' WHERE name = 'Nou Mestalla'"
            },
            {
                "User": "Create a new table to log the training sessions of swimmers with columns for ID, Swimmer_ID, Date, Duration, and Focus_Area.",
                "Answer": "CREATE TABLE training_log (ID number PRIMARY KEY, Swimmer_ID number, Date text, Duration number, Focus_Area text)"
            },
            {
                "User": "Add a column 'Coach' to the swimmer table to keep track of each swimmer's coach's name.",
                "Answer": "ALTER TABLE swimmer ADD Coach text"
            },
            {
                "User": "Record a new event called 'European Championships' held at stadium with ID 3 in the year 2021.",
                "Answer": "INSERT INTO event (Name, Stadium_ID, Year) VALUES ('European Championships', 3, '2021')"
            },
            {
                "User": "Insert a new record for swimmer ID 7 with the result 'Win' in the event ID 2.",
                "Answer": "INSERT INTO record (Result, Swimmer_ID, Event_ID) VALUES ('Win', 7, 2)"
            },
            {
                "User": "Change the result of swimmer ID 1 for event ID 1 from 'NC' to 'Second Place'.",
                "Answer": "UPDATE record SET Result = 'Second Place' WHERE Swimmer_ID = 1 AND Event_ID = 1"
            },
            {
                "User": "Add a new column to the stadium table to indicate whether it has an indoor pool with a boolean type.",
                "Answer": "ALTER TABLE stadium ADD Indoor_Pool boolean"
            },
            {
                "User": "Log a new training session for swimmer ID 4, dated '2023-03-15', with a duration of 120 minutes and a focus on 'Endurance'.",
                "Answer": "INSERT INTO training_log (Swimmer_ID, Date, Duration, Focus_Area) VALUES (4, '2023-03-15', 120, 'Endurance')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 293,
        "db": "aircraft",
        "interaction": [
            {
                "User": "Can we add a new pilot named 'Amelia Earhart', aged 39, Pilot_Id is 14?",
                "Answer": "INSERT INTO pilot (Pilot_Id, Name, Age) VALUES (14, 'Amelia Earhart', 39)"
            },
            {
                "User": "How many pilots are older than 25?",
                "Answer": "SELECT COUNT(*) FROM pilot WHERE Age > 25"
            },
            {
                "User": "Increase the age of all pilots by 1 year.",
                "Answer": "UPDATE pilot SET Age = Age + 1"
            },
            {
                "User": "Create a table to track maintenance schedules for each aircraft.",
                "Answer": "CREATE TABLE maintenance_schedule (Aircraft_ID number, Maintenance_Date text, Description text, PRIMARY KEY (Aircraft_ID, Maintenance_Date))"
            },
            {
                "User": "Schedule a maintenance for the Robinson R-22 on April 15, 2023.",
                "Answer": "INSERT INTO maintenance_schedule (Aircraft_ID, Maintenance_Date, Description) VALUES (1, 'April 15, 2023', 'Annual inspection')"
            },
            {
                "User": "Add a column to track the pilot's country of origin.",
                "Answer": "ALTER TABLE pilot ADD COLUMN Country_of_Origin text"
            },
            {
                "User": "Set the country of origin for Prof. Zackery Collins to 'USA'.",
                "Answer": "UPDATE pilot SET Country_of_Origin = 'USA' WHERE Pilot_Id = 1"
            },
            {
                "User": "List all aircraft with a max gross weight greater than 10,000 lb.",
                "Answer": "SELECT * FROM aircraft WHERE Max_Gross_Weight > '10,000 lb'"
            },
            {
                "User": "What is the total disk area of all helicopters combined?",
                "Answer": "SELECT SUM(CAST(REPLACE(Total_disk_area, ' ft²', '') AS number)) FROM aircraft"
            },
            {
                "User": "Create a new table to record the details of the airports' runways.",
                "Answer": "CREATE TABLE runway_details (Runway_ID number, Airport_ID number, Runway_Length text, Runway_Width text, Surface_Type text, PRIMARY KEY (Runway_ID))"
            },
            {
                "User": "Add a runway to London Heathrow with a length of 3902 meters and width of 50 meters with an asphalt surface.",
                "Answer": "INSERT INTO runway_details (Runway_ID, Airport_ID, Runway_Length, Runway_Width, Surface_Type) VALUES (1, 1, '3902 m', '50 m', 'Asphalt')"
            },
            {
                "User": "Record a new match that took place in 'Monaco, Monte Carlo' with the fastest qualifying by 'Amelia Earhart'.",
                "Answer": "INSERT INTO match (Location, Country, Date, Fastest_Qualifying) VALUES ('Monaco, Monte Carlo', 'Monaco', 'June 12-13', 'Amelia Earhart')"
            },
            {
                "User": "Link the aircraft 'Bell 206B3 JetRanger' with the airport 'London Gatwick'.",
                "Answer": "INSERT INTO airport_aircraft (Airport_ID, Aircraft_ID) VALUES (2, 2)"
            },
            {
                "User": "Update the total passengers for London Heathrow to 68000000.",
                "Answer": "UPDATE airport SET Total_Passengers = 68000000 WHERE Airport_ID = 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 294,
        "db": "aircraft",
        "interaction": [
            {
                "User": "Add a new pilot named John Doe, aged 34, Pilot_Id is 13.",
                "Answer": "INSERT INTO pilot (Pilot_Id, Name, Age) VALUES (13, 'John Doe', 34)"
            },
            {
                "User": "Update the description of the aircraft with ID 2 to 'Updated turboshaft utility helicopter'.",
                "Answer": "UPDATE aircraft SET Description = 'Updated turboshaft utility helicopter' WHERE Aircraft_ID = 2"
            },
            {
                "User": "Create a new table for maintenance records with fields for record ID, aircraft ID, date, and description.",
                "Answer": "CREATE TABLE maintenance_records (Record_ID number PRIMARY KEY, Aircraft_ID number, Date text, Description text)"
            },
            {
                "User": "Add a column for pilot license number to the pilot table.",
                "Answer": "ALTER TABLE pilot ADD COLUMN License_Number text"
            },
            {
                "User": "Insert a maintenance record for aircraft ID 3 with the description 'Routine engine check' on '2023-04-01'.",
                "Answer": "INSERT INTO maintenance_records (Aircraft_ID, Date, Description) VALUES (3, '2023-04-01', 'Routine engine check')"
            },
            {
                "User": "Change the total passengers for London Heathrow airport to 68000000.",
                "Answer": "UPDATE airport SET Total_Passengers = 68000000 WHERE Airport_Name = 'London Heathrow'"
            },
            {
                "User": "Link the newly added pilot John Doe to aircraft ID 1 in the airport_aircraft table.",
                "Answer": "INSERT INTO airport_aircraft (Airport_ID, Aircraft_ID) VALUES ((SELECT Pilot_Id FROM pilot WHERE Name = 'John Doe'), 1)"
            },
            {
                "User": "Record a new match that took place at 'New York JFK' in the United States on '2023-05-01' with the fastest qualifying pilot as John Doe.",
                "Answer": "INSERT INTO match (Location, Country, Date, Fastest_Qualifying) VALUES ('New York JFK', 'United States', '2023-05-01', (SELECT Pilot_Id FROM pilot WHERE Name = 'John Doe'))"
            },
            {
                "User": "Increase the age of all pilots by 1 year.",
                "Answer": "UPDATE pilot SET Age = Age + 1"
            },
            {
                "User": "Create a new table to track pilot salaries with columns for pilot ID and salary.",
                "Answer": "CREATE TABLE pilot_salaries (Pilot_ID number PRIMARY KEY, Salary number)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 295,
        "db": "student_assessment",
        "interaction": [
            {
                "User": "Add a new student with id 142, named 'Sarah'.",
                "Answer": "INSERT INTO Students (student_id, student_details) VALUES (142, 'Sarah');"
            },
            {
                "User": "Register the new student Sarah for the English course.",
                "Answer": "INSERT INTO Student_Course_Registrations (student_id, course_id, registration_date) VALUES (142, '302', CURRENT_TIMESTAMP);"
            },
            {
                "User": "Update the email address for the person with login id 'pgub' to 'shannon.senger@example.com'.",
                "Answer": "UPDATE People SET email_address = 'shannon.senger@example.com' WHERE login_name = 'pgub';"
            },
            {
                "User": "Create a new table to track the instructors for each course with instructor_id, course_id, and full_name.",
                "Answer": "CREATE TABLE Course_Instructors (instructor_id number PRIMARY KEY, course_id text, full_name text);"
            },
            {
                "User": "Insert instructor details for the statistics course with instructor id 501 and name 'Dr. Smith'.",
                "Answer": "INSERT INTO Course_Instructors (instructor_id, course_id, full_name) VALUES (501, '301', 'Dr. Smith');"
            },
            {
                "User": "Add a new column 'phone_number' to the People table to store their contact number.",
                "Answer": "ALTER TABLE People ADD COLUMN phone_number text;"
            },
            {
                "User": "Set the phone number for person id 121 to '(555)555-1234'.",
                "Answer": "UPDATE People SET phone_number = '(555)555-1234' WHERE person_id = 121;"
            },
            {
                "User": "Create a new table to log the login activities of users with fields for log_id, person_id, and login_timestamp.",
                "Answer": "CREATE TABLE Login_Activities (log_id number PRIMARY KEY, person_id number, login_timestamp time);"
            },
            {
                "User": "Log a new entry for person id 111 with the current timestamp.",
                "Answer": "INSERT INTO Login_Activities (log_id, person_id, login_timestamp) VALUES (1, 111, CURRENT_TIMESTAMP);"
            },
            {
                "User": "Mark candidate id 131 as 'Pass' in the Candidate_Assessments table.",
                "Answer": "UPDATE Candidate_Assessments SET asessment_outcome_code = 'Pass' WHERE candidate_id = 131;"
            },
            {
                "User": "Add a new address for '123 Main Street, Anytown, AT 12345' to the Addresses table.",
                "Answer": "INSERT INTO Addresses (address_id, line_1, city, zip_postcode, state_province_county, country) VALUES (33, '123 Main Street', 'Anytown', '12345', 'AT', 'USA');"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 296,
        "db": "student_assessment",
        "interaction": [
            {
                "User": "How many students are there?",
                "Answer": "SELECT count(DISTINCT student_id) FROM Student_Course_Attendance"
            },
            {
                "User": "And the amount of courses?",
                "Answer": "SELECT count(DISTINCT course_id) FROM Courses"
            },
            {
                "User": "And how many courses did student 171 take?",
                "Answer": "SELECT count(*) FROM Student_Course_Attendance WHERE student_id = 171"
            },
            {
                "User": "Can we add a new course called 'Data Science' with course_id '405'?",
                "Answer": "INSERT INTO Courses (course_id, course_name) VALUES ('405', 'Data Science')"
            },
            {
                "User": "I want to update Martin's email to 'martin.newemail@example.com'.",
                "Answer": "UPDATE People SET email_address = 'martin.newemail@example.com' WHERE first_name = 'Martin'"
            },
            {
                "User": "Can we create a new table to track the professors with columns 'professor_id', 'name', and 'department'?",
                "Answer": "CREATE TABLE Professors (professor_id number PRIMARY KEY, name text, department text)"
            },
            {
                "User": "Let's insert a new professor named 'John Smith' in the 'Mathematics' department with id '200'.",
                "Answer": "INSERT INTO Professors (professor_id, name, department) VALUES (200, 'John Smith', 'Mathematics')"
            },
            {
                "User": "I want to add a new column 'phone_number' to the People table to store their phone numbers.",
                "Answer": "ALTER TABLE People ADD COLUMN phone_number text"
            },
            {
                "User": "Please update the phone number of 'Shannon Senger' to '01955267799'.",
                "Answer": "UPDATE People SET phone_number = '01955267799' WHERE first_name = 'Shannon' AND last_name = 'Senger'"
            },
            {
                "User": "Let's add a student with id '132', named 'Alice' into the Students table.",
                "Answer": "INSERT INTO Students (student_id, student_details) VALUES (132, 'Alice')"
            },
            {
                "User": "Can we enroll the new student 'Alice' to the 'Data Science' course?",
                "Answer": "INSERT INTO Student_Course_Registrations (student_id, course_id, registration_date) VALUES (132, '304', CURRENT_TIMESTAMP)"
            },
            {
                "User": "I want to change the assessment outcome code for candidate 131 to 'Pass'.",
                "Answer": "UPDATE Candidate_Assessments SET asessment_outcome_code = 'Pass' WHERE candidate_id = 131"
            },
            {
                "User": "Could you add a new address record for the 'Main Street 123, New York, NY, USA'?",
                "Answer": "INSERT INTO Addresses (line_1, city, state_province_county, country) VALUES ('Main Street 123', 'New York', 'NY', 'USA')"
            },
            {
                "User": "Update the address record for person_id 111 to the new address_id 30.",
                "Answer": "UPDATE People_Addresses SET address_id = 30 WHERE person_id = 111"
            },
            {
                "User": "Let's create a new table 'Course_Materials' with columns 'course_id', 'material_id', 'material_name', and 'material_url'.",
                "Answer": "CREATE TABLE Course_Materials (course_id number, material_id number PRIMARY KEY, material_name text, material_url text)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 297,
        "db": "icfp_1",
        "interaction": [
            {
                "User": "Can we add a new table for tracking the conferences where papers are presented?",
                "Answer": "CREATE TABLE Conferences (confID number PRIMARY KEY, name text, year number, location text);"
            },
            {
                "User": "Please insert a record for the 'SIGPLAN Symposium' that took place in 2021 in Boston.",
                "Answer": "INSERT INTO Conferences (confID, name, year, location) VALUES (3000, 'SIGPLAN Symposium', 2021, 'Boston');"
            },
            {
                "User": "Can you add a new column to track the number of citations for each paper?",
                "Answer": "ALTER TABLE Papers ADD COLUMN citations number;"
            },
            {
                "User": "Update the citation count for the paper with ID 200 to 150.",
                "Answer": "UPDATE Papers SET citations = 150 WHERE paperID = 200;"
            },
            {
                "User": "Let's create a relationship between papers and conferences. Can we add a new table for this?",
                "Answer": "CREATE TABLE PaperConferences (paperID number, confID number, FOREIGN KEY (paperID) REFERENCES Papers(paperID), FOREIGN KEY (confID) REFERENCES Conferences(confID));"
            },
            {
                "User": "Link the paper 'Just do it: Simple Monadic Equational Reasoning' to the 'SIGPLAN Symposium'.",
                "Answer": "INSERT INTO PaperConferences (paperID, confID) VALUES (200, 3000);"
            },
            {
                "User": "I want to add a new author named 'Alice Smith' from 'University of Cambridge'.",
                "Answer": [
                    "INSERT INTO Authors (lname, fname) VALUES ('Smith', 'Alice');",
                    "INSERT INTO Inst (name, country) VALUES ('University of Cambridge', 'UK');"
                ]
            },
            {
                "User": "Now, update the institution for 'Alice Smith' to 'University of Cambridge'.",
                "Answer": "UPDATE Authorship SET instID = 1030 WHERE authID = (SELECT authID FROM Authors WHERE lname = 'Smith' AND fname = 'Alice');"
            },
            {
                "User": "How many papers were published by authors from the 'USA'?",
                "Answer": "SELECT COUNT(DISTINCT t3.paperID) FROM Authors AS t1 JOIN Authorship AS t2 ON t1.authID = t2.authID JOIN Papers AS t3 ON t2.paperID = t3.paperID JOIN Inst AS t4 ON t2.instID = t4.instID WHERE t4.country = 'USA';"
            },
            {
                "User": "Can we see a list of all papers and their corresponding conference names?",
                "Answer": "SELECT t1.title, t2.name FROM Papers AS t1 JOIN PaperConferences AS t3 ON t1.paperID = t3.paperID JOIN Conferences AS t2 ON t3.confID = t2.confID;"
            },
            {
                "User": "For the 'SIGPLAN Symposium', add a new column to track the session number for each paper.",
                "Answer": "ALTER TABLE PaperConferences ADD COLUMN sessionNumber number;"
            },
            {
                "User": "Assign session number 5 to the paper with ID 200 for the 'SIGPLAN Symposium'.",
                "Answer": "UPDATE PaperConferences SET sessionNumber = 5 WHERE paperID = 200 AND confID = 3000;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 298,
        "db": "formula_1",
        "interaction": [
            {
                "User": "Can you register a new circuit in the database with the name 'Newtown International Circuit' located in 'Newtown' country 'Narnia'?",
                "Answer": "INSERT INTO circuits (circuitRef, name, location, country, lat, lng, alt, url) VALUES ('newtown', 'Newtown International Circuit', 'Newtown', 'Narnia', 0, 0, '0', 'http://en.wikipedia.org/wiki/Newtown_International_Circuit')"
            },
            {
                "User": "A new race called 'Narnia Grand Prix' will take place this year, can you add it to the races table?",
                "Answer": "INSERT INTO races (year, round, circuitId, name, date, time, url) VALUES (2023, 1, (SELECT circuitId FROM circuits WHERE name = 'Newtown International Circuit'), 'Narnia Grand Prix', '2023-07-07', '14:00:00', 'http://en.wikipedia.org/wiki/Narnia_Grand_Prix')"
            },
            {
                "User": "I want to update the nationality of the constructor 'McLaren' to 'International'.",
                "Answer": "UPDATE constructors SET nationality = 'International' WHERE name = 'McLaren'"
            },
            {
                "User": "Could you add a column 'email' to the drivers table to store their email addresses?",
                "Answer": "ALTER TABLE drivers ADD COLUMN email text"
            },
            {
                "User": "Please insert the email address 'lewis.hamilton@example.com' for the driver Lewis Hamilton.",
                "Answer": "UPDATE drivers SET email = 'lewis.hamilton@example.com' WHERE forename = 'Lewis' AND surname = 'Hamilton'"
            },
            {
                "User": "Can you create a new table 'sponsors' with columns 'sponsorId', 'name', and 'industry'?",
                "Answer": "CREATE TABLE sponsors (sponsorId number PRIMARY KEY, name text, industry text)"
            },
            {
                "User": "Add 'Red Bull' as a sponsor in the 'Energy Drink' industry.",
                "Answer": "INSERT INTO sponsors (sponsorId, name, industry) VALUES (1, 'Red Bull', 'Energy Drink')"
            },
            {
                "User": "Create a relationship between drivers and sponsors by adding a 'sponsorId' column in the drivers table.",
                "Answer": "ALTER TABLE drivers ADD COLUMN sponsorId number"
            },
            {
                "User": "Link driver Lewis Hamilton with the sponsor 'Red Bull'.",
                "Answer": "UPDATE drivers SET sponsorId = (SELECT sponsorId FROM sponsors WHERE name = 'Red Bull') WHERE forename = 'Lewis' AND surname = 'Hamilton'"
            },
            {
                "User": "Can you create a new table to track the 'driver of the day' for each race with columns 'raceId', 'driverId', and 'date'?",
                "Answer": "CREATE TABLE driver_of_the_day (raceId number, driverId number, date text, PRIMARY KEY (raceId, driverId))"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 299,
        "db": "formula_1",
        "interaction": [
            {
                "User": "What are the driver's names?",
                "Answer": "SELECT forename, surname FROM drivers"
            },
            {
                "User": "How many of them participated in more than 5 races?",
                "Answer": "SELECT COUNT(*) FROM (SELECT T1.driverId FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId GROUP BY T1.driverId HAVING COUNT(*) > 5)"
            },
            {
                "User": "Can we add a new race to the database for the year 2023?",
                "Answer": "INSERT INTO races (year, round, circuitId, name, date, time) VALUES (2023, 1, 1, 'New Year Grand Prix', '2023-03-29', '12:00:00')"
            },
            {
                "User": "Update the nationality of the constructor named 'McLaren' to 'International'.",
                "Answer": "UPDATE constructors SET nationality = 'International' WHERE name = 'McLaren'"
            },
            {
                "User": "Create a new table to track the sponsors of each team.",
                "Answer": "CREATE TABLE team_sponsors (sponsorId number PRIMARY KEY, constructorId number, sponsorName text, sponsorValue number)"
            },
            {
                "User": "Add a new sponsor for the team 'Williams' with a sponsorship deal worth 5 million.",
                "Answer": "INSERT INTO team_sponsors (sponsorId, constructorId, sponsorName, sponsorValue) VALUES (1, 3, 'New Sponsor', 5000000)"
            },
            {
                "User": "Alter the 'drivers' table to include a column for 'email' addresses.",
                "Answer": "ALTER TABLE drivers ADD COLUMN email text"
            },
            {
                "User": "Set the email address for driver Lewis Hamilton as 'lewis.hamilton@example.com'.",
                "Answer": "UPDATE drivers SET email = 'lewis.hamilton@example.com' WHERE driverRef = 'hamilton'"
            },
            {
                "User": "How many circuits are located in Australia?",
                "Answer": "SELECT COUNT(*) FROM circuits WHERE country = 'Australia'"
            },
            {
                "User": "Create a view that shows the race name and the winning constructor for each race.",
                "Answer": "CREATE VIEW race_winners AS SELECT T1.name AS race_name, T3.name AS constructor_name FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId JOIN constructors AS T3 ON T2.constructorId = T3.constructorId WHERE T2.positionOrder = 1"
            },
            {
                "User": "List the sponsors whose value is more than 2 million.",
                "Answer": "SELECT sponsorName FROM team_sponsors WHERE sponsorValue > 2000000"
            },
            {
                "User": "Can we track the engine used by each constructor? We need to add a new column for it.",
                "Answer": "ALTER TABLE constructors ADD COLUMN engine text"
            },
            {
                "User": "Update the engine for constructor 'McLaren' to 'Mercedes'.",
                "Answer": "UPDATE constructors SET engine = 'Mercedes' WHERE constructorRef = 'mclaren'"
            },
            {
                "User": "How many drivers have won a race in the 2021 season?",
                "Answer": "SELECT COUNT(DISTINCT T2.driverId) FROM races AS T1 JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2021 AND T2.positionOrder = 1"
            },
            {
                "User": "Insert a new status code for drivers who retire due to electric issues.",
                "Answer": "INSERT INTO status (status) VALUES ('Electrical')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 300,
        "db": "station_weather",
        "interaction": [
            {
                "User": "Add a new train called 'Sunset Express' with train number 18234, originating from 'Springfield', destined for 'Shelbyville', departing at '18:30' daily.",
                "Answer": "INSERT INTO train (train_number, name, origin, destination, time, interval) VALUES (18234, 'Sunset Express', 'Springfield', 'Shelbyville', '18:30', 'Daily')"
            },
            {
                "User": "Update the destination of train number 16724 to 'Chennai Central'.",
                "Answer": "UPDATE train SET destination = 'Chennai Central' WHERE train_number = 16724"
            },
            {
                "User": "Create a new table to log train delays with columns for train_id, date, delay_minutes, and reason.",
                "Answer": "CREATE TABLE train_delays (train_id number, date text, delay_minutes number, reason text, PRIMARY KEY (train_id, date))"
            },
            {
                "User": "Log a 15-minute delay for train number 16127 on '2023-04-05' due to 'Signal failure'.",
                "Answer": "INSERT INTO train_delays (train_id, date, delay_minutes, reason) VALUES ((SELECT id FROM train WHERE train_number = 16127), '2023-04-05', 15, 'Signal failure')"
            },
            {
                "User": "Add a column 'capacity' to the train table to record the number of passengers it can carry.",
                "Answer": "ALTER TABLE train ADD COLUMN capacity number"
            },
            {
                "User": "Set the capacity of 'Ananthapuri Express' to 800 passengers.",
                "Answer": "UPDATE train SET capacity = 800 WHERE name = 'Ananthapuri Express'"
            },
            {
                "User": "Create a table to track maintenance schedules for trains with columns for train_id, maintenance_date, and maintenance_type.",
                "Answer": "CREATE TABLE maintenance_schedule (train_id number, maintenance_date text, maintenance_type text, FOREIGN KEY (train_id) REFERENCES train(id))"
            },
            {
                "User": "Schedule a 'full inspection' maintenance for train number 16128 on '2023-05-01'.",
                "Answer": "INSERT INTO maintenance_schedule (train_id, maintenance_date, maintenance_type) VALUES ((SELECT id FROM train WHERE train_number = 16128), '2023-05-01', 'full inspection')"
            },
            {
                "User": "How many trains have a destination of 'Chennai'?",
                "Answer": "SELECT count(*) FROM train WHERE destination = 'Chennai'"
            },
            {
                "User": "Change the service information for station 'Amersham' to include 'High Speed Rail'.",
                "Answer": "UPDATE station SET services = 'Metropolitan line and Chiltern Railways, High Speed Rail' WHERE network_name = 'Amersham'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 301,
        "db": "station_weather",
        "interaction": [
            {
                "User": "Can you add a new train record for the 'Highland Express' running from Edinburgh to Inverness with train number 17234, departing at 10:00 daily?",
                "Answer": "INSERT INTO train (id, train_number, name, origin, destination, time, interval) VALUES (12, 17234, 'Highland Express', 'Edinburgh', 'Inverness', '10:00', 'Daily')"
            },
            {
                "User": "I want to update the arrival time of the 'Ananthapuri Express' to 17:45. Can you do that for me?",
                "Answer": "UPDATE train SET time = '17:45' WHERE name = 'Ananthapuri Express'"
            },
            {
                "User": "There's a new station called 'Lochside' that we need to add to the network, with network name 'Highland Line', services 'ScotRail', and local authority 'Highland'.",
                "Answer": "INSERT INTO station (id, network_name, services, local_authority) VALUES (12, 'Lochside', 'ScotRail', 'Highland')"
            },
            {
                "User": "We need to create a new table to track the maintenance schedules of trains. It should have columns for train_id, start_date, end_date, and description.",
                "Answer": "CREATE TABLE maintenance_schedule (train_id number, start_date text, end_date text, description text, PRIMARY KEY (train_id))"
            },
            {
                "User": "Please add a new column to the 'station' table to indicate whether it has parking facilities. The column name should be 'has_parking' and type should be 'text'.",
                "Answer": "ALTER TABLE station ADD COLUMN has_parking text"
            },
            {
                "User": "Update the 'Lochside' station record to indicate that it has parking facilities available.",
                "Answer": "UPDATE station SET has_parking = 'Yes' WHERE network_name = 'Lochside'"
            },
            {
                "User": "The 'Highland Express' will be undergoing maintenance from April 1st to April 15th. The description of the work is 'Engine overhaul'. Can you add this to the maintenance schedule?",
                "Answer": "INSERT INTO maintenance_schedule (train_id, start_date, end_date, description) VALUES (12, 'April 1', 'April 15', 'Engine overhaul')"
            },
            {
                "User": "Can you show me a list of all trains that have a maintenance schedule planned?",
                "Answer": "SELECT t.name, m.start_date, m.end_date, m.description FROM train t JOIN maintenance_schedule m ON t.id = m.train_id"
            },
            {
                "User": "We need to extend the 'weekly_weather' table to include a new column for 'humidity' as a percentage. Can you add this column?",
                "Answer": "ALTER TABLE weekly_weather ADD COLUMN humidity number"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 302,
        "db": "local_govt_and_lot",
        "interaction": [
            {
                "User": "Can we add a new customer named 'John Doe' with customer ID 18?",
                "Answer": "INSERT INTO Customers (customer_id, customer_details) VALUES (18, 'John Doe')"
            },
            {
                "User": "I need to update the address of property ID 107 to '1234 New Address Blvd, USA'.",
                "Answer": "UPDATE Properties SET property_address = '1234 New Address Blvd, USA' WHERE property_id = 107"
            },
            {
                "User": "Let's create a new table to track maintenance requests with request ID, property ID, description, and request date.",
                "Answer": "CREATE TABLE Maintenance_Requests (request_id number PRIMARY KEY, property_id number, description text, request_date time)"
            },
            {
                "User": "Insert a maintenance request for property ID 108 with request ID 1 and description 'Leaky faucet' on today's date.",
                "Answer": "INSERT INTO Maintenance_Requests (request_id, property_id, description, request_date) VALUES (1, 108, 'Leaky faucet', CURRENT_DATE)"
            },
            {
                "User": "Add a column 'status' to the Maintenance_Requests table to track the status of the requests.",
                "Answer": "ALTER TABLE Maintenance_Requests ADD COLUMN status text"
            },
            {
                "User": "Set the status of the maintenance request with request ID 1 to 'In Progress'.",
                "Answer": "UPDATE Maintenance_Requests SET status = 'In Progress' WHERE request_id = 1"
            },
            {
                "User": "How many properties have had a maintenance request?",
                "Answer": "SELECT COUNT(DISTINCT property_id) FROM Maintenance_Requests"
            },
            {
                "User": "Can we record the last service date for each thing? We need to add a new column to the Things table.",
                "Answer": "ALTER TABLE Things ADD COLUMN last_service_date time"
            },
            {
                "User": "Please record the last service date as '2023-01-15' for the thing with ID 2.",
                "Answer": "UPDATE Things SET last_service_date = '2023-01-15' WHERE thing_id = 2"
            },
            {
                "User": "Create a new table called 'Property_Owners' with owner ID, property ID, owner name, and contact details.",
                "Answer": "CREATE TABLE Property_Owners (owner_id number PRIMARY KEY, property_id number, owner_name text, contact_details text)"
            },
            {
                "User": "Add a new owner with ID 1 for property ID 24 named 'Alice Smith' with contact details '555-1234'.",
                "Answer": "INSERT INTO Property_Owners (owner_id, property_id, owner_name, contact_details) VALUES (1, 24, 'Alice Smith', '555-1234')"
            },
            {
                "User": "We need to track the duration of residency for each resident. Please add a 'duration' column to the Residents table.",
                "Answer": "ALTER TABLE Residents ADD COLUMN duration text"
            },
            {
                "User": "Calculate and update the duration for resident ID 6 as '6 months'.",
                "Answer": "UPDATE Residents SET duration = '6 months' WHERE resident_id = 6"
            },
            {
                "User": "Can we list all the services provided to residents in the last year?",
                "Answer": "SELECT * FROM Residents_Services WHERE date_provided > date('now', '-1 year');"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 303,
        "db": "university_basketball",
        "interaction": [
            {
                "User": "Add a new match record for the team from University of Rhode Island with the following details: Team ID 6, School ID 3, Team Name 'Rhode Island Rams', ACC Regular Season '8-10', ACC Percent '.444', ACC Home '5-3', ACC Road '3-7', All Games '20-13', All Games Percent 0.606, All Home '12-3', All Road '5-7', All Neutral '3-3'.",
                "Answer": "INSERT INTO basketball_match (Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral) VALUES (6, 3, 'Rhode Island Rams', '8-10', '.444', '5-3', '3-7', '20-13', 0.606, '12-3', '5-7', '3-3')"
            },
            {
                "User": "Update the nickname of University of Delaware to 'Blue Hens'.",
                "Answer": "UPDATE university SET Nickname = 'Blue Hens' WHERE School_ID = 1"
            },
            {
                "User": "Create a new table to track the coaches of each basketball team with the following columns: Coach_ID (number), Team_ID (number), Coach_Name (text), Years_Active (number), Championships_Won (number).",
                "Answer": "CREATE TABLE basketball_coaches (Coach_ID number PRIMARY KEY, Team_ID number, Coach_Name text, Years_Active number, Championships_Won number)"
            },
            {
                "User": "Add a column to the university table to include the number of basketball championships won, named 'Basketball_Championships' (number).",
                "Answer": "ALTER TABLE university ADD Basketball_Championships number"
            },
            {
                "User": "Insert a record for the coach of North Carolina with the following details: Coach ID 1, Team ID 1, Coach Name 'Roy Williams', Years Active 15, Championships Won 3.",
                "Answer": "INSERT INTO basketball_coaches (Coach_ID, Team_ID, Coach_Name, Years_Active, Championships_Won) VALUES (1, 1, 'Roy Williams', 15, 3)"
            },
            {
                "User": "Set the number of basketball championships won by 'University of Delaware' to 2 in the updated university table.",
                "Answer": "UPDATE university SET Basketball_Championships = 2 WHERE School = 'University of Delaware'"
            },
            {
                "User": "Find all the teams that have played more than 25 all games.",
                "Answer": "SELECT Team_Name FROM basketball_match WHERE CAST(All_Games AS number) > 25"
            },
            {
                "User": "What is the total enrollment of all universities listed in the database?",
                "Answer": "SELECT SUM(Enrollment) FROM university"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 304,
        "db": "election_representative",
        "interaction": [
            {
                "User": "How many representatives are there in total?",
                "Answer": "SELECT COUNT(*) FROM representative"
            },
            {
                "User": "Add a new representative with ID 8, named Jane Smith from California, Democrat party, born in 1980.",
                "Answer": "INSERT INTO representative (Representative_ID, Name, State, Party, Lifespan) VALUES (8, 'Jane Smith', 'California', 'Democrat', '1980–')"
            },
            {
                "User": "Update the lifespan of Dan Quayle to '1947-2020'.",
                "Answer": "UPDATE representative SET Lifespan = '1947-2020' WHERE Name = 'Dan Quayle'"
            },
            {
                "User": "Create a new table to log changes in the representative data with columns Log_ID, Representative_ID, Change_Description, and Date_of_Change.",
                "Answer": "CREATE TABLE representative_log (Log_ID number PRIMARY KEY, Representative_ID number, Change_Description text, Date_of_Change text)"
            },
            {
                "User": "Add a column 'Email' to the representative table to store their email addresses.",
                "Answer": "ALTER TABLE representative ADD Email text"
            },
            {
                "User": "Insert a log entry for the addition of Jane Smith with Log_ID 1, Representative_ID 8, a description of 'Added new representative', and today's date.",
                "Answer": "INSERT INTO representative_log (Log_ID, Representative_ID, Change_Description, Date_of_Change) VALUES (1, 8, 'Added new representative', CURRENT_DATE)"
            },
            {
                "User": "What is the total number of votes cast in the election of October 1942?",
                "Answer": "SELECT Votes FROM election WHERE Date = 'October 1942'"
            },
            {
                "User": "Add a new election result for Representative_ID 5 on 'November 1950' with 20000 votes, 25 percent of votes, 15 seats, and took place in region 4.",
                "Answer": "INSERT INTO election (Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place) VALUES (6, 5, 'November 1950', 20000, 25, 15, 4)"
            },
            {
                "User": "Increase the number of seats won by the representative with ID 2 in the October 1942 election by 2.",
                "Answer": "UPDATE election SET Seats = Seats + 2 WHERE Representative_ID = 2 AND Date = 'October 1942'"
            },
            {
                "User": "Create a view that shows the representative names along with the election details where the vote percentage was more than 20.",
                "Answer": "CREATE VIEW high_vote_percent AS SELECT r.Name, e.* FROM representative r JOIN election e ON r.Representative_ID = e.Representative_ID WHERE e.Vote_Percent > 20"
            },
            {
                "User": "Add an email for John Quayle as 'john.quayle@senate.gov'.",
                "Answer": "UPDATE representative SET Email = 'john.quayle@senate.gov' WHERE Name = 'John Quayle'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 305,
        "db": "election_representative",
        "interaction": [
            {
                "User": "How many representatives are republicans?",
                "Answer": "SELECT count(*) FROM representative WHERE party = 'Republican'"
            },
            {
                "User": "And democrats?",
                "Answer": "SELECT count(*) FROM representative WHERE party = 'Democratic'"
            },
            {
                "User": "Which representative has the lowest votes?",
                "Answer": "SELECT Representative_ID FROM election ORDER BY Votes ASC LIMIT 1"
            },
            {
                "User": "What party is this representative in?",
                "Answer": "SELECT Party FROM representative WHERE Representative_ID = (SELECT Representative_ID FROM election ORDER BY Votes ASC LIMIT 1)"
            },
            {
                "User": "Can you add a new representative with ID 8, named 'Alex P. Keaton', from 'Ohio', in the 'Independent' party, born in '1967'?",
                "Answer": "INSERT INTO representative (Representative_ID, Name, State, Party, Lifespan) VALUES (8, 'Alex P. Keaton', 'Ohio', 'Independent', '1967–')"
            },
            {
                "User": "Update the party of representative with ID 3 to 'Independent'.",
                "Answer": "UPDATE representative SET Party = 'Independent' WHERE Representative_ID = 3"
            },
            {
                "User": "Create a new table to log the changes in representatives' parties, with columns for the representative's ID, old party, new party, and the date of the change.",
                "Answer": "CREATE TABLE party_change_log (Representative_ID number, Old_Party text, New_Party text, Change_Date text, PRIMARY KEY (Representative_ID, Change_Date))"
            },
            {
                "User": "Log the party change for representative ID 3, from 'Republican' to 'Independent', on '2023-04-01'.",
                "Answer": "INSERT INTO party_change_log (Representative_ID, Old_Party, New_Party, Change_Date) VALUES (3, 'Republican', 'Independent', '2023-04-01')"
            },
            {
                "User": "Add a column 'Email' to the representative table to store their email addresses.",
                "Answer": "ALTER TABLE representative ADD COLUMN Email text"
            },
            {
                "User": "Set the email of representative with ID 2 to 'john.quayle@example.com'.",
                "Answer": "UPDATE representative SET Email = 'john.quayle@example.com' WHERE Representative_ID = 2"
            },
            {
                "User": "Create a table to track the election participation of representatives, including the election ID, representative ID, and a flag indicating if they won.",
                "Answer": "CREATE TABLE election_participation (Election_ID number, Representative_ID number, Won boolean, PRIMARY KEY (Election_ID, Representative_ID))"
            },
            {
                "User": "Insert a record indicating that representative with ID 1 participated in the election with ID 1 and won.",
                "Answer": "INSERT INTO election_participation (Election_ID, Representative_ID, Won) VALUES (1, 1, TRUE)"
            },
            {
                "User": "How many elections did representative with ID 1 participate in and win?",
                "Answer": "SELECT COUNT(*) FROM election_participation WHERE Representative_ID = 1 AND Won = TRUE"
            },
            {
                "User": "Increase the vote count by 500 for the election with ID 2.",
                "Answer": "UPDATE election SET Votes = Votes + 500 WHERE Election_ID = 2"
            },
            {
                "User": "Which representative has participated in the most elections?",
                "Answer": "SELECT Representative_ID FROM election_participation GROUP BY Representative_ID ORDER BY COUNT(*) DESC LIMIT 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 306,
        "db": "railway",
        "interaction": [
            {
                "User": "I want to add a new train with ID 10, Train_Num '12345', Name 'Midnight Express', From 'Gotham', Arrival '23:59', that belongs to Railway_ID 3.",
                "Answer": "INSERT INTO train (Train_ID, Train_Num, Name, 'From', Arrival, Railway_ID) VALUES (10, '12345', 'Midnight Express', 'Gotham', '23:59', 3)"
            },
            {
                "User": "Change the name of the manager with Manager_ID 2 to 'Scott Adams'.",
                "Answer": "UPDATE manager SET Name = 'Scott Adams' WHERE Manager_ID = 2"
            },
            {
                "User": "Create a new table for maintenance records with columns Record_ID (number), Railway_ID (number), Maintenance_Date (text), and Details (text).",
                "Answer": "CREATE TABLE maintenance_records (Record_ID number PRIMARY KEY, Railway_ID number, Maintenance_Date text, Details text)"
            },
            {
                "User": "Add a new column to the railway table to store the year of last maintenance called 'Last_Maintenance_Year' of type text.",
                "Answer": "ALTER TABLE railway ADD COLUMN Last_Maintenance_Year text"
            },
            {
                "User": "Insert a new manager with Manager_ID 8, Name 'Emily Stone', Country 'Canada', Working_year_starts '2020', Age 38, Level 4.",
                "Answer": "INSERT INTO manager (Manager_ID, Name, Country, Working_year_starts, Age, Level) VALUES (8, 'Emily Stone', 'Canada', '2020', 38, 4)"
            },
            {
                "User": "Update the Location of the railway with Railway_ID 1 to 'Newtown'.",
                "Answer": "UPDATE railway SET Location = 'Newtown' WHERE Railway_ID = 1"
            },
            {
                "User": "Delete the train with Train_ID 9.",
                "Answer": "DELETE FROM train WHERE Train_ID = 9"
            },
            {
                "User": "Record a new maintenance for Railway_ID 2 with Record_ID 5, Maintenance_Date '2023-04-01', Details 'Routine check-up'.",
                "Answer": "INSERT INTO maintenance_records (Record_ID, Railway_ID, Maintenance_Date, Details) VALUES (5, 2, '2023-04-01', 'Routine check-up')"
            },
            {
                "User": "What is the latest year any of the railways were built?",
                "Answer": "SELECT MAX(Built) AS Latest_Year FROM railway"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 307,
        "db": "customers_campaigns_ecommerce",
        "interaction": [
            {
                "User": "Can we track the preferred shipping method for customers? We need to add this information to our database.",
                "Answer": "ALTER TABLE Customers ADD COLUMN preferred_shipping_method TEXT"
            },
            {
                "User": "I want to update Wendell's preferred shipping method to 'FedEx'.",
                "Answer": "UPDATE Customers SET preferred_shipping_method = 'FedEx' WHERE customer_name = 'Wendell'"
            },
            {
                "User": "Let's create a new table to log customer interactions, including interaction id, customer id, and interaction details.",
                "Answer": "CREATE TABLE Customer_Interactions (interaction_id NUMBER PRIMARY KEY, customer_id NUMBER, interaction_details TEXT)"
            },
            {
                "User": "Insert a new interaction log where customer id 2 had a phone call regarding a delayed order.",
                "Answer": "INSERT INTO Customer_Interactions (interaction_id, customer_id, interaction_details) VALUES (1, 2, 'Phone call about delayed order')"
            },
            {
                "User": "Can we add a new product category 'Toys' and the product name 'Teddy Bear' to our Products table?",
                "Answer": "INSERT INTO Products (product_id, product_category, product_name) VALUES (16, 'Toys', 'Teddy Bear')"
            },
            {
                "User": "Update the product name from 'Four Seasons' to 'Four Seasons - A Journey' in the Products table.",
                "Answer": "UPDATE Products SET product_name = 'Four Seasons - A Journey' WHERE product_name = 'Four Seasons'"
            },
            {
                "User": "A new mailshot campaign for 'Electronics' category is starting. Add it to the Mailshot_Campaigns table with the name 'Tech Blast', starting today and ending in 30 days.",
                "Answer": "INSERT INTO Mailshot_Campaigns (mailshot_id, product_category, mailshot_name, mailshot_start_date, mailshot_end_date) VALUES (21, 'Electronics', 'Tech Blast', date('now'), date('now', '+30 days'));"
            },
            {
                "User": "We need to record when customers change their addresses. Add 'date_address_changed' column to the Customer_Addresses table.",
                "Answer": "ALTER TABLE Customer_Addresses ADD COLUMN date_address_changed TIME"
            },
            {
                "User": "Customer id 1 has changed their address today. Update the 'date_address_changed' for this customer.",
                "Answer": "UPDATE Customer_Addresses SET date_address_changed = CURRENT_DATE WHERE customer_id = 1"
            },
            {
                "User": "Create a new table to store customer feedback with feedback id, customer id, order id, and feedback text.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id NUMBER PRIMARY KEY, customer_id NUMBER, order_id NUMBER, feedback_text TEXT)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 308,
        "db": "customers_campaigns_ecommerce",
        "interaction": [
            {
                "User": "Show the shipping charge and customer id for customer orders with order status 'Delivered'",
                "Answer": "SELECT order_shipping_charges, customer_id FROM customer_orders WHERE order_status_code = 'Delivered'"
            },
            {
                "User": "Add a new customer with id 16, payment method 'PayPal', name 'Alice', phone '123-456-7890', email 'alice@example.com', and address '123 Wonderland Ave'",
                "Answer": "INSERT INTO Customers (customer_id, payment_method, customer_name, customer_phone, customer_email, customer_address) VALUES (16, 'PayPal', 'Alice', '123-456-7890', 'alice@example.com', '123 Wonderland Ave')"
            },
            {
                "User": "Update the payment method for customer with id 3 to 'PayPal'",
                "Answer": "UPDATE Customers SET payment_method = 'PayPal' WHERE customer_id = 3"
            },
            {
                "User": "Create a new table for storing customer feedback with columns feedback_id, customer_id, feedback_text, and feedback_date",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text, feedback_date time)"
            },
            {
                "User": "Add a feedback_text column to the Customer_Orders table for customers to leave their comments on the orders",
                "Answer": "ALTER TABLE Customer_Orders ADD feedback_text text"
            },
            {
                "User": "Insert a feedback record for customer with id 2, feedback_text 'Great service!', and feedback_date as the current timestamp",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES (1, 2, 'Great service!', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Change the product_name for product with id 1 to 'Premium Coffee Bean'",
                "Answer": "UPDATE Products SET product_name = 'Premium Coffee Bean' WHERE product_id = 1"
            },
            {
                "User": "Insert a new order for customer with id 3, order_status 'Processing', shipping method 'UPS', placed on '2023-04-01 10:00:00' with shipping charges of 15.99",
                "Answer": "INSERT INTO Customer_Orders (order_id, customer_id, order_status_code, shipping_method_code, order_placed_datetime, order_shipping_charges) VALUES (16, 3, 'Processing', 'UPS', '2023-04-01 10:00:00', '15.99')"
            },
            {
                "User": "Link the newly added customer with id 16 to the mailshot with id 3 and set the outcome as 'Interested'",
                "Answer": "INSERT INTO Mailshot_Customers (mailshot_id, customer_id, outcome_code, mailshot_customer_date) VALUES (3, 16, 'Interested', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Create a new table to track inventory for products with columns inventory_id, product_id, quantity_available, and last_updated",
                "Answer": "CREATE TABLE Product_Inventory (inventory_id number PRIMARY KEY, product_id number, quantity_available number, last_updated time)"
            },
            {
                "User": "Add a new product to the Products table with id 16, category 'Clothing', and name 'T-Shirt'",
                "Answer": "INSERT INTO Products (product_id, product_category, product_name) VALUES (16, 'Clothing', 'T-Shirt')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 309,
        "db": "company_1",
        "interaction": [
            {
                "User": "Can we create a new table to track employee bonuses?",
                "Answer": "CREATE TABLE employee_bonus (Ssn number PRIMARY KEY, Bonus_amount number)"
            },
            {
                "User": "Please add a new bonus record for employee with Ssn 123456789 for $5000.",
                "Answer": "INSERT INTO employee_bonus (Ssn, Bonus_amount) VALUES (123456789, 5000)"
            },
            {
                "User": "Can you update the bonus amount to $5500 for the employee with Ssn 123456789?",
                "Answer": "UPDATE employee_bonus SET Bonus_amount = 5500 WHERE Ssn = 123456789"
            },
            {
                "User": "I want to add a new column 'Email' to the employee table. Can you do that?",
                "Answer": "ALTER TABLE employee ADD Email text"
            },
            {
                "User": "Set the email for John B Smith to 'john.smith@company1.com'.",
                "Answer": "UPDATE employee SET Email = 'john.smith@company1.com' WHERE Fname = 'Jonh' AND Minit = 'B' AND Lname = 'Smith'"
            },
            {
                "User": "Can we create a table for tracking department budgets?",
                "Answer": "CREATE TABLE department_budget (Dnumber number PRIMARY KEY, Budget number)"
            },
            {
                "User": "Add a budget record for the Research department with a budget of $75000.",
                "Answer": "INSERT INTO department_budget (Dnumber, Budget) VALUES ((SELECT Dnumber FROM department WHERE Dname = 'Research'), 75000)"
            },
            {
                "User": "Increase the salary of all employees in department 5 by 10%.",
                "Answer": "UPDATE employee SET Salary = Salary * 1.10 WHERE Dno = 5"
            },
            {
                "User": "How many employees received a bonus this year?",
                "Answer": "SELECT count(*) FROM employee_bonus"
            },
            {
                "User": "Can you show me the average bonus amount given to employees?",
                "Answer": "SELECT AVG(Bonus_amount) FROM employee_bonus"
            },
            {
                "User": "Let's create a table to track project managers. What would be the SQL statement for that?",
                "Answer": "CREATE TABLE project_managers (Pnumber number, Mgr_ssn number, Start_date text, PRIMARY KEY (Pnumber))"
            },
            {
                "User": "Assign Franklin T Wong as the manager for ProjectX starting from today.",
                "Answer": "INSERT INTO project_managers (Pnumber, Mgr_ssn, Start_date) VALUES ((SELECT Pnumber FROM project WHERE Pname = 'ProductX'), 333445555, CURRENT_DATE)"
            },
            {
                "User": "How many departments have a location in 'Houston'?",
                "Answer": "SELECT count(*) FROM dept_locations WHERE Dlocation = 'Houston'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 310,
        "db": "company_1",
        "interaction": [
            {
                "User": "Show me all the departments",
                "Answer": "SELECT * FROM department"
            },
            {
                "User": "I want to add a new department called 'Marketing' with department number 10, managed by employee with SSN 453453453 starting from today.",
                "Answer": "INSERT INTO department (Dname, Dnumber, Mgr_ssn, Mgr_start_date) VALUES ('Marketing', 10, 453453453, date('now'));"
            },
            {
                "User": "Change the location of the 'Administration' department to 'Alameda'.",
                "Answer": "UPDATE dept_locations SET Dlocation = 'Alameda' WHERE Dnumber = (SELECT Dnumber FROM department WHERE Dname = 'Administration')"
            },
            {
                "User": "Create a new table to track employee bonuses with columns for SSN, Bonus_Amount, and Bonus_Date.",
                "Answer": "CREATE TABLE employee_bonus (Ssn number PRIMARY KEY, Bonus_Amount number, Bonus_Date text)"
            },
            {
                "User": "Add a bonus of 5000 to employee with SSN 123456789 on the current date.",
                "Answer": "INSERT INTO employee_bonus (Ssn, Bonus_Amount, Bonus_Date) VALUES (123456789, 5000, date('now'))"
            },
            {
                "User": "Increase the salary of all employees in the 'Research' department by 10%.",
                "Answer": "UPDATE employee SET Salary = Salary * 1.10 WHERE Dno = (SELECT Dnumber FROM department WHERE Dname = 'Research')"
            },
            {
                "User": "Add a column 'Email' to the employee table to store their email addresses.",
                "Answer": "ALTER TABLE employee ADD Email text"
            },
            {
                "User": "Set the email of employee John B Smith to 'john.smith@company_1.com'.",
                "Answer": "UPDATE employee SET Email = 'john.smith@company_1.com' WHERE Fname = 'Jonh' AND Minit = 'B' AND Lname = 'Smith'"
            },
            {
                "User": "Create a new table called 'department_budget' to track the annual budget of each department with columns for department number and budget amount.",
                "Answer": "CREATE TABLE department_budget (Dnumber number PRIMARY KEY, Budget_Amount number)"
            },
            {
                "User": "Assign an annual budget of 750000 to the 'Research' department.",
                "Answer": "INSERT INTO department_budget (Dnumber, Budget_Amount) VALUES ((SELECT Dnumber FROM department WHERE Dname = 'Research'), 750000)"
            },
            {
                "User": "Show me the full name and salary of employees who work in the 'Research' department.",
                "Answer": "SELECT Fname, Lname, Salary FROM employee WHERE Dno = (SELECT Dnumber FROM department WHERE Dname = 'Research')"
            },
            {
                "User": "What is the total number of hours worked on project number 3 by all employees?",
                "Answer": "SELECT SUM(Hours) FROM works_on WHERE Pno = 3"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 311,
        "db": "csu_1",
        "interaction": [
            {
                "User": "Add a new campus with ID 24, named 'California State University-Discovery', located in 'Discovery Bay', in 'Contra Costa' county, established in 2021.",
                "Answer": "INSERT INTO Campuses (Id, Campus, Location, County, Year) VALUES (24, 'California State University-Discovery', 'Discovery Bay', 'Contra Costa', 2021)"
            },
            {
                "User": "The campus fee for 'California State University-Discovery' in 2021 was $2500. Add this information to the 'csu_fees' table.",
                "Answer": "INSERT INTO csu_fees (Campus, Year, CampusFee) VALUES (24, 2021, 2500)"
            },
            {
                "User": "Update the total enrollment for campus with ID 1 in the year 1956 to 500 students.",
                "Answer": "UPDATE enrollments SET TotalEnrollment_AY = 500 WHERE Campus = 1 AND Year = 1956"
            },
            {
                "User": "Create a new table 'campus_events' with columns 'EventId' as a number and primary key, 'CampusId' as a number, 'EventName' as text, 'EventDate' as text, and 'Attendees' as number.",
                "Answer": "CREATE TABLE campus_events (EventId number PRIMARY KEY, CampusId number, EventName text, EventDate text, Attendees number)"
            },
            {
                "User": "Insert an event with EventId 101 for campus ID 3, named 'Spring Fest', happening on '2021-04-15', with 300 expected attendees.",
                "Answer": "INSERT INTO campus_events (EventId, CampusId, EventName, EventDate, Attendees) VALUES (101, 3, 'Spring Fest', '2021-04-15', 300)"
            },
            {
                "User": "Add a new column 'InternationalStudents' to the 'enrollments' table to track the number of international students, which is a number type.",
                "Answer": "ALTER TABLE enrollments ADD COLUMN InternationalStudents number"
            },
            {
                "User": "For campus ID 2 in the year 2003, set the number of international students to 150.",
                "Answer": "UPDATE enrollments SET InternationalStudents = 150 WHERE Campus = 2 AND Year = 2003"
            },
            {
                "User": "How many international students were enrolled at campus ID 2 in 2003?",
                "Answer": "SELECT InternationalStudents FROM enrollments WHERE Campus = 2 AND Year = 2003"
            },
            {
                "User": "Create a new table 'campus_housing' with columns 'HousingId' as a number and primary key, 'CampusId' as a number, 'BuildingName' as text, 'Capacity' as number, and 'OccupancyRate' as decimal.",
                "Answer": "CREATE TABLE campus_housing (HousingId number PRIMARY KEY, CampusId number, BuildingName text, Capacity number, OccupancyRate decimal)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 312,
        "db": "csu_1",
        "interaction": [
            {
                "User": "Add a new campus called 'California State University-Metropolis' located in 'Metropolis' county, established in 2021.",
                "Answer": "INSERT INTO Campuses (Campus, Location, County, Year) VALUES ('California State University-Metropolis', 'Metropolis', 'Metro', 2021);"
            },
            {
                "User": "Update the campus fee for 'California State University-Bakersfield' for the year 2021 to $2500.",
                "Answer": "UPDATE csu_fees SET CampusFee = 2500 WHERE Campus = (SELECT Id FROM Campuses WHERE Campus = 'California State University-Bakersfield') AND Year = 2021;"
            },
            {
                "User": "Create a new table to record the sports achievements of each campus, with columns for campus ID, year, sport name, and number of championships won.",
                "Answer": "CREATE TABLE sports_achievements (CampusId number, Year number, SportName text, ChampionshipsWon number, PRIMARY KEY (CampusId, Year, SportName));"
            },
            {
                "User": "Add a new column to the 'enrollments' table to record the part-time enrollment for each academic year.",
                "Answer": "ALTER TABLE enrollments ADD COLUMN PartTimeEnrollment_AY number;"
            },
            {
                "User": "Insert the number of degrees awarded by 'California State University-Chico' in the year 2021 as 1500.",
                "Answer": "INSERT INTO degrees (Year, Campus, Degrees) VALUES (2021, (SELECT Id FROM Campuses WHERE Campus = 'California State University-Chico'), 1500);"
            },
            {
                "User": "Record that 'California State University-Bakersfield' won 3 championships in basketball in 2021.",
                "Answer": "INSERT INTO sports_achievements (CampusId, Year, SportName, ChampionshipsWon) VALUES ((SELECT Id FROM Campuses WHERE Campus = 'California State University-Bakersfield'), 2021, 'Basketball', 3);"
            },
            {
                "User": "Update the total enrollment and full-time equivalent for 'California State University-Channel Islands' in 2021 to 15000 and 12000, respectively.",
                "Answer": "UPDATE enrollments SET TotalEnrollment_AY = 15000, FTE_AY = 12000 WHERE Campus = (SELECT Id FROM Campuses WHERE Campus = 'California State University-Channel Islands') AND Year = 2021;"
            },
            {
                "User": "How many championships in total have been won by all campuses in 2021?",
                "Answer": "SELECT SUM(ChampionshipsWon) AS TotalChampionships FROM sports_achievements WHERE Year = 2021;"
            },
            {
                "User": "List all the campuses that have a total undergraduate enrollment greater than 10000 in the year 2021.",
                "Answer": "SELECT t2.Campus FROM enrollments AS t1 JOIN Campuses AS t2 ON t1.Campus = t2.Id WHERE t1.Year = 2021 AND t1.TotalEnrollment_AY > 10000;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 313,
        "db": "flight_company",
        "interaction": [
            {
                "User": "Add a new airport with id 10, located in 'Berlin', 'Germany', with IATA code 'BER', ICAO code 'EDDB', and named 'Berlin Brandenburg Airport'.",
                "Answer": "INSERT INTO airport (id, City, Country, IATA, ICAO, name) VALUES (10, 'Berlin', 'Germany', 'BER', 'EDDB', 'Berlin Brandenburg Airport')"
            },
            {
                "User": "Update the name of the operate company with id 2 to 'Air China Freight'.",
                "Answer": "UPDATE operate_company SET name = 'Air China Freight' WHERE id = 2"
            },
            {
                "User": "Create a new table for tracking maintenance records with fields id (number), flight_id (number), maintenance_date (text), and description (text).",
                "Answer": "CREATE TABLE maintenance_records (id number, flight_id number, maintenance_date text, description text, PRIMARY KEY (id))"
            },
            {
                "User": "Insert a new flight record with id 14, flight number 'CA789', date 'April 5, 2023', pilot 'Wang', velocity 750, altitude 10000, airport_id 3, and company_id 1.",
                "Answer": "INSERT INTO flight (id, Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id) VALUES (14, 'CA789', 'April 5, 2023', 'Wang', 750, 10000, 3, 1)"
            },
            {
                "User": "Add a new column 'Capacity' of type number to the 'airport' table to record the passenger capacity.",
                "Answer": "ALTER TABLE airport ADD COLUMN Capacity number"
            },
            {
                "User": "Record a maintenance event with id 1 for flight_id 3 that took place on 'April 6, 2023', with the description 'Annual engine overhaul'.",
                "Answer": "INSERT INTO maintenance_records (id, flight_id, maintenance_date, description) VALUES (1, 3, 'April 6, 2023', 'Annual engine overhaul')"
            },
            {
                "User": "How many flights have been operated by companies incorporated in 'China'?",
                "Answer": "SELECT COUNT(*) FROM flight AS F JOIN operate_company AS OC ON F.company_id = OC.id WHERE OC.Incorporated_in = 'China'"
            },
            {
                "User": "Set the capacity of 'Schiphol Airport' to 65000 passengers.",
                "Answer": "UPDATE airport SET Capacity = 65000 WHERE name = 'Schiphol Airport'"
            },
            {
                "User": "What is the average velocity of all flights that took off from 'Ted Stevens Airport'?",
                "Answer": "SELECT AVG(Velocity) FROM flight AS F JOIN airport AS A ON F.airport_id = A.id WHERE A.name = 'Ted Stevens Airport'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 314,
        "db": "flight_company",
        "interaction": [
            {
                "User": "what is the date of first flight?",
                "Answer": "SELECT Date FROM flight ORDER BY Date LIMIT 1"
            },
            {
                "User": "who is the first flight's pilot?",
                "Answer": "SELECT Pilot FROM flight ORDER BY Date LIMIT 1"
            },
            {
                "User": "what is the average of altitude?",
                "Answer": "SELECT AVG(Altitude) FROM flight"
            },
            {
                "User": "Can we track the number of flights each airport has? Add a column for that.",
                "Answer": "ALTER TABLE airport ADD COLUMN Flights_Count number"
            },
            {
                "User": "Update the flights count for Akureyri Airport to 5.",
                "Answer": "UPDATE airport SET Flights_Count = 5 WHERE name = 'Akureyri Airport'"
            },
            {
                "User": "How many airlines are incorporated in China?",
                "Answer": "SELECT COUNT(*) FROM operate_company WHERE Incorporated_in = 'China'"
            },
            {
                "User": "Create a table to record incidents, with an ID, flight ID, description, and date.",
                "Answer": "CREATE TABLE incident (id number PRIMARY KEY, flight_id number, description text, incident_date text, FOREIGN KEY (flight_id) REFERENCES flight(id))"
            },
            {
                "User": "Insert a record into the incidents table for flight ID 2 with a bird strike on August 17, 1963.",
                "Answer": "INSERT INTO incident (id, flight_id, description, incident_date) VALUES (1, 2, 'Bird strike', 'August 17, 1963')"
            },
            {
                "User": "Show me a list of all incidents descriptions and their flight dates.",
                "Answer": "SELECT description, incident_date FROM incident"
            },
            {
                "User": "Add a new airport called 'Newtown Airport' located in 'Newtown' city, 'Freedonia' country, with IATA code 'NTW' and ICAO code 'FNTW'.",
                "Answer": "INSERT INTO airport (id, City, Country, IATA, ICAO, name) VALUES (10, 'Newtown', 'Freedonia', 'NTW', 'FNTW', 'Newtown Airport')"
            },
            {
                "User": "Update the principal activities of 'Air China Cargo' to include 'Passenger flights'.",
                "Answer": "UPDATE operate_company SET Principal_activities = 'Cargo airline, Passenger flights' WHERE name = 'Air China Cargo'"
            },
            {
                "User": "What is the maximum equity shareholding among all operate companies?",
                "Answer": "SELECT MAX(Group_Equity_Shareholding) FROM operate_company"
            },
            {
                "User": "Alter the flight table to include a column for the number of passengers.",
                "Answer": "ALTER TABLE flight ADD COLUMN Passengers_Count number"
            },
            {
                "User": "Set the number of passengers for flight ID 1 to 120.",
                "Answer": "UPDATE flight SET Passengers_Count = 120 WHERE id = 1"
            },
            {
                "User": "For the flight with the highest altitude, increase its velocity by 10%.",
                "Answer": "UPDATE flight SET Velocity = Velocity * 1.10 WHERE Altitude = (SELECT MAX(Altitude) FROM flight)"
            },
            {
                "User": "Create a view that shows the average altitude and velocity for flights from each airport.",
                "Answer": "CREATE VIEW airport_flight_stats AS SELECT airport_id, AVG(Altitude) AS Avg_Altitude, AVG(Velocity) AS Avg_Velocity FROM flight GROUP BY airport_id"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 315,
        "db": "behavior_monitoring",
        "interaction": [
            {
                "User": "Add a new address type for dormitory residences.",
                "Answer": "INSERT INTO Ref_Address_Types (address_type_code, address_type_description) VALUES ('DORM', 'Dormitory Residence');"
            },
            {
                "User": "Update the email address of the student with last name 'Rohan' to 'emma.rohan@university.edu'.",
                "Answer": "UPDATE Students SET email_address = 'emma.rohan@university.edu' WHERE last_name = 'Rohan';"
            },
            {
                "User": "Create a new table to log student visitations to the health center.",
                "Answer": "CREATE TABLE Health_Center_Logs (log_id INTEGER PRIMARY KEY, student_id INTEGER, date_of_visit TIMESTAMP, reason_for_visit TEXT, treatment TEXT, FOREIGN KEY (student_id) REFERENCES Students(student_id));"
            },
            {
                "User": "Add a column to track the room number for the student addresses.",
                "Answer": "ALTER TABLE Addresses ADD COLUMN room_number TEXT;"
            },
            {
                "User": "Insert a record into the new Health_Center_Logs for student with id 2, visited on '2023-03-01 10:00:00' for a routine checkup.",
                "Answer": "INSERT INTO Health_Center_Logs (student_id, date_of_visit, reason_for_visit) VALUES (2, '2023-03-01 10:00:00', 'Routine Checkup');"
            },
            {
                "User": "Change the detention type description for 'AFTER' to 'After School Hours'.",
                "Answer": "UPDATE Ref_Detention_Type SET detention_type_description = 'After School Hours' WHERE detention_type_code = 'AFTER';"
            },
            {
                "User": "Add a new incident type for 'BULLYING' with the description 'Bullying'.",
                "Answer": "INSERT INTO Ref_Incident_Type (incident_type_code, incident_type_description) VALUES ('BULLYING', 'Bullying');"
            },
            {
                "User": "Record a new behavior incident of type 'BULLYING' for student with id 1, starting from '2023-03-15 09:00:00' to '2023-03-15 09:30:00'.",
                "Answer": "INSERT INTO Behavior_Incident (incident_type_code, student_id, date_incident_start, date_incident_end) VALUES ('BULLYING', 1, '2023-03-15 09:00:00', '2023-03-15 09:30:00');"
            },
            {
                "User": "Increase the monthly rental for student address id 12 by 10 percent.",
                "Answer": "UPDATE Student_Addresses SET monthly_rental = monthly_rental * 1.10 WHERE address_id = 12;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 316,
        "db": "behavior_monitoring",
        "interaction": [
            {
                "User": "How many students are from the state of Texas?",
                "Answer": "SELECT count(*) FROM Addresses AS A JOIN Students AS S ON A.address_id = S.address_id WHERE A.state_province_county = 'Texas'"
            },
            {
                "User": "I would like to add a new detention type for 'Homework'.",
                "Answer": "INSERT INTO Ref_Detention_Type (detention_type_code, detention_type_description) VALUES ('HOMEWORK', 'Homework')"
            },
            {
                "User": "Can you show me the new detention type I just added?",
                "Answer": "SELECT * FROM Ref_Detention_Type WHERE detention_type_code = 'HOMEWORK'"
            },
            {
                "User": "Let's update the detention summary for detention_id 1 to 'Disruptive behavior during class'.",
                "Answer": "UPDATE Detention SET detention_summary = 'Disruptive behavior during class' WHERE detention_id = 1"
            },
            {
                "User": "Can you show me the updated record for detention_id 1?",
                "Answer": "SELECT * FROM Detention WHERE detention_id = 1"
            },
            {
                "User": "I want to create a new table for tracking student grades.",
                "Answer": "CREATE TABLE Student_Grades (grade_id number PRIMARY KEY, student_id number, course_code text, grade text, date_recorded time)"
            },
            {
                "User": "Let's insert a new grade record for student_id 2, course_code 'MATH101', with a grade 'A'.",
                "Answer": "INSERT INTO Student_Grades (grade_id, student_id, course_code, grade, date_recorded) VALUES (1, 2, 'MATH101', 'A', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Can you show me all grades for student_id 2?",
                "Answer": "SELECT * FROM Student_Grades WHERE student_id = 2"
            },
            {
                "User": "I want to add a new column 'phone_number' to the Teachers table.",
                "Answer": "ALTER TABLE Teachers ADD COLUMN phone_number text"
            },
            {
                "User": "Let's update the phone number for teacher_id 1 to '555-1234'.",
                "Answer": "UPDATE Teachers SET phone_number = '555-1234' WHERE teacher_id = 1"
            },
            {
                "User": "Can you show me the updated phone number for teacher_id 1?",
                "Answer": "SELECT teacher_id, first_name, last_name, phone_number FROM Teachers WHERE teacher_id = 1"
            },
            {
                "User": "I want to add a new address for '123 Example St, Example City, EX123, ExState, EX'.",
                "Answer": "INSERT INTO Addresses (address_id, line_1, city, zip_postcode, state_province_county, country) VALUES ((SELECT MAX(address_id) + 1 FROM Addresses), '123 Example St', 'Example City', 'EX123', 'ExState', 'EX')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 317,
        "db": "browser_web",
        "interaction": [
            {
                "User": "Add a new web client accelerator called 'Speedster' for Windows operating system.",
                "Answer": "INSERT INTO Web_client_accelerator (name, Operating_system, Client, Connection) VALUES ('Speedster', 'Windows', 'user', 'Broadband')"
            },
            {
                "User": "Update the market share of Firefox to 20.5 percent.",
                "Answer": "UPDATE browser SET market_share = 20.5 WHERE name = 'Firefox'"
            },
            {
                "User": "Create a new table to track user feedback on different browsers with columns for feedback_id, browser_id, user_id, and feedback_text.",
                "Answer": "CREATE TABLE browser_feedback (feedback_id number PRIMARY KEY, browser_id number, user_id number, feedback_text text)"
            },
            {
                "User": "Insert a user feedback for the browser with id 2, assuming the user's id is 101 and the feedback is 'Fast and reliable'.",
                "Answer": "INSERT INTO browser_feedback (browser_id, user_id, feedback_text) VALUES (2, 101, 'Fast and reliable')"
            },
            {
                "User": "Add a new column to the Web_client_accelerator table to store the release year of the accelerator.",
                "Answer": "ALTER TABLE Web_client_accelerator ADD COLUMN release_year number"
            },
            {
                "User": "Set the release year for the 'CACHEbox' accelerator to 2005.",
                "Answer": "UPDATE Web_client_accelerator SET release_year = 2005 WHERE name = 'CACHEbox'"
            },
            {
                "User": "Create a new table to log the historical market share of each browser with columns for log_id, browser_id, year, and market_share.",
                "Answer": "CREATE TABLE browser_market_share_log (log_id number PRIMARY KEY, browser_id number, year number, market_share number)"
            },
            {
                "User": "Log the market share for 'Internet Explorer' in the year 2020 as 7.5 percent.",
                "Answer": "INSERT INTO browser_market_share_log (browser_id, year, market_share) VALUES ((SELECT id FROM browser WHERE name = 'Internet Explorer'), 2020, 7.5)"
            },
            {
                "User": "Which browsers are compatible with 'Speedster' accelerator?",
                "Answer": "SELECT T3.name FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'Speedster'"
            },
            {
                "User": "Remove the 'Connection' column from the Web_client_accelerator table as it is no longer needed.",
                "Answer": "ALTER TABLE Web_client_accelerator DROP COLUMN Connection"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 318,
        "db": "browser_web",
        "interaction": [
            {
                "User": "Add a new web client accelerator called 'SpeedBoost' for Windows users.",
                "Answer": "INSERT INTO Web_client_accelerator (id, name, Operating_system, Client, Connection) VALUES ((SELECT MAX(id) + 1 FROM Web_client_accelerator), 'SpeedBoost', 'Windows', 'user', 'Broadband')"
            },
            {
                "User": "Update the market share of Firefox to 20.5%.",
                "Answer": "UPDATE browser SET market_share = 20.5 WHERE name = 'Firefox'"
            },
            {
                "User": "Create a new table to track the user ratings for browsers.",
                "Answer": "CREATE TABLE browser_ratings (id number PRIMARY KEY, browser_id number, rating number, user_feedback text, FOREIGN KEY (browser_id) REFERENCES browser(id))"
            },
            {
                "User": "Insert a user rating for Internet Explorer with a rating of 3.5 and feedback 'Needs improvement'.",
                "Answer": "INSERT INTO browser_ratings (id, browser_id, rating, user_feedback) VALUES ((SELECT MAX(id) + 1 FROM browser_ratings), (SELECT id FROM browser WHERE name = 'Internet Explorer'), 3.5, 'Needs improvement')"
            },
            {
                "User": "Add a 'last_updated' column to the 'Web_client_accelerator' table to track the last update date.",
                "Answer": "ALTER TABLE Web_client_accelerator ADD COLUMN last_updated date"
            },
            {
                "User": "Set the 'last_updated' date for 'CACHEbox' to '2023-01-15'.",
                "Answer": "UPDATE Web_client_accelerator SET last_updated = '2023-01-15' WHERE name = 'CACHEbox'"
            },
            {
                "User": "Link the 'accelerator_compatible_browser' table with the 'browser' table by adding a 'name' column that corresponds to the browser's name.",
                "Answer": "ALTER TABLE accelerator_compatible_browser ADD COLUMN name text REFERENCES browser(name)"
            },
            {
                "User": "Insert compatibility data for 'SpeedBoost' with 'Safari' starting from the year 2023.",
                "Answer": "INSERT INTO accelerator_compatible_browser (accelerator_id, browser_id, compatible_since_year, name) VALUES ((SELECT id FROM Web_client_accelerator WHERE name = 'SpeedBoost'), (SELECT id FROM browser WHERE name = 'Safari'), 2023, 'Safari')"
            },
            {
                "User": "Delete the 'CProxy' record from the 'Web_client_accelerator' table.",
                "Answer": "DELETE FROM Web_client_accelerator WHERE name = 'CProxy'"
            },
            {
                "User": "Increase the market share of all browsers by 1%.",
                "Answer": "UPDATE browser SET market_share = market_share + 1"
            },
            {
                "User": "Create a view that shows the compatibility of accelerators with browsers including the year since they are compatible.",
                "Answer": "CREATE VIEW compatibility_view AS SELECT wca.name AS accelerator_name, b.name AS browser_name, acb.compatible_since_year FROM Web_client_accelerator wca JOIN accelerator_compatible_browser acb ON wca.id = acb.accelerator_id JOIN browser b ON acb.browser_id = b.id"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 319,
        "db": "news_report",
        "interaction": [
            {
                "User": "I'd like to add a new journalist to the database.",
                "Answer": "INSERT INTO journalist (journalist_ID, Name, Nationality, Age, Years_working) VALUES (12, 'Alex Morgan', 'USA', '30', 8);"
            },
            {
                "User": "Update the years working for journalist Herbert Swindells to 12 years.",
                "Answer": "UPDATE journalist SET Years_working = 12 WHERE Name = 'Herbert Swindells';"
            },
            {
                "User": "Create a new table for news articles with article ID, title, and publication date.",
                "Answer": "CREATE TABLE news_articles (Article_ID number PRIMARY KEY, Title text, Publication_Date text);"
            },
            {
                "User": "Insert a new event that happened on '14 February 2021' at 'City Hall' named 'Valentine's Day Gala' with an attendance of 150 people.",
                "Answer": "INSERT INTO event (Event_ID, Date, Venue, Name, Event_Attendance) VALUES (6, '14 February 2021', 'City Hall', 'Valentine''s Day Gala', 150);"
            },
            {
                "User": "Add a column to the journalist table to track the number of articles written.",
                "Answer": "ALTER TABLE journalist ADD COLUMN Articles_written number;"
            },
            {
                "User": "Record that journalist George Gilchrist has written 25 articles.",
                "Answer": "UPDATE journalist SET Articles_written = 25 WHERE Name = 'George Gilchrist';"
            },
            {
                "User": "Add a new report entry for journalist ID 2 covering event ID 1.",
                "Answer": "INSERT INTO news_report (journalist_ID, Event_ID, Work_Type) VALUES (2, 1, 'Reporting');"
            },
            {
                "User": "Can you show me the total number of articles written by each journalist?",
                "Answer": "SELECT j.Name, COALESCE(j.Articles_written, 0) as Total_Articles FROM journalist j;"
            },
            {
                "User": "Create a view that shows journalists and the events they have reported on.",
                "Answer": "CREATE VIEW journalist_event_reports AS SELECT j.Name, e.Name as Event_Name FROM journalist j JOIN news_report nr ON j.journalist_ID = nr.journalist_ID JOIN event e ON nr.Event_ID = e.Event_ID;"
            },
            {
                "User": "Show me the view that lists journalists and the events they have reported on.",
                "Answer": "SELECT * FROM journalist_event_reports;"
            },
            {
                "User": "I need to correct the venue for the 'Government Hearing' event. It should be 'Court House'.",
                "Answer": "UPDATE event SET Venue = 'Court House' WHERE Name = 'Government Hearing';"
            },
            {
                "User": "List all events with more than 1000 attendees.",
                "Answer": "SELECT * FROM event WHERE Event_Attendance > 1000;"
            },
            {
                "User": "How many journalists have been working for more than 5 years?",
                "Answer": "SELECT count(*) FROM journalist WHERE Years_working > 5;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 320,
        "db": "news_report",
        "interaction": [
            {
                "User": "Add a new journalist named John Doe from USA, aged 30, with 5 years of working experience.",
                "Answer": "INSERT INTO journalist (Name, Nationality, Age, Years_working) VALUES ('John Doe', 'USA', '30', 5)"
            },
            {
                "User": "Update the attendance for the event 'Olympia Games Openning' to 7000.",
                "Answer": "UPDATE event SET Event_Attendance = 7000 WHERE Name = 'Olympia Games Openning'"
            },
            {
                "User": "Create a new table to track the editors with columns for editor ID, name, nationality, and years of experience.",
                "Answer": "CREATE TABLE editor (editor_ID number PRIMARY KEY, Name text, Nationality text, Years_experience number)"
            },
            {
                "User": "Insert the following editors into the new editor table: (1, 'Alice Johnson', 'Canada', 8), (2, 'Bob Smith', 'USA', 12), (3, 'Carlos Gutierrez', 'Mexico', 9).",
                "Answer": "INSERT INTO editor (editor_ID, Name, Nationality, Years_experience) VALUES (1, 'Alice Johnson', 'Canada', 8), (2, 'Bob Smith', 'USA', 12), (3, 'Carlos Gutierrez', 'Mexico', 9)"
            },
            {
                "User": "Add a column 'Email' to the journalist table to store their email addresses.",
                "Answer": "ALTER TABLE journalist ADD COLUMN Email text"
            },
            {
                "User": "Set the email address for journalist Herbert Swindells to 'herbert@newsmedia.com'.",
                "Answer": "UPDATE journalist SET Email = 'herbert@newsmedia.com' WHERE Name = 'Herbert Swindells'"
            },
            {
                "User": "Create a view that shows the event names and the number of journalists who reported on each event.",
                "Answer": "CREATE VIEW event_journalist_count AS SELECT e.Name, COUNT(nr.journalist_ID) AS Journalist_Count FROM event e JOIN news_report nr ON e.Event_ID = nr.Event_ID GROUP BY e.Name"
            },
            {
                "User": "Show the names and ages of journalists who have more than 5 years of working experience.",
                "Answer": "SELECT Name, Age FROM journalist WHERE Years_working > 5"
            },
            {
                "User": "Insert a new report entry for journalist ID 2 on event ID 2 with work type 'Article'.",
                "Answer": "INSERT INTO news_report (journalist_ID, Event_ID, Work_Type) VALUES (2, 2, 'Article')"
            },
            {
                "User": "Add a column 'Editor_ID' to the news_report table to reference the editor responsible for each report.",
                "Answer": "ALTER TABLE news_report ADD COLUMN Editor_ID number REFERENCES editor(editor_ID)"
            },
            {
                "User": "Update the editor ID for the news report with journalist ID 1 and event ID 3 to editor ID 1.",
                "Answer": "UPDATE news_report SET Editor_ID = 1 WHERE journalist_ID = 1 AND Event_ID = 3"
            },
            {
                "User": "Create a table to keep track of the awards received by journalists with columns for award ID, journalist ID, award name, and year received.",
                "Answer": "CREATE TABLE journalist_awards (award_ID number PRIMARY KEY, journalist_ID number REFERENCES journalist(journalist_ID), Award_Name text, Year_Received number)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 321,
        "db": "device",
        "interaction": [
            {
                "User": "ADD A NEW DEVICE ENTRY FOR A SAMSUNG GALAXY S21 WITH CARRIER AT&T, PACKAGE VERSION 11.0.0, APPLICATIONS VERSION 11.0.0, AND SOFTWARE PLATFORM ANDROID",
                "Answer": "INSERT INTO device (Device, Carrier, Package_Version, Applications, Software_Platform) VALUES ('Samsung Galaxy S21', 'AT&T', '11.0.0', '11.0.0', 'Android')"
            },
            {
                "User": "UPDATE THE QUANTITY OF BLACKBERRY STORM 9530 IN SHOP ID 1 TO 120 UNITS",
                "Answer": "UPDATE stock SET Quantity = 120 WHERE Device_ID = (SELECT Device_ID FROM device WHERE Device = 'BlackBerry Storm 9530') AND Shop_ID = 1"
            },
            {
                "User": "CREATE A NEW TABLE TO TRACK DEVICE REPAIRS WITH COLUMNS REPAIR_ID, DEVICE_ID, SHOP_ID, REPAIR_DATE, AND REPAIR_STATUS",
                "Answer": "CREATE TABLE device_repairs (Repair_ID number PRIMARY KEY, Device_ID number, Shop_ID number, Repair_Date text, Repair_Status text)"
            },
            {
                "User": "ADD A COLUMN TO THE SHOP TABLE TO RECORD THE NUMBER OF EMPLOYEES IN EACH SHOP",
                "Answer": "ALTER TABLE shop ADD COLUMN Employees_Count number"
            },
            {
                "User": "INSERT A RECORD OF A REPAIR FOR DEVICE ID 2 AT SHOP ID 2 ON MARCH 15TH, 2023 WITH STATUS COMPLETED",
                "Answer": "INSERT INTO device_repairs (Device_ID, Shop_ID, Repair_Date, Repair_Status) VALUES (2, 2, '15 March 2023', 'Completed')"
            },
            {
                "User": "INCREASE THE QUANTITY OF HUAWEI DEVICES BY 20 UNITS FOR SHOP ID 3",
                "Answer": "UPDATE stock SET Quantity = Quantity + 20 WHERE Device_ID = (SELECT Device_ID FROM device WHERE Device = 'Huawei') AND Shop_ID = 3"
            },
            {
                "User": "CREATE A VIEW TO SHOW ALL DEVICES ALONG WITH THEIR STOCK QUANTITY IN EACH SHOP",
                "Answer": "CREATE VIEW device_stock_view AS SELECT d.Device_ID, d.Device, s.Shop_ID, s.Shop_Name, st.Quantity FROM device d JOIN stock st ON d.Device_ID = st.Device_ID JOIN shop s ON st.Shop_ID = s.Shop_ID"
            },
            {
                "User": "ADD A NEW SHOP CALLED 'TECH HUB' LOCATED IN 'MIDTOWN' THAT OPENED ON '1ST APRIL 2023' AND STARTED OPERATING IN THE YEAR 2023",
                "Answer": "INSERT INTO shop (Shop_Name, Location, Open_Date, Open_Year) VALUES ('Tech Hub', 'Midtown', '1 April 2023', 2023)"
            },
            {
                "User": "UPDATE THE SOFTWARE PLATFORM FOR ALL APPLE DEVICES TO 'iOS 14'",
                "Answer": "UPDATE device SET Software_Platform = 'iOS 14' WHERE Device LIKE '%Apple%'"
            },
            {
                "User": "ALTER THE DEVICE TABLE TO INCLUDE A NEW COLUMN FOR DEVICE_COLOR",
                "Answer": "ALTER TABLE device ADD COLUMN Device_Color text"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 322,
        "db": "device",
        "interaction": [
            {
                "User": "I want to add a new shop called 'Tech Haven' located in 'Uptown' that opened on '1st April 2021'.",
                "Answer": "INSERT INTO shop (Shop_Name, Location, Open_Date, Open_Year) VALUES ('Tech Haven', 'Uptown', '1 April', 2021)"
            },
            {
                "User": "Change the carrier of the device with ID 2 to 'AT&T'.",
                "Answer": "UPDATE device SET Carrier = 'AT&T' WHERE Device_ID = 2"
            },
            {
                "User": "Can we track the manager's name for each shop? We need to add this information.",
                "Answer": "ALTER TABLE shop ADD COLUMN Manager_Name text"
            },
            {
                "User": "Add 'John Smith' as the manager for the 'Tech Haven' shop.",
                "Answer": "UPDATE shop SET Manager_Name = 'John Smith' WHERE Shop_Name = 'Tech Haven'"
            },
            {
                "User": "How do I create a new table to track sales made by each shop?",
                "Answer": "CREATE TABLE sales (Sale_ID number PRIMARY KEY, Shop_ID number, Sale_Date text, Sale_Amount number, FOREIGN KEY (Shop_ID) REFERENCES shop(Shop_ID))"
            },
            {
                "User": "Insert a sale record for shop with ID 1, with a sale amount of 5000 on '15th March 2021'.",
                "Answer": "INSERT INTO sales (Shop_ID, Sale_Date, Sale_Amount) VALUES (1, '15 March', 5000)"
            },
            {
                "User": "The device with ID 3 is discontinued, remove it from the stock.",
                "Answer": "DELETE FROM stock WHERE Device_ID = 3"
            },
            {
                "User": "Create a new table to track device repairs with columns for repair ID, device ID, date of repair, and repair cost.",
                "Answer": "CREATE TABLE device_repairs (Repair_ID number PRIMARY KEY, Device_ID number, Repair_Date text, Repair_Cost number, FOREIGN KEY (Device_ID) REFERENCES device(Device_ID))"
            },
            {
                "User": "Record a repair for device ID 1 that happened on '20th March 2021' with a cost of 150.",
                "Answer": "INSERT INTO device_repairs (Device_ID, Repair_Date, Repair_Cost) VALUES (1, '20 March', 150)"
            },
            {
                "User": "We need to keep track of the employees in each shop. Can you create a table for that?",
                "Answer": "CREATE TABLE employees (Employee_ID number PRIMARY KEY, Shop_ID number, Employee_Name text, Position text, FOREIGN KEY (Shop_ID) REFERENCES shop(Shop_ID))"
            },
            {
                "User": "Add an employee named 'Alice Johnson' who works as a 'Sales Representative' at shop ID 2.",
                "Answer": "INSERT INTO employees (Shop_ID, Employee_Name, Position) VALUES (2, 'Alice Johnson', 'Sales Representative')"
            },
            {
                "User": "Increase the quantity of device ID 6 in shop ID 2 by 20 units.",
                "Answer": "UPDATE stock SET Quantity = Quantity + 20 WHERE Device_ID = 6 AND Shop_ID = 2"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 323,
        "db": "e_learning",
        "interaction": [
            {
                "User": "What is the highest number of enrollments?",
                "Answer": "SELECT count(*) FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1"
            },
            {
                "User": "What is the student ID with the most course enrollments?",
                "Answer": "SELECT T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1"
            },
            {
                "User": "What is the login name of the student with the most course enrollments?",
                "Answer": "SELECT T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1"
            },
            {
                "User": "Can you add a new student with the id 16, login name 'jdoe', and password 'securepass'?",
                "Answer": "INSERT INTO Students (student_id, login_name, password, personal_name, middle_name, family_name) VALUES (16, 'jdoe', 'securepass', 'John', 'L', 'Doe')"
            },
            {
                "User": "Update the password for student with id 16 to 'newpassword123'.",
                "Answer": "UPDATE Students SET password = 'newpassword123' WHERE student_id = 16"
            },
            {
                "User": "Create a new table to track student feedback with columns for feedback_id, student_id, course_id, and feedback_text.",
                "Answer": "CREATE TABLE Student_Feedback (feedback_id number PRIMARY KEY, student_id number, course_id number, feedback_text text)"
            },
            {
                "User": "Insert a feedback record for student id 10 for course id 3 with the feedback 'Very challenging but rewarding course'.",
                "Answer": "INSERT INTO Student_Feedback (feedback_id, student_id, course_id, feedback_text) VALUES (1, 10, 3, 'Very challenging but rewarding course')"
            },
            {
                "User": "Add a new column 'email' to the Students table to store student email addresses.",
                "Answer": "ALTER TABLE Students ADD COLUMN email text"
            },
            {
                "User": "Set the email for student id 16 to 'john.doe@example.com'.",
                "Answer": "UPDATE Students SET email = 'john.doe@example.com' WHERE student_id = 16"
            },
            {
                "User": "I want to enroll student id 16 in the course with course_id 1. The enrollment date is '2023-04-01'. The completion date is '2023-07-01'.",
                "Answer": "INSERT INTO Student_Course_Enrolment (registration_id, student_id, course_id, date_of_enrolment, date_of_completion) VALUES ((SELECT MAX(registration_id) + 1 FROM Student_Course_Enrolment), 16, 1, '2023-04-01', '2023-07-01')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 324,
        "db": "e_learning",
        "interaction": [
            {
                "User": "Add a new student with the id 16, who registered today, last logged in today, with login name 'jdoe', password 'secure123', personal name 'John', middle name 'F.', and family name 'Doe'.",
                "Answer": "INSERT INTO Students (student_id, date_of_registration, date_of_latest_logon, login_name, password, personal_name, middle_name, family_name) VALUES (16, CURRENT_DATE, CURRENT_DATE, 'jdoe', 'secure123', 'John', 'F.', 'Doe')"
            },
            {
                "User": "Change the password of the student with login name 'annamae.hoppe' to 'newpassword2023'.",
                "Answer": "UPDATE Students SET password = 'newpassword2023' WHERE login_name = 'annamae.hoppe'"
            },
            {
                "User": "Create a new table for storing feedback on courses with columns for feedback_id, course_id, student_id, and feedback_text.",
                "Answer": "CREATE TABLE Course_Feedback (feedback_id number PRIMARY KEY, course_id number, student_id number, feedback_text text)"
            },
            {
                "User": "Insert feedback for course with id 2 by student with id 11, mentioning 'Very insightful and well-structured course'.",
                "Answer": "INSERT INTO Course_Feedback (feedback_id, course_id, student_id, feedback_text) VALUES (1, 2, 11, 'Very insightful and well-structured course')"
            },
            {
                "User": "Add a new column to the Subjects table to store the department the subject belongs to.",
                "Answer": "ALTER TABLE Subjects ADD COLUMN department text"
            },
            {
                "User": "Update the department of the subject with id 1 to 'Computer Science Department'.",
                "Answer": "UPDATE Subjects SET department = 'Computer Science Department' WHERE subject_id = 1"
            },
            {
                "User": "Add a new course with id 16, author id 3, subject id 2, with course name 'Introduction to Arts' and a description 'A beginner's guide to the world of arts'.",
                "Answer": "INSERT INTO Courses (course_id, author_id, subject_id, course_name, course_description) VALUES (16, 3, 2, 'Introduction to Arts', 'A beginner''s guide to the world of arts')"
            },
            {
                "User": "Enroll the new student with id 16 to the new course with id 16. The enrollment date is '2023-04-01'. The completion date is '2023-07-01'.",
                "Answer": "INSERT INTO Student_Course_Enrolment (registration_id, student_id, course_id, date_of_enrolment, date_of_completion) VALUES ((SELECT MAX(registration_id) + 1 FROM Student_Course_Enrolment), 16, 16, '2023-04-01', '2023-07-01')"
            },
            {
                "User": "Record a new test result for student with id 11 in course with id 2 as 'Pass'.",
                "Answer": "INSERT INTO Student_Tests_Taken (registration_id, date_test_taken, test_result) VALUES ((SELECT registration_id FROM Student_Course_Enrolment WHERE student_id = 11 AND course_id = 2), CURRENT_DATE, 'Pass')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 325,
        "db": "county_public_safety",
        "interaction": [
            {
                "User": "Add a new county with the following details: ID 7, Name 'Oakridge', Population 50000, Police officers 75, Residents per officer 666, Case burden 90, Crime rate 110, Police force 'Oakridge City Police', Location 'North'.",
                "Answer": "INSERT INTO county_public_safety (County_ID, Name, Population, Police_officers, Residents_per_officer, Case_burden, Crime_rate, Police_force, Location) VALUES (7, 'Oakridge', 50000, 75, 666, 90, 110, 'Oakridge City Police', 'North')"
            },
            {
                "User": "Update the crime rate for 'Abbotsford' to 120.",
                "Answer": "UPDATE county_public_safety SET Crime_rate = 120 WHERE Name = 'Abbotsford'"
            },
            {
                "User": "Create a new table to log police department audits with columns: Audit_ID (number), County_ID (number), Date (text), and Result (text).",
                "Answer": "CREATE TABLE police_audits (Audit_ID number PRIMARY KEY, County_ID number, Date text, Result text)"
            },
            {
                "User": "Insert a new audit record for county ID 2 with the following details: Audit_ID 101, Date '2023-04-01', Result 'Satisfactory'.",
                "Answer": "INSERT INTO police_audits (Audit_ID, County_ID, Date, Result) VALUES (101, 2, '2023-04-01', 'Satisfactory')"
            },
            {
                "User": "Add a new column 'Emergency_response_time' in minutes to the county_public_safety table.",
                "Answer": "ALTER TABLE county_public_safety ADD COLUMN Emergency_response_time number"
            },
            {
                "User": "Set the emergency response time for 'Abbotsford' to 8 minutes.",
                "Answer": "UPDATE county_public_safety SET Emergency_response_time = 8 WHERE Name = 'Abbotsford'"
            },
            {
                "User": "Create a new table to track county commissioner details with columns: Commissioner_ID (number), County_ID (number), Name (text), Term_Start (text), Term_End (text).",
                "Answer": "CREATE TABLE county_commissioners (Commissioner_ID number PRIMARY KEY, County_ID number, Name text, Term_Start text, Term_End text)"
            },
            {
                "User": "Insert a new commissioner record for county ID 3 with the following details: Commissioner_ID 201, Name 'Jane Doe', Term_Start '2023-01-01', Term_End '2026-12-31'.",
                "Answer": "INSERT INTO county_commissioners (Commissioner_ID, County_ID, Name, Term_Start, Term_End) VALUES (201, 3, 'Jane Doe', '2023-01-01', '2026-12-31')"
            },
            {
                "User": "Which county has the highest number of police officers per capita?",
                "Answer": "SELECT Name FROM county_public_safety ORDER BY (Population / Police_officers) ASC LIMIT 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 326,
        "db": "county_public_safety",
        "interaction": [
            {
                "User": "Add a new city with ID 18 to county 3, named 'Cedarville', with the following demographics: White 72.5, Black 18.2, Amerindian 1.1, Asian 4.5, Multiracial 2.3, Hispanic 10.4.",
                "Answer": "INSERT INTO city (City_ID, County_ID, Name, White, Black, Amerindian, Asian, Multiracial, Hispanic) VALUES (18, 3, 'Cedarville', 72.5, 18.2, 1.1, 4.5, 2.3, 10.4)"
            },
            {
                "User": "Update the population of Abbotsford to 130000 and the number of police officers to 190.",
                "Answer": "UPDATE county_public_safety SET Population = 130000, Police_officers = 190 WHERE Name = 'Abbotsford'"
            },
            {
                "User": "Create a new table to track emergency response times with columns City_ID (number), Average_Response_Time (number), and Best_Response_Time (number).",
                "Answer": "CREATE TABLE emergency_response_times (City_ID number PRIMARY KEY, Average_Response_Time number, Best_Response_Time number)"
            },
            {
                "User": "Record the average and best response times for city ID 1 as 8.5 minutes and 5.2 minutes, respectively.",
                "Answer": "INSERT INTO emergency_response_times (City_ID, Average_Response_Time, Best_Response_Time) VALUES (1, 8.5, 5.2)"
            },
            {
                "User": "Add a new column to the county_public_safety table to track the annual budget for each county, named 'Annual_Budget' of type number.",
                "Answer": "ALTER TABLE county_public_safety ADD COLUMN Annual_Budget number"
            },
            {
                "User": "Set the annual budget for county ID 2 to 5000000.",
                "Answer": "UPDATE county_public_safety SET Annual_Budget = 5000000 WHERE County_ID = 2"
            },
            {
                "User": "Create a view 'county_stats' that shows the county name, population, number of police officers, and crime rate.",
                "Answer": "CREATE VIEW county_stats AS SELECT Name, Population, Police_officers, Crime_rate FROM county_public_safety"
            },
            {
                "User": "What are the average response times for cities in the county with the highest crime rate?",
                "Answer": "SELECT E.City_ID, E.Average_Response_Time FROM emergency_response_times AS E JOIN city AS C ON E.City_ID = C.City_ID WHERE C.County_ID = (SELECT County_ID FROM county_public_safety ORDER BY Crime_rate DESC LIMIT 1)"
            },
            {
                "User": "Increase the number of police officers by 10 for all counties with a population over 100000.",
                "Answer": "UPDATE county_public_safety SET Police_officers = Police_officers + 10 WHERE Population > 100000"
            },
            {
                "User": "Delete the city with the lowest Hispanic population percentage.",
                "Answer": "DELETE FROM city WHERE City_ID = (SELECT City_ID FROM city ORDER BY Hispanic ASC LIMIT 1)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 327,
        "db": "musical",
        "interaction": [
            {
                "User": "Add a new musical called 'Hamilton' to the database, which was released in 2015 and won a Tony Award for Best Musical.",
                "Answer": "INSERT INTO musical (Name, Year, Award, Category, Result) VALUES ('Hamilton', 2015, 'Tony Award', 'Best Musical', 'Won')"
            },
            {
                "User": "Update the result of 'The Phantom of the Opera' for the 'Best Book of a Musical' category to 'Won'.",
                "Answer": "UPDATE musical SET Result = 'Won' WHERE Name = 'The Phantom of the Opera' AND Category = 'Best Book of a Musical'"
            },
            {
                "User": "Create a new table called 'venue' to store information about where each musical is performed, with columns for venue ID, name, location, seating capacity, and musical ID.",
                "Answer": "CREATE TABLE venue (Venue_ID number PRIMARY KEY, Name text, Location text, Seating_Capacity number, Musical_ID number)"
            },
            {
                "User": "Insert data for a venue called 'Richard Rodgers Theatre' located in New York with a seating capacity of 1319, where 'Hamilton' is performed.",
                "Answer": "INSERT INTO venue (Name, Location, Seating_Capacity, Musical_ID) VALUES ('Richard Rodgers Theatre', 'New York', 1319, (SELECT Musical_ID FROM musical WHERE Name = 'Hamilton'))"
            },
            {
                "User": "Add a new column 'Role_Type' to the 'actor' table to specify whether the role is a lead, supporting, or ensemble.",
                "Answer": "ALTER TABLE actor ADD Role_Type text"
            },
            {
                "User": "Set the 'Role_Type' for Ray Meagher's character 'Alf Stewart' to 'lead'.",
                "Answer": "UPDATE actor SET Role_Type = 'lead' WHERE Name = 'Ray Meagher' AND Character = 'Alf Stewart'"
            },
            {
                "User": "Record that Lynne McGranger won an award for her character 'Irene Roberts' in 'Les Misérables'.",
                "Answer": "INSERT INTO musical (Name, Year, Award, Category, Nominee, Result) VALUES ('Les Misérables', 2022, 'Best Musical', 'Performance', 'Lynne McGranger', 'Won');"
            },
            {
                "User": "List all musicals that were nominated for a Tony Award but did not win.",
                "Answer": "SELECT Name FROM musical WHERE Award = 'Tony Award' AND Result = 'Nominated'"
            },
            {
                "User": "How many actors have played roles in 'The Phantom of the Opera'?",
                "Answer": "SELECT COUNT(*) FROM actor WHERE Musical_ID = (SELECT Musical_ID FROM musical WHERE Name = 'The Phantom of the Opera')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 328,
        "db": "musical",
        "interaction": [
            {
                "User": "Add a new musical called 'Hamilton' that won a Tony Award for Best Musical in 2016.",
                "Answer": "INSERT INTO musical (Name, Year, Award, Category, Nominee, Result) VALUES ('Hamilton', 2016, 'Tony Award', 'Best Musical', 'Lin-Manuel Miranda', 'Won')"
            },
            {
                "User": "Update the award result for 'The Phantom of the Opera' to 'Won'.",
                "Answer": "UPDATE musical SET Result = 'Won' WHERE Name = 'The Phantom of the Opera'"
            },
            {
                "User": "Create a new table for theater locations with columns for location ID, name, and seating capacity.",
                "Answer": "CREATE TABLE theater_locations (Location_ID number PRIMARY KEY, Name text, Seating_Capacity number)"
            },
            {
                "User": "Insert a new record into the actor table for an actor named 'Lin-Manuel Miranda' who played 'Alexander Hamilton' in 'Hamilton' from 2015 with age 35.",
                "Answer": "INSERT INTO actor (Name, Musical_ID, Character, Duration, age) VALUES ('Lin-Manuel Miranda', (SELECT Musical_ID FROM musical WHERE Name = 'Hamilton'), 'Alexander Hamilton', '2015—', 35)"
            },
            {
                "User": "Add a new column to the musical table to indicate whether the musical is currently running or not.",
                "Answer": "ALTER TABLE musical ADD COLUMN Currently_Running text"
            },
            {
                "User": "Set the 'Currently_Running' status of 'The Phantom of the Opera' to 'Yes'.",
                "Answer": "UPDATE musical SET Currently_Running = 'Yes' WHERE Name = 'The Phantom of the Opera'"
            },
            {
                "User": "Add a new actor named 'Chris Jackson' who played 'George Washington' in the musical with ID 4, starting from 2015 until 2016, and is 40 years old.",
                "Answer": "INSERT INTO actor (Name, Musical_ID, Character, Duration, age) VALUES ('Chris Jackson', 4, 'George Washington', '2015—2016', 40)"
            },
            {
                "User": "List all musicals that have won a Tony Award and are currently running.",
                "Answer": "SELECT * FROM musical WHERE Award = 'Tony Award' AND Result = 'Won' AND Currently_Running = 'Yes'"
            },
            {
                "User": "Who are the nominees for the Best Direction of a Musical category?",
                "Answer": "SELECT Nominee FROM musical WHERE Category = 'Best Direction of a Musical'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 329,
        "db": "coffee_shop",
        "interaction": [
            {
                "User": "I want to add a new shop located at 2000 Innovation Drive with 15 staff members, a score of 45, and opened in 2021.",
                "Answer": "INSERT INTO shop (Address, Num_of_staff, Score, Open_Year) VALUES ('2000 Innovation Drive', '15', 45, '2021')"
            },
            {
                "User": "Can we update the score of the shop at 1200 Main Street to 50?",
                "Answer": "UPDATE shop SET Score = 50 WHERE Address = '1200 Main Street'"
            },
            {
                "User": "Create a new table to track the coffee bean suppliers with fields for supplier ID, name, address, and phone number. Make sure to add primary key.",
                "Answer": "CREATE TABLE coffee_suppliers (Supplier_ID number PRIMARY KEY, Name text, Address text, Phone_number text)"
            },
            {
                "User": "Let's add a column to the member table to record the favorite coffee of each member.",
                "Answer": "ALTER TABLE member ADD Favorite_Coffee text"
            },
            {
                "User": "Insert a new member with the following details: Name: 'Taylor Swift', Membership card: 'Gold', Age: 31, Time of purchase: 25, Level of membership: 7, Address: 'Nashville', Favorite coffee: 'Latte'.",
                "Answer": "INSERT INTO member (Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address, Favorite_Coffee) VALUES ('Taylor Swift', 'Gold', 31, 25, 7, 'Nashville', 'Latte')"
            },
            {
                "User": "Update the time of purchase for member Ashby, Lazale to 20.",
                "Answer": "UPDATE member SET Time_of_purchase = 20 WHERE Name = 'Ashby, Lazale'"
            },
            {
                "User": "I want to create a new table for seasonal offers with columns for offer ID, shop ID, offer description, and valid until date.",
                "Answer": "CREATE TABLE seasonal_offers (Offer_ID number PRIMARY KEY, Shop_ID number, Description text, Valid_Until text)"
            },
            {
                "User": "Can we add a new happy hour entry for shop 2 in July with 8 staff in charge?",
                "Answer": "INSERT INTO happy_hour (Shop_ID, Month, Num_of_shaff_in_charge) VALUES (2, 'July', 8)"
            },
            {
                "User": "Let's record a new happy hour member participation. Happy hour ID: 2, Member ID: 1, and the total amount spent: 35.5.",
                "Answer": "INSERT INTO happy_hour_member (HH_ID, Member_ID, Total_amount) VALUES (2, 1, 35.5)"
            },
            {
                "User": "Alter the shop table to add a new column for the email address of the shop manager.",
                "Answer": "ALTER TABLE shop ADD Manager_Email text"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 330,
        "db": "insurance_policies",
        "interaction": [
            {
                "User": "I'd like to add a new customer named John Doe with ID 16.",
                "Answer": "INSERT INTO Customers (Customer_ID, Customer_Details) VALUES (16, 'John Doe');"
            },
            {
                "User": "Update the end date for policy ID 119 to 2023-12-31.",
                "Answer": "UPDATE Customer_Policies SET End_Date = '2023-12-31' WHERE Policy_ID = 119;"
            },
            {
                "User": "Create a new table to track customer contacts with columns for Contact_ID, Customer_ID, Contact_Type, and Contact_Details.",
                "Answer": "CREATE TABLE Customer_Contacts (Contact_ID number PRIMARY KEY, Customer_ID number, Contact_Type text, Contact_Details text);"
            },
            {
                "User": "Insert a record for a phone contact with customer ID 2, assign the next available Contact_ID.",
                "Answer": "INSERT INTO Customer_Contacts (Contact_ID, Customer_ID, Contact_Type, Contact_Details) VALUES ((SELECT MAX(Contact_ID) + 1 FROM Customer_Contacts), 2, 'Phone', 'Called for policy renewal');"
            },
            {
                "User": "Add a new column 'Status' to the Customer_Policies table to indicate if the policy is active or expired.",
                "Answer": "ALTER TABLE Customer_Policies ADD COLUMN Status text;"
            },
            {
                "User": "Set the status of all policies starting after 2020-01-01 to 'Active'.",
                "Answer": "UPDATE Customer_Policies SET Status = 'Active' WHERE Start_Date > '2020-01-01';"
            },
            {
                "User": "How many payments were made using Visa?",
                "Answer": "SELECT COUNT(*) FROM Payments WHERE Payment_Method_Code = 'Visa';"
            },
            {
                "User": "Can we track the email addresses of our customers? Please add an Email column to the Customers table.",
                "Answer": "ALTER TABLE Customers ADD COLUMN Email text;"
            },
            {
                "User": "Add an email address 'john.doe@example.com' for customer ID 16.",
                "Answer": "UPDATE Customers SET Email = 'john.doe@example.com' WHERE Customer_ID = 16;"
            },
            {
                "User": "I need to record a new claim made today for policy ID 141 with an amount claimed of 5000. Assign the next available Claim_ID.",
                "Answer": "INSERT INTO Claims (Claim_ID, Policy_ID, Date_Claim_Made, Amount_Claimed) VALUES ((SELECT MAX(Claim_ID) + 1 FROM Claims), 141, CURRENT_DATE, 5000);"
            },
            {
                "User": "List the full details of all active policies.",
                "Answer": "SELECT * FROM Customer_Policies WHERE Status = 'Active';"
            },
            {
                "User": "Create a table to store information about policy renewals with columns for Renewal_ID, Policy_ID, Renewal_Date, and Renewal_Fee.",
                "Answer": "CREATE TABLE Policy_Renewals (Renewal_ID number PRIMARY KEY, Policy_ID number, Renewal_Date time, Renewal_Fee number);"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 331,
        "db": "cre_Drama_Workshop_Groups",
        "interaction": [
            {
                "User": "How many drama workshop groups are in Feliciaberg City?",
                "Answer": "SELECT count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = 'Feliciaberg'"
            },
            {
                "User": "What is the group's name?",
                "Answer": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = 'Feliciaberg'"
            },
            {
                "User": "In what state is it located?",
                "Answer": "SELECT T1.State_County FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = 'Feliciaberg'"
            },
            {
                "User": "What is the exact address? | Do you mean line 1 of address? | yes",
                "Answer": "SELECT T1.Line_1 FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = 'Feliciaberg'"
            },
            {
                "User": "Can you add a new payment method called 'Crypto' with the description 'cryptocurrency'?",
                "Answer": "INSERT INTO Ref_Payment_Methods (payment_method_code, payment_method_description) VALUES ('Crypto', 'cryptocurrency')"
            },
            {
                "User": "I'd like to update the description of the 'Visa' payment method to 'Visa Credit Card'.",
                "Answer": "UPDATE Ref_Payment_Methods SET payment_method_description = 'Visa Credit Card' WHERE payment_method_code = 'Visa'"
            },
            {
                "User": "Create a new table for workshop ratings with columns for workshop ID, customer ID, and rating out of 5.",
                "Answer": "CREATE TABLE Workshop_Ratings (Workshop_ID number, Customer_ID number, Rating number CHECK (Rating BETWEEN 1 AND 5), PRIMARY KEY (Workshop_ID, Customer_ID))"
            },
            {
                "User": "Add a column for 'Max_Capacity' to the 'Drama_Workshop_Groups' table.",
                "Answer": "ALTER TABLE Drama_Workshop_Groups ADD Max_Capacity number"
            },
            {
                "User": "Set the maximum capacity of the workshop group with ID 136 to 50.",
                "Answer": "UPDATE Drama_Workshop_Groups SET Max_Capacity = 50 WHERE Workshop_Group_ID = 136"
            },
            {
                "User": "I need to cancel the booking with ID 2. Can you update the status to 'cancelled'?",
                "Answer": "UPDATE Bookings SET Status_Code = 'cancelled' WHERE Booking_ID = 2"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 332,
        "db": "cre_Drama_Workshop_Groups",
        "interaction": [
            {
                "User": "Can we start tracking the preferred payment method for each client?",
                "Answer": "ALTER TABLE Clients ADD COLUMN Preferred_Payment_Method_Code TEXT"
            },
            {
                "User": "Set the preferred payment method for client with ID 423 to 'Visa'.",
                "Answer": "UPDATE Clients SET Preferred_Payment_Method_Code = 'Visa' WHERE Client_ID = 423"
            },
            {
                "User": "Create a table to store feedback from customers about our workshops.",
                "Answer": "CREATE TABLE Workshop_Feedback (Feedback_ID NUMBER PRIMARY KEY, Customer_ID NUMBER, Workshop_Group_ID NUMBER, Feedback_Text TEXT, Rating NUMBER)"
            },
            {
                "User": "Insert a new product into the product list with ID 200, name 'Drama Masks', price 15.99.",
                "Answer": "INSERT INTO Products (Product_ID, Product_Name, Product_Price) VALUES ('200', 'Drama Masks', 15.99)"
            },
            {
                "User": "We need to record the duration of each workshop. Can you add a column for that in the drama workshop groups table?",
                "Answer": "ALTER TABLE Drama_Workshop_Groups ADD COLUMN Workshop_Duration_Hours NUMBER"
            },
            {
                "User": "Update the store with ID '150' to have a new phone number '+65(2)3590790358'.",
                "Answer": "UPDATE Stores SET Store_Phone = '+65(2)3590790358' WHERE Store_ID = '150'"
            },
            {
                "User": "Add a new performer with ID 400, address ID 124, named 'Alex', phone '555-1234', and email 'alex@example.com'.",
                "Answer": "INSERT INTO Performers (Performer_ID, Address_ID, Customer_Name, Customer_Phone, Customer_Email_Address) VALUES (400, 124, 'Alex', '555-1234', 'alex@example.com')"
            },
            {
                "User": "The marketing team needs a new region added for 'Brazil' with the code 'BR'.",
                "Answer": "INSERT INTO Marketing_Regions (Marketing_Region_Code, Marketing_Region_Name, Marketing_Region_Descriptrion) VALUES ('BR', 'Brazil', '')"
            },
            {
                "User": "How many customers have we added a preferred payment method for?",
                "Answer": "SELECT count(*) FROM Clients WHERE Preferred_Payment_Method_Code IS NOT NULL"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 333,
        "db": "shop_membership",
        "interaction": [
            {
                "User": "Add a new member with ID 11, card number 'LX200', named 'Alice Johnson', from 'Oxford, UK', and a level 5 membership.",
                "Answer": "INSERT INTO member (Member_ID, Card_Number, Name, Hometown, Level) VALUES (11, 'LX200', 'Alice Johnson', 'Oxford, UK', 5)"
            },
            {
                "User": "Update the address of the branch with ID 2 to 'Pine Avenue, London'.",
                "Answer": "UPDATE branch SET Address_road = 'Pine Avenue, London' WHERE Branch_ID = 2"
            },
            {
                "User": "Create a new table to track the member's favorite products with columns for Member_ID, Product_ID, and Product_Name.",
                "Answer": "CREATE TABLE favorite_products (Member_ID number, Product_ID number, Product_Name text, PRIMARY KEY (Member_ID, Product_ID))"
            },
            {
                "User": "Add a new column 'Email' to the member table to store the members' email addresses.",
                "Answer": "ALTER TABLE member ADD Email text"
            },
            {
                "User": "Insert a new branch with ID 9, named 'Westminster', opened in 2021, located on 'Baker Street', in the city 'London', with a membership amount of '50'.",
                "Answer": "INSERT INTO branch (Branch_ID, Name, Open_year, Address_road, City, membership_amount) VALUES (9, 'Westminster', '2021', 'Baker Street', 'London', '50')"
            },
            {
                "User": "Register the new member with ID 11 at branch ID 9 for the year 2023.",
                "Answer": "INSERT INTO membership_register_branch (Member_ID, Branch_ID, Register_Year) VALUES (11, '9', '2023')"
            },
            {
                "User": "Record a new purchase for member ID 11 at branch ID 9 in the year 2023 for a total of 1500 pounds.",
                "Answer": "INSERT INTO purchase (Member_ID, Branch_ID, Year, Total_pounds) VALUES (11, '9', '2023', 1500)"
            },
            {
                "User": "Change the hometown of member ID 3 to 'Lexington, Kentucky'.",
                "Answer": "UPDATE member SET Hometown = 'Lexington, Kentucky' WHERE Member_ID = 3"
            },
            {
                "User": "Add a favorite product for member ID 1 with Product_ID 101 and Product_Name 'Organic Honey'.",
                "Answer": "INSERT INTO favorite_products (Member_ID, Product_ID, Product_Name) VALUES (1, 101, 'Organic Honey')"
            },
            {
                "User": "How many members have registered at branch ID 1?",
                "Answer": "SELECT COUNT(*) FROM membership_register_branch WHERE Branch_ID = '1'"
            },
            {
                "User": "Increase the level of all members from 'Louisville, Kentucky' by 1.",
                "Answer": "UPDATE member SET Level = Level + 1 WHERE Hometown = 'Louisville, Kentucky'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 334,
        "db": "shop_membership",
        "interaction": [
            {
                "User": "I want to add a new member called Alice Smith from Oxford with a level 4 membership and her card number is AB123.",
                "Answer": "INSERT INTO member (Name, Hometown, Level, Card_Number) VALUES ('Alice Smith', 'Oxford', 4, 'AB123')"
            },
            {
                "User": "Update the address of the branch with Branch_ID 2 to 'Pine Road, London'.",
                "Answer": "UPDATE branch SET Address_road = 'Pine Road, London' WHERE Branch_ID = 2"
            },
            {
                "User": "Create a new table to track member's email addresses with columns for Member_ID and Email.",
                "Answer": "CREATE TABLE member_email (Member_ID number PRIMARY KEY, Email text)"
            },
            {
                "User": "Add John Doe's email address, john.doe@example.com, to the new email table. His Member_ID is 4.",
                "Answer": "INSERT INTO member_email (Member_ID, Email) VALUES (4, 'john.doe@example.com')"
            },
            {
                "User": "Create a new table to log customer complaints with the following columns: Complaint_ID, Member_ID, Complaint_Text, and Date.",
                "Answer": "CREATE TABLE customer_complaints (Complaint_ID number PRIMARY KEY, Member_ID number, Complaint_Text text, Date text)"
            },
            {
                "User": "Log a new complaint for member with Member_ID 3 about a defective product purchased on 2021-03-15.",
                "Answer": "INSERT INTO customer_complaints (Member_ID, Complaint_Text, Date) VALUES (3, 'Defective product', '2021-03-15')"
            },
            {
                "User": "Add a new column 'Email' to the member table to store the email addresses.",
                "Answer": "ALTER TABLE member ADD Email text"
            },
            {
                "User": "Record a purchase of 500 pounds for member with Member_ID 2 at branch 3 for the year 2021.",
                "Answer": "INSERT INTO purchase (Member_ID, Branch_ID, Year, Total_pounds) VALUES (2, '3', '2021', 500)"
            },
            {
                "User": "Increase the membership level of Jeremy Jarmon to level 7.",
                "Answer": "UPDATE member SET Level = 7 WHERE Name = 'Jeremy Jarmon'"
            },
            {
                "User": "Register the new member Alice Smith with Member_ID 11 at branch 1 for the year 2023.",
                "Answer": "INSERT INTO membership_register_branch (Member_ID, Branch_ID, Register_Year) VALUES (11, '1', '2023')"
            },
            {
                "User": "How many members have registered at branch 1?",
                "Answer": "SELECT count(*) FROM membership_register_branch WHERE Branch_ID = '1'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 335,
        "db": "entrepreneur",
        "interaction": [
            {
                "User": "Can you add a record for a new entrepreneur who is requesting $100,000 from investor 'Peter Jones'?",
                "Answer": "INSERT INTO entrepreneur (Entrepreneur_ID, People_ID, Company, Money_Requested, Investor) VALUES (7, 4, 'Innovate Ltd', 100000, 'Peter Jones')"
            },
            {
                "User": "I want to update the money requested by 'Umbrolly' to $200,000. Can you do that?",
                "Answer": "UPDATE entrepreneur SET Money_Requested = 200000 WHERE Company = 'Umbrolly'"
            },
            {
                "User": "Can we create a new table to track the investments made by each investor, including the investor's name and the total amount invested?",
                "Answer": "CREATE TABLE investor_summary (Investor_Name text, Total_Invested number)"
            },
            {
                "User": "Now, can you populate the investor_summary table with the current data we have?",
                "Answer": "INSERT INTO investor_summary (Investor_Name, Total_Invested) SELECT Investor, SUM(Money_Requested) FROM entrepreneur GROUP BY Investor"
            },
            {
                "User": "Let's add a new column to the people table to record their email addresses. Can you do that?",
                "Answer": "ALTER TABLE people ADD COLUMN Email text"
            },
            {
                "User": "Please insert the email address 'francesco@example.com' for the person with People_ID 1.",
                "Answer": "UPDATE people SET Email = 'francesco@example.com' WHERE People_ID = 1"
            },
            {
                "User": "Can you create a view that shows the company name and the full name of the entrepreneur?",
                "Answer": "CREATE VIEW company_owners AS SELECT e.Company, p.Name FROM entrepreneur e JOIN people p ON e.People_ID = p.People_ID"
            },
            {
                "User": "I need to correct the weight of 'Fabrizio Buonocore'. His new weight is 48 kg. Can you update this information?",
                "Answer": "UPDATE people SET Weight = 48 WHERE Name = 'Fabrizio Buonocore'"
            },
            {
                "User": "Can you show me the updated list of all companies with their respective investors and the money requested?",
                "Answer": "SELECT Company, Investor, Money_Requested FROM entrepreneur"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 336,
        "db": "entrepreneur",
        "interaction": [
            {
                "User": "Add a new entrepreneur named John Doe with People_ID 4, requesting $200000 for company 'Innovatech' with no investor yet.",
                "Answer": "INSERT INTO entrepreneur (People_ID, Company, Money_Requested, Investor) VALUES (4, 'Innovatech', 200000, NULL)"
            },
            {
                "User": "Update the investment amount requested by 'Umbrolly' to $180000.",
                "Answer": "UPDATE entrepreneur SET Money_Requested = 180000 WHERE Company = 'Umbrolly'"
            },
            {
                "User": "Create a new table to record investments with columns for investment ID, entrepreneur ID, investor name, and amount.",
                "Answer": "CREATE TABLE investments (Investment_ID number PRIMARY KEY, Entrepreneur_ID number, Investor_Name text, Amount number)"
            },
            {
                "User": "Insert a new record into the investments table for entrepreneur ID 1 with investor 'Peter Jones' for an amount of $75000.",
                "Answer": "INSERT INTO investments (Investment_ID, Entrepreneur_ID, Investor_Name, Amount) VALUES (1, 1, 'Peter Jones', 75000)"
            },
            {
                "User": "Add a new column to the entrepreneur table to track the status of the investment as 'Pending', 'Accepted', or 'Rejected'.",
                "Answer": "ALTER TABLE entrepreneur ADD COLUMN Investment_Status text"
            },
            {
                "User": "Set the investment status of 'Umbrolly' to 'Accepted'.",
                "Answer": "UPDATE entrepreneur SET Investment_Status = 'Accepted' WHERE Company = 'Umbrolly'"
            },
            {
                "User": "Who is the investor for the company with the highest amount of money requested?",
                "Answer": "SELECT Investor FROM entrepreneur ORDER BY Money_Requested DESC LIMIT 1"
            },
            {
                "User": "Register a new person named Alice Smith with People_ID 9, height 1.65m, weight 54kg, and date of birth 1990-05-15.",
                "Answer": "INSERT INTO people (People_ID, Name, Height, Weight, Date_of_Birth) VALUES (9, 'Alice Smith', 1.65, 54, '1990-05-15')"
            },
            {
                "User": "How many entrepreneurs have requested more than $100000?",
                "Answer": "SELECT COUNT(*) FROM entrepreneur WHERE Money_Requested > 100000"
            },
            {
                "User": "Delete the investor record for 'Le Beanock' as the deal fell through.",
                "Answer": "UPDATE entrepreneur SET Investor = NULL WHERE Company = 'Le Beanock'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 337,
        "db": "entertainment_awards",
        "interaction": [
            {
                "User": "Add a new festival called 'Global Music Awards' taking place in Canada in 2021 with 200 attendees.",
                "Answer": "INSERT INTO festival_detail (Festival_Name, Chair_Name, Location, Year, Num_of_Audience) VALUES ('Global Music Awards', NULL, 'Canada', 2021, 200)"
            },
            {
                "User": "Update the number of attendees for the 'Flower Awards' in 2007 to 180.",
                "Answer": "UPDATE festival_detail SET Num_of_Audience = 180 WHERE Festival_Name = 'Flower Awards' AND Year = 2007"
            },
            {
                "User": "Create a new table to track the sponsors of each festival with sponsor name and the amount they contributed.",
                "Answer": "CREATE TABLE festival_sponsors (Sponsor_ID number PRIMARY KEY, Festival_ID number, Sponsor_Name text, Contribution_Amount number, FOREIGN KEY (Festival_ID) REFERENCES festival_detail(Festival_ID))"
            },
            {
                "User": "Add a sponsor called 'ArtVision' who contributed $5000 to the 'Cherry Awards'.",
                "Answer": "INSERT INTO festival_sponsors (Sponsor_ID, Festival_ID, Sponsor_Name, Contribution_Amount) VALUES (1, 3, 'ArtVision', 5000)"
            },
            {
                "User": "How much did 'ArtVision' contribute to the 'Cherry Awards'?",
                "Answer": "SELECT Contribution_Amount FROM festival_sponsors WHERE Sponsor_Name = 'ArtVision' AND Festival_ID = (SELECT Festival_ID FROM festival_detail WHERE Festival_Name = 'Cherry Awards')"
            },
            {
                "User": "Which festivals had more than 150 attendees?",
                "Answer": "SELECT Festival_Name FROM festival_detail WHERE Num_of_Audience > 150"
            },
            {
                "User": "Add a column to track the duration of each festival in days.",
                "Answer": "ALTER TABLE festival_detail ADD COLUMN Duration_Days number"
            },
            {
                "User": "Set the duration of the 'Panasonic Awards' to 5 days.",
                "Answer": "UPDATE festival_detail SET Duration_Days = 5 WHERE Festival_Name = 'Panasonic Awards'"
            },
            {
                "User": "What is the total number of attendees for all the festivals in 2007?",
                "Answer": "SELECT SUM(Num_of_Audience) FROM festival_detail WHERE Year = 2007"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 338,
        "db": "entertainment_awards",
        "interaction": [
            {
                "User": "Add a new festival called 'Global Music Awards' taking place in Canada in 2021 with 200 expected audience members.",
                "Answer": "INSERT INTO festival_detail (Festival_Name, Chair_Name, Location, Year, Num_of_Audience) VALUES ('Global Music Awards', 'TBA', 'Canada', 2021, 200)"
            },
            {
                "User": "Update the chair name for the 'Global Music Awards' to 'Alexis Jordan'.",
                "Answer": "UPDATE festival_detail SET Chair_Name = 'Alexis Jordan' WHERE Festival_Name = 'Global Music Awards'"
            },
            {
                "User": "Create a new table to store judges' information with their ID, full name, and nationality.",
                "Answer": "CREATE TABLE judges (Judge_ID number PRIMARY KEY, FullName text, Nationality text)"
            },
            {
                "User": "Insert a record for a judge named 'Michael Smith' from the United States.",
                "Answer": "INSERT INTO judges (Judge_ID, FullName, Nationality) VALUES (1, 'Michael Smith', 'United States')"
            },
            {
                "User": "Add a new column to the artwork table to store the year of creation.",
                "Answer": "ALTER TABLE artwork ADD COLUMN Year_Created number"
            },
            {
                "User": "Set the year of creation for 'Indonesian Idol' to 2002.",
                "Answer": "UPDATE artwork SET Year_Created = 2002 WHERE Name = 'Indonesian Idol'"
            },
            {
                "User": "How many festivals are there in the United States?",
                "Answer": "SELECT COUNT(*) FROM festival_detail WHERE Location = 'United States'"
            },
            {
                "User": "Add a new artwork called 'Dance Battle' with type 'Dance Show'.",
                "Answer": "INSERT INTO artwork (Type, Name) VALUES ('Dance Show', 'Dance Battle')"
            },
            {
                "User": "Nominate 'Dance Battle' for the 'Global Music Awards'.",
                "Answer": "INSERT INTO nomination (Artwork_ID, Festival_ID, Result) VALUES ((SELECT Artwork_ID FROM artwork WHERE Name = 'Dance Battle'), (SELECT Festival_ID FROM festival_detail WHERE Festival_Name = 'Global Music Awards'), 'Nominated')"
            },
            {
                "User": "Create a table to store audience feedback with a rating out of 10.",
                "Answer": "CREATE TABLE audience_feedback (Feedback_ID number PRIMARY KEY, Festival_ID number, Rating number, Comment text)"
            },
            {
                "User": "Insert a positive feedback with a rating of 8 for the 'Flower Awards'.",
                "Answer": "INSERT INTO audience_feedback (Festival_ID, Rating, Comment) VALUES ((SELECT Festival_ID FROM festival_detail WHERE Festival_Name = 'Flower Awards'), 8, 'Great experience!')"
            },
            {
                "User": "List all the festivals that took place in 2007.",
                "Answer": "SELECT * FROM festival_detail WHERE Year = 2007"
            },
            {
                "User": "Show the average number of audience members for the festivals in the dataset.",
                "Answer": "SELECT AVG(Num_of_Audience) FROM festival_detail"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 339,
        "db": "flight_4",
        "interaction": [
            {
                "User": "Add a new airline called 'SkyFly' with IATA code 'SF', based in 'United States' and currently active.",
                "Answer": "INSERT INTO airlines (name, iata, country, active) VALUES ('SkyFly', 'SF', 'United States', 'Y')"
            },
            {
                "User": "Update the callsign of '135 Airways' to 'GENERAL HQ'.",
                "Answer": "UPDATE airlines SET callsign = 'GENERAL HQ' WHERE alid = 2"
            },
            {
                "User": "Create a new table to track frequent flyer members with member ID, name, and total miles.",
                "Answer": "CREATE TABLE frequent_flyers (member_id number PRIMARY KEY, name text, total_miles number)"
            },
            {
                "User": "Insert three members into the frequent flyers table with the following details: (1, 'John Doe', 15000), (2, 'Jane Smith', 24000), (3, 'Alice Johnson', 31000).",
                "Answer": "INSERT INTO frequent_flyers (member_id, name, total_miles) VALUES (1, 'John Doe', 15000), (2, 'Jane Smith', 24000), (3, 'Alice Johnson', 31000)"
            },
            {
                "User": "Which airline has the IATA code '2B'?",
                "Answer": "SELECT * FROM airlines WHERE iata = '2B'"
            },
            {
                "User": "Alter the 'airports' table to include a new column 'timezone' with text data type.",
                "Answer": "ALTER TABLE airports ADD COLUMN timezone text"
            },
            {
                "User": "Set the timezone for 'Goroka Airport' to 'Pacific/Port_Moresby'.",
                "Answer": "UPDATE airports SET timezone = 'Pacific/Port_Moresby' WHERE apid = 1"
            },
            {
                "User": "Create a view that lists all active airlines with their respective country.",
                "Answer": "CREATE VIEW active_airlines AS SELECT name, country FROM airlines WHERE active = 'Y'"
            },
            {
                "User": "How many airlines are active in the United States?",
                "Answer": "SELECT count(*) FROM airlines WHERE country = 'United States' AND active = 'Y'"
            },
            {
                "User": "Add a new route from airport ID 2965 to airport ID 2990 operated by the newly added airline 'SkyFly'.",
                "Answer": "INSERT INTO routes (dst_apid, src_apid, airline) VALUES (2990, 2965, 'SkyFly')"
            },
            {
                "User": "Show all routes that originate from 'Goroka Airport'.",
                "Answer": "SELECT * FROM routes WHERE src_apid = (SELECT apid FROM airports WHERE name = 'Goroka Airport')"
            },
            {
                "User": "Which airlines operate out of 'Madang Airport'?",
                "Answer": "SELECT DISTINCT airline FROM routes WHERE src_apid = (SELECT apid FROM airports WHERE name = 'Madang Airport')"
            },
            {
                "User": "Delete the route with rid 37.",
                "Answer": "DELETE FROM routes WHERE rid = 37"
            },
            {
                "User": "Add a column 'last_maintenance_date' of type DATE to the 'airlines' table.",
                "Answer": "ALTER TABLE airlines ADD COLUMN last_maintenance_date DATE"
            },
            {
                "User": "Set the last maintenance date for '135 Airways' to '2023-03-15'.",
                "Answer": "UPDATE airlines SET last_maintenance_date = '2023-03-15' WHERE alid = 2"
            },
            {
                "User": "Create a table to log incidents with columns for incident ID, airline ID, description, and date.",
                "Answer": "CREATE TABLE incidents (incident_id number PRIMARY KEY, airline_id number, description text, incident_date DATE)"
            },
            {
                "User": "Log an incident for airline with ID 1 with the description 'Emergency landing due to engine failure' on '2023-03-20'.",
                "Answer": "INSERT INTO incidents (incident_id, airline_id, description, incident_date) VALUES (1, 1, 'Emergency landing due to engine failure', '2023-03-20')"
            },
            {
                "User": "How many routes are operated by the airline with the name 'Private flight'?",
                "Answer": "SELECT count(*) FROM routes WHERE airline = (SELECT name FROM airlines WHERE name = 'Private flight')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 340,
        "db": "gymnast",
        "interaction": [
            {
                "User": "Add a new gymnast with ID 12, who scored 9.8 on Floor Exercise, 9.7 on Pommel Horse, 9.6 on Rings, 9.5 on Vault, 9.9 on Parallel Bars, 9.85 on Horizontal Bar, and a total of 58.35 points.",
                "Answer": "INSERT INTO gymnast (Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points) VALUES (12, 9.8, 9.7, 9.6, 9.5, 9.9, 9.85, 58.35)"
            },
            {
                "User": "Update the age of Lorraine Súarez Carmona to 22.",
                "Answer": "UPDATE people SET Age = 22 WHERE Name = 'Lorraine Súarez Carmona'"
            },
            {
                "User": "Create a new table to track the coaches with columns for Coach_ID, Name, and Nationality.",
                "Answer": "CREATE TABLE coaches (Coach_ID number PRIMARY KEY, Name text, Nationality text)"
            },
            {
                "User": "Insert records for three coaches with the following details: Coach 1 - Anna Smith from USA, Coach 2 - Boris Ivanov from Russia, Coach 3 - Carlos Diaz from Spain.",
                "Answer": "INSERT INTO coaches (Coach_ID, Name, Nationality) VALUES (1, 'Anna Smith', 'USA'), (2, 'Boris Ivanov', 'Russia'), (3, 'Carlos Diaz', 'Spain')"
            },
            {
                "User": "Add a column to the gymnast table to reference their coach's ID.",
                "Answer": "ALTER TABLE gymnast ADD COLUMN Coach_ID number"
            },
            {
                "User": "Assign Coach Anna Smith to the gymnast with ID 1.",
                "Answer": "UPDATE gymnast SET Coach_ID = (SELECT Coach_ID FROM coaches WHERE Name = 'Anna Smith') WHERE Gymnast_ID = 1"
            },
            {
                "User": "How many gymnasts are currently assigned to Coach Anna Smith?",
                "Answer": "SELECT COUNT(*) FROM gymnast WHERE Coach_ID = (SELECT Coach_ID FROM coaches WHERE Name = 'Anna Smith')"
            },
            {
                "User": "Show the names of gymnasts and their coaches.",
                "Answer": "SELECT T1.Name AS Gymnast_Name, T2.Name AS Coach_Name FROM people AS T1 JOIN gymnast AS T3 ON T1.People_ID = T3.Gymnast_ID JOIN coaches AS T2 ON T3.Coach_ID = T2.Coach_ID"
            },
            {
                "User": "Delete the record of the gymnast who has the lowest total points.",
                "Answer": "DELETE FROM gymnast WHERE Total_Points = (SELECT MIN(Total_Points) FROM gymnast)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 341,
        "db": "activity_1",
        "interaction": [
            {
                "User": "Add a new student with ID 1061, last name 'Brown', first name 'James', age 20, sex 'M', major 601, advisor 1121, and city code 'NYC'.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1061, 'Brown', 'James', 20, 'M', 601, 1121, 'NYC')"
            },
            {
                "User": "Update the phone number of faculty with ID 1121 to 5555.",
                "Answer": "UPDATE Faculty SET Phone = 5555 WHERE FacID = 1121"
            },
            {
                "User": "Create a new table for storing major details with columns major_id (number) and major_name (text), where major_id is the primary key.",
                "Answer": "CREATE TABLE Major_Details (major_id number PRIMARY KEY, major_name text)"
            },
            {
                "User": "Insert three new majors into the Major_Details table: (600, 'Computer Science'), (601, 'Mathematics'), (602, 'Physics').",
                "Answer": "INSERT INTO Major_Details (major_id, major_name) VALUES (600, 'Computer Science'), (601, 'Mathematics'), (602, 'Physics')"
            },
            {
                "User": "Add a new column 'Email' of type text to the Faculty table.",
                "Answer": "ALTER TABLE Faculty ADD COLUMN Email text"
            },
            {
                "User": "Set the email of faculty with ID 1082 to 'mark.giuliano@university.edu'.",
                "Answer": "UPDATE Faculty SET Email = 'mark.giuliano@university.edu' WHERE FacID = 1082"
            },
            {
                "User": "Create a new table for campus buildings with columns building_code (text), building_name (text), and capacity (number).",
                "Answer": "CREATE TABLE Campus_Buildings (building_code text PRIMARY KEY, building_name text, capacity number)"
            },
            {
                "User": "Insert a new building into the Campus_Buildings table with code 'NEB', name 'New Engineering Building', and capacity 500.",
                "Answer": "INSERT INTO Campus_Buildings (building_code, building_name, capacity) VALUES ('NEB', 'New Engineering Building', 500)"
            },
            {
                "User": "Add a new faculty member with ID 1150, last name 'Wilson', first name 'Emma', rank 'Assistant Professor', sex 'F', phone number 1234, room '101A', and building 'NEB'.",
                "Answer": "INSERT INTO Faculty (FacID, Lname, Fname, Rank, Sex, Phone, Room, Building) VALUES (1150, 'Wilson', 'Emma', 'Assistant Professor', 'F', 1234, '101A', 'NEB')"
            },
            {
                "User": "Show the list of all activities that student with ID 1001 participates in.",
                "Answer": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actid = T2.actid WHERE T2.stuid = 1001"
            },
            {
                "User": "Record a new participation for student ID 1004 in activity with ID 772.",
                "Answer": "INSERT INTO Participates_in (stuid, actid) VALUES (1004, 772)"
            },
            {
                "User": "How many faculty members are there in each building?",
                "Answer": "SELECT Building, COUNT(*) AS FacultyCount FROM Faculty GROUP BY Building"
            },
            {
                "User": "Update the major for student with ID 1003 to 602.",
                "Answer": "UPDATE Student SET Major = 602 WHERE StuID = 1003"
            },
            {
                "User": "Add a new column 'Department' of type text to the Faculty table.",
                "Answer": "ALTER TABLE Faculty ADD COLUMN Department text"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 342,
        "db": "activity_1",
        "interaction": [
            {
                "User": "Add a new student named John Doe, aged 20, male, majoring in 601, advised by 1121, living in city code LAX.",
                "Answer": "INSERT INTO Student (LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES ('Doe', 'John', 20, 'M', 601, 1121, 'LAX')"
            },
            {
                "User": "Update the phone number for Professor Goodrich to 1234.",
                "Answer": "UPDATE Faculty SET Phone = 1234 WHERE Lname = 'Goodrich'"
            },
            {
                "User": "Create a new table to track the departments, with department id, name, and the head of the department.",
                "Answer": "CREATE TABLE Department (DeptID number PRIMARY KEY, DeptName text, DeptHead number)"
            },
            {
                "User": "Add a new activity called 'Coding Marathon' to the activities list.",
                "Answer": "INSERT INTO Activity (activity_name) VALUES ('Coding Marathon')"
            },
            {
                "User": "Record that student with StuID 1002 participated in the 'Coding Marathon' activity.",
                "Answer": "INSERT INTO Participates_in (stuid, actid) VALUES (1002, 773)"
            },
            {
                "User": "Alter the Student table to include a new column 'Email' of type text.",
                "Answer": "ALTER TABLE Student ADD COLUMN Email text"
            },
            {
                "User": "Set the email for student John Doe to 'john.doe@example.com'.",
                "Answer": "UPDATE Student SET Email = 'john.doe@example.com' WHERE StuID = 1004"
            },
            {
                "User": "Professor Giuliano has been promoted to 'Associate Professor'. Update his rank.",
                "Answer": "UPDATE Faculty SET Rank = 'Associate Professor' WHERE FacID = 1082"
            },
            {
                "User": "Insert a new department called 'Computer Science' with DeptID 101 and head of the department being FacID 1121.",
                "Answer": "INSERT INTO Department (DeptID, DeptName, DeptHead) VALUES (101, 'Computer Science', 1121)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 343,
        "db": "music_4",
        "interaction": [
            {
                "User": "Can we add a new column to track the genre of each artist?",
                "Answer": "ALTER TABLE artist ADD COLUMN Genre text"
            },
            {
                "User": "I'd like to update the genre of Gorgoroth to 'Black Metal'.",
                "Answer": "UPDATE artist SET Genre = 'Black Metal' WHERE Artist = 'Gorgoroth'"
            },
            {
                "User": "Can we create a new table to store concert tours with columns for the tour ID, artist ID, tour name, start date, and end date?",
                "Answer": "CREATE TABLE concert_tours (Tour_ID number PRIMARY KEY, Artist_ID number, Tour_Name text, Start_Date text, End_Date text)"
            },
            {
                "User": "Please insert a new record into the concert_tours for Gorgoroth's 'Twilight of the Idols' tour starting on 'June 1, 2007' and ending on 'August 30, 2007'.",
                "Answer": "INSERT INTO concert_tours (Tour_ID, Artist_ID, Tour_Name, Start_Date, End_Date) VALUES (1, 1, 'Twilight of the Idols', 'June 1, 2007', 'August 30, 2007')"
            },
            {
                "User": "Can you show me all the music festivals where songs from the volume '45:14 §' were nominated?",
                "Answer": "SELECT * FROM music_festival WHERE Volume = 1 AND Result = 'Nominated'"
            },
            {
                "User": "Let's add a new volume issue to the database for the song 'Under the Sign of Hell' by Gorgoroth, released on 'June 20, 1997', which stayed 2 weeks on top.",
                "Answer": "INSERT INTO volume (Volume_ID, Volume_Issue, Issue_Date, Weeks_on_Top, Song, Artist_ID) VALUES (11, '45:17', 'June 20, 1997', 2, 'Under the Sign of Hell', 1)"
            },
            {
                "User": "Update the age of artist 'Ophiolatry' to 36.",
                "Answer": "UPDATE artist SET Age = 36 WHERE Artist = 'Ophiolatry'"
            },
            {
                "User": "Add a new artist called 'Enslaved' with an age of 30, a famous title 'Frost', and a release date of 'August 4, 1994'.",
                "Answer": "INSERT INTO artist (Artist_ID, Artist, Age, Famous_Title, Famous_Release_date) VALUES (8, 'Enslaved', 30, 'Frost', 'August 4, 1994')"
            },
            {
                "User": "Can we add a new column 'Country' to the artist table to indicate the country of origin?",
                "Answer": "ALTER TABLE artist ADD COLUMN Country text"
            },
            {
                "User": "Update the country of origin for 'Gorgoroth' to 'Norway'.",
                "Answer": "UPDATE artist SET Country = 'Norway' WHERE Artist = 'Gorgoroth'"
            },
            {
                "User": "Create a new table called 'awards' to store information about the awards won by artists with columns for award ID, artist ID, award name, and year.",
                "Answer": "CREATE TABLE awards (Award_ID number PRIMARY KEY, Artist_ID number, Award_Name text, Year text)"
            },
            {
                "User": "Insert a record into the awards table for Gorgoroth winning the 'Best Metal Performance' award in 2008.",
                "Answer": "INSERT INTO awards (Award_ID, Artist_ID, Award_Name, Year) VALUES (1, 1, 'Best Metal Performance', '2008')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 344,
        "db": "journal_committee",
        "interaction": [
            {
                "User": "Can you add a new editor named John Smith who is 42 years old?",
                "Answer": "INSERT INTO editor (Name, Age) VALUES ('John Smith', 42)"
            },
            {
                "User": "How many journals were sold on 'October 7, 2001'?",
                "Answer": "SELECT Sales FROM journal WHERE Date = 'October 7, 2001'"
            },
            {
                "User": "Please update the theme of the journal with ID 1 to 'New England Patriots'.",
                "Answer": "UPDATE journal SET Theme = 'New England Patriots' WHERE Journal_ID = 1"
            },
            {
                "User": "I'd like to know the total sales of journals where the theme included 'Dolphins'.",
                "Answer": "SELECT SUM(Sales) FROM journal WHERE Theme LIKE '%Dolphins%'"
            },
            {
                "User": "Let's create a new table for guest editors with columns for guest editor ID, name, and their contribution date.",
                "Answer": "CREATE TABLE guest_editor (Guest_Editor_ID number PRIMARY KEY, Name text, Contribution_Date text)"
            },
            {
                "User": "Insert a new record into the guest editor table for 'Emily Stone' who contributed on 'March 15, 2023'.",
                "Answer": "INSERT INTO guest_editor (Name, Contribution_Date) VALUES ('Emily Stone', 'March 15, 2023')"
            },
            {
                "User": "Please add a new column 'Email' to the editor table to store their email addresses.",
                "Answer": "ALTER TABLE editor ADD COLUMN Email text"
            },
            {
                "User": "Update the email address of the editor named 'Anna Powierza' to 'anna.powierza@example.com'.",
                "Answer": "UPDATE editor SET Email = 'anna.powierza@example.com' WHERE Name = 'Anna Powierza'"
            },
            {
                "User": "Can we add a column to the journal_committee table to indicate whether the editor is a permanent member?",
                "Answer": "ALTER TABLE journal_committee ADD COLUMN Is_Permanent text"
            },
            {
                "User": "Set the 'Is_Permanent' status of the editor with ID 1 in the journal_committee table to 'Yes'.",
                "Answer": "UPDATE journal_committee SET Is_Permanent = 'Yes' WHERE Editor_ID = 1"
            },
            {
                "User": "Create a new table to record the awards given to journals with columns for award ID, journal ID, award name, and the year it was awarded.",
                "Answer": "CREATE TABLE journal_awards (Award_ID number PRIMARY KEY, Journal_ID number, Award_Name text, Year_Awarded number)"
            },
            {
                "User": "Insert a record into the journal_awards table for journal ID 2 receiving the 'Best Design' award in the year 2021.",
                "Answer": "INSERT INTO journal_awards (Journal_ID, Award_Name, Year_Awarded) VALUES (2, 'Best Design', 2021)"
            },
            {
                "User": "Can you tell me how many editors are currently over the age of 40?",
                "Answer": "SELECT COUNT(*) FROM editor WHERE Age > 40"
            },
            {
                "User": "List all the work types that are associated with the journal ID 11 in the journal_committee table.",
                "Answer": "SELECT Work_Type FROM journal_committee WHERE Journal_ID = 11"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 345,
        "db": "journal_committee",
        "interaction": [
            {
                "User": "Show the names of editors of age either 24 or 25.",
                "Answer": "SELECT Name FROM editor WHERE Age = 24 OR Age = 25"
            },
            {
                "User": "List out the editors name? | sorry, did you mean you need the Editor ID | How many editor id's in the table?",
                "Answer": "SELECT count(Editor_ID) FROM editor"
            },
            {
                "User": "Can we add a new journal entry for a 'Technology' theme issue sold on 'March 10, 2023' with 1200 sales?",
                "Answer": "INSERT INTO journal (Date, Theme, Sales) VALUES ('March 10, 2023', 'Technology', 1200)"
            },
            {
                "User": "I need to correct the sales figure for the journal with ID 2, it should be 1500 not 994.",
                "Answer": "UPDATE journal SET Sales = 1500 WHERE Journal_ID = 2"
            },
            {
                "User": "Please create a new table for subscribers with ID, Name, and Subscription_Date columns.",
                "Answer": "CREATE TABLE subscribers (Subscriber_ID number PRIMARY KEY, Name text, Subscription_Date text)"
            },
            {
                "User": "We should track the email addresses of our editors. Can you add an Email column to the editor table?",
                "Answer": "ALTER TABLE editor ADD Email text"
            },
            {
                "User": "Insert a new editor with the name 'John Doe', age 29, and email 'john.doe@example.com'.",
                "Answer": "INSERT INTO editor (Name, Age, Email) VALUES ('John Doe', 29, 'john.doe@example.com')"
            },
            {
                "User": "The journal on 'October 7, 2001' was a special edition. Can we update its theme to 'Special Edition'?",
                "Answer": "UPDATE journal SET Theme = 'Special Edition' WHERE Date = 'October 7, 2001'"
            },
            {
                "User": "I want to see a list of all journals and their corresponding editors' names.",
                "Answer": "SELECT j.Journal_ID, e.Name FROM journal j JOIN journal_committee jc ON j.Journal_ID = jc.Journal_ID JOIN editor e ON jc.Editor_ID = e.Editor_ID"
            },
            {
                "User": "Let's add a new work type category called 'Review'. Can you update the work type for Editor ID 6 to 'Review'?",
                "Answer": "UPDATE journal_committee SET Work_Type = 'Review' WHERE Editor_ID = 6"
            },
            {
                "User": "Can we have a list of journals that have more than 1000 sales but are not themed 'Technology'?",
                "Answer": "SELECT * FROM journal WHERE Sales > 1000 AND Theme != 'Technology'"
            },
            {
                "User": "How many journals have been edited by 'Kamila Porczyk'?",
                "Answer": "SELECT count(*) FROM journal_committee jc JOIN editor e ON jc.Editor_ID = e.Editor_ID WHERE e.Name = 'Kamila Porczyk'"
            },
            {
                "User": "We need to keep track of editor's specializations. Add a 'Specialization' column to the editor table.",
                "Answer": "ALTER TABLE editor ADD Specialization text"
            },
            {
                "User": "Add 'Sports Analytics' as the specialization for the editor with ID 1.",
                "Answer": "UPDATE editor SET Specialization = 'Sports Analytics' WHERE Editor_ID = 1"
            },
            {
                "User": "Create a new table to track the awards received by journals with columns for Award_ID, Journal_ID, and Award_Name.",
                "Answer": "CREATE TABLE journal_awards (Award_ID number PRIMARY KEY, Journal_ID number, Award_Name text)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 346,
        "db": "decoration_competition",
        "interaction": [
            {
                "User": "Add a new college with ID 9, named 'Ontario Design Institute', led by 'Linda Carter', located in 'Toronto'.",
                "Answer": "INSERT INTO college (College_ID, Name, Leader_Name, College_Location) VALUES (9, 'Ontario Design Institute', 'Linda Carter', 'Toronto')"
            },
            {
                "User": "How many colleges are there now?",
                "Answer": "SELECT COUNT(*) FROM college"
            },
            {
                "User": "Update the leader of 'Saskatchewan School' to 'John Smith'.",
                "Answer": "UPDATE college SET Leader_Name = 'John Smith' WHERE Name = 'Saskatchewan School'"
            },
            {
                "User": "List all the colleges and their leaders.",
                "Answer": "SELECT Name, Leader_Name FROM college"
            },
            {
                "User": "Create a new table to track the prizes awarded in each round with columns Prize_ID (number), Round_ID (number), Prize_Name (text), and Prize_Value (number).",
                "Answer": "CREATE TABLE prizes (Prize_ID number PRIMARY KEY, Round_ID number, Prize_Name text, Prize_Value number)"
            },
            {
                "User": "Add a new member with ID 11, named 'Laura Johnson', from 'Canada', belonging to college ID 4.",
                "Answer": "INSERT INTO member (Member_ID, Name, Country, College_ID) VALUES (11, 'Laura Johnson', 'Canada', 4)"
            },
            {
                "User": "Change the Decoration_Theme of Round_ID 1, Member_ID 10 to 'Bright Future'.",
                "Answer": "UPDATE round SET Decoration_Theme = 'Bright Future' WHERE Round_ID = 1 AND Member_ID = 10"
            },
            {
                "User": "Add a column 'Year' to the 'round' table to record the year the round took place.",
                "Answer": "ALTER TABLE round ADD Year number"
            },
            {
                "User": "Set the year for Round_ID 1 to 2023.",
                "Answer": "UPDATE round SET Year = 2023 WHERE Round_ID = 1"
            },
            {
                "User": "Insert a record for a prize awarded to Round_ID 1 with Prize_ID 101, named 'Best Design', valued at 5000.",
                "Answer": "INSERT INTO prizes (Prize_ID, Round_ID, Prize_Name, Prize_Value) VALUES (101, 1, 'Best Design', 5000)"
            },
            {
                "User": "Who is the member with the highest rank in 'Walk on the Moon' theme round?",
                "Answer": "SELECT M.Name FROM member M JOIN round R ON M.Member_ID = R.Member_ID WHERE R.Decoration_Theme = 'Walk on the Moon' ORDER BY R.Rank_in_Round ASC LIMIT 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 347,
        "db": "inn_1",
        "interaction": [
            {
                "User": "I want to add a new room with id 'LUX', name 'Luxury Suite', 1 king bed, maximum occupancy 2, base price 250, and decor 'modern'.",
                "Answer": "INSERT INTO Rooms (RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor) VALUES ('LUX', 'Luxury Suite', 1, 'King', 2, 250, 'modern')"
            },
            {
                "User": "Change the base price of the 'Recluse and defiance' room to 180.",
                "Answer": "UPDATE Rooms SET basePrice = 180 WHERE roomName = 'Recluse and defiance'"
            },
            {
                "User": "Create a new table for amenities with columns amenity_id, room_id, and description.",
                "Answer": "CREATE TABLE Amenities (amenity_id number PRIMARY KEY, room_id text, description text)"
            },
            {
                "User": "Add a column for the room's floor number to the Rooms table.",
                "Answer": "ALTER TABLE Rooms ADD COLUMN floorNumber number"
            },
            {
                "User": "Insert a record for a new amenity with id 001, room_id 'RND', and description 'Ocean view'.",
                "Answer": "INSERT INTO Amenities (amenity_id, room_id, description) VALUES (001, 'RND', 'Ocean view')"
            },
            {
                "User": "Update the max occupancy of all Queen bed rooms to 5.",
                "Answer": "UPDATE Rooms SET maxOccupancy = 5 WHERE bedType = 'Queen'"
            },
            {
                "User": "Add a new reservation with code 10600 for room 'AOB' from '01-NOV-10' to '05-NOV-10', rate 200, last name 'Smith', first name 'John', 2 adults and 1 kid.",
                "Answer": "INSERT INTO Reservations (Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids) VALUES (10600, 'AOB', '01-NOV-10', '05-NOV-10', 200, 'Smith', 'John', 2, 1)"
            },
            {
                "User": "Can we see the total number of reservations for each room?",
                "Answer": "SELECT Room, COUNT(*) as TotalReservations FROM Reservations GROUP BY Room"
            },
            {
                "User": "Show me the average price of rooms per decor type.",
                "Answer": "SELECT decor, AVG(basePrice) as AveragePrice FROM Rooms GROUP BY decor"
            },
            {
                "User": "Delete the reservation with code 10105.",
                "Answer": "DELETE FROM Reservations WHERE Code = 10105"
            },
            {
                "User": "List all rooms that have not been reserved yet.",
                "Answer": "SELECT * FROM Rooms WHERE RoomId NOT IN (SELECT Room FROM Reservations)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 348,
        "db": "inn_1",
        "interaction": [
            {
                "User": "I'd like to add a new room called 'Serene Vista' with 2 Queen beds, maximum occupancy of 4, a base price of $200, and a 'rustic' decor.",
                "Answer": "INSERT INTO Rooms (RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor) VALUES ('SVS', 'Serene Vista', 2, 'Queen', 4, 200, 'rustic')"
            },
            {
                "User": "Can we update the base price of the 'Interim but salutary' room to $160?",
                "Answer": "UPDATE Rooms SET basePrice = 160 WHERE roomName = 'Interim but salutary'"
            },
            {
                "User": "Please create a new table to track amenities offered in each room, with columns for RoomId, amenityName, and amenityPrice.",
                "Answer": "CREATE TABLE RoomAmenities (RoomId text, amenityName text, amenityPrice number, FOREIGN KEY (RoomId) REFERENCES Rooms(RoomId))"
            },
            {
                "User": "Let's add a column to track the number of bathrooms in each room.",
                "Answer": "ALTER TABLE Rooms ADD COLUMN bathrooms number"
            },
            {
                "User": "Insert data for amenities for room 'RND', including 'WiFi' at no extra cost and 'Mini-bar' for $20.",
                "Answer": "INSERT INTO RoomAmenities (RoomId, amenityName, amenityPrice) VALUES ('RND', 'WiFi', 0), ('RND', 'Mini-bar', 20)"
            },
            {
                "User": "Increase the base price of all rooms with 'modern' decor by 10%.",
                "Answer": "UPDATE Rooms SET basePrice = basePrice * 1.1 WHERE decor = 'modern'"
            },
            {
                "User": "Can you add a reservation for 'NELSON KLESS' in room 'SVS' from '01-NOV-10' to '05-NOV-10' at a rate of $220 per night?",
                "Answer": "INSERT INTO Reservations (Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids) VALUES ('SVS', '01-NOV-10', '05-NOV-10', 220, 'KLESS', 'NELSON', 1, 0)"
            },
            {
                "User": "Create a new table to keep track of room maintenance history with columns for RoomId, maintenanceDate, and description of work done.",
                "Answer": "CREATE TABLE MaintenanceHistory (RoomId text, maintenanceDate text, description text, FOREIGN KEY (RoomId) REFERENCES Rooms(RoomId))"
            },
            {
                "User": "Record a maintenance event for room 'IBS' on '15-OCT-10' for 'Air conditioning repair'.",
                "Answer": "INSERT INTO MaintenanceHistory (RoomId, maintenanceDate, description) VALUES ('IBS', '15-OCT-10', 'Air conditioning repair')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 349,
        "db": "sakila_1",
        "interaction": [
            {
                "User": "Can we add a new category called 'Sci-Fi' to the database? The ID of it is 20.",
                "Answer": "INSERT INTO category (category_id, name, last_update) VALUES (20, 'Sci-Fi', CURRENT_TIMESTAMP)"
            },
            {
                "User": "I want to update the rental rate of the movie 'ACADEMY DINOSAUR' to $1.99.",
                "Answer": "UPDATE film SET rental_rate = 1.99 WHERE title = 'ACADEMY DINOSAUR'"
            },
            {
                "User": "Could you create a table to track the staff's login activities?",
                "Answer": "CREATE TABLE staff_login (login_id INTEGER PRIMARY KEY, staff_id INTEGER, login_time TIMESTAMP, FOREIGN KEY (staff_id) REFERENCES staff(staff_id))"
            },
            {
                "User": "Please add a new film with the film ID 1001, a title of 'GALAXY QUEST', a description of 'A team of intrepid adventurers travels through the stars', a release year of 2021, and a language ID of 1.",
                "Answer": "INSERT INTO film (film_id, title, description, release_year, language_id, rental_duration, rental_rate, length, replacement_cost, rating, special_features, last_update) VALUES (1001, 'GALAXY QUEST', 'A team of intrepid adventurers travels through the stars', 2021, 1, 7, 3.99, 120, 24.99, 'PG', 'Trailers', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Add a middle_name column to the actor table to store the actors' middle names.",
                "Answer": "ALTER TABLE actor ADD COLUMN middle_name VARCHAR(255)"
            },
            {
                "User": "Insert a new customer with ID 1000 named 'John Doe' with an email 'john.doe@example.com' and link him to the address with ID 5.",
                "Answer": "INSERT INTO customer (customer_id, store_id, first_name, last_name, email, address_id, active, create_date, last_update) VALUES (1000, 1, 'John', 'Doe', 'john.doe@example.com', 5, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)"
            },
            {
                "User": "Update the address for the customer 'MARY SMITH' to the new address ID 15.",
                "Answer": "UPDATE customer SET address_id = 15 WHERE first_name = 'MARY' AND last_name = 'SMITH'"
            },
            {
                "User": "Can we track the number of times a film has been rented? Please create a new table for this.",
                "Answer": "CREATE TABLE film_rental_count (film_id INT, rental_count INT DEFAULT 0, PRIMARY KEY (film_id), FOREIGN KEY (film_id) REFERENCES film(film_id))"
            },
            {
                "User": "Let's record a new rental with ID 20000 for the customer with ID 1 for the film with ID 2.",
                "Answer": "INSERT INTO rental (rental_id, rental_date, inventory_id, customer_id, staff_id, last_update) VALUES (20000, CURRENT_TIMESTAMP, (SELECT inventory_id FROM inventory WHERE film_id = 2 LIMIT 1), 1, 1, CURRENT_TIMESTAMP)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 350,
        "db": "sakila_1",
        "interaction": [
            {
                "User": "What name is popular for actors? | did you mean the most popular? | yes",
                "Answer": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count ( * )  DESC LIMIT 1"
            },
            {
                "User": "I want to add a new actor named John Smith whose ID is 201. Can you insert his record?",
                "Answer": "INSERT INTO actor (actor_id, first_name, last_name, last_update) VALUES (201, 'John', 'Smith', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Can we update the email address for the customer Linda Williams to linda.williams@example.com?",
                "Answer": "UPDATE customer SET email = 'linda.williams@example.com', last_update = CURRENT_TIMESTAMP WHERE first_name = 'Linda' AND last_name = 'Williams'"
            },
            {
                "User": "I need to create a new table to track the number of visits to the store by each customer. Can you create that table?",
                "Answer": "CREATE TABLE customer_visits (visit_id INT AUTO_INCREMENT PRIMARY KEY, customer_id INT, visit_date TIMESTAMP, FOREIGN KEY (customer_id) REFERENCES customer(customer_id))"
            },
            {
                "User": "Let's add a column 'middle_name' to the actor table for actors who have middle names.",
                "Answer": "ALTER TABLE actor ADD COLUMN middle_name TEXT AFTER first_name"
            },
            {
                "User": "Insert a record for a new film titled 'Epic Quest' with an ID of 2002, a rental rate of 3.99 and a rating of 'PG-13'.",
                "Answer": "INSERT INTO film (film_id, title, description, release_year, language_id, rental_duration, rental_rate, length, replacement_cost, rating, special_features, last_update) VALUES (2002, 'Epic Quest', 'An adventurous journey of unlikely heroes', 2023, 1, 5, 3.99, 120, 19.99, 'PG-13', 'Trailers', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Add a new store with store_id 4000, manager_staff_id 2 and address_id 5.",
                "Answer": "INSERT INTO store (store_id, manager_staff_id, address_id, last_update) VALUES (4000, 2, 5, CURRENT_TIMESTAMP)"
            },
            {
                "User": "Can we add a loyalty_points column to the customer table to track loyalty program points?",
                "Answer": "ALTER TABLE customer ADD COLUMN loyalty_points INT DEFAULT 0"
            },
            {
                "User": "Insert a new country named 'Utopia' into the country table. The ID of it is 110.",
                "Answer": "INSERT INTO country (country_id, country, last_update) VALUES (110, 'Utopia', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Let's create a backup table for the payment data. Can you do that?",
                "Answer": "CREATE TABLE payment_backup AS SELECT * FROM payment"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 351,
        "db": "mountain_photos",
        "interaction": [
            {
                "User": "Add a new mountain called 'Mount Fantasia' with an id of 24, a height of 3500 meters, a prominence of 1500 meters, located in the 'Fantasia Range' of 'Wonderland'.",
                "Answer": "INSERT INTO mountain (id, name, Height, Prominence, Range, Country) VALUES (24, 'Mount Fantasia', 3500, 1500, 'Fantasia Range', 'Wonderland')"
            },
            {
                "User": "Update the height of 'Abune Yosef / Guliba Amba' to 4300 meters.",
                "Answer": "UPDATE mountain SET Height = 4300 WHERE name = 'Abune Yosef / Guliba Amba'"
            },
            {
                "User": "Create a new table 'photographers' with columns 'id' as number, 'name' as text, 'country' as text, and 'experience_years' as number.",
                "Answer": "CREATE TABLE photographers (id number PRIMARY KEY, name text, country text, experience_years number)"
            },
            {
                "User": "Add a column 'date_taken' of type 'date' to the 'photos' table.",
                "Answer": "ALTER TABLE photos ADD COLUMN date_taken date"
            },
            {
                "User": "I want to insert a record into the 'camera_lens' table with the following details: id 12, brand 'Canon', name 'Canon EF 50mm f/1.2L USM', focal length 50mm, and max aperture 1.2.",
                "Answer": "INSERT INTO camera_lens (id, brand, name, focal_length_mm, max_aperture) VALUES (12, 'Canon', 'Canon EF 50mm f/1.2L USM', 50, 1.2)"
            },
            {
                "User": "Change the color of the photo with id 2 to 'Sepia'.",
                "Answer": "UPDATE photos SET color = 'Sepia' WHERE id = 2"
            },
            {
                "User": "Insert a new photo with id 11, taken with lens id 3, of mountain id 1, in color 'RBG', named 'eagle' and taken on the date '2023-04-01'.",
                "Answer": "INSERT INTO photos (id, camera_lens_id, mountain_id, color, name, date_taken) VALUES (11, 3, 1, 'RBG', 'eagle', '2023-04-01')"
            },
            {
                "User": "List all mountains in 'Ethiopia' that have a prominence greater than 1000 meters.",
                "Answer": "SELECT * FROM mountain WHERE Country = 'Ethiopia' AND Prominence > 1000"
            },
            {
                "User": "Delete the photo with the name 'monkey'.",
                "Answer": "DELETE FROM photos WHERE name = 'monkey'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 352,
        "db": "mountain_photos",
        "interaction": [
            {
                "User": "Add a new mountain called 'Mount Spectacular' with a height of 3200 meters, a prominence of 1500 meters, located in the 'Spectacular Range' in 'Wonderland'.",
                "Answer": "INSERT INTO mountain (name, Height, Prominence, Range, Country) VALUES ('Mount Spectacular', 3200, 1500, 'Spectacular Range', 'Wonderland')"
            },
            {
                "User": "Update the height of 'Abune Yosef / Guliba Amba' to 4300 meters.",
                "Answer": "UPDATE mountain SET Height = 4300 WHERE name = 'Abune Yosef / Guliba Amba'"
            },
            {
                "User": "Create a new table 'photographers' with columns for id, name, and country of origin.",
                "Answer": "CREATE TABLE photographers (id number PRIMARY KEY, name text, country text)"
            },
            {
                "User": "Insert a photographer named 'Alice Wonderland' from 'USA' into the photographers table.",
                "Answer": "INSERT INTO photographers (name, country) VALUES ('Alice Wonderland', 'USA')"
            },
            {
                "User": "Add a column 'taken_by' to the 'photos' table to reference the photographer's id.",
                "Answer": "ALTER TABLE photos ADD COLUMN taken_by number"
            },
            {
                "User": "Link the photo named 'monkey' to the photographer 'Alice Wonderland' by updating the 'taken_by' field.",
                "Answer": "UPDATE photos SET taken_by = (SELECT id FROM photographers WHERE name = 'Alice Wonderland') WHERE name = 'monkey'"
            },
            {
                "User": "How many mountains are in Ethiopia with a prominence greater than 1000 meters?",
                "Answer": "SELECT COUNT(*) FROM mountain WHERE Country = 'Ethiopia' AND Prominence > 1000"
            },
            {
                "User": "Create a view 'high_mountains' that lists all mountains with a height greater than 4000 meters.",
                "Answer": "CREATE VIEW high_mountains AS SELECT * FROM mountain WHERE Height > 4000"
            },
            {
                "User": "List all the photos taken with a lens that has a focal length of 45mm or more.",
                "Answer": "SELECT T1.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id WHERE T2.focal_length_mm >= 45"
            },
            {
                "User": "Can you show me the list of photographers from the 'USA'?",
                "Answer": "SELECT * FROM photographers WHERE country = 'USA'"
            },
            {
                "User": "I want to add a new camera lens brand 'Peak' with a model 'Peak 24mm f/1.4', focal length 24mm, and max aperture 1.4.",
                "Answer": "INSERT INTO camera_lens (brand, name, focal_length_mm, max_aperture) VALUES ('Peak', 'Peak 24mm f/1.4', 24, 1.4)"
            },
            {
                "User": "Rename the 'color' column in the 'photos' table to 'color_scheme'.",
                "Answer": "ALTER TABLE photos RENAME COLUMN color TO color_scheme"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 353,
        "db": "architecture",
        "interaction": [
            {
                "User": "Add a new architect to the database.",
                "Answer": "INSERT INTO architect (name, nationality, gender) VALUES ('Norman Foster', 'British', 'male');"
            },
            {
                "User": "Update the nationality of Zaha Hadid to just 'British'.",
                "Answer": "UPDATE architect SET nationality = 'British' WHERE name = 'Zaha Hadid';"
            },
            {
                "User": "Create a new table for bridge renovations with columns for bridge_id, renovation_date, and renovation_details.",
                "Answer": "CREATE TABLE bridge_renovations (bridge_id number, renovation_date text, renovation_details text, PRIMARY KEY (bridge_id, renovation_date));"
            },
            {
                "User": "Insert a record of a renovation for the Fairy Bridge that happened in 2020.",
                "Answer": "INSERT INTO bridge_renovations (bridge_id, renovation_date, renovation_details) VALUES (1, '2020-01-15', 'Structural reinforcement.');"
            },
            {
                "User": "Add a column to the mill table to record the current operational status.",
                "Answer": "ALTER TABLE mill ADD COLUMN operational_status text;"
            },
            {
                "User": "Set the operational status of the Moulin Bertrand to 'Active'.",
                "Answer": "UPDATE mill SET operational_status = 'Active' WHERE id = 2;"
            },
            {
                "User": "Create a view that lists all architects and the number of bridges they designed.",
                "Answer": "CREATE VIEW architect_bridge_count AS SELECT a.id, a.name, COUNT(b.id) AS bridge_count FROM architect a LEFT JOIN bridge b ON a.id = b.architect_id GROUP BY a.id;"
            },
            {
                "User": "Who is the architect with the most bridges designed?",
                "Answer": "SELECT name FROM architect_bridge_count ORDER BY bridge_count DESC LIMIT 1;"
            },
            {
                "User": "List all bridges longer than 100 meters along with their architects' names.",
                "Answer": "SELECT b.name AS bridge_name, a.name AS architect_name FROM bridge b JOIN architect a ON b.architect_id = a.id WHERE b.length_meters > 100;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 354,
        "db": "architecture",
        "interaction": [
            {
                "User": "Add a new architect named Maya Lin with American nationality and female gender.",
                "Answer": "INSERT INTO architect (name, nationality, gender) VALUES ('Maya Lin', 'American', 'female');"
            },
            {
                "User": "Update the length in meters of the Fairy Bridge to 123 meters.",
                "Answer": "UPDATE bridge SET length_meters = 123 WHERE name = 'Xian Ren Qiao (Fairy Bridge)';"
            },
            {
                "User": "What is the new length in feet of the Fairy Bridge after the update?",
                "Answer": "SELECT length_feet FROM bridge WHERE name = 'Xian Ren Qiao (Fairy Bridge)';"
            },
            {
                "User": "Create a new table for bridge_visits with columns visit_id, bridge_id, visit_date, and visitor_count.",
                "Answer": "CREATE TABLE bridge_visits (visit_id number PRIMARY KEY, bridge_id number, visit_date text, visitor_count number);"
            },
            {
                "User": "Add a column 'style' to the bridge table to describe its architectural style.",
                "Answer": "ALTER TABLE bridge ADD COLUMN style text;"
            },
            {
                "User": "Insert a record of a visit to the Fairy Bridge with visit_id 1, on 2023-04-01, with 150 visitors.",
                "Answer": "INSERT INTO bridge_visits (visit_id, bridge_id, visit_date, visitor_count) VALUES (1, 1, '2023-04-01', 150);"
            },
            {
                "User": "Change the name of the mill located in 'Le Vieux Molen' to 'Old Mill'.",
                "Answer": "UPDATE mill SET name = 'Old Mill' WHERE location = 'Le Vieux Molen';"
            },
            {
                "User": "What is the new name of the mill located in 'Le Vieux Molen'?",
                "Answer": "SELECT name FROM mill WHERE location = 'Le Vieux Molen';"
            },
            {
                "User": "How many bridges has architect with id 1 designed?",
                "Answer": "SELECT COUNT(*) FROM bridge WHERE architect_id = 1;"
            },
            {
                "User": "List the names and locations of all bridges longer than 90 meters.",
                "Answer": "SELECT name, location FROM bridge WHERE length_meters > 90;"
            },
            {
                "User": "Record a new bridge designed by architect id 2, named 'Skywalk', located in 'Grand Canyon, USA', with lengths 80 meters and 262 feet.",
                "Answer": "INSERT INTO bridge (architect_id, id, name, location, length_meters, length_feet) VALUES (2, 16, 'Skywalk', 'Grand Canyon, USA', 80, 262);"
            },
            {
                "User": "What is the average length in meters of all bridges?",
                "Answer": "SELECT AVG(length_meters) FROM bridge;"
            },
            {
                "User": "Add a note 'Recently renovated' to the mill with id 3.",
                "Answer": "UPDATE mill SET notes = 'Recently renovated' WHERE id = 3;"
            },
            {
                "User": "What are the notes for the mill with id 3 now?",
                "Answer": "SELECT notes FROM mill WHERE id = 3;"
            },
            {
                "User": "Create a table for bridge maintenance with columns maintenance_id, bridge_id, start_date, end_date, and description.",
                "Answer": "CREATE TABLE bridge_maintenance (maintenance_id number PRIMARY KEY, bridge_id number, start_date text, end_date text, description text);"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 355,
        "db": "cre_Theme_park",
        "interaction": [
            {
                "User": "I want to record a new attraction called 'Space Mountain' located in 'Starfield Plaza', address '123 Cosmic Way'.",
                "Answer": [
                    "INSERT INTO Locations (Location_ID, Location_Name, Address) VALUES (418, 'Starfield Plaza', '123 Cosmic Way');",
                    "INSERT INTO Tourist_Attractions (Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, Name) VALUES (5077, '2', 418, 'Space Mountain');"
                ]
            },
            {
                "User": "Can you update the opening hours for 'Space Mountain' to be '09:00 AM to 09:00 PM'?",
                "Answer": "UPDATE Tourist_Attractions SET Opening_Hours = '09:00 AM to 09:00 PM' WHERE Name = 'Space Mountain';"
            },
            {
                "User": "Add a new feature called 'Gift Shop' to our list of features.",
                "Answer": "INSERT INTO Features (Feature_ID, Feature_Details) VALUES (544, 'Gift Shop');"
            },
            {
                "User": "Let's link the 'Gift Shop' feature to 'Space Mountain'.",
                "Answer": "INSERT INTO Tourist_Attraction_Features (Tourist_Attraction_ID, Feature_ID) VALUES (5077, 544);"
            },
            {
                "User": "Create a new table to track maintenance records for attractions.",
                "Answer": "CREATE TABLE Attraction_Maintenance (Maintenance_ID number PRIMARY KEY, Tourist_Attraction_ID number, Maintenance_Date time, Maintenance_Details text, FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions(Tourist_Attraction_ID));"
            },
            {
                "User": "Record a maintenance activity for 'Space Mountain' that took place on '2023-04-01' with details 'Routine safety check'.",
                "Answer": "INSERT INTO Attraction_Maintenance (Maintenance_ID, Tourist_Attraction_ID, Maintenance_Date, Maintenance_Details) VALUES (1, 5077, '2023-04-01', 'Routine safety check');"
            },
            {
                "User": "I realized we should track the staff member responsible for each maintenance activity. Can you add a 'Staff_ID' column to the maintenance table?",
                "Answer": "ALTER TABLE Attraction_Maintenance ADD COLUMN Staff_ID number;"
            },
            {
                "User": "Please assign the staff member with ID 170 to the maintenance activity we just recorded.",
                "Answer": "UPDATE Attraction_Maintenance SET Staff_ID = 170 WHERE Maintenance_ID = 1;"
            },
            {
                "User": "We now offer a VIP tour package. Let's create a table to manage these VIP tours.",
                "Answer": "CREATE TABLE VIP_Tours (VIP_Tour_ID number PRIMARY KEY, Tourist_ID number, Tour_Date time, Tour_Details text, FOREIGN KEY (Tourist_ID) REFERENCES Visitors(Tourist_ID));"
            },
            {
                "User": "Book a VIP tour for the visitor with ID 164 on '2023-05-15'. Include 'Private guide and front-of-line access' in the details.",
                "Answer": "INSERT INTO VIP_Tours (VIP_Tour_ID, Tourist_ID, Tour_Date, Tour_Details) VALUES (1, 164, '2023-05-15', 'Private guide and front-of-line access');"
            },
            {
                "User": "We need to keep track of the languages our staff can speak. Add a 'Languages' column to the Staff table.",
                "Answer": "ALTER TABLE Staff ADD COLUMN Languages text;"
            },
            {
                "User": "Update staff member with ID 170 to include 'English and Spanish' as their spoken languages.",
                "Answer": "UPDATE Staff SET Languages = 'English and Spanish' WHERE Staff_ID = 170;"
            },
            {
                "User": "Let's create a new table to track special events at our attractions.",
                "Answer": "CREATE TABLE Special_Events (Event_ID number PRIMARY KEY, Tourist_Attraction_ID number, Event_Name text, Event_Date time, Event_Details text, FOREIGN KEY (Tourist_Attraction_ID) REFERENCES Tourist_Attractions(Tourist_Attraction_ID));"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 356,
        "db": "cre_Theme_park",
        "interaction": [
            {
                "User": "Add a new feature called 'water slide' to the list of features.",
                "Answer": "INSERT INTO Features (Feature_ID, Feature_Details) VALUES (554, 'water slide')"
            },
            {
                "User": "Update the opening hours of the 'American Adventure' location to '9 AM to 9 PM'.",
                "Answer": "UPDATE Tourist_Attractions SET Opening_Hours = '9 AM to 9 PM' WHERE Name = 'American Adventure'"
            },
            {
                "User": "Create a new table for restaurant details within the theme park.",
                "Answer": "CREATE TABLE Restaurants (Restaurant_ID number PRIMARY KEY, Name text, Cuisine_Type text, Location_ID number, Opening_Hours text, Other_Details text)"
            },
            {
                "User": "The 'Astro Orbiter' location now has a new address. Change it to '123 Space Loop, Mars Colony'.",
                "Answer": "UPDATE Locations SET Address = '123 Space Loop, Mars Colony' WHERE Location_Name = 'Astro Orbiter'"
            },
            {
                "User": "Insert a new tourist attraction called 'Lunar Landing' with type code '7', located at location ID 333.",
                "Answer": "INSERT INTO Tourist_Attractions (Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, Name) VALUES (6000, '7', 333, 'Lunar Landing')"
            },
            {
                "User": "Add a column 'Email' to the Visitors table to store their email addresses.",
                "Answer": "ALTER TABLE Visitors ADD Email text"
            },
            {
                "User": "Record a new visit by tourist ID 204 to the 'Lunar Landing' attraction on April 1st, 2023.",
                "Answer": "INSERT INTO Visits (Visit_ID, Tourist_Attraction_ID, Tourist_ID, Visit_Date, Visit_Details) VALUES (3001, 6000, 204, '2023-04-01', '')"
            },
            {
                "User": "Create a new star rating in the hotel star ratings table for a '5-plus' luxury rating.",
                "Answer": "INSERT INTO Ref_Hotel_Star_Ratings (star_rating_code, star_rating_description) VALUES ('6', '5-plus luxury')"
            },
            {
                "User": "The 'Sea World' theme park has been renamed to 'Ocean Adventure'. Update the records.",
                "Answer": "UPDATE Theme_Parks SET Theme_Park_Details = 'Ocean Adventure' WHERE Theme_Park_Details = 'Sea World'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 357,
        "db": "college_3",
        "interaction": [
            {
                "User": "Add a new student named John Doe, age 20, male, majoring in department 600, advised by faculty 1121, from city code LAX.",
                "Answer": "INSERT INTO Student (LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES ('Doe', 'John', 20, 'M', 600, 1121, 'LAX')"
            },
            {
                "User": "Update Tracy Kim's major to department 550.",
                "Answer": "UPDATE Student SET Major = 550 WHERE LName = 'Kim' AND Fname = 'Tracy'"
            },
            {
                "User": "Create a new table to track extracurricular activities with activity ID, name, and the number of participating students.",
                "Answer": "CREATE TABLE Extracurricular_Activities (ActID number PRIMARY KEY, ActName text, ParticipantCount number)"
            },
            {
                "User": "Add a new extracurricular activity called 'Robotics Club' with 15 participants.",
                "Answer": "INSERT INTO Extracurricular_Activities (ActID, ActName, ParticipantCount) VALUES (1, 'Robotics Club', 15)"
            },
            {
                "User": "Add a column for student GPA to the Student table.",
                "Answer": "ALTER TABLE Student ADD COLUMN GPA number"
            },
            {
                "User": "Set the GPA of Linda Smith to 3.8.",
                "Answer": "UPDATE Student SET GPA = 3.8 WHERE LName = 'Smith' AND Fname = 'Linda'"
            },
            {
                "User": "How many students are majoring in Chemistry?",
                "Answer": "SELECT COUNT(*) FROM Student WHERE Major = (SELECT DNO FROM Department WHERE DName = 'Chemistry')"
            },
            {
                "User": "Create a table to log changes made to student records, with fields for student ID, the type of change, and the date of the change.",
                "Answer": "CREATE TABLE Student_Change_Log (StuID number, ChangeType text, ChangeDate date)"
            },
            {
                "User": "Log a change for student ID 1002, indicating a major update on March 15, 2023.",
                "Answer": "INSERT INTO Student_Change_Log (StuID, ChangeType, ChangeDate) VALUES (1002, 'Major Update', '2023-03-15')"
            },
            {
                "User": "Add a minor in department 550 for student John Doe.",
                "Answer": "INSERT INTO Minor_in (StuID, DNO) VALUES (1004, 550)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 358,
        "db": "college_3",
        "interaction": [
            {
                "User": "Add a new student named John Doe, age 20, male, majoring in department 600 with advisor 1121, and city code 'NYC'.",
                "Answer": "INSERT INTO Student (LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES ('Doe', 'John', 20, 'M', 600, 1121, 'NYC');"
            },
            {
                "User": "Update the phone number for faculty member Michael Goodrich to 5555.",
                "Answer": "UPDATE Faculty SET Phone = 5555 WHERE Fname = 'Michael' AND Lname = 'Goodrich';"
            },
            {
                "User": "Create a new table for student email addresses with columns for student ID and email address.",
                "Answer": "CREATE TABLE Student_Emails (StuID number PRIMARY KEY, Email text);"
            },
            {
                "User": "Add an email address for John Doe, which is johndoe@example.com.",
                "Answer": "INSERT INTO Student_Emails (StuID, Email) VALUES (1004, 'johndoe@example.com');"
            },
            {
                "User": "Add a new column to the Department table to store the department website URL.",
                "Answer": "ALTER TABLE Department ADD COLUMN Website text;"
            },
            {
                "User": "Set the website for the Biology department to 'www.biologydept.example.com'.",
                "Answer": "UPDATE Department SET Website = 'www.biologydept.example.com' WHERE DName = 'Biology';"
            },
            {
                "User": "Insert a new course called 'Data Structures' with CID 600.301, 3 credits, taught by instructor 4230 on Mondays and Wednesdays at 2 PM, under department number 600.",
                "Answer": "INSERT INTO Course (CID, CName, Credits, Instructor, Days, Hours, DNO) VALUES ('600.301', 'Data Structures', 3, 4230, 'MW', '2', 600);"
            },
            {
                "User": "Enroll student with ID 1001 in the new Data Structures course with an initial grade of 'IP' for In Progress.",
                "Answer": "INSERT INTO Enrolled_in (StuID, CID, Grade) VALUES (1001, '600.301', 'IP');"
            },
            {
                "User": "Create a new table for student internships, including student ID, company name, and internship duration in months.",
                "Answer": "CREATE TABLE Student_Internships (StuID number, CompanyName text, DurationMonths number);"
            },
            {
                "User": "Add an internship record for student 1002 at 'TechCorp' for a duration of 6 months.",
                "Answer": "INSERT INTO Student_Internships (StuID, CompanyName, DurationMonths) VALUES (1002, 'TechCorp', 6);"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 359,
        "db": "voter_2",
        "interaction": [
            {
                "User": "Add a new student with the following details: StuID 1055, Last Name 'Doe', First Name 'John', Age 20, Sex 'M', Major 601, Advisor 1121, city code 'NYC'.",
                "Answer": "INSERT INTO STUDENT (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1055, 'Doe', 'John', 20, 'M', 601, 1121, 'NYC')"
            },
            {
                "User": "Update the major for student Linda Smith to 602.",
                "Answer": "UPDATE STUDENT SET Major = 602 WHERE LName = 'Smith' AND Fname = 'Linda'"
            },
            {
                "User": "Create a new table for student emails with columns for StuID and Email.",
                "Answer": "CREATE TABLE Student_Emails (StuID number, Email text, PRIMARY KEY (StuID))"
            },
            {
                "User": "Add an email address 'john.doe@example.com' for the newly added student John Doe.",
                "Answer": "INSERT INTO Student_Emails (StuID, Email) VALUES (1005, 'john.doe@example.com')"
            },
            {
                "User": "Add a new column 'Phone' to the Student table to store student phone numbers.",
                "Answer": "ALTER TABLE STUDENT ADD Phone text"
            },
            {
                "User": "Insert the phone number '555-1234' for student John Doe.",
                "Answer": "UPDATE STUDENT SET Phone = '555-1234' WHERE StuID = 1005"
            },
            {
                "User": "Record a new voting entry for student John Doe with StuID 1005 who voted on '09/01/2023' for the 'Fall' election cycle, with the following votes: President 1004, Vice President 1007, Secretary 1010, Treasurer 1035, Class President 1001, and Class Senator 1028.",
                "Answer": "INSERT INTO Voting_record (StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote) VALUES (1005, '09/01/2023', 'Fall', 1004, 1007, 1010, 1035, 1001, 1028)"
            },
            {
                "User": "Retrieve the email addresses of all students who have voted for the president candidate with StuID 1004.",
                "Answer": "SELECT SE.Email FROM STUDENT AS S JOIN VOTING_RECORD AS VR ON S.StuID = VR.StuID JOIN Student_Emails AS SE ON S.StuID = SE.StuID WHERE VR.President_Vote = 1004"
            },
            {
                "User": "Delete the voting record for student Tracy Kim with StuID 1002.",
                "Answer": "DELETE FROM Voting_record WHERE StuID = 1002"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 360,
        "db": "voter_2",
        "interaction": [
            {
                "User": "Can we add a new column to track the number of times a student has voted?",
                "Answer": "ALTER TABLE Student ADD COLUMN Vote_Count number;"
            },
            {
                "User": "Now, set the initial vote count for all students to zero.",
                "Answer": "UPDATE Student SET Vote_Count = 0;"
            },
            {
                "User": "I want to insert a new student record. The student's ID is 1054, last name is 'Doe', first name is 'John', age is 20, sex is 'M', major is 601, advisor is 7788, and city code is 'NYC'.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1054, 'Doe', 'John', 20, 'M', 601, 7788, 'NYC');"
            },
            {
                "User": "Update the vote count for student with ID 1001 to 5.",
                "Answer": "UPDATE Student SET Vote_Count = 5 WHERE StuID = 1001;"
            },
            {
                "User": "Create a new table to track the majors with columns for MajorID and MajorName.",
                "Answer": "CREATE TABLE Majors (MajorID number PRIMARY KEY, MajorName text);"
            },
            {
                "User": "Insert three records into the Majors table with IDs and names: (600, 'Engineering'), (601, 'Biology'), (602, 'Computer Science').",
                "Answer": "INSERT INTO Majors (MajorID, MajorName) VALUES (600, 'Engineering'), (601, 'Biology'), (602, 'Computer Science');"
            },
            {
                "User": "Can we add a column to the Voting_record table to track whether the student voted online or in-person?",
                "Answer": "ALTER TABLE Voting_record ADD COLUMN Voting_Method text;"
            },
            {
                "User": "Set all current records in the Voting_record table to 'In-person' for the voting method.",
                "Answer": "UPDATE Voting_record SET Voting_Method = 'In-person';"
            },
            {
                "User": "How many students have voted online?",
                "Answer": "SELECT COUNT(*) FROM Voting_record WHERE Voting_Method = 'Online';"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 361,
        "db": "body_builder",
        "interaction": [
            {
                "User": "Can we add a new column to track the body builder's country?",
                "Answer": "ALTER TABLE people ADD COLUMN Country text;"
            },
            {
                "User": "Please update Jack Campbell's country to USA.",
                "Answer": "UPDATE people SET Country = 'USA' WHERE Name = 'Jack Campbell';"
            },
            {
                "User": "I want to insert a new body builder record. The person's ID is 9, name is Emily White, height is 170, weight is 65, birth date is July 4, 1990, birth place is Boston, Massachusetts, and country is USA.",
                "Answer": "INSERT INTO people (People_ID, Name, Height, Weight, Birth_Date, Birth_Place, Country) VALUES (9, 'Emily White', 170, 65, 'July 4, 1990', 'Boston, Massachusetts', 'USA');"
            },
            {
                "User": "Now add Emily's lifting records. Her Body_Builder_ID is 8, snatch is 90, clean and jerk is 110, and total is 200.",
                "Answer": "INSERT INTO body_builder (Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total) VALUES (8, 4, 90, 110, 200);"
            },
            {
                "User": "Create a new table to record the coaches of each body builder with their names and the body builder they train.",
                "Answer": "CREATE TABLE coaches (Coach_ID number PRIMARY KEY, Name text, Body_Builder_ID number, FOREIGN KEY (Body_Builder_ID) REFERENCES body_builder (Body_Builder_ID));"
            },
            {
                "User": "Insert records for three coaches: Coach Smith trains body builder 1, Coach Johnson trains body builder 2, and Coach Williams trains body builder 3.",
                "Answer": "INSERT INTO coaches (Coach_ID, Name, Body_Builder_ID) VALUES (1, 'Coach Smith', 1), (2, 'Coach Johnson', 2), (3, 'Coach Williams', 3);"
            },
            {
                "User": "Can we see a list of all body builders along with their coaches?",
                "Answer": "SELECT T1.Name AS Body_Builder_Name, T2.Name AS Coach_Name FROM people T1 JOIN body_builder T3 ON T1.People_ID = T3.People_ID LEFT JOIN coaches T2 ON T3.Body_Builder_ID = T2.Body_Builder_ID;"
            },
            {
                "User": "Who is the coach of the body builder with the highest total points?",
                "Answer": "SELECT T2.Name AS Coach_Name FROM body_builder T1 JOIN coaches T2 ON T1.Body_Builder_ID = T2.Body_Builder_ID ORDER BY T1.Total DESC LIMIT 1;"
            },
            {
                "User": "Update the snatch record for body builder ID 3 to 145.",
                "Answer": "UPDATE body_builder SET Snatch = 145 WHERE Body_Builder_ID = 3;"
            },
            {
                "User": "I want to record the date of each competition. Can we add a 'Competition_Date' column to the body_builder table?",
                "Answer": "ALTER TABLE body_builder ADD COLUMN Competition_Date text;"
            },
            {
                "User": "Set the competition date for body builder ID 1 to August 15, 2022.",
                "Answer": "UPDATE body_builder SET Competition_Date = 'August 15, 2022' WHERE Body_Builder_ID = 1;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 362,
        "db": "soccer_1",
        "interaction": [
            {
                "User": "Add a new player named John Doe with API ID 999999, born on 1990-01-01, height 180cm, and weight 75kg.",
                "Answer": "INSERT INTO Player (player_api_id, player_name, birthday, height, weight) VALUES (999999, 'John Doe', '1990-01-01', 180, 75)"
            },
            {
                "User": "Create a new table for storing transfer records with columns for id, player_api_id, from_team_api_id, to_team_api_id, transfer_date, and transfer_fee.",
                "Answer": "CREATE TABLE Transfer_Records (id INTEGER PRIMARY KEY AUTOINCREMENT, player_api_id NUMBER, from_team_api_id NUMBER, to_team_api_id NUMBER, transfer_date TEXT, transfer_fee NUMBER)"
            },
            {
                "User": "Record a transfer for player with API ID 505942 from team with API ID 9987 to team with API ID 9993 on 2021-07-01 with a transfer fee of 5000000.",
                "Answer": "INSERT INTO Transfer_Records (player_api_id, from_team_api_id, to_team_api_id, transfer_date, transfer_fee) VALUES (505942, 9987, 9993, '2021-07-01', 5000000)"
            },
            {
                "User": "Update the overall rating of player with API ID 505942 to 85.",
                "Answer": "UPDATE Player_Attributes SET overall_rating = 85 WHERE player_api_id = 505942"
            },
            {
                "User": "Add a new column 'nickname' to the Player table to store the player's commonly known name.",
                "Answer": "ALTER TABLE Player ADD COLUMN nickname TEXT"
            },
            {
                "User": "Set the nickname for player Aaron Cresswell to 'Cressy'.",
                "Answer": "UPDATE Player SET nickname = 'Cressy' WHERE player_name = 'Aaron Cresswell'"
            },
            {
                "User": "How many players have a higher overall rating than 80?",
                "Answer": "SELECT COUNT(*) FROM Player_Attributes WHERE overall_rating > 80"
            },
            {
                "User": "Increase the stamina of all players by 5 points.",
                "Answer": "UPDATE Player_Attributes SET stamina = stamina + 5"
            },
            {
                "User": "Delete the player with the lowest overall rating from the database.",
                "Answer": "DELETE FROM Player WHERE player_api_id = (SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating ASC LIMIT 1)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 363,
        "db": "soccer_1",
        "interaction": [
            {
                "User": "Can you add a new player to the database with the name 'John Doe', a FIFA API ID of 555555, a player API ID of 999999, born on '1990-01-01', with a height of 180 cm and weight of 75 kg?",
                "Answer": "INSERT INTO Player (player_api_id, player_name, player_fifa_api_id, birthday, height, weight) VALUES (999999, 'John Doe', 555555, '1990-01-01', 180, 75)"
            },
            {
                "User": "I would like to update the overall rating of a player with the FIFA API ID 218353 to 80. Can you do that for me?",
                "Answer": "UPDATE Player_Attributes SET overall_rating = 80 WHERE player_fifa_api_id = 218353"
            },
            {
                "User": "Can we create a new table to track the transfer history of players, including the columns for transfer_id, player_api_id, from_team_api_id, to_team_api_id, transfer_date, and transfer_fee?",
                "Answer": "CREATE TABLE Transfer_History (transfer_id number PRIMARY KEY, player_api_id number, from_team_api_id number, to_team_api_id number, transfer_date text, transfer_fee number)"
            },
            {
                "User": "Please insert a new transfer record indicating that a player with the API ID 505942 has been transferred from team with API ID 9987 to team with API ID 9993 on '2023-01-01' with a transfer fee of 5000000.",
                "Answer": "INSERT INTO Transfer_History (player_api_id, from_team_api_id, to_team_api_id, transfer_date, transfer_fee) VALUES (505942, 9987, 9993, '2023-01-01', 5000000)"
            },
            {
                "User": "Could you add a new column to the Team table to store the year the team was founded?",
                "Answer": "ALTER TABLE Team ADD COLUMN year_founded number"
            },
            {
                "User": "Let's update the year founded for 'KRC Genk' to 1988. Can you handle that?",
                "Answer": "UPDATE Team SET year_founded = 1988 WHERE team_long_name = 'KRC Genk'"
            },
            {
                "User": "Can you create a new table to store fan feedback with columns for feedback_id, player_api_id, fan_name, feedback_text, and feedback_date?",
                "Answer": "CREATE TABLE Fan_Feedback (feedback_id number PRIMARY KEY, player_api_id number, fan_name text, feedback_text text, feedback_date text)"
            },
            {
                "User": "Insert a feedback record for player with API ID 505942 from a fan named 'Alex Smith' saying 'Great performance in the last game!' on '2023-03-15'.",
                "Answer": "INSERT INTO Fan_Feedback (player_api_id, fan_name, feedback_text, feedback_date) VALUES (505942, 'Alex Smith', 'Great performance in the last game!', '2023-03-15')"
            },
            {
                "User": "I noticed we don't have a column for player nationality in the Player table. Can we add that?",
                "Answer": "ALTER TABLE Player ADD COLUMN nationality text"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 364,
        "db": "customers_and_products_contacts",
        "interaction": [
            {
                "User": "Can you add a new product to the Products table with the following details: product type 'Electronics', product name 'Smartphone', and product price 799.99?",
                "Answer": "INSERT INTO Products (product_type_code, product_name, product_price) VALUES ('Electronics', 'Smartphone', 799.99)"
            },
            {
                "User": "I need to update the price of the product named 'Apple' in the Products table to 999.99. Could you do that for me?",
                "Answer": "UPDATE Products SET product_price = 999.99 WHERE product_name = 'Apple'"
            },
            {
                "User": "Could you create a new table named 'Product_Reviews' with columns for review_id (number), product_id (number), customer_id (number), rating (number), and review_text (text)?",
                "Answer": "CREATE TABLE Product_Reviews (review_id number PRIMARY KEY, product_id number, customer_id number, rating number, review_text text)"
            },
            {
                "User": "Please add a new column 'loyalty_points' of type number to the Customers table to track our loyalty program points.",
                "Answer": "ALTER TABLE Customers ADD loyalty_points number"
            },
            {
                "User": "Insert a new customer with the following details: payment method 'PayPal', customer number '789', customer name 'Adrian', customer address '1234 Market St', customer phone '+1(555)123-4567', customer email 'adrian@example.com'.",
                "Answer": "INSERT INTO Customers (payment_method_code, customer_number, customer_name, customer_address, customer_phone, customer_email) VALUES ('PayPal', '789', 'Adrian', '1234 Market St', '+1(555)123-4567', 'adrian@example.com')"
            },
            {
                "User": "Can you update the customer named 'Kayley' to have a new email 'kayley.newemail@example.com' and a new phone number '+87(9)5279161999'?",
                "Answer": "UPDATE Customers SET customer_email = 'kayley.newemail@example.com', customer_phone = '+87(9)5279161999' WHERE customer_name = 'Kayley'"
            },
            {
                "User": "We need to record the order status 'Cancelled' for order_id 3 in the Customer_Orders table. Could you make this update?",
                "Answer": "UPDATE Customer_Orders SET order_status_code = 'Cancelled' WHERE order_id = 3"
            },
            {
                "User": "I want to add a new contact for customer_id 1 with the following details: gender 'female', first name 'Linda', last name 'Smith', and contact phone '+73(2)0854391830'. What would be the SQL statement for this?",
                "Answer": "INSERT INTO Contacts (customer_id, gender, first_name, last_name, contact_phone) VALUES (1, 'female', 'Linda', 'Smith', '+73(2)0854391830')"
            },
            {
                "User": "Could you create a new table called 'Customer_Feedback' that includes feedback_id (number), customer_id (number), feedback_text (text), and feedback_date (time)?",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text, feedback_date time)"
            },
            {
                "User": "For the Customer_Address_History table, can we add a new column 'address_type' of type text to specify whether the address is 'Residential' or 'Business'?",
                "Answer": "ALTER TABLE Customer_Address_History ADD address_type text"
            },
            {
                "User": "Insert a new order item with the following details: order_item_id 12, order_id 10, product_id 2, and order_quantity '5'.",
                "Answer": "INSERT INTO Order_Items (order_item_id, order_id, product_id, order_quantity) VALUES (12, 10, 2, '5')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 365,
        "db": "company_office",
        "interaction": [
            {
                "User": "Add a new building to the database.",
                "Answer": "INSERT INTO buildings (id, name, City, Height, Stories, Status) VALUES (13, 'Skyline Tower', 'New York', 250, 50, 'completed');"
            },
            {
                "User": "Update the status of the Torre KOI building to completed.",
                "Answer": "UPDATE buildings SET Status = 'completed' WHERE id = 1;"
            },
            {
                "User": "Create a new table to track maintenance schedules for buildings.",
                "Answer": "CREATE TABLE Maintenance_Schedule (building_id number, maintenance_date text, maintenance_type text, PRIMARY KEY (building_id, maintenance_date));"
            },
            {
                "User": "Insert a maintenance schedule for the Torre Mitikah building.",
                "Answer": "INSERT INTO Maintenance_Schedule (building_id, maintenance_date, maintenance_type) VALUES (2, '2023-04-15', 'Electrical Systems Check');"
            },
            {
                "User": "Add a column to track the number of employees in each company.",
                "Answer": "ALTER TABLE Companies ADD COLUMN Employees_number number;"
            },
            {
                "User": "Update the number of employees for JPMorgan Chase to 255000.",
                "Answer": "UPDATE Companies SET Employees_number = 255000 WHERE id = 1;"
            },
            {
                "User": "Create a new table for storing information about company executives.",
                "Answer": "CREATE TABLE Executives (id number, company_id number, name text, position text, PRIMARY KEY (id), FOREIGN KEY (company_id) REFERENCES Companies(id));"
            },
            {
                "User": "Insert the CEO of General Electric into the Executives table.",
                "Answer": "INSERT INTO Executives (id, company_id, name, position) VALUES (1, 3, 'H. Lawrence Culp', 'CEO');"
            },
            {
                "User": "List all companies with more than 100 billion in assets.",
                "Answer": "SELECT * FROM Companies WHERE Assets_billion > 100;"
            },
            {
                "User": "Add a column to the Office_locations table to include the number of floors occupied by the company.",
                "Answer": "ALTER TABLE Office_locations ADD COLUMN Floors_occupied number;"
            },
            {
                "User": "Update the number of floors occupied by HSBC in the Torre Mitikah building to 10.",
                "Answer": "UPDATE Office_locations SET Floors_occupied = 10 WHERE company_id = 2 AND building_id = 2;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 366,
        "db": "debate",
        "interaction": [
            {
                "User": "Can we add a column to track the number of debates each person has participated in?",
                "Answer": "ALTER TABLE people ADD COLUMN Num_of_Debates number"
            },
            {
                "User": "I'd like to update the number of debates Luther C. Carter has participated in to 5.",
                "Answer": "UPDATE people SET Num_of_Debates = 5 WHERE People_ID = 1"
            },
            {
                "User": "Can we insert a new debate that happened on January 1, 2020, in New York with 200 people attending?",
                "Answer": "INSERT INTO debate (Debate_ID, Date, Venue, Num_of_Audience) VALUES (7, 'January 1, 2020', 'New York', 200)"
            },
            {
                "User": "Let's add a new person named 'Alex Smith' from 'New York 4', a 'Democratic' with the age of 30.",
                "Answer": "INSERT INTO people (People_ID, District, Name, Party, Age) VALUES (11, 'New York 4', 'Alex Smith', 'Democratic', 30)"
            },
            {
                "User": "Create a new table to track the topics discussed in each debate.",
                "Answer": "CREATE TABLE debate_topics (Debate_ID number, Topic text, PRIMARY KEY (Debate_ID))"
            },
            {
                "User": "Insert a topic for the debate that happened on October 21, 2011, with the topic 'Climate Change'.",
                "Answer": "INSERT INTO debate_topics (Debate_ID, Topic) VALUES (1, 'Climate Change')"
            },
            {
                "User": "Update the party of Daniel Sickles to 'Independent'.",
                "Answer": "UPDATE people SET Party = 'Independent' WHERE People_ID = 3"
            },
            {
                "User": "Can we record that the affirmative side won for the debate held on January 1, 2020?",
                "Answer": "UPDATE debate_people SET If_Affirmative_Win = 'T' WHERE Debate_ID = 7"
            },
            {
                "User": "Insert a new record into debate_people for the debate on January 1, 2020, with Alex Smith as affirmative and James Humphrey as negative.",
                "Answer": "INSERT INTO debate_people (Debate_ID, Affirmative, Negative, If_Affirmative_Win) VALUES (7, 11, 2, 'F')"
            },
            {
                "User": "How many debates has Alex Smith participated in so far?",
                "Answer": "SELECT Num_of_Debates FROM people WHERE Name = 'Alex Smith'"
            },
            {
                "User": "Add a column to the debate table to track the main sponsor of the event.",
                "Answer": "ALTER TABLE debate ADD COLUMN Sponsor text"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 367,
        "db": "riding_club",
        "interaction": [
            {
                "User": "Show the residences that have both a player of gender 'M' and a player 'F'.",
                "Answer": "SELECT Residence FROM player WHERE gender = 'M' INTERSECT SELECT Residence FROM player WHERE gender = 'F'"
            },
            {
                "User": "Who is the sponsor of Jean Luc Bouché?",
                "Answer": "SELECT Sponsor_Name FROM player WHERE Player_name = 'Jean Luc Bouché'"
            },
            {
                "User": "How many votes for Niki Ashton?",
                "Answer": "SELECT Votes FROM player WHERE player_name = 'Niki Ashton'"
            },
            {
                "User": "Insert a new player with ID 15, sponsored by 'Green Valley', named 'Alex Smith', gender 'M', residing in 'Brandon', occupation 'Software Developer', with 3000 votes and rank 'New'.",
                "Answer": "INSERT INTO player (Player_ID, Sponsor_name, Player_name, Gender, Residence, Occupation, Votes, Rank) VALUES (15, 'Green Valley', 'Alex Smith', 'M', 'Brandon', 'Software Developer', 3000, 'New')"
            },
            {
                "User": "Update Fiona Shiells' occupation to 'Data Analyst'.",
                "Answer": "UPDATE player SET Occupation = 'Data Analyst' WHERE Player_name = 'Fiona Shiells'"
            },
            {
                "User": "Create a new table named 'equipment' with columns 'Equipment_ID' as a number, 'Type' as text, 'Brand' as text, and 'Player_ID' as a number with a foreign key reference to 'player' table.",
                "Answer": "CREATE TABLE equipment (Equipment_ID number PRIMARY KEY, Type text, Brand text, Player_ID number, FOREIGN KEY (Player_ID) REFERENCES player(Player_ID))"
            },
            {
                "User": "Add a new column 'Email' of type text to the 'player' table.",
                "Answer": "ALTER TABLE player ADD COLUMN Email text"
            },
            {
                "User": "Insert a new coach with ID 6, named 'Sarah Miller', gender 'F', associated with club ID 2, and rank 4.",
                "Answer": "INSERT INTO coach (Coach_ID, Coach_name, Gender, Club_ID, Rank) VALUES (6, 'Sarah Miller', 'F', 2, 4)"
            },
            {
                "User": "Add a new record in 'match_result' for club ID 4 with 5 gold, 3 big silver, 2 small silver, 6 bronze and 89 points.",
                "Answer": "INSERT INTO match_result (Rank, Club_ID, Gold, Big_Silver, Small_Silver, Bronze, Points) VALUES ((SELECT MAX(Rank) + 1 FROM match_result), 4, 5, 3, 2, 6, 89)"
            },
            {
                "User": "How many coaches are associated with the club named 'AIK'?",
                "Answer": "SELECT COUNT(*) FROM coach WHERE Club_ID = (SELECT Club_ID FROM club WHERE Club_name = 'AIK')"
            },
            {
                "User": "Delete the player with the lowest number of votes.",
                "Answer": "DELETE FROM player WHERE Votes = (SELECT MIN(Votes) FROM player)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 368,
        "db": "e_government",
        "interaction": [
            {
                "User": "I'd like to add a new service to the database. The service is 'Transportation', with a type code 'Transit' and description 'Public transportation services'.",
                "Answer": "INSERT INTO Services (service_type_code, service_name, service_descriptio) VALUES ('Transit', 'Transportation', 'Public transportation services')"
            },
            {
                "User": "Can you update the email address for the individual with the last name 'Kerluke' to 'kerluke.newemail@example.com'?",
                "Answer": "UPDATE Individuals SET individual_email = 'kerluke.newemail@example.com' WHERE individual_last_name = 'Kerluke'"
            },
            {
                "User": "Let's create a new table for vehicle registrations with columns for registration_id, individual_id, vehicle_id, registration_date, and expiration_date.",
                "Answer": "CREATE TABLE Vehicle_Registrations (registration_id number PRIMARY KEY, individual_id number, vehicle_id text, registration_date time, expiration_date time)"
            },
            {
                "User": "Add a new column 'organization_type' to the Organizations table to categorize each organization.",
                "Answer": "ALTER TABLE Organizations ADD organization_type text"
            },
            {
                "User": "I need to insert a new party with payment method 'Credit Card', phone '1-800-555-1234', and email 'new.party@example.org'.",
                "Answer": "INSERT INTO Parties (payment_method_code, party_phone, party_email) VALUES ('Credit Card', '1-800-555-1234', 'new.party@example.org')"
            },
            {
                "User": "Please update the booking made date for booking_id 1 to '2023-04-01 10:00:00'.",
                "Answer": "UPDATE Party_Services SET booking_made_date = '2023-04-01 10:00:00' WHERE booking_id = 1"
            },
            {
                "User": "Let's create a new form for 'Pet License Application' which is a 'Basic' form type and link it to service_id 1.",
                "Answer": "INSERT INTO Forms (form_type_code, service_id, form_number, form_name, form_description) VALUES ('Basic', 1, 'PL001', 'Pet License Application', 'Application form for pet licensing')"
            },
            {
                "User": "I want to add a new address for '123 Pet Lane', 'Petville', '999', 'PetState', 'USA'.",
                "Answer": "INSERT INTO Addresses (line_1_number_building, town_city, zip_postcode, state_province_county, country) VALUES ('123 Pet Lane', 'Petville', '999', 'PetState', 'USA')"
            },
            {
                "User": "Can we update the form status code for form_id 2 to 'Archived'?",
                "Answer": "UPDATE Party_Forms SET form_status_code = 'Archived' WHERE form_id = 2"
            },
            {
                "User": "Let's create a new table to track online service requests with columns for request_id, individual_id, service_id, request_date, and status.",
                "Answer": "CREATE TABLE Online_Service_Requests (request_id number PRIMARY KEY, individual_id number, service_id number, request_date time, status text)"
            },
            {
                "User": "Add a new organization contact individual linking individual_id 2 with organization_id 1 starting from today.",
                "Answer": "INSERT INTO Organization_Contact_Individuals (individual_id, organization_id, date_contact_from) VALUES (2, 1, CURRENT_DATE)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 369,
        "db": "product_catalog",
        "interaction": [
            {
                "User": "Can you tell me the highest value of the entry name?",
                "Answer": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"
            },
            {
                "User": "Can we add a new attribute for color in the attribute definitions?",
                "Answer": "INSERT INTO attribute_definitions (attribute_name, attribute_data_type) VALUES ('Color', 'Text')"
            },
            {
                "User": "What's the name of the latest catalog published?",
                "Answer": "SELECT catalog_name FROM catalogs ORDER BY date_of_publication DESC LIMIT 1"
            },
            {
                "User": "I want to update the price of 'Root beer' to $700. Can you do that?",
                "Answer": "UPDATE catalog_contents SET price_in_dollars = 700 WHERE catalog_entry_name = 'Root beer'"
            },
            {
                "User": "Let's create a new table for customer reviews. Can you do that?",
                "Answer": "CREATE TABLE customer_reviews (review_id number PRIMARY KEY, catalog_entry_id number, customer_name text, review_text text, review_rating number)"
            },
            {
                "User": "Please insert a new catalog named 'Tea Collection' published by 'DavidsTea' with today's date.",
                "Answer": "INSERT INTO catalogs (catalog_id, catalog_name, catalog_publisher, date_of_publication, date_of_latest_revision) VALUES (9, 'Tea Collection', 'DavidsTea', CURRENT_DATE, CURRENT_DATE)"
            },
            {
                "User": "Can you add a 'weight' column to the catalog contents table?",
                "Answer": "ALTER TABLE catalog_contents ADD COLUMN weight text"
            },
            {
                "User": "Add a new entry for 'Green Tea' in the 'Tea Collection' catalog with a price of $15.99.",
                "Answer": "INSERT INTO catalog_contents (catalog_entry_id, catalog_level_number, parent_entry_id, previous_entry_id, next_entry_id, catalog_entry_name, product_stock_number, price_in_dollars, price_in_euros, price_in_pounds, capacity, length, height, width) VALUES (16, 9, 0, 0, 0, 'Green Tea', 'GT123', 15.99, 13.49, 11.99, '200ml', '5', '10', '5')"
            },
            {
                "User": "We need to revise the publication date of the 'Coffee Bean' catalog to the current date. Can you update it?",
                "Answer": "UPDATE catalogs SET date_of_latest_revision = CURRENT_DATE WHERE catalog_name = 'Coffee Bean'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 370,
        "db": "product_catalog",
        "interaction": [
            {
                "User": "I'd like to add a new attribute definition for 'Weight' with data type 'Number'.",
                "Answer": "INSERT INTO Attribute_Definitions (attribute_name, attribute_data_type) VALUES ('Weight', 'Number');"
            },
            {
                "User": "Please update the catalog named 'Chocolate' with a new publisher 'Sweet Treats Inc.'.",
                "Answer": "UPDATE Catalogs SET catalog_publisher = 'Sweet Treats Inc.' WHERE catalog_name = 'Chocolate';"
            },
            {
                "User": "I want to create a new table for customer reviews with columns for review_id, catalog_entry_id, customer_name, review_text, and rating.",
                "Answer": "CREATE TABLE Customer_Reviews (review_id number PRIMARY KEY, catalog_entry_id number, customer_name text, review_text text, rating number);"
            },
            {
                "User": "Can you add a 'color' column to the Catalog_Contents table to store the color of the product?",
                "Answer": "ALTER TABLE Catalog_Contents ADD color text;"
            },
            {
                "User": "Insert a new catalog entry for a product called 'Ginger Ale' with stock number '55 zz', priced at 150.00 dollars, 125.32 euros, 107.25 pounds, and dimensions 2x3x4.",
                "Answer": "INSERT INTO Catalog_Contents (catalog_level_number, parent_entry_id, previous_entry_id, next_entry_id, catalog_entry_name, product_stock_number, price_in_dollars, price_in_euros, price_in_pounds, capacity, length, height, width) VALUES (8, 6, 3, NULL, 'Ginger Ale', '55 zz', 150.00, 125.32, 107.25, '2', '3', '4', '4');"
            },
            {
                "User": "Update the price in euros for the 'Root beer' to 600.00 euros.",
                "Answer": "UPDATE Catalog_Contents SET price_in_euros = 600.00 WHERE catalog_entry_name = 'Root beer';"
            },
            {
                "User": "Create a new table named 'Suppliers' with supplier_id, supplier_name, and contact_info columns.",
                "Answer": "CREATE TABLE Suppliers (supplier_id number PRIMARY KEY, supplier_name text, contact_info text);"
            },
            {
                "User": "Add a 'supplier_id' column to the Catalog_Contents table to reference the Suppliers table.",
                "Answer": "ALTER TABLE Catalog_Contents ADD supplier_id number;"
            },
            {
                "User": "Insert a new supplier with the name 'Best Beverage Co.' and contact info 'contact@bestbev.co'.",
                "Answer": "INSERT INTO Suppliers (supplier_id, supplier_name, contact_info) VALUES (1, 'Best Beverage Co.', 'contact@bestbev.co');"
            },
            {
                "User": "Link the 'Ginger Ale' catalog entry to the new supplier we just added.",
                "Answer": "UPDATE Catalog_Contents SET supplier_id = 1 WHERE catalog_entry_name = 'Ginger Ale';"
            },
            {
                "User": "Can you show me all the products with their supplier names?",
                "Answer": "SELECT CC.catalog_entry_name, S.supplier_name FROM Catalog_Contents AS CC LEFT JOIN Suppliers AS S ON CC.supplier_id = S.supplier_id;"
            },
            {
                "User": "Add a new record in Catalog_Contents_Additional_Attributes for 'Ginger Ale' with the attribute 'Green' set to '1'.",
                "Answer": "INSERT INTO Catalog_Contents_Additional_Attributes (catalog_entry_id, catalog_level_number, attribute_id, attribute_value) VALUES (4, 8, 1, '1');"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 371,
        "db": "candidate_poll",
        "interaction": [
            {
                "User": "Can we track the middle name of people? If not, add a middle name column to the people table.",
                "Answer": "ALTER TABLE people ADD COLUMN Middle_Name text;"
            },
            {
                "User": "I'd like to update the middle name for Hubert Henno to 'Jules'.",
                "Answer": "UPDATE people SET Middle_Name = 'Jules' WHERE Name = 'Hubert Henno';"
            },
            {
                "User": "Add a new candidate with ID 7, who has a People_ID of 2, from 'NY Times Survey', with a poll date of 'Mar 10, 2007', a support rate of 0.22, consider rate of 0.28, oppose rate of 0.35, and unsure rate of 0.15.",
                "Answer": "INSERT INTO candidate (Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate) VALUES (7, 2, 'NY Times Survey', 'Mar 10, 2007', 0.22, 0.28, 0.35, 0.15);"
            },
            {
                "User": "The weight of 'Dominique Daquin' was recorded incorrectly. It should be 95 kg. Please update it.",
                "Answer": "UPDATE people SET Weight = 95 WHERE Name = 'Dominique Daquin';"
            },
            {
                "User": "Create a new table to store detailed poll information with columns for Poll_ID, Poll_Source, Date, and Total_Participants.",
                "Answer": "CREATE TABLE poll_details (Poll_ID number PRIMARY KEY, Poll_Source text, Date text, Total_Participants number);"
            },
            {
                "User": "Insert a new record into the poll_details for 'WNBC/Marist Poll' dated 'Feb 12–15, 2007' with a total of 1200 participants.",
                "Answer": "INSERT INTO poll_details (Poll_ID, Poll_Source, Date, Total_Participants) VALUES (1, 'WNBC/Marist Poll', 'Feb 12–15, 2007', 1200);"
            },
            {
                "User": "We need to track the eye color of each person. Please add a column for eye color in the people table.",
                "Answer": "ALTER TABLE people ADD COLUMN Eye_Color text;"
            },
            {
                "User": "Set the eye color of 'Stéphane Antiga' to 'blue'.",
                "Answer": "UPDATE people SET Eye_Color = 'blue' WHERE Name = 'Stéphane Antiga';"
            },
            {
                "User": "I want to record the height in centimeters instead of meters. Update the height of 'Hubert Henno' to 1880 cm.",
                "Answer": "UPDATE people SET Height = 1880 WHERE Name = 'Hubert Henno';"
            },
            {
                "User": "Let's track the candidates' party affiliation. Add a 'Party' column to the candidate table.",
                "Answer": "ALTER TABLE candidate ADD COLUMN Party text;"
            },
            {
                "User": "The candidate with ID 1 is affiliated with the 'Independent' party. Update their record.",
                "Answer": "UPDATE candidate SET Party = 'Independent' WHERE Candidate_ID = 1;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 372,
        "db": "candidate_poll",
        "interaction": [
            {
                "User": "I want to register a new candidate with ID 7 from the 'Global Poll' on March 1st, 2021, with support rate 0.35, consider rate 0.25, oppose rate 0.15, and unsure rate 0.25.",
                "Answer": "INSERT INTO candidate (Candidate_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate) VALUES (7, 'Global Poll', 'March 1st, 2021', 0.35, 0.25, 0.15, 0.25)"
            },
            {
                "User": "Update the support rate of candidate with ID 1 to 0.28.",
                "Answer": "UPDATE candidate SET Support_rate = 0.28 WHERE Candidate_ID = 1"
            },
            {
                "User": "I need to correct the name of the candidate with People_ID 1 to 'Hubert H. Henno'.",
                "Answer": "UPDATE people SET Name = 'Hubert H. Henno' WHERE People_ID = 1"
            },
            {
                "User": "Create a new table to record additional details of the people with columns for Education (text) and Occupation (text).",
                "Answer": "CREATE TABLE people_details (People_ID number PRIMARY KEY, Education text, Occupation text)"
            },
            {
                "User": "Add a new record to the people_details table for People_ID 1 with a Master's degree in Political Science and an occupation as a Politician.",
                "Answer": "INSERT INTO people_details (People_ID, Education, Occupation) VALUES (1, 'Master''s in Political Science', 'Politician')"
            },
            {
                "User": "Add a new column 'Email' to the people table to store their email addresses.",
                "Answer": "ALTER TABLE people ADD COLUMN Email text"
            },
            {
                "User": "Insert the email address 'hubert.henno@email.com' for the person with People_ID 1.",
                "Answer": "UPDATE people SET Email = 'hubert.henno@email.com' WHERE People_ID = 1"
            },
            {
                "User": "Create a view that shows the candidate ID, support rate, and the corresponding person's name for all candidates with a support rate over 0.20.",
                "Answer": "CREATE VIEW high_support_candidates AS SELECT c.Candidate_ID, c.Support_rate, p.Name FROM candidate c JOIN people p ON c.People_ID = p.People_ID WHERE c.Support_rate > 0.20"
            },
            {
                "User": "Show me the names and support rates from the high_support_candidates view.",
                "Answer": "SELECT Name, Support_rate FROM high_support_candidates"
            },
            {
                "User": "We need to track the weight changes of candidates. Add a column 'Weight_Change' to the candidate table to record the change in weight since the last poll.",
                "Answer": "ALTER TABLE candidate ADD COLUMN Weight_Change number"
            },
            {
                "User": "Record that the candidate with ID 2 has lost 2 kg since the last poll.",
                "Answer": "UPDATE candidate SET Weight_Change = -2 WHERE Candidate_ID = 2"
            },
            {
                "User": "Let's create a table to track the campaign contributions for each candidate with columns for the amount and the date of contribution.",
                "Answer": "CREATE TABLE campaign_contributions (Contribution_ID number PRIMARY KEY, Candidate_ID number, Amount number, Contribution_Date text)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 373,
        "db": "ship_mission",
        "interaction": [
            {
                "User": "Show the names of all ships from United States?",
                "Answer": "SELECT Name FROM ship WHERE Nationality = 'United States'"
            },
            {
                "User": "Show the names of all ships from United Kingdom?",
                "Answer": "SELECT Name FROM ship WHERE Nationality = 'United Kingdom'"
            },
            {
                "User": "What type of ship is the Corbridge?",
                "Answer": "SELECT Type FROM ship WHERE Name = 'Corbridge'"
            },
            {
                "User": "What is the tonnage of the Corbridge?",
                "Answer": "SELECT Tonnage FROM ship WHERE Name = 'Corbridge'"
            },
            {
                "User": "What is the name of the ship with 3146 tonnage?",
                "Answer": "SELECT Name FROM ship WHERE Tonnage = 3146"
            },
            {
                "User": "What is the name of the ship with the most tonnage?",
                "Answer": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1"
            },
            {
                "User": "How many different types of ships are there?",
                "Answer": "SELECT COUNT(DISTINCT Type) FROM ship"
            },
            {
                "User": "Add a new cargo ship named 'Oceanic' from Italy with a tonnage of 5000.",
                "Answer": "INSERT INTO ship (Ship_ID, Name, Type, Nationality, Tonnage) VALUES (9, 'Oceanic', 'Cargo ship', 'Italy', 5000)"
            },
            {
                "User": "Update the tonnage of the ship 'Dromonby' to 4000.",
                "Answer": "UPDATE ship SET Tonnage = 4000 WHERE Name = 'Dromonby'"
            },
            {
                "User": "Create a new table to track ship repairs with columns for repair ID, ship ID, start date, end date, and cost.",
                "Answer": "CREATE TABLE ship_repairs (Repair_ID number PRIMARY KEY, Ship_ID number, Start_Date date, End_Date date, Cost number)"
            },
            {
                "User": "Insert a repair record for ship ID 2 with start date '2023-04-01', end date '2023-04-15', and a cost of 20000.",
                "Answer": "INSERT INTO ship_repairs (Repair_ID, Ship_ID, Start_Date, End_Date, Cost) VALUES (1, 2, '2023-04-01', '2023-04-15', 20000)"
            },
            {
                "User": "Alter the 'mission' table to include a new column for 'Mission_Duration' in days.",
                "Answer": "ALTER TABLE mission ADD COLUMN Mission_Duration number"
            },
            {
                "User": "Update the 'Mission_Duration' for mission ID 1 to 30 days.",
                "Answer": "UPDATE mission SET Mission_Duration = 30 WHERE Mission_ID = 1"
            },
            {
                "User": "List all ships that have a tonnage greater than the average tonnage of all ships.",
                "Answer": "SELECT Name FROM ship WHERE Tonnage > (SELECT AVG(Tonnage) FROM ship)"
            },
            {
                "User": "How many missions were launched before 1940?",
                "Answer": "SELECT COUNT(*) FROM mission WHERE Launched_Year < 1940"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 374,
        "db": "school_player",
        "interaction": [
            {
                "User": "Add a new player named John Doe to the Kansas City Royals with age 18 and position as Pitcher for school ID 3.",
                "Answer": "INSERT INTO player (Player, Team, Age, Position, School_ID) VALUES ('John Doe', 'Kansas City Royals', 18, 'Pitcher', 3)"
            },
            {
                "User": "Update the enrollment number for St Aloysius' College to 1250.",
                "Answer": "UPDATE school SET Enrollment = 1250 WHERE School = 'St Aloysius'' College'"
            },
            {
                "User": "Create a new table to track sports equipment with columns for equipment ID, name, type, and school ID.",
                "Answer": "CREATE TABLE sports_equipment (Equipment_ID number PRIMARY KEY, Name text, Type text, School_ID number)"
            },
            {
                "User": "Add a column for email address to the player table.",
                "Answer": "ALTER TABLE player ADD COLUMN Email text"
            },
            {
                "User": "Insert records for sports equipment, add a Basketball with ID 1 for school ID 2.",
                "Answer": "INSERT INTO sports_equipment (Equipment_ID, Name, Type, School_ID) VALUES (1, 'Basketball', 'Ball', 2)"
            },
            {
                "User": "Change the denomination of Barker College to 'Non-denominational'.",
                "Answer": "UPDATE school SET Denomination = 'Non-denominational' WHERE School = 'Barker College'"
            },
            {
                "User": "How many players are enrolled in schools with a 'Catholic' denomination?",
                "Answer": "SELECT COUNT(*) FROM player JOIN school ON player.School_ID = school.School_ID WHERE school.Denomination = 'Catholic'"
            },
            {
                "User": "List all players from 'Day' schools who are older than 15.",
                "Answer": "SELECT Player FROM player JOIN school ON player.School_ID = school.School_ID WHERE school.Day_or_Boarding = 'Day' AND player.Age > 15"
            },
            {
                "User": "Add a record in school_performance for school ID 2 for the school year 2020-21 with classes 'Class_A' as 'Elite' and 'Class_AA' as 'Superior'.",
                "Answer": "INSERT INTO school_performance (School_Id, School_Year, Class_A, Class_AA) VALUES (2, '2020-21', 'Elite', 'Superior')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 375,
        "db": "epinions_1",
        "interaction": [
            {
                "User": "Can you add a new item called 'banana' with id 8 to the item list?",
                "Answer": "INSERT INTO item (i_id, title) VALUES (8, 'banana')"
            },
            {
                "User": "Please update the rating of the review with a_id 1 to 9.",
                "Answer": "UPDATE review SET rating = 9 WHERE a_id = 1"
            },
            {
                "User": "I'd like to insert a new review with a_id 8, u_id 3, i_id 2, rating 8, and rank 4.",
                "Answer": "INSERT INTO review (a_id, u_id, i_id, rating, rank) VALUES (8, 3, 2, 8, 4)"
            },
            {
                "User": "Can you create a new table to track item categories with columns category_id and category_name?",
                "Answer": "CREATE TABLE item_category (category_id number PRIMARY KEY, category_name text)"
            },
            {
                "User": "Add a new user account with u_id 8 and the name 'Alice'.",
                "Answer": "INSERT INTO useracct (u_id, name) VALUES (8, 'Alice')"
            },
            {
                "User": "Let's create a trust relationship where user 3 trusts user 8 with a trust level of 7.",
                "Answer": "INSERT INTO trust (source_u_id, target_u_id, trust) VALUES (3, 8, 7)"
            },
            {
                "User": "I want to add a 'description' column to the item table to include text descriptions.",
                "Answer": "ALTER TABLE item ADD COLUMN description text"
            },
            {
                "User": "Please add the category 'fruit' with category_id 1 to the item_category table.",
                "Answer": "INSERT INTO item_category (category_id, category_name) VALUES (1, 'fruit')"
            },
            {
                "User": "Update the item with i_id 2 to have the title 'grapefruit'.",
                "Answer": "UPDATE item SET title = 'grapefruit' WHERE i_id = 2"
            },
            {
                "User": "Can we create a view that lists all items with their average rating?",
                "Answer": "CREATE VIEW item_average_rating AS SELECT T1.i_id, T1.title, AVG(T2.rating) as average_rating FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T1.i_id"
            },
            {
                "User": "Insert a new trust record where user 2 trusts user 3 with a trust level of 9.",
                "Answer": "INSERT INTO trust (source_u_id, target_u_id, trust) VALUES (2, 3, 9)"
            },
            {
                "User": "Delete the review with a_id 3.",
                "Answer": "DELETE FROM review WHERE a_id = 3"
            },
            {
                "User": "Can we add a 'price' column of type number to the item table?",
                "Answer": "ALTER TABLE item ADD COLUMN price number"
            },
            {
                "User": "Set the price of the item with i_id 1 to 4.99.",
                "Answer": "UPDATE item SET price = 4.99 WHERE i_id = 1"
            },
            {
                "User": "Please create a table to keep track of item stock with columns i_id and stock_quantity.",
                "Answer": "CREATE TABLE item_stock (i_id number, stock_quantity number, FOREIGN KEY (i_id) REFERENCES item(i_id))"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 376,
        "db": "loan_1",
        "interaction": [
            {
                "User": "Can you show the average account balance of customers with credit score lower than 50 for each account type and their corresponding account types?",
                "Answer": "SELECT avg(acc_bal), acc_type FROM customer WHERE credit_score < 50 GROUP BY acc_type"
            },
            {
                "User": "I'd like to add a new customer named Alice with a checking account, $5000 balance, no loans, a credit score of 80, and belonging to the branch with ID 2. What would be the insert statement for this?",
                "Answer": "INSERT INTO customer (cust_ID, cust_name, acc_type, acc_bal, no_of_loans, credit_score, branch_ID, state) VALUES ('4', 'Alice', 'checking', 5000, 0, 80, 2, 'Utah')"
            },
            {
                "User": "Update the account balance for customer with ID 1 to $2500. What is the update statement?",
                "Answer": "UPDATE customer SET acc_bal = 2500 WHERE cust_ID = '1'"
            },
            {
                "User": "Can we create a new table to track the online banking activities, including activity ID, customer ID, activity type, and timestamp?",
                "Answer": "CREATE TABLE online_banking_activities (activity_ID number PRIMARY KEY, cust_ID text, activity_type text, timestamp text)"
            },
            {
                "User": "Insert a record of a login activity for customer ID 2 with activity ID 101 and the current timestamp. What would be the insert statement?",
                "Answer": "INSERT INTO online_banking_activities (activity_ID, cust_ID, activity_type, timestamp) VALUES (101, '2', 'login', CURRENT_TIMESTAMP)"
            },
            {
                "User": "We need to track the email addresses of customers. Can you add an email column to the customer table?",
                "Answer": "ALTER TABLE customer ADD COLUMN email text"
            },
            {
                "User": "Set the email for customer ID 3 to owen@example.com. What is the update statement?",
                "Answer": "UPDATE customer SET email = 'owen@example.com' WHERE cust_ID = '3'"
            },
            {
                "User": "Let's assume customer ID 2 has just taken an auto loan of $15000 from branch ID 1. How would you insert this into the loan table?",
                "Answer": "INSERT INTO loan (loan_ID, loan_type, cust_ID, branch_ID, amount) VALUES ('4', 'Auto', '2', '1', 15000)"
            },
            {
                "User": "How many customers are there in each branch?",
                "Answer": "SELECT branch_ID, COUNT(cust_ID) AS customer_count FROM customer GROUP BY branch_ID"
            },
            {
                "User": "Create a new table to keep track of branch managers, including manager ID, branch ID, name, and start date.",
                "Answer": "CREATE TABLE branch_managers (manager_ID number PRIMARY KEY, branch_ID number, name text, start_date text)"
            },
            {
                "User": "Insert a new branch manager for branch ID 3 with manager ID 10, name 'Susan', and start date as today. What's the insert statement?",
                "Answer": "INSERT INTO branch_managers (manager_ID, branch_ID, name, start_date) VALUES (10, 3, 'Susan', CURRENT_DATE)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 377,
        "db": "loan_1",
        "interaction": [
            {
                "User": "Can you create a new table to track the bank managers?",
                "Answer": "CREATE TABLE bank_managers (manager_ID number PRIMARY KEY, manager_name text, branch_ID number, FOREIGN KEY (branch_ID) REFERENCES bank(branch_ID))"
            },
            {
                "User": "Please insert a new manager for the Morningside branch with ID 101.",
                "Answer": "INSERT INTO bank_managers (manager_ID, manager_name, branch_ID) VALUES (101, 'John Doe', 1)"
            },
            {
                "User": "Update the account balance for customer Mary to $2500.",
                "Answer": "UPDATE customer SET acc_bal = 2500 WHERE cust_name = 'Mary'"
            },
            {
                "User": "Add a new column to the customer table to track the date of account creation.",
                "Answer": "ALTER TABLE customer ADD COLUMN acc_creation_date date"
            },
            {
                "User": "Insert a new loan record for customer Jack, loan type 'Personal', amount $5000, with loan ID 4.",
                "Answer": "INSERT INTO loan (loan_ID, loan_type, cust_ID, branch_ID, amount) VALUES ('4', 'Personal', '2', '1', 5000)"
            },
            {
                "User": "What is the total amount of loans for the Broadway branch?",
                "Answer": "SELECT SUM(amount) FROM loan WHERE branch_ID = '3'"
            },
            {
                "User": "Record a new bank branch with ID 7, located in Los Angeles, California, with no customers yet.",
                "Answer": "INSERT INTO bank (branch_ID, bname, no_of_customers, city, state) VALUES (7, 'westside', 0, 'Los Angeles', 'California')"
            },
            {
                "User": "How many customers do we have in total across all branches?",
                "Answer": "SELECT SUM(no_of_customers) FROM bank"
            },
            {
                "User": "Can we add a new loan type called 'Student' to the loan offerings?",
                "Answer": [
                    "ALTER TABLE loan ADD COLUMN loan_category text;",
                    "UPDATE loan SET loan_category = 'Student' WHERE loan_type = 'Student'"
                ]
            },
            {
                "User": "Let's update the credit score for Owen to 220.",
                "Answer": "UPDATE customer SET credit_score = 220 WHERE cust_name = 'Owen'"
            },
            {
                "User": "Create a view to list all customers with their loan amounts.",
                "Answer": "CREATE VIEW customer_loans AS SELECT cust_name, amount FROM customer JOIN loan ON customer.cust_ID = loan.cust_ID"
            },
            {
                "User": "Insert three new customers with IDs 4, 5, and 6, all with a saving account type and belonging to the downtown branch.",
                "Answer": "INSERT INTO customer (cust_ID, cust_name, acc_type, acc_bal, no_of_loans, credit_score, branch_ID, state) VALUES ('4', 'Alice', 'saving', 3000, 0, 50, 2, 'Utah'), ('5', 'Bob', 'saving', 4500, 1, 70, 2, 'Utah'), ('6', 'Charlie', 'saving', 500, 1, 65, 2, 'Utah')"
            },
            {
                "User": "I need to remove the 'acc_type' column from the customer table, it's no longer needed.",
                "Answer": "ALTER TABLE customer DROP COLUMN acc_type"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 378,
        "db": "perpetrator",
        "interaction": [
            {
                "User": "tell me the total number of injured in both china and japan",
                "Answer": "SELECT sum(injured) FROM perpetrator WHERE country = 'China' OR country = 'Japan'"
            },
            {
                "User": "what is the rate of kill in south korea",
                "Answer": "SELECT Killed FROM perpetrator WHERE country = 'South Korea'"
            },
            {
                "User": "what is the location of ID 3 | Do you mean the perpetrator ID? | yes the perpetrator ID",
                "Answer": "SELECT location FROM perpetrator WHERE Perpetrator_ID = 3"
            },
            {
                "User": "Add a new perpetrator record with ID 6 for an incident in Italy with 10 killed and 7 injured",
                "Answer": "INSERT INTO perpetrator (Perpetrator_ID, People_ID, Date, Year, Location, Country, Killed, Injured) VALUES (6, NULL, NULL, NULL, NULL, 'Italy', 10, 7)"
            },
            {
                "User": "Update the height of Ron Baxter to 6.5 feet",
                "Answer": "UPDATE people SET Height = 6.5 WHERE Name = 'Ron Baxter'"
            },
            {
                "User": "Create a new table to store the details of the incidents including ID, Description, and Incident_Date",
                "Answer": "CREATE TABLE incident_details (Incident_ID number PRIMARY KEY, Description text, Incident_Date text)"
            },
            {
                "User": "Insert a description for the incident with ID 1 as 'Uiryeong gun rampage'",
                "Answer": "INSERT INTO incident_details (Incident_ID, Description, Incident_Date) VALUES (1, 'Uiryeong gun rampage', '04.26 April 26/27')"
            },
            {
                "User": "Add a column for Alias in the people table",
                "Answer": "ALTER TABLE people ADD Alias text"
            },
            {
                "User": "Set the alias of Tyrone Brayan as 'T-Bone'",
                "Answer": "UPDATE people SET Alias = 'T-Bone' WHERE Name = 'Tyrone Brayan'"
            },
            {
                "User": "How many perpetrators have we recorded from 'South Korea'?",
                "Answer": "SELECT COUNT(*) FROM perpetrator WHERE Country = 'South Korea'"
            },
            {
                "User": "Add a new column to the perpetrator table called 'Captured' to indicate if the perpetrator was captured (Yes/No)",
                "Answer": "ALTER TABLE perpetrator ADD Captured text"
            },
            {
                "User": "Mark the perpetrator with ID 2 as captured",
                "Answer": "UPDATE perpetrator SET Captured = 'Yes' WHERE Perpetrator_ID = 2"
            },
            {
                "User": "Create a view to list all perpetrators with their names and number of people they injured",
                "Answer": "CREATE VIEW perpetrator_injury_view AS SELECT p.Perpetrator_ID, pe.Name, p.Injured FROM perpetrator p JOIN people pe ON p.People_ID = pe.People_ID"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 379,
        "db": "perpetrator",
        "interaction": [
            {
                "User": "HOW MANY PEOPLE HAS KILLED AT SOUTH KOREA ?",
                "Answer": "SELECT SUM(killed) FROM perpetrator WHERE Country = 'South Korea'"
            },
            {
                "User": "WHAT IS THE NAME OF THE PERPETRATOR WITH THE BIGGEST WEIGHT ?",
                "Answer": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Weight DESC LIMIT 1"
            },
            {
                "User": "WHERE IS THE LOCATION OF EVENTS IN JAPAN ?",
                "Answer": "SELECT Location FROM perpetrator WHERE Country = 'Japan'"
            },
            {
                "User": "ADD A NEW PERPETRATOR RECORD FOR A RECENT EVENT IN FRANCE.",
                "Answer": "INSERT INTO perpetrator (Perpetrator_ID, People_ID, Date, Year, Location, Country, Killed, Injured) VALUES (6, 10, '03.15 March 15', 2023, 'Paris', 'France', 5, 8)"
            },
            {
                "User": "UPDATE THE NUMBER OF INJURED FOR THE EVENT THAT HAPPENED ON '04.26 April 26/27'.",
                "Answer": "UPDATE perpetrator SET Injured = 40 WHERE Date = '04.26 April 26/27'"
            },
            {
                "User": "CREATE A NEW TABLE TO TRACK THE WEAPONS USED IN EACH EVENT.",
                "Answer": "CREATE TABLE weapons (Event_ID number PRIMARY KEY, Perpetrator_ID number, Weapon_Type text, Weapon_Detail text)"
            },
            {
                "User": "INSERT THE WEAPON DETAILS FOR THE FIRST THREE PERPETRATOR EVENTS.",
                "Answer": "INSERT INTO weapons (Event_ID, Perpetrator_ID, Weapon_Type, Weapon_Detail) VALUES (1, 1, 'Firearm', 'Pistol'), (2, 3, 'Explosive', 'Bomb'), (3, 4, 'Bladed Weapon', 'Sword')"
            },
            {
                "User": "ADD A COLUMN TO TRACK THE MOTIVE BEHIND EACH PERPETRATOR EVENT.",
                "Answer": "ALTER TABLE perpetrator ADD COLUMN Motive text"
            },
            {
                "User": "UPDATE THE MOTIVE FOR THE EVENT IN ZHAODONG, CHINA TO 'REVENGE'.",
                "Answer": "UPDATE perpetrator SET Motive = 'Revenge' WHERE Location = 'Zhaodong' AND Country = 'China'"
            },
            {
                "User": "LIST ALL THE EVENTS THAT RESULTED IN MORE THAN 10 INJURIES.",
                "Answer": "SELECT * FROM perpetrator WHERE Injured > 10"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 380,
        "db": "customers_and_invoices",
        "interaction": [
            {
                "User": "I'd like to add a new customer named John Smith with an email john.smith@example.com and phone number (555)555-5555 from New York, USA. Can you add this record?",
                "Answer": "INSERT INTO Customers (customer_id, customer_first_name, customer_middle_initial, customer_last_name, gender, email_address, login_name, login_password, phone_number, town_city, state_county_province, country) VALUES (16, 'John', 'D', 'Smith', '0', 'john.smith@example.com', 'johnsmith', 'password123', '(555)555-5555', 'New York', 'New York', 'USA')"
            },
            {
                "User": "John Smith decided to change his phone number to (999)999-9999. Can you update his information?",
                "Answer": "UPDATE Customers SET phone_number = '(999)999-9999' WHERE customer_first_name = 'John' AND customer_last_name = 'Smith' AND email_address = 'john.smith@example.com'"
            },
            {
                "User": "Can we create a table to track customer feedback with columns for feedback_id, customer_id, feedback_text, and feedback_date?",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text, feedback_date time)"
            },
            {
                "User": "John Smith just gave us feedback saying 'Great service!'. Can you add this to the Customer Feedback table with today's date?",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES (1, 16, 'Great service!', CURRENT_DATE)"
            },
            {
                "User": "We need to add a column to track the number of items in each order. Can you add a 'total_items' column to the Orders table?",
                "Answer": "ALTER TABLE Orders ADD COLUMN total_items number"
            },
            {
                "User": "I realized we need to record the total price for each order as well. Can you add a 'total_price' column to the Orders table?",
                "Answer": "ALTER TABLE Orders ADD COLUMN total_price number"
            },
            {
                "User": "Let's calculate the total items for order number 1 assuming it had 3 items. Can you update this information?",
                "Answer": "UPDATE Orders SET total_items = 3 WHERE order_id = 1"
            },
            {
                "User": "Assuming the total price for order number 1 was $200.50, can you update the order with this total price?",
                "Answer": "UPDATE Orders SET total_price = 200.50 WHERE order_id = 1"
            },
            {
                "User": "Can you create a new table to log user activities with columns for activity_id, customer_id, activity_type, and activity_timestamp?",
                "Answer": "CREATE TABLE User_Activities (activity_id number PRIMARY KEY, customer_id number, activity_type text, activity_timestamp time)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 381,
        "db": "local_govt_in_alabama",
        "interaction": [
            {
                "User": "I want to record the location of each event. Can you add a new column for the location to the Events table?",
                "Answer": "ALTER TABLE Events ADD COLUMN Location TEXT"
            },
            {
                "User": "Now, please update the location for event with ID 3 to 'Community Center'.",
                "Answer": "UPDATE Events SET Location = 'Community Center' WHERE Event_ID = 3"
            },
            {
                "User": "Add a new event with the details 'Charity Auction', service ID 2, and location 'Town Hall'.",
                "Answer": "INSERT INTO Events (Event_ID, Service_ID, Event_Details, Location) VALUES ((SELECT MAX(Event_ID) + 1 FROM Events), 2, 'Charity Auction', 'Town Hall')"
            },
            {
                "User": "I'd like to track the duration of each service. Can we create a new table for service durations?",
                "Answer": "CREATE TABLE Service_Durations (Service_ID NUMBER, Duration TEXT, PRIMARY KEY (Service_ID))"
            },
            {
                "User": "Please insert the duration '2 hours' for the service with ID 2.",
                "Answer": "INSERT INTO Service_Durations (Service_ID, Duration) VALUES (2, '2 hours')"
            },
            {
                "User": "Can you show me a list of all events along with their locations?",
                "Answer": "SELECT Event_ID, Event_Details, Location FROM Events"
            },
            {
                "User": "We need to record the start time for the 'Charity Auction' event. Can you add a column for the start time in the Events table?",
                "Answer": "ALTER TABLE Events ADD COLUMN Start_Time TEXT"
            },
            {
                "User": "Set the start time for the 'Charity Auction' event to '2023-04-15 18:00:00'.",
                "Answer": "UPDATE Events SET Start_Time = '2023-04-15 18:00:00' WHERE Event_Details = 'Charity Auction'"
            },
            {
                "User": "I've noticed that we have a typo in the service type 'Death Proof'. It should be 'Death Certificate'. Can you correct this in the Services table?",
                "Answer": "UPDATE Services SET Service_Type_Code = 'Death Certificate' WHERE Service_Type_Code = 'Death Proof'"
            },
            {
                "User": "For the sake of consistency, let's rename the 'Participant_Details' column to 'Participant_Name' in the Participants table.",
                "Answer": "ALTER TABLE Participants RENAME COLUMN Participant_Details TO Participant_Name"
            },
            {
                "User": "We need to add a new participant named 'Dr. Emily Stone'. Can you insert her as an organizer?",
                "Answer": "INSERT INTO Participants (Participant_ID, Participant_Type_Code, Participant_Name) VALUES ((SELECT MAX(Participant_ID) + 1 FROM Participants), 'Organizer', 'Dr. Emily Stone')"
            },
            {
                "User": "Link the new participant 'Dr. Emily Stone' to the event with ID 8.",
                "Answer": "INSERT INTO Participants_in_Events (Event_ID, Participant_ID) VALUES (8, (SELECT Participant_ID FROM Participants WHERE Participant_Name = 'Dr. Emily Stone'))"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 382,
        "db": "match_season",
        "interaction": [
            {
                "User": "Add a new team called 'Galactic United' with an ID of 11.",
                "Answer": "INSERT INTO team (Team_id, Name) VALUES (11, 'Galactic United')"
            },
            {
                "User": "Update the capital of Indonesia to 'New Jakarta'.",
                "Answer": "UPDATE country SET Capital = 'New Jakarta' WHERE Country_name = 'Indonesia'"
            },
            {
                "User": "Create a new table to track the seasons in which a player was the top scorer.",
                "Answer": "CREATE TABLE top_scorer (Season number, Player_ID number, Goals number, PRIMARY KEY (Season, Player_ID))"
            },
            {
                "User": "Insert the record of player with ID 2 being the top scorer in the season 1998 with 30 goals.",
                "Answer": "INSERT INTO top_scorer (Season, Player_ID, Goals) VALUES (1998, 2, 30)"
            },
            {
                "User": "Add a new column 'Stadium' to the team table to record the home ground of each team.",
                "Answer": "ALTER TABLE team ADD COLUMN Stadium text"
            },
            {
                "User": "Set the home ground of 'Galactic United' to 'Starfield Arena'.",
                "Answer": "UPDATE team SET Stadium = 'Starfield Arena' WHERE Name = 'Galactic United'"
            },
            {
                "User": "Create a new table for tracking player injuries with columns for player ID, injury date, and injury type.",
                "Answer": "CREATE TABLE player_injuries (Player_ID number, Injury_Date date, Injury_Type text, PRIMARY KEY (Player_ID, Injury_Date))"
            },
            {
                "User": "Record a knee injury for player ID 3 on March 15, 2023.",
                "Answer": "INSERT INTO player_injuries (Player_ID, Injury_Date, Injury_Type) VALUES (3, '2023-03-15', 'Knee')"
            },
            {
                "User": "List all teams with their home ground.",
                "Answer": "SELECT Name, Stadium FROM team WHERE Stadium IS NOT NULL"
            },
            {
                "User": "How many goals did the top scorer score in the 1998 season?",
                "Answer": "SELECT Goals FROM top_scorer WHERE Season = 1998"
            },
            {
                "User": "Add a column 'Assists' to the match_season table to track the number of assists by players.",
                "Answer": "ALTER TABLE match_season ADD COLUMN Assists number"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 383,
        "db": "cre_Docs_and_Epenses",
        "interaction": [
            {
                "User": "I'd like to add a new project to our database. The project ID is 120, and it's called 'Renewable Energy Expansion'.",
                "Answer": "INSERT INTO Projects (Project_ID, Project_Details) VALUES (120, 'Renewable Energy Expansion');"
            },
            {
                "User": "We need to update the budget type description for 'GV' to 'Government Grant'.",
                "Answer": "UPDATE Ref_Budget_Codes SET Budget_Type_Description = 'Government Grant' WHERE Budget_Type_Code = 'GV';"
            },
            {
                "User": "Can you create a new table for project expenses with columns for expense ID, project ID, amount, and description?",
                "Answer": "CREATE TABLE Project_Expenses (Expense_ID number PRIMARY KEY, Project_ID number, Amount decimal, Description text);"
            },
            {
                "User": "Please add a new document type with the code 'RP', name 'Report', and description 'Detailed Report'.",
                "Answer": "INSERT INTO Ref_Document_Types (Document_Type_Code, Document_Type_Name, Document_Type_Description) VALUES ('RP', 'Report', 'Detailed Report');"
            },
            {
                "User": "I realized we need to track the account balance for each account. Can we add a 'Balance' column to the Accounts table?",
                "Answer": "ALTER TABLE Accounts ADD COLUMN Balance decimal;"
            },
            {
                "User": "Let's update the account balance for account ID 7 to $1000.00.",
                "Answer": "UPDATE Accounts SET Balance = 1000.00 WHERE Account_ID = 7;"
            },
            {
                "User": "I want to add a new expense record for project 105 with an amount of $2500.50 and description 'Hardware purchase'.",
                "Answer": "INSERT INTO Project_Expenses (Expense_ID, Project_ID, Amount, Description) VALUES ((SELECT MAX(Expense_ID) + 1 FROM Project_Expenses), 105, 2500.50, 'Hardware purchase');"
            },
            {
                "User": "Can we have a view that lists all documents along with their project details and expense details?",
                "Answer": "CREATE VIEW Documents_Projects_Expenses AS SELECT d.Document_ID, d.Document_Name, p.Project_Details, e.Amount, e.Description FROM Documents d JOIN Projects p ON d.Project_ID = p.Project_ID LEFT JOIN Project_Expenses e ON p.Project_ID = e.Project_ID;"
            },
            {
                "User": "We need to record the date when each account was last updated. Please add a 'Last_Updated' timestamp column to the Accounts table.",
                "Answer": "ALTER TABLE Accounts ADD COLUMN Last_Updated timestamp;"
            },
            {
                "User": "Update the last updated date for account ID 98 to the current timestamp.",
                "Answer": "UPDATE Accounts SET Last_Updated = CURRENT_TIMESTAMP WHERE Account_ID = 98;"
            },
            {
                "User": "Insert a new budget code 'PRV' with the description 'Private Funding'.",
                "Answer": "INSERT INTO Ref_Budget_Codes (Budget_Type_Code, Budget_Type_Description) VALUES ('PRV', 'Private Funding');"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 384,
        "db": "cre_Docs_and_Epenses",
        "interaction": [
            {
                "User": "Add a new document type for emails with code EM and description 'Electronic Mail'.",
                "Answer": "INSERT INTO Ref_Document_Types (Document_Type_Code, Document_Type_Name, Document_Type_Description) VALUES ('EM', 'Email', 'Electronic Mail')"
            },
            {
                "User": "Update the description of the document type with code BK to 'Book Publication'.",
                "Answer": "UPDATE Ref_Document_Types SET Document_Type_Description = 'Book Publication' WHERE Document_Type_Code = 'BK'"
            },
            {
                "User": "Create a new table to track document edits with columns for edit ID, document ID, editor name, and edit timestamp.",
                "Answer": "CREATE TABLE Document_Edits (Edit_ID number PRIMARY KEY, Document_ID number, Editor_Name text, Edit_Timestamp time)"
            },
            {
                "User": "Add a new project with ID 110 called 'Artificial Intelligence in Healthcare'.",
                "Answer": "INSERT INTO Projects (Project_ID, Project_Details) VALUES (110, 'Artificial Intelligence in Healthcare')"
            },
            {
                "User": "Change the project detail of project with ID 30 to 'Society and Culture Research project'.",
                "Answer": "UPDATE Projects SET Project_Details = 'Society and Culture Research project' WHERE Project_ID = 30"
            },
            {
                "User": "Add a new column 'Document_Status' to the Documents table to track the status of documents.",
                "Answer": "ALTER TABLE Documents ADD COLUMN Document_Status text"
            },
            {
                "User": "Insert a new expense record for document ID 29 with budget type ORG and detail 'organization funding'.",
                "Answer": "INSERT INTO Documents_with_Expenses (Document_ID, Budget_Type_Code, Document_Details) VALUES (29, 'ORG', 'organization funding')"
            },
            {
                "User": "Update the account details of account ID 7 to 'Updated account details'.",
                "Answer": "UPDATE Accounts SET Account_Details = 'Updated account details' WHERE Account_ID = 7"
            },
            {
                "User": "Create a new table for archiving old documents with columns for document ID, archive date, and notes.",
                "Answer": "CREATE TABLE Archived_Documents (Document_ID number, Archive_Date time, Notes text)"
            },
            {
                "User": "Add a new statement with ID 250 and details 'Closed Project'.",
                "Answer": "INSERT INTO Statements (Statement_ID, Statement_Details) VALUES (250, 'Closed Project')"
            },
            {
                "User": "Alter the Documents_with_Expenses table to include a new column 'Expense_Amount' of type number.",
                "Answer": "ALTER TABLE Documents_with_Expenses ADD COLUMN Expense_Amount number"
            },
            {
                "User": "List all project details for projects that have associated documents.",
                "Answer": "SELECT DISTINCT P.Project_Details FROM Projects AS P JOIN Documents AS D ON P.Project_ID = D.Project_ID"
            },
            {
                "User": "What is the total expense amount recorded so far?",
                "Answer": "SELECT SUM(Expense_Amount) FROM Documents_with_Expenses"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 385,
        "db": "school_bus",
        "interaction": [
            {
                "User": "Can you add a new driver named John Smith, who is a Democrat from New Haven and is 35 years old?",
                "Answer": "INSERT INTO driver (Driver_ID, Name, Party, Home_city, Age) VALUES (13, 'John Smith', 'Dem', 'New Haven', 35)"
            },
            {
                "User": "I'd like to update the years working for the driver with ID 10 to 12 years. Can you do that?",
                "Answer": "UPDATE school_bus SET Years_Working = 12 WHERE Driver_ID = 10"
            },
            {
                "User": "We need to track the license plate numbers for each school bus. Can you add a column for this?",
                "Answer": "ALTER TABLE school_bus ADD COLUMN License_Plate text"
            },
            {
                "User": "Please insert the license plate number 'ABC123' for the school bus driven by the driver with ID 10.",
                "Answer": "UPDATE school_bus SET License_Plate = 'ABC123' WHERE Driver_ID = 10"
            },
            {
                "User": "Can you create a new table to record bus maintenance history with columns for date, driver ID, and description of the work done?",
                "Answer": "CREATE TABLE maintenance_history (Date text, Driver_ID number, Description text, PRIMARY KEY (Date, Driver_ID))"
            },
            {
                "User": "Add a maintenance record for today for driver ID 2 with the description 'Oil change and tire rotation'.",
                "Answer": "INSERT INTO maintenance_history (Date, Driver_ID, Description) VALUES (CURRENT_DATE, 2, 'Oil change and tire rotation')"
            },
            {
                "User": "Let's track which buses are equipped with GPS. Can you add a 'Has_GPS' column to the school_bus table?",
                "Answer": "ALTER TABLE school_bus ADD COLUMN Has_GPS boolean"
            },
            {
                "User": "Update the school_bus table to indicate that the bus with School_ID 1 now has a GPS installed.",
                "Answer": "UPDATE school_bus SET Has_GPS = TRUE WHERE School_ID = 1"
            },
            {
                "User": "I need to see a list of all drivers over the age of 45. Can you provide that?",
                "Answer": "SELECT Name FROM driver WHERE Age > 45"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 386,
        "db": "products_for_hire",
        "interaction": [
            {
                "User": "Can we track the total discounts used by each customer?",
                "Answer": "ALTER TABLE Customers ADD COLUMN total_discounts_used number;"
            },
            {
                "User": "Add a total discount of 1000 for customer with ID 2",
                "Answer": "UPDATE Customers SET total_discounts_used = 1000 WHERE customer_id = 2;"
            },
            {
                "User": "I want to record the feedback from customers. Can we create a table for that?",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text, feedback_date time);"
            },
            {
                "User": "Insert a feedback for customer with ID 1 saying 'Excellent service!' on today's date.",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES (1, 1, 'Excellent service!', CURRENT_DATE);"
            },
            {
                "User": "How can we give a new booking status for damaged returns?",
                "Answer": "ALTER TABLE Bookings ADD COLUMN damaged_return_status text;"
            },
            {
                "User": "Set the damaged return status as 'Under review' for booking ID 1",
                "Answer": "UPDATE Bookings SET damaged_return_status = 'Under review' WHERE booking_id = 1;"
            },
            {
                "User": "Create a new table to log product maintenance history.",
                "Answer": "CREATE TABLE Product_Maintenance (maintenance_id number PRIMARY KEY, product_id number, maintenance_date time, maintenance_notes text);"
            },
            {
                "User": "Log a maintenance for product ID 2 with note 'Replaced broken handle' on the last month's date.",
                "Answer": "INSERT INTO Product_Maintenance (maintenance_id, product_id, maintenance_date, maintenance_notes) VALUES (1, 2, DATE('now', '-1 month'), 'Replaced broken handle');"
            },
            {
                "User": "I want to add a column to track if a customer has an active booking. Can you do that?",
                "Answer": "ALTER TABLE Customers ADD COLUMN has_active_booking text;"
            },
            {
                "User": "Update customer with ID 3 to have an active booking.",
                "Answer": "UPDATE Customers SET has_active_booking = 'Yes' WHERE customer_id = 3;"
            },
            {
                "User": "Can we find out which customers have used a coupon?",
                "Answer": "SELECT customer_id FROM Customers WHERE coupon_id IS NOT NULL;"
            },
            {
                "User": "Insert a new discount coupon with an amount of 750 issued today.",
                "Answer": "INSERT INTO Discount_Coupons (coupon_id, date_issued, coupon_amount) VALUES ((SELECT MAX(coupon_id) + 1 FROM Discount_Coupons), CURRENT_DATE, 750);"
            },
            {
                "User": "What is the total amount payable for bookings confirmed today?",
                "Answer": "SELECT SUM(amount_payable) FROM Bookings WHERE booking_status_code = 'Confirmed' AND booking_start_date = CURRENT_DATE;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 387,
        "db": "products_for_hire",
        "interaction": [
            {
                "User": "Can we add a new column to track the total amount spent by each customer?",
                "Answer": "ALTER TABLE Customers ADD COLUMN total_amount_spent NUMBER"
            },
            {
                "User": "I want to update the total amount spent by customer with ID 1 to 1500.50.",
                "Answer": "UPDATE Customers SET total_amount_spent = 1500.50 WHERE customer_id = 1"
            },
            {
                "User": "Please insert a new discount coupon with ID 16, issued today, for the amount of 750.",
                "Answer": "INSERT INTO Discount_Coupons (coupon_id, date_issued, coupon_amount) VALUES (16, CURRENT_DATE, 750)"
            },
            {
                "User": "Create a new table to track customer feedback with columns for feedback ID, customer ID, feedback text, and date submitted.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id NUMBER PRIMARY KEY, customer_id NUMBER, feedback_text TEXT, date_submitted TIME)"
            },
            {
                "User": "Let's record a new feedback entry. Customer ID 2 provided feedback 'Excellent service!' on today's date.",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, feedback_text, date_submitted) VALUES (1, 2, 'Excellent service!', CURRENT_DATE)"
            },
            {
                "User": "Update the booking status of booking ID 2 to 'Completed'.",
                "Answer": "UPDATE Bookings SET booking_status_code = 'Completed' WHERE booking_id = 2"
            },
            {
                "User": "Can you create a view to show available products for hire excluding those that are currently booked?",
                "Answer": "CREATE VIEW Available_Products AS SELECT p.product_id, p.product_name FROM Products_for_Hire p LEFT JOIN Products_Booked pb ON p.product_id = pb.product_id WHERE pb.returned_yn = '1' OR pb.booking_id IS NULL"
            },
            {
                "User": "Insert a new product for hire with ID 6, type 'Furniture', daily hire cost 45.00, name 'Chair Set', and description 'Set of 4 chairs'.",
                "Answer": "INSERT INTO Products_for_Hire (product_id, product_type_code, daily_hire_cost, product_name, product_description) VALUES (6, 'Furniture', 45.00, 'Chair Set', 'Set of 4 chairs')"
            },
            {
                "User": "I'd like to add a column for email address to the Customers table. Can you do that?",
                "Answer": "ALTER TABLE Customers ADD COLUMN email_address TEXT"
            },
            {
                "User": "Let's create a new table to store promotional events with columns for event ID, event name, start date, and end date.",
                "Answer": "CREATE TABLE Promotional_Events (event_id NUMBER PRIMARY KEY, event_name TEXT, start_date TIME, end_date TIME)"
            },
            {
                "User": "Update the email address of customer with ID 3 to 'rosalee.kessler@email.com'.",
                "Answer": "UPDATE Customers SET email_address = 'rosalee.kessler@email.com' WHERE customer_id = 3"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 388,
        "db": "theme_gallery",
        "interaction": [
            {
                "User": "Add a new artist named 'Emily Carter' from 'Canada' who joined in 2021 and is 30 years old.",
                "Answer": "INSERT INTO artist (Name, Country, Year_Join, Age) VALUES ('Emily Carter', 'Canada', 2021, 30)"
            },
            {
                "User": "Increase the ticket price by 5 for all exhibitions after the year 2005.",
                "Answer": "UPDATE exhibition SET Ticket_Price = Ticket_Price + 5 WHERE Year > 2005"
            },
            {
                "User": "Create a new table to track artwork with columns for Art_ID, Title, Artist_ID, Year_Created, and Price.",
                "Answer": "CREATE TABLE artwork (Art_ID number PRIMARY KEY, Title text, Artist_ID number, Year_Created number, Price number)"
            },
            {
                "User": "Insert a record for an artwork titled 'Morning Glory' created by artist with ID 2 in the year 2010, priced at 1200.",
                "Answer": "INSERT INTO artwork (Title, Artist_ID, Year_Created, Price) VALUES ('Morning Glory', 2, 2010, 1200)"
            },
            {
                "User": "Add a 'Description' column to the 'exhibition' table to include additional information about each exhibition.",
                "Answer": "ALTER TABLE exhibition ADD Description text"
            },
            {
                "User": "Update the description for the exhibition with ID 3 to 'A magical display of holiday spirit with Santa and his reindeer'.",
                "Answer": "UPDATE exhibition SET Description = 'A magical display of holiday spirit with Santa and his reindeer' WHERE Exhibition_ID = 3"
            },
            {
                "User": "What is the total attendance for the exhibition titled 'Santa Claus'?",
                "Answer": "SELECT SUM(T1.Attendance) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.Exhibition_ID = T2.Exhibition_ID WHERE T2.Theme = 'Santa Claus'"
            },
            {
                "User": "Delete the exhibition record for the date 'December 5' due to incorrect data entry.",
                "Answer": "DELETE FROM exhibition_record WHERE Date = 'December 5'"
            },
            {
                "User": "Show the average age of artists who joined before the year 2000.",
                "Answer": "SELECT AVG(Age) FROM artist WHERE Year_Join < 2000"
            },
            {
                "User": "List all the artwork titles along with their artist's name and price if the artwork's price is above 1000.",
                "Answer": "SELECT T2.Name, T1.Title, T1.Price FROM artwork AS T1 JOIN artist AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Price > 1000"
            },
            {
                "User": "Change the country of the artist with ID 1 to 'USA'.",
                "Answer": "UPDATE artist SET Country = 'USA' WHERE Artist_ID = 1"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 389,
        "db": "theme_gallery",
        "interaction": [
            {
                "User": "Add a new artist named 'Emily Carter' from Canada who joined in 2021 and is 30 years old.",
                "Answer": "INSERT INTO artist (Name, Country, Year_Join, Age) VALUES ('Emily Carter', 'Canada', 2021, 30)"
            },
            {
                "User": "Update the ticket price for the exhibition with ID 2 to $24.99.",
                "Answer": "UPDATE exhibition SET Ticket_Price = 24.99 WHERE Exhibition_ID = 2"
            },
            {
                "User": "Create a new table for artwork donations with columns for donation ID, artist ID, artwork name, estimated value, and donation date.",
                "Answer": "CREATE TABLE artwork_donations (Donation_ID number PRIMARY KEY, Artist_ID number, Artwork_Name text, Estimated_Value number, Donation_Date text)"
            },
            {
                "User": "Add a new column to the artist table to track the number of artworks donated.",
                "Answer": "ALTER TABLE artist ADD COLUMN Artworks_Donated INTEGER DEFAULT 0;"
            },
            {
                "User": "Insert a record of an exhibition held in 2021 with the theme 'Modern Art', by artist with ID 3, and a ticket price of $29.95.",
                "Answer": "INSERT INTO exhibition (Year, Theme, Artist_ID, Ticket_Price) VALUES (2021, 'Modern Art', 3, 29.95)"
            },
            {
                "User": "Record a new exhibition attendance for exhibition ID 1 on 'December 10' with 1500 attendees.",
                "Answer": "INSERT INTO exhibition_record (Exhibition_ID, Date, Attendance) VALUES (1, 'December 10', 1500)"
            },
            {
                "User": "Show the total number of attendees for all exhibitions in the year 2004.",
                "Answer": "SELECT SUM(Attendance) FROM exhibition_record JOIN exhibition ON exhibition_record.Exhibition_ID = exhibition.Exhibition_ID WHERE exhibition.Year = 2004"
            },
            {
                "User": "Increase the age of all artists by 1 year.",
                "Answer": "UPDATE artist SET Age = Age + 1"
            },
            {
                "User": "Delete the exhibition record for 'December 7'.",
                "Answer": "DELETE FROM exhibition_record WHERE Date = 'December 7'"
            },
            {
                "User": "Show the name and country of artists who have joined after the year 2000.",
                "Answer": "SELECT Name, Country FROM artist WHERE Year_Join > 2000"
            },
            {
                "User": "Add a new exhibition record for exhibition ID 3 on 'November 15' with 2000 attendees.",
                "Answer": "INSERT INTO exhibition_record (Exhibition_ID, Date, Attendance) VALUES (3, 'November 15', 2000)"
            },
            {
                "User": "Show the total ticket revenue for the exhibition with the theme 'Santa Claus'.",
                "Answer": "SELECT SUM(Ticket_Price * Attendance) AS Total_Revenue FROM exhibition JOIN exhibition_record ON exhibition.Exhibition_ID = exhibition_record.Exhibition_ID WHERE Theme = 'Santa Claus'"
            },
            {
                "User": "Alter the exhibition table to include a new column for 'Number_of_Artworks' displayed.",
                "Answer": "ALTER TABLE exhibition ADD COLUMN Number_of_Artworks INTEGER;"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 390,
        "db": "climbing",
        "interaction": [
            {
                "User": "How many mountains in this table are higher than 5000 meters?",
                "Answer": "SELECT count(*) FROM mountain WHERE Height > 5000"
            },
            {
                "User": "What is the average prominence of the mountains?",
                "Answer": "SELECT avg(Prominence) FROM mountain"
            },
            {
                "User": "Add a new mountain with ID 8, named 'Mount Fiction', a height of 4500 meters, a prominence of 1500 meters, in the range 'Imaginary', and located in 'Utopia'.",
                "Answer": "INSERT INTO mountain (Mountain_ID, Name, Height, Prominence, Range, Country) VALUES (8, 'Mount Fiction', 4500, 1500, 'Imaginary', 'Utopia')"
            },
            {
                "User": "Update the height of 'Mount Kenya (Batian)' to 5200 meters.",
                "Answer": "UPDATE mountain SET Height = 5200 WHERE Name = 'Mount Kenya (Batian)'"
            },
            {
                "User": "Create a new table to track the mountain climbing records with columns Record_ID (number), Climber_ID (number), Mountain_ID (number), Date_of_Climb (date), and Status (text).",
                "Answer": "CREATE TABLE climbing_records (Record_ID number PRIMARY KEY, Climber_ID number, Mountain_ID number, Date_of_Climb date, Status text)"
            },
            {
                "User": "Insert a record for climber with ID 2 climbing mountain with ID 1 on '2023-04-01' with status 'Completed'.",
                "Answer": "INSERT INTO climbing_records (Record_ID, Climber_ID, Mountain_ID, Date_of_Climb, Status) VALUES (1, 2, 1, '2023-04-01', 'Completed')"
            },
            {
                "User": "Add a column 'First_Ascent' to the mountain table to record the year of the first ascent.",
                "Answer": "ALTER TABLE mountain ADD First_Ascent number"
            },
            {
                "User": "Set the 'First_Ascent' year for 'Kibo (Uhuru Pk)' to 1889.",
                "Answer": "UPDATE mountain SET First_Ascent = 1889 WHERE Name = 'Kibo (Uhuru Pk)'"
            },
            {
                "User": "How many climbers have climbed 'Kibo (Uhuru Pk)'?",
                "Answer": "SELECT count(*) FROM climber WHERE Mountain_ID = (SELECT Mountain_ID FROM mountain WHERE Name = 'Kibo (Uhuru Pk)')"
            },
            {
                "User": "List all the names of the mountains that have been climbed by climbers from 'West Germany'.",
                "Answer": "SELECT DISTINCT m.Name FROM mountain m JOIN climber c ON m.Mountain_ID = c.Mountain_ID WHERE c.Country = 'West Germany'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 391,
        "db": "manufacturer",
        "interaction": [
            {
                "User": "How can I find the total market rate of the furniture?",
                "Answer": "SELECT SUM(Market_Rate) FROM furniture"
            },
            {
                "User": "Can you add a new furniture item called 'Desk' with 5 components and a market rate of 30?",
                "Answer": "INSERT INTO furniture (Name, Num_of_Component, Market_Rate) VALUES ('Desk', 5, 30)"
            },
            {
                "User": "I want to update the market rate of the 'Billiard table' to 55. Can you do that?",
                "Answer": "UPDATE furniture SET Market_Rate = 55 WHERE Name = 'Billiard table'"
            },
            {
                "User": "Could you create a new table to track the sales of furniture items?",
                "Answer": "CREATE TABLE furniture_sales (Sale_ID number PRIMARY KEY, Furniture_ID number, Sale_Date date, Units_Sold number, Total_Revenue number)"
            },
            {
                "User": "I'd like to record a sale of 3 'Chabudai' tables on March 1st, 2023, with a total revenue of 120 dollars. Can you insert this sale record?",
                "Answer": "INSERT INTO furniture_sales (Furniture_ID, Sale_Date, Units_Sold, Total_Revenue) VALUES ((SELECT Furniture_ID FROM furniture WHERE Name = 'Chabudai'), '2023-03-01', 3, 120)"
            },
            {
                "User": "Can we add a column to track the year when the furniture was designed?",
                "Answer": "ALTER TABLE furniture ADD COLUMN Design_Year number"
            },
            {
                "User": "Please set the design year of the 'Bookcase' to 1995.",
                "Answer": "UPDATE furniture SET Design_Year = 1995 WHERE Name = 'Bookcase'"
            },
            {
                "User": "Let's create a view to see which manufacturers make furniture with more than 10 components.",
                "Answer": "CREATE VIEW manufacturers_with_complex_furniture AS SELECT m.Name, f.Name FROM manufacturer m JOIN furniture_manufacte fm ON m.Manufacturer_ID = fm.Manufacturer_ID JOIN furniture f ON fm.Furniture_ID = f.Furniture_ID WHERE f.Num_of_Component > 10"
            },
            {
                "User": "Can you tell me the names of all manufacturers who have more than 15 shops?",
                "Answer": "SELECT Name FROM manufacturer WHERE Num_of_Shops > 15"
            },
            {
                "User": "Insert a new manufacturer named 'Modern Design' that opened in 2020, with 5 factories and 3 shops.",
                "Answer": "INSERT INTO manufacturer (Open_Year, Name, Num_of_Factories, Num_of_Shops) VALUES (2020, 'Modern Design', 5, 3)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 392,
        "db": "manufacturer",
        "interaction": [
            {
                "User": "Add a new manufacturer called 'Dream Furnishings' that opened in 2021 with 5 factories and 10 shops.",
                "Answer": "INSERT INTO manufacturer (Open_Year, Name, Num_of_Factories, Num_of_Shops) VALUES (2021, 'Dream Furnishings', 5, 10)"
            },
            {
                "User": "Update the number of shops for 'IKEA' to 25.",
                "Answer": "UPDATE manufacturer SET Num_of_Shops = 25 WHERE Name = 'IKEA'"
            },
            {
                "User": "Create a new table for storing employee details with columns for employee ID, name, position, and manufacturer ID they work for.",
                "Answer": "CREATE TABLE employee (Employee_ID number PRIMARY KEY, Name text, Position text, Manufacturer_ID number)"
            },
            {
                "User": "Insert three new employees into the employee table for 'Dream Furnishings' with IDs 101, 102, and 103.",
                "Answer": "INSERT INTO employee (Employee_ID, Name, Position, Manufacturer_ID) VALUES (101, 'Alice Smith', 'Manager', (SELECT Manufacturer_ID FROM manufacturer WHERE Name = 'Dream Furnishings')), (102, 'Bob Johnson', 'Designer', (SELECT Manufacturer_ID FROM manufacturer WHERE Name = 'Dream Furnishings')), (103, 'Charlie Brown', 'Sales', (SELECT Manufacturer_ID FROM manufacturer WHERE Name = 'Dream Furnishings'))"
            },
            {
                "User": "Add a new column 'Yearly_Revenue' to the manufacturer table to track their annual earnings.",
                "Answer": "ALTER TABLE manufacturer ADD COLUMN Yearly_Revenue number"
            },
            {
                "User": "Set the yearly revenue for 'Chevrolet House' to $500000.",
                "Answer": "UPDATE manufacturer SET Yearly_Revenue = 500000 WHERE Name = 'Chevrolet House'"
            },
            {
                "User": "Create a new furniture model called 'Modern Desk' with 5 components and a market rate of 120.",
                "Answer": "INSERT INTO furniture (Name, Num_of_Component, Market_Rate) VALUES ('Modern Desk', 5, 120)"
            },
            {
                "User": "Record that 'Dream Furnishings' manufactures the 'Modern Desk' for $200.",
                "Answer": "INSERT INTO furniture_manufacte (Manufacturer_ID, Furniture_ID, Price_in_Dollar) VALUES ((SELECT Manufacturer_ID FROM manufacturer WHERE Name = 'Dream Furnishings'), (SELECT Furniture_ID FROM furniture WHERE Name = 'Modern Desk'), 200)"
            },
            {
                "User": "Increase the market rate of all furniture by 10%.",
                "Answer": "UPDATE furniture SET Market_Rate = Market_Rate * 1.10"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 393,
        "db": "solvency_ii",
        "interaction": [
            {
                "User": "I'd like to add a new product with ID 16, type 'Electronics', name 'Smartphone', and price 999.99. Can you insert it into the database?",
                "Answer": "INSERT INTO Products (Product_ID, Product_Type_Code, Product_Name, Product_Price) VALUES (16, 'Electronics', 'Smartphone', 999.99)"
            },
            {
                "User": "The address details for Address_ID 2 have changed. Can you update it to '1234 New Address Lane, Uptown, OK 66250'?",
                "Answer": "UPDATE Addresses SET address_details = '1234 New Address Lane, Uptown, OK 66250' WHERE Address_ID = 2"
            },
            {
                "User": "We need to track the creation date of each event. Can you add a 'Creation_Date' column of type 'date' to the Events table?",
                "Answer": "ALTER TABLE Events ADD COLUMN Creation_Date date"
            },
            {
                "User": "Can you create a new table called 'Event_Attendance' with columns 'Attendance_ID' as a number, 'Event_ID' as a number, and 'Attendance_Count' as a number?",
                "Answer": "CREATE TABLE Event_Attendance (Attendance_ID number PRIMARY KEY, Event_ID number, Attendance_Count number)"
            },
            {
                "User": "For Event_ID 1, we had an attendance of 150 people. Please insert this data into the 'Event_Attendance' table with an 'Attendance_ID' of 1.",
                "Answer": "INSERT INTO Event_Attendance (Attendance_ID, Event_ID, Attendance_Count) VALUES (1, 1, 150)"
            },
            {
                "User": "We've just signed a new agreement for Event_ID 16. The Document_ID is 16. Can you add this record to the Agreements table?",
                "Answer": "INSERT INTO Agreements (Document_ID, Event_ID) VALUES (16, 16)"
            },
            {
                "User": "The product with ID 3 has been discontinued. Please remove it from the 'Products' table.",
                "Answer": "DELETE FROM Products WHERE Product_ID = 3"
            },
            {
                "User": "Can you update the 'Other_Details' for the 'Channels' table where 'Channel_ID' is 1 to 'Online Marketing'?",
                "Answer": "UPDATE Channels SET Other_Details = 'Online Marketing' WHERE Channel_ID = 1"
            },
            {
                "User": "I need to know the total value of assets for each event. Can you create a view named 'Event_Asset_Values' that shows the sum of product prices for each event?",
                "Answer": "CREATE VIEW Event_Asset_Values AS SELECT E.Event_ID, SUM(P.Product_Price) AS Total_Value FROM Events E JOIN Products_in_Events PE ON E.Event_ID = PE.Event_ID JOIN Products P ON PE.Product_ID = P.Product_ID GROUP BY E.Event_ID"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 394,
        "db": "solvency_ii",
        "interaction": [
            {
                "User": "I would like to add a new product. Can you insert 'Office Chair' with Product ID 16, type 'Furniture', and price 299.99?",
                "Answer": "INSERT INTO Products (Product_ID, Product_Type_Code, Product_Name, Product_Price) VALUES (16, 'Furniture', 'Office Chair', 299.99)"
            },
            {
                "User": "We've decided to increase the price of all books by 10%. Can you update the product prices accordingly?",
                "Answer": "UPDATE Products SET Product_Price = Product_Price * 1.10 WHERE Product_Type_Code = 'Books'"
            },
            {
                "User": "Can you create a new table to track inventory levels for each product?",
                "Answer": "CREATE TABLE Inventory (Inventory_ID number PRIMARY KEY, Product_ID number, Quantity number, FOREIGN KEY (Product_ID) REFERENCES Products(Product_ID))"
            },
            {
                "User": "Please add 50 units to our inventory for the 'Business Policy' book.",
                "Answer": "INSERT INTO Inventory (Inventory_ID, Product_ID, Quantity) VALUES (1, (SELECT Product_ID FROM Products WHERE Product_Name = 'Business Policy'), 50)"
            },
            {
                "User": "We need to keep track of the last restock date for our inventory. Can you add a column for that?",
                "Answer": "ALTER TABLE Inventory ADD COLUMN Last_Restock_Date date"
            },
            {
                "User": "Can you update the last restock date to today's date for 'Business Policy' inventory?",
                "Answer": "UPDATE Inventory SET Last_Restock_Date = CURRENT_DATE WHERE Product_ID = (SELECT Product_ID FROM Products WHERE Product_Name = 'Business Policy')"
            },
            {
                "User": "Let's add a new event. Insert 'Annual Sale' with Event ID 16, Address ID 1, Channel ID 2, type 'Sale', Finance ID 3, and Location ID 1.",
                "Answer": "INSERT INTO Events (Event_ID, Address_ID, Channel_ID, Event_Type_Code, Finance_ID, Location_ID) VALUES (16, 1, 2, 'Sale', 3, 1)"
            },
            {
                "User": "I want to record a new agreement document for the 'Annual Sale' event. The document ID is 16.",
                "Answer": "INSERT INTO Agreements (Document_ID, Event_ID) VALUES (16, (SELECT Event_ID FROM Events WHERE Event_Type_Code = 'Sale' ORDER BY Event_ID DESC LIMIT 1))"
            },
            {
                "User": "We need to correct the event type for Event ID 2 from 'Press Conferenc' to 'Press Conference'. Please update it.",
                "Answer": "UPDATE Events SET Event_Type_Code = 'Press Conference' WHERE Event_ID = 2"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 395,
        "db": "tracking_software_problems",
        "interaction": [
            {
                "User": "Can we add a new problem category called 'Networking' with the description 'Network connectivity and performance issues'?",
                "Answer": "INSERT INTO Problem_Category_Codes (problem_category_code, problem_category_description) VALUES ('Networking', 'Network connectivity and performance issues')"
            },
            {
                "User": "I need to update the problem status code for the problem log with ID 2 to 'In Progress'.",
                "Answer": "UPDATE Problem_Log SET problem_status_code = 'In Progress' WHERE problem_log_id = 2"
            },
            {
                "User": "Please create a new table to track the history of problem status changes with columns for problem_log_id, previous_status, new_status, and change_date.",
                "Answer": "CREATE TABLE Problem_Status_History (problem_log_id number, previous_status text, new_status text, change_date time, PRIMARY KEY (problem_log_id, change_date))"
            },
            {
                "User": "Add a new column 'last_updated' to the Problem_Log table to record the timestamp of the last update.",
                "Answer": "ALTER TABLE Problem_Log ADD COLUMN last_updated time"
            },
            {
                "User": "Insert a new product called 'Router' with details 'Wireless router for home use'.",
                "Answer": "INSERT INTO Product (product_name, product_details) VALUES ('Router', 'Wireless router for home use')"
            },
            {
                "User": "Update the problem description for problem ID 1 to 'Cannot connect to database'.",
                "Answer": "UPDATE Problems SET problem_description = 'Cannot connect to database' WHERE problem_id = 1"
            },
            {
                "User": "Record a new staff member with first name 'Alex', last name 'Johnson', and other details 'Network specialist'.",
                "Answer": "INSERT INTO Staff (staff_first_name, staff_last_name, other_staff_details) VALUES ('Alex', 'Johnson', 'Network specialist')"
            },
            {
                "User": "How many staff members have been assigned to solve problems in the 'Middleware' category?",
                "Answer": "SELECT COUNT(DISTINCT assigned_to_staff_id) FROM Problem_Log WHERE problem_category_code = 'Middleware'"
            },
            {
                "User": "Create a view that lists all problems reported by staff member with id 2, including problem description and status.",
                "Answer": "CREATE VIEW Reported_Problems_By_Staff_2 AS SELECT T1.problem_description, T2.problem_status_description FROM Problems AS T1 JOIN Problem_Status_Codes AS T2 ON T1.problem_id = T2.problem_status_code WHERE reported_by_staff_id = 2"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 396,
        "db": "tracking_software_problems",
        "interaction": [
            {
                "User": "I'd like to add a new problem category called 'Hardware' with the description 'Issues related to physical components of a computer.'",
                "Answer": "INSERT INTO Problem_Category_Codes (problem_category_code, problem_category_description) VALUES ('Hardware', 'Issues related to physical components of a computer.')"
            },
            {
                "User": "Change the status description of the 'Solved' status code to 'Issue has been resolved.'",
                "Answer": "UPDATE Problem_Status_Codes SET problem_status_description = 'Issue has been resolved.' WHERE problem_status_code = 'Solved'"
            },
            {
                "User": "We've just hired a new staff member named John Doe. Please add him to the Staff table with staff_id 16.",
                "Answer": "INSERT INTO Staff (staff_id, staff_first_name, staff_last_name) VALUES (16, 'John', 'Doe')"
            },
            {
                "User": "A problem with id 4 has been solved by staff member John Doe. Update the problem log to reflect this.",
                "Answer": "UPDATE Problem_Log SET assigned_to_staff_id = 16, problem_status_code = 'Solved' WHERE problem_log_id = 4"
            },
            {
                "User": "Create a new table to track the software versions with fields for version_id, version_number, and release_date.",
                "Answer": "CREATE TABLE Software_Versions (version_id number PRIMARY KEY, version_number text, release_date time)"
            },
            {
                "User": "Insert a new product called 'Alpha' with product details 'First version of our flagship software.'",
                "Answer": "INSERT INTO Product (product_id, product_name, product_details) VALUES (16, 'Alpha', 'First version of our flagship software.')"
            },
            {
                "User": "We need a new problem status called 'In Progress'. Please add this to the Problem_Status_Codes table.",
                "Answer": "INSERT INTO Problem_Status_Codes (problem_status_code, problem_status_description) VALUES ('In Progress', 'Problem is currently being worked on.')"
            },
            {
                "User": "The problem description for problem_id 2 is incorrect. It should be 'Software fails to update correctly.' Please update it.",
                "Answer": "UPDATE Problems SET problem_description = 'Software fails to update correctly.' WHERE problem_id = 2"
            },
            {
                "User": "Create a new table called 'Customer_Feedback' with columns for feedback_id, customer_name, feedback_text, and date_received.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_name text, feedback_text text, date_received time)"
            },
            {
                "User": "Add a column to the Staff table to store their email addresses.",
                "Answer": "ALTER TABLE Staff ADD COLUMN staff_email text"
            },
            {
                "User": "A customer named Jane Smith left feedback on our 'Alpha' product saying 'Great product, very intuitive design!' on March 1st, 2023. Please record this in the Customer_Feedback table.",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_name, feedback_text, date_received) VALUES (1, 'Jane Smith', 'Great product, very intuitive design!', '2023-03-01')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 397,
        "db": "company_employee",
        "interaction": [
            {
                "User": "Please add a new employee named John Doe, aged 30, from Canada, graduated from University of Toronto.",
                "Answer": "INSERT INTO people (People_ID, Age, Name, Nationality, Graduation_College) VALUES (8, 30, 'John Doe', 'Canada', 'University of Toronto')"
            },
            {
                "User": "John Doe has been hired by ExxonMobil. Record his employment starting in 2021.",
                "Answer": "INSERT INTO employment (Company_ID, People_ID, Year_working) VALUES (1, 8, 2021);"
            },
            {
                "User": "ExxonMobil has made a new sales record. Update their sales to 450 billion.",
                "Answer": "UPDATE company SET Sales_in_Billion = 450 WHERE Name = 'ExxonMobil'"
            },
            {
                "User": "Create a new table to track employee promotions with columns: People_ID, Promotion_Date, and New_Position.",
                "Answer": "CREATE TABLE promotions (People_ID number, Promotion_Date date, New_Position text, PRIMARY KEY (People_ID, Promotion_Date))"
            },
            {
                "User": "Reggie Lewis has been promoted to Manager. Record this promotion with today's date.",
                "Answer": "INSERT INTO promotions (People_ID, Promotion_Date, New_Position) VALUES (1, CURRENT_DATE, 'Manager')"
            },
            {
                "User": "We need to start tracking the department for each employee. Add a Department column to the people table.",
                "Answer": "ALTER TABLE people ADD COLUMN Department text"
            },
            {
                "User": "Assign Reggie Lewis to the Engineering department.",
                "Answer": "UPDATE people SET Department = 'Engineering' WHERE People_ID = 1"
            },
            {
                "User": "Create a view that shows the total number of employees in each company.",
                "Answer": "CREATE VIEW company_employee_count AS SELECT Company_ID, COUNT(People_ID) AS Employee_Count FROM employment GROUP BY Company_ID"
            },
            {
                "User": "How many employees work for JPMorgan Chase?",
                "Answer": "SELECT Employee_Count FROM company_employee_count WHERE Company_ID = (SELECT Company_ID FROM company WHERE Name = 'JPMorgan Chase')"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 398,
        "db": "company_employee",
        "interaction": [
            {
                "User": "What are the names and ages of people working at ExxonMobil?",
                "Answer": "SELECT P.Name, P.Age FROM people P JOIN employment E ON P.People_ID = E.People_ID JOIN company C ON E.Company_ID = C.Company_ID WHERE C.Name = 'ExxonMobil'"
            },
            {
                "User": "Add a new person named John Smith, aged 30, from the United States, graduated from MIT.",
                "Answer": "INSERT INTO people (People_ID, Age, Name, Nationality, Graduation_College) VALUES (8, 30, 'John Smith', 'United States', 'MIT')"
            },
            {
                "User": "John Smith just got hired by JPMorgan Chase, starting this year. Add this to the employment records.",
                "Answer": "INSERT INTO employment (Company_ID, People_ID, Year_working) VALUES (2, 8, 2023)"
            },
            {
                "User": "Create a new table to record the departments within each company.",
                "Answer": "CREATE TABLE departments (Department_ID number PRIMARY KEY, Company_ID number, Name text, Head text)"
            },
            {
                "User": "Add a new department called 'Research and Development' for General Electric with the head being 'Alice Johnson'.",
                "Answer": "INSERT INTO departments (Department_ID, Company_ID, Name, Head) VALUES (1, 3, 'Research and Development', 'Alice Johnson')"
            },
            {
                "User": "Update the sales of ExxonMobil to 450 billion.",
                "Answer": "UPDATE company SET Sales_in_Billion = 450 WHERE Name = 'ExxonMobil'"
            },
            {
                "User": "Add a new column to the company table to record the number of employees.",
                "Answer": "ALTER TABLE company ADD COLUMN Number_of_Employees number"
            },
            {
                "User": "Set the number of employees for ExxonMobil to 75000.",
                "Answer": "UPDATE company SET Number_of_Employees = 75000 WHERE Name = 'ExxonMobil'"
            },
            {
                "User": "How many departments does General Electric have?",
                "Answer": "SELECT count(*) FROM departments WHERE Company_ID = (SELECT Company_ID FROM company WHERE Name = 'General Electric')"
            },
            {
                "User": "List all the departments and their heads for General Electric.",
                "Answer": "SELECT Name, Head FROM departments WHERE Company_ID = (SELECT Company_ID FROM company WHERE Name = 'General Electric')"
            },
            {
                "User": "Can you show me the updated list of companies with their new sales figures?",
                "Answer": "SELECT Name, Sales_in_Billion FROM company ORDER BY Sales_in_Billion DESC"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 399,
        "db": "customer_complaints",
        "interaction": [
            {
                "User": "ADD A NEW STAFF MEMBER NAMED JOHN DOE WITH EMAIL john.doe@example.com AND PHONE NUMBER 555-1234.",
                "Answer": "INSERT INTO Staff (gender, first_name, last_name, email_address, phone_number) VALUES ('0', 'John', 'Doe', 'john.doe@example.com', '555-1234')"
            },
            {
                "User": "UPDATE THE EMAIL ADDRESS FOR STAFF MEMBER WITH ID 114 TO new.email@example.com.",
                "Answer": "UPDATE Staff SET email_address = 'new.email@example.com' WHERE staff_id = 114"
            },
            {
                "User": "CREATE A TABLE TO TRACK STAFF SALARIES WITH COLUMNS FOR STAFF ID, SALARY AMOUNT, AND PAY DATE.",
                "Answer": "CREATE TABLE StaffSalaries (staff_id number, salary_amount number, pay_date time, PRIMARY KEY (staff_id))"
            },
            {
                "User": "ADD A COLUMN FOR JOB TITLE TO THE STAFF TABLE.",
                "Answer": "ALTER TABLE Staff ADD COLUMN job_title text"
            },
            {
                "User": "INSERT A RECORD FOR A NEW PRODUCT CALLED 'ULTRA MOUSE' WITH A PRICE OF 29.99.",
                "Answer": "INSERT INTO Products (parent_product_id, product_category_code, date_product_first_available, product_name, product_description, product_price) VALUES (NULL, 'Hardware', CURRENT_TIMESTAMP, 'Ultra Mouse', 'High precision mouse', 29.99)"
            },
            {
                "User": "LOG A COMPLAINT FOR CUSTOMER ID 113 ABOUT THE 'ULTRA MOUSE' PRODUCT BEING DEFECTIVE.",
                "Answer": "INSERT INTO Complaints (complaint_id, product_id, customer_id, complaint_outcome_code, complaint_status_code, complaint_type_code, date_complaint_raised, staff_id) VALUES (13, 120, 113, 'Pending', 'New', 'Product Failure', CURRENT_TIMESTAMP, 117)"
            },
            {
                "User": "CHANGE THE STATUS OF COMPLAINT ID 2 TO 'RESOLVED'.",
                "Answer": "UPDATE Complaints SET complaint_status_code = 'Resolved' WHERE complaint_id = 2"
            },
            {
                "User": "CREATE A TABLE TO RECORD CUSTOMER FEEDBACK WITH COLUMNS FOR FEEDBACK ID, CUSTOMER ID, FEEDBACK TEXT, AND FEEDBACK DATE.",
                "Answer": "CREATE TABLE CustomerFeedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text, feedback_date time)"
            },
            {
                "User": "INCREASE THE PRICE OF THE PRODUCT WITH ID 117 BY 10%.",
                "Answer": "UPDATE Products SET product_price = product_price * 1.10 WHERE product_id = 117"
            },
            {
                "User": "ADD A NEW CUSTOMER WITH THE NAME JANE SMITH LIVING IN '123 MAIN ST, ANYTOWN, AN' WITH GOOD CREDIT RATING.",
                "Answer": "INSERT INTO Customers (customer_type_code, address_line_1, town_city, state, email_address, phone_number) VALUES ('Good Credit Rating', '123 Main St', 'Anytown', 'AN', 'jane.smith@example.com', '555-6789')"
            },
            {
                "User": "RECORD A SALARY PAYMENT OF 5000 TO STAFF MEMBER WITH ID 115 ON TODAY'S DATE.",
                "Answer": "INSERT INTO StaffSalaries (staff_id, salary_amount, pay_date) VALUES (115, 5000, CURRENT_TIMESTAMP)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 400,
        "db": "party_people",
        "interaction": [
            {
                "User": "Add a new region with ID 6, name 'Australia', date '5 July 2002', label 'EMI', format 'Digital', and catalogue 'AUS-9876'.",
                "Answer": "INSERT INTO region (Region_ID, Region_name, Date, Label, Format, Catalogue) VALUES (6, 'Australia', '5 July 2002', 'EMI', 'Digital', 'AUS-9876')"
            },
            {
                "User": "Update the label for the United Kingdom on 1 July 2002 to 'Capitol'.",
                "Answer": "UPDATE region SET Label = 'Capitol' WHERE Region_name = 'United Kingdom' AND Date = '1 July 2002'"
            },
            {
                "User": "Create a new table called 'event_details' with columns Event_ID (number), Details (text), and Budget (number).",
                "Answer": "CREATE TABLE event_details (Event_ID number, Details text, Budget number, PRIMARY KEY (Event_ID))"
            },
            {
                "User": "Alter the 'member' table to include a new column 'Email' of type text.",
                "Answer": "ALTER TABLE member ADD Email text"
            },
            {
                "User": "Insert a new event with Event_ID 9, Event_Name 'Fundraiser', Party_ID 2, and Member_in_charge_ID 3.",
                "Answer": "INSERT INTO party_events (Event_ID, Event_Name, Party_ID, Member_in_charge_ID) VALUES (9, 'Fundraiser', 2, 3)"
            },
            {
                "User": "Add details 'Annual charity event' and a budget of 5000 for the event with Event_ID 9.",
                "Answer": "INSERT INTO event_details (Event_ID, Details, Budget) VALUES (9, 'Annual charity event', 5000)"
            },
            {
                "User": "Update the Party_name for Party_ID 3 to 'New Democratic Front'.",
                "Answer": "UPDATE party SET Party_name = 'New Democratic Front' WHERE Party_ID = 3"
            },
            {
                "User": "Insert a new member with Member_ID 16, Member_Name 'Dr. Jane Smith', Party_ID '1', In_office '2023–present', and Email 'jane.smith@email.com'.",
                "Answer": "INSERT INTO member (Member_ID, Member_Name, Party_ID, In_office, Email) VALUES (16, 'Dr. Jane Smith', '1', '2023–present', 'jane.smith@email.com')"
            },
            {
                "User": "List all event details and budgets for events organized by Party_ID 1.",
                "Answer": "SELECT T1.Event_ID, T2.Details, T2.Budget FROM party_events AS T1 JOIN event_details AS T2 ON T1.Event_ID = T2.Event_ID WHERE T1.Party_ID = 1"
            },
            {
                "User": "Delete the event with Event_ID 3 from 'party_events' table.",
                "Answer": "DELETE FROM party_events WHERE Event_ID = 3"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 401,
        "db": "party_people",
        "interaction": [
            {
                "User": "Add a new region with ID 6, name 'Canada', date '1 January 2021', label 'MapleMusic', format 'Digital', and catalogue 'CAN123'.",
                "Answer": "INSERT INTO region (Region_ID, Region_name, Date, Label, Format, Catalogue) VALUES (6, 'Canada', '1 January 2021', 'MapleMusic', 'Digital', 'CAN123')"
            },
            {
                "User": "Update the 'Left_office' date for the party with Party_ID 2 to '1961'.",
                "Answer": "UPDATE party SET Left_office = '1961' WHERE Party_ID = 2"
            },
            {
                "User": "Create a new table called 'party_finance' with columns 'Finance_ID' as number and primary key, 'Party_ID' as number, 'Funds' as number, and 'Year' as text.",
                "Answer": "CREATE TABLE party_finance (Finance_ID number PRIMARY KEY, Party_ID number, Funds number, Year text)"
            },
            {
                "User": "Insert financial records for Party_ID 1 with Finance_ID 1, funds of 50000, and for the year '2020'.",
                "Answer": "INSERT INTO party_finance (Finance_ID, Party_ID, Funds, Year) VALUES (1, 1, 50000, '2020')"
            },
            {
                "User": "Add a new column 'Email' of type text to the 'member' table to store their email addresses.",
                "Answer": "ALTER TABLE member ADD COLUMN Email text"
            },
            {
                "User": "Insert an email address 'tony.abbott@example.com' for the member with Member_ID 1.",
                "Answer": "UPDATE member SET Email = 'tony.abbott@example.com' WHERE Member_ID = 1"
            },
            {
                "User": "Create a new table 'event_attendance' with 'Attendance_ID' as number and primary key, 'Event_ID' as number, 'Member_ID' as number, and 'Attendance' as text.",
                "Answer": "CREATE TABLE event_attendance (Attendance_ID number PRIMARY KEY, Event_ID number, Member_ID number, Attendance text)"
            },
            {
                "User": "Insert an attendance record with Attendance_ID 1 for Event_ID 1, Member_ID 4, and mark the attendance as 'Present'.",
                "Answer": "INSERT INTO event_attendance (Attendance_ID, Event_ID, Member_ID, Attendance) VALUES (1, 1, 4, 'Present')"
            },
            {
                "User": "How much funds does the party with Party_ID 1 have for the year 2020?",
                "Answer": "SELECT Funds FROM party_finance WHERE Party_ID = 1 AND Year = '2020'"
            },
            {
                "User": "Change the format of the region with Region_ID 2 from '2× LP' to 'Vinyl'.",
                "Answer": "UPDATE region SET Format = 'Vinyl' WHERE Region_ID = 2"
            },
            {
                "User": "List all members with their email addresses.",
                "Answer": "SELECT Member_Name, Email FROM member WHERE Email IS NOT NULL"
            },
            {
                "User": "Add a new event called 'Fundraiser' with Event_ID 9 for Party_ID 1 and Member_in_charge_ID 3.",
                "Answer": "INSERT INTO party_events (Event_ID, Event_Name, Party_ID, Member_in_charge_ID) VALUES (9, 'Fundraiser', 1, 3)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 402,
        "db": "insurance_fnol",
        "interaction": [
            {
                "User": "Can we add a new service for 'Claim Adjustment'?",
                "Answer": "INSERT INTO Services (Service_ID, Service_name) VALUES (7, 'Claim Adjustment')"
            },
            {
                "User": "Let's create a table for policy renewals with Policy_ID, Renewal_Date, and Renewal_Fee.",
                "Answer": "CREATE TABLE Policy_Renewals (Policy_ID number, Renewal_Date time, Renewal_Fee number, PRIMARY KEY (Policy_ID))"
            },
            {
                "User": "Can we add a new policy for customer ID 256 with policy type 'Health Insurance' and phone number '+1-555-987-6543'?",
                "Answer": "INSERT INTO Available_Policies (policy_type_code, Customer_Phone) VALUES ('Health Insurance', '+1-555-987-6543')"
            },
            {
                "User": "How about we add a column for 'Email' to the Customers table?",
                "Answer": "ALTER TABLE Customers ADD COLUMN Email text"
            },
            {
                "User": "Please update the settlement amount for Settlement_ID 161 to 7000.",
                "Answer": "UPDATE Settlements SET Settlement_Amount = 7000 WHERE Settlement_ID = 161"
            },
            {
                "User": "I want to create a new claim for FNOL_ID 532 with an effective date of '2023-01-01'.",
                "Answer": "INSERT INTO Claims (Claim_ID, FNOL_ID, Effective_Date) VALUES (231, 532, '2023-01-01')"
            },
            {
                "User": "Can we record a new first notification of loss for customer ID 194, policy ID 246, and service ID 1?",
                "Answer": "INSERT INTO First_Notification_of_Loss (FNOL_ID, Customer_ID, Policy_ID, Service_ID) VALUES (1733, 194, 246, 1)"
            },
            {
                "User": "Let's link customer ID 194 with a new policy ID 582 that was opened today and has no close date yet.",
                "Answer": "INSERT INTO Customers_Policies (Customer_ID, Policy_ID, Date_Opened, Date_Closed) VALUES (194, 582, CURRENT_DATE, NULL)"
            },
            {
                "User": "Can you update the policy type for Policy_ID 300 to 'Auto Insurance'?",
                "Answer": "UPDATE Available_Policies SET policy_type_code = 'Auto Insurance' WHERE Policy_ID = 300"
            },
            {
                "User": "I'd like to add a record for a settlement with Claim_ID 145, an effective date of '2023-02-15', and an amount of 3500.",
                "Answer": "INSERT INTO Settlements (Settlement_ID, Claim_ID, Effective_Date, Settlement_Amount) VALUES (206, 145, '2023-02-15', 3500)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 403,
        "db": "scientist_1",
        "interaction": [
            {
                "User": "Add a new scientist named John Doe with SSN 999888777.",
                "Answer": "INSERT INTO Scientists (SSN, Name) VALUES (999888777, 'John Doe')"
            },
            {
                "User": "John Doe has just started a new project called Quantum Computing Basics. Can you add it with 100 hours and code QC1?",
                "Answer": "INSERT INTO Projects (Code, Name, Hours) VALUES ('QC1', 'Quantum Computing Basics', 100)"
            },
            {
                "User": "Assign John Doe to the Quantum Computing Basics project.",
                "Answer": "INSERT INTO AssignedTo (Scientist, Project) VALUES (999888777, 'QC1')"
            },
            {
                "User": "Increase the hours for the Aerodynamics and Gas Mileage project by 20.",
                "Answer": "UPDATE Projects SET Hours = Hours + 20 WHERE Code = 'AeH3'"
            },
            {
                "User": "I realized that we should also track the start date of projects. Can you add a StartDate column to the Projects table?",
                "Answer": "ALTER TABLE Projects ADD COLUMN StartDate date"
            },
            {
                "User": "Set the start date of the Quantum Computing Basics project to April 1st, 2023.",
                "Answer": "UPDATE Projects SET StartDate = '2023-04-01' WHERE Code = 'QC1'"
            },
            {
                "User": "Create a new table to track publications with columns for ID, Title, Scientist, and PublishedDate.",
                "Answer": "CREATE TABLE Publications (ID number PRIMARY KEY, Title text, Scientist number, PublishedDate date)"
            },
            {
                "User": "Add a publication titled 'The Effects of Quantum Computing on Encryption' authored by John Doe with ID 101 and published on April 5th, 2023.",
                "Answer": "INSERT INTO Publications (ID, Title, Scientist, PublishedDate) VALUES (101, 'The Effects of Quantum Computing on Encryption', 999888777, '2023-04-05')"
            },
            {
                "User": "We need to keep track of the department for each scientist. Can you add a Department column to the Scientists table?",
                "Answer": "ALTER TABLE Scientists ADD COLUMN Department text"
            },
            {
                "User": "Update John Doe's department to 'Computer Science'.",
                "Answer": "UPDATE Scientists SET Department = 'Computer Science' WHERE SSN = 999888777"
            },
            {
                "User": "How many scientists are currently assigned to the project with code AeH3?",
                "Answer": "SELECT COUNT(*) FROM AssignedTo WHERE Project = 'AeH3'"
            },
            {
                "User": "Remove the project with code AeH1 from the database as it has been completed.",
                "Answer": "DELETE FROM Projects WHERE Code = 'AeH1'"
            },
            {
                "User": "Carol Smith has changed her name to Carol Jones. Update our records.",
                "Answer": "UPDATE Scientists SET Name = 'Carol Jones' WHERE SSN = 222364883"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 404,
        "db": "storm_record",
        "interaction": [
            {
                "User": "Add a new storm record with ID 11 named 'Four', active from 'September 1 to September 5', with a max speed of 980, damage of 20 million USD, and 5 deaths.",
                "Answer": "INSERT INTO storm (Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths) VALUES (11, 'Four', 'September1–September5', 980, 20.0, 5)"
            },
            {
                "User": "Update the damage for storm 'Two' to 12 million USD.",
                "Answer": "UPDATE storm SET Damage_millions_USD = 12 WHERE Name = 'Two'"
            },
            {
                "User": "Create a new table to track the aid provided to affected regions with columns for aid ID, region ID, amount in USD, and date provided.",
                "Answer": "CREATE TABLE aid_provided (Aid_ID number PRIMARY KEY, Region_id number, Amount_USD number, Date_provided text)"
            },
            {
                "User": "Insert a record of aid provided with ID 101 to region 2 of 5 million USD on October 10th.",
                "Answer": "INSERT INTO aid_provided (Aid_ID, Region_id, Amount_USD, Date_provided) VALUES (101, 2, 5.0, 'October10')"
            },
            {
                "User": "Alter the 'region' table to include a new column 'Population' of type number.",
                "Answer": "ALTER TABLE region ADD Population number"
            },
            {
                "User": "Set the population of region 'AF' to 38041754.",
                "Answer": "UPDATE region SET Population = 38041754 WHERE Region_code = 'AF'"
            },
            {
                "User": "How much aid in total has been provided to region 2?",
                "Answer": "SELECT SUM(Amount_USD) FROM aid_provided WHERE Region_id = 2"
            },
            {
                "User": "List the names of storms that caused damages greater than 15 million USD.",
                "Answer": "SELECT Name FROM storm WHERE Damage_millions_USD > 15"
            },
            {
                "User": "Add a new affected region record indicating that region 4 was affected by storm with ID 11 and 20 cities were affected.",
                "Answer": "INSERT INTO affected_region (Region_id, Storm_ID, Number_city_affected) VALUES (4, 11, 20)"
            },
            {
                "User": "What is the average number of deaths per storm?",
                "Answer": "SELECT AVG(Number_Deaths) FROM storm"
            },
            {
                "User": "Delete the storm record with the name 'One'.",
                "Answer": "DELETE FROM storm WHERE Name = 'One'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 405,
        "db": "storm_record",
        "interaction": [
            {
                "User": "Insert a new storm record with ID 11, named 'Four', active from 'September1–September5', with a max speed of 980, damage of 20 million USD, and 3 deaths.",
                "Answer": "INSERT INTO storm (Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths) VALUES (11, 'Four', 'September1–September5', 980, 20, 3)"
            },
            {
                "User": "Update the damage in millions USD for storm 'Two' to 15.5 million USD.",
                "Answer": "UPDATE storm SET Damage_millions_USD = 15.5 WHERE Name = 'Two'"
            },
            {
                "User": "Create a new table 'evacuations' with columns 'Evacuation_ID' as number and primary key, 'Region_id' as number, 'Storm_ID' as number, 'Number_people_evacuated' as number.",
                "Answer": "CREATE TABLE evacuations (Evacuation_ID number PRIMARY KEY, Region_id number, Storm_ID number, Number_people_evacuated number)"
            },
            {
                "User": "Insert three records into the 'evacuations' table with IDs 1, 2, and 3, linked to region IDs 1, 2, and 3, and storm IDs 1, 2, and 3 respectively, with people evacuated as 5000, 3000, and 8000.",
                "Answer": "INSERT INTO evacuations (Evacuation_ID, Region_id, Storm_ID, Number_people_evacuated) VALUES (1, 1, 1, 5000), (2, 2, 2, 3000), (3, 3, 3, 8000)"
            },
            {
                "User": "Add a new column 'Alert_level' of type text to the 'storm' table.",
                "Answer": "ALTER TABLE storm ADD COLUMN Alert_level text"
            },
            {
                "User": "Set the alert level for storms with a max speed greater than 990 to 'High', and for others to 'Medium'.",
                "Answer": "UPDATE storm SET Alert_level = CASE WHEN Max_speed > 990 THEN 'High' ELSE 'Medium' END"
            },
            {
                "User": "How many people were evacuated due to storm 'One'?",
                "Answer": "SELECT SUM(Number_people_evacuated) FROM evacuations WHERE Storm_ID = (SELECT Storm_ID FROM storm WHERE Name = 'One')"
            },
            {
                "User": "Create a view 'High_Risk_Storms' that lists all storms with 'High' alert level.",
                "Answer": "CREATE VIEW High_Risk_Storms AS SELECT * FROM storm WHERE Alert_level = 'High'"
            },
            {
                "User": "List all the regions affected by 'High' alert level storms along with the number of cities affected.",
                "Answer": "SELECT T1.Region_name, T2.Number_city_affected FROM region AS T1 JOIN affected_region AS T2 ON T1.Region_id = T2.Region_id JOIN storm AS T3 ON T2.Storm_ID = T3.Storm_ID WHERE T3.Alert_level = 'High'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 406,
        "db": "farm",
        "interaction": [
            {
                "User": "Add a new city with ID 6, called 'Riverdale', with a status of 'Town', an area of 25.5 km², a population of 8500, and a census ranking of '500 of 5008'.",
                "Answer": "INSERT INTO city (City_ID, Official_Name, Status, Area_km_2, Population, Census_Ranking) VALUES (6, 'Riverdale', 'Town', 25.5, 8500, '500 of 5008')"
            },
            {
                "User": "Update the population of 'Perth-Andover' to 1800.",
                "Answer": "UPDATE city SET Population = 1800 WHERE Official_Name = 'Perth-Andover'"
            },
            {
                "User": "Create a new table called 'animal_husbandry' with columns 'Farm_ID' as number, 'Chickens' as number, 'Ducks' as number, and 'Geese' as number. Farm_ID should be the primary key.",
                "Answer": "CREATE TABLE animal_husbandry (Farm_ID number PRIMARY KEY, Chickens number, Ducks number, Geese number)"
            },
            {
                "User": "Insert records into 'animal_husbandry' for farms with IDs 1, 2, and 3. Farm 1 has 300 chickens, 150 ducks, and 80 geese. Farm 2 has 250 chickens, 120 ducks, and 90 geese. Farm 3 has 400 chickens, 200 ducks, and 100 geese.",
                "Answer": "INSERT INTO animal_husbandry (Farm_ID, Chickens, Ducks, Geese) VALUES (1, 300, 150, 80), (2, 250, 120, 90), (3, 400, 200, 100)"
            },
            {
                "User": "Add a new column to 'farm' table called 'Total_Animals' which is the sum of all animals on the farm.",
                "Answer": "ALTER TABLE farm ADD Total_Animals number"
            },
            {
                "User": "Update the 'Total_Animals' column for farm with ID 1 to include the sum of all animals.",
                "Answer": "UPDATE farm SET Total_Animals = (Total_Horses + Total_Cattle + Pigs + Sheep_and_Goats) WHERE Farm_ID = 1"
            },
            {
                "User": "Create a view named 'city_farm_data' that shows the official city name, farm ID, and total animals for each farm in each city.",
                "Answer": "CREATE VIEW city_farm_data AS SELECT c.Official_Name, f.Farm_ID, f.Total_Animals FROM city c JOIN farm f ON c.City_ID = f.Farm_ID"
            },
            {
                "User": "Delete the record from 'competition_record' where 'Competition_ID' is 1 and 'Farm_ID' is 8.",
                "Answer": "DELETE FROM competition_record WHERE Competition_ID = 1 AND Farm_ID = 8"
            },
            {
                "User": "What is the total number of cattle (sum of oxen, bulls, and cows) for farm 2?",
                "Answer": "SELECT (Oxen + Bulls + Cows) AS Total_Cattle FROM farm WHERE Farm_ID = 2"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 407,
        "db": "program_share",
        "interaction": [
            {
                "User": "Add a new program called 'Space Quest' from 'NASA' launched in 2021 owned by 'National Geographic'.",
                "Answer": "INSERT INTO program (Name, Origin, Launch, Owner) VALUES ('Space Quest', 'NASA', 2021, 'National Geographic')"
            },
            {
                "User": "Update the share percentage of 'CCTV-1' to 5.2%.",
                "Answer": "UPDATE channel SET Share_in_percent = 5.2 WHERE Name = 'CCTV-1'"
            },
            {
                "User": "Create a new table to track viewer feedback with columns for feedback_id, channel_id, program_id, viewer_comments, and rating.",
                "Answer": "CREATE TABLE viewer_feedback (feedback_id number PRIMARY KEY, channel_id number, program_id number, viewer_comments text, rating number)"
            },
            {
                "User": "Add a new column 'Genre' to the program table to categorize each program.",
                "Answer": "ALTER TABLE program ADD COLUMN Genre text"
            },
            {
                "User": "Insert a new broadcast entry for program id 2 on 'Hunan Satellite TV' during 'Afternoon'.",
                "Answer": "INSERT INTO broadcast (Channel_ID, Program_ID, Time_of_day) VALUES ((SELECT Channel_ID FROM channel WHERE Name = 'Hunan Satellite TV'), 2, 'Afternoon')"
            },
            {
                "User": "Change the owner of the 'Kaku' program to 'Discovery Channel'.",
                "Answer": "UPDATE program SET Owner = 'Discovery Channel' WHERE Name = 'Kaku'"
            },
            {
                "User": "Create a new table to store information about advertisers with columns for advertiser_id, name, and budget.",
                "Answer": "CREATE TABLE advertisers (advertiser_id number PRIMARY KEY, name text, budget number)"
            },
            {
                "User": "Record that 'CCTV-1' has a new broadcast share of 5.5% on '04,May'.",
                "Answer": "INSERT INTO broadcast_share (Channel_ID, Program_ID, Date, Share_in_percent) VALUES ((SELECT Channel_ID FROM channel WHERE Name = 'CCTV-1'), (SELECT Program_ID FROM program WHERE Name = (SELECT Name FROM program ORDER BY Launch DESC LIMIT 1)), '04,May', 5.5)"
            },
            {
                "User": "Set the genre of the 'Aniworld' program to 'Animation'.",
                "Answer": "UPDATE program SET Genre = 'Animation' WHERE Name = 'Aniworld'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 408,
        "db": "book_2",
        "interaction": [
            {
                "User": "Add a new book with ID 11 titled 'The Red Dragon' with 3 issues written by 'Thomas Harris'.",
                "Answer": "INSERT INTO book (Book_ID, Title, Issues, Writer) VALUES (11, 'The Red Dragon', 3, 'Thomas Harris')"
            },
            {
                "User": "Update the price of the publication with ID 2 to 7000000.",
                "Answer": "UPDATE publication SET Price = 7000000 WHERE Publication_ID = 2"
            },
            {
                "User": "Create a new table for authors with their ID, name, and country.",
                "Answer": "CREATE TABLE authors (Author_ID number PRIMARY KEY, Name text, Country text)"
            },
            {
                "User": "Insert data into the authors table with ID 1, name 'Timothy Truman', and country 'USA'.",
                "Answer": "INSERT INTO authors (Author_ID, Name, Country) VALUES (1, 'Timothy Truman', 'USA')"
            },
            {
                "User": "Insert data into the authors table with ID 2, name 'Garth Ennis', and country 'UK'.",
                "Answer": "INSERT INTO authors (Author_ID, Name, Country) VALUES (2, 'Garth Ennis', 'UK')"
            },
            {
                "User": "Add a new column to the book table to store the genre of each book.",
                "Answer": "ALTER TABLE book ADD COLUMN Genre text"
            },
            {
                "User": "Set the genre of the book with ID 1 to 'Fantasy'.",
                "Answer": "UPDATE book SET Genre = 'Fantasy' WHERE Book_ID = 1"
            },
            {
                "User": "Set the genre of the book with ID 2 to 'Horror'.",
                "Answer": "UPDATE book SET Genre = 'Horror' WHERE Book_ID = 2"
            },
            {
                "User": "Show the list of books along with their publishers.",
                "Answer": "SELECT b.Title, p.Publisher FROM book b JOIN publication p ON b.Book_ID = p.Book_ID"
            },
            {
                "User": "Increase the price of all publications by 10%.",
                "Answer": "UPDATE publication SET Price = Price * 1.1"
            },
            {
                "User": "Show the total number of issues published by 'Pearson'.",
                "Answer": "SELECT SUM(b.Issues) FROM book b JOIN publication p ON b.Book_ID = p.Book_ID WHERE p.Publisher = 'Pearson'"
            },
            {
                "User": "Delete the publication with the lowest price.",
                "Answer": "DELETE FROM publication WHERE Price = (SELECT MIN(Price) FROM publication)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 409,
        "db": "book_2",
        "interaction": [
            {
                "User": "I want to add a new book titled 'Endless Night' written by Agatha Christie with 5 issues.",
                "Answer": "INSERT INTO book (Book_ID, Title, Issues, Writer) VALUES ((SELECT max(Book_ID) + 1 FROM book), 'Endless Night', 5, 'Agatha Christie')"
            },
            {
                "User": "The price for 'The Black Lamb' has been updated to 17000000. Please update the database.",
                "Answer": "UPDATE publication SET Price = 17000000 WHERE Book_ID = (SELECT Book_ID FROM book WHERE Title = 'The Black Lamb')"
            },
            {
                "User": "Can you create a table for authors with columns for author_id, name, and nationality?",
                "Answer": "CREATE TABLE authors (author_id number PRIMARY KEY, name text, nationality text)"
            },
            {
                "User": "Let's add Agatha Christie to the authors' table with British nationality.",
                "Answer": "INSERT INTO authors (author_id, name, nationality) VALUES ((SELECT max(author_id) + 1 FROM authors), 'Agatha Christie', 'British')"
            },
            {
                "User": "I need to update the publication date for 'Bloody Mary' to 'January 2009'.",
                "Answer": "UPDATE publication SET Publication_Date = 'January 2009' WHERE Book_ID = (SELECT Book_ID FROM book WHERE Title = 'Bloody Mary')"
            },
            {
                "User": "Add a new column to the book table to store the genre of each book.",
                "Answer": "ALTER TABLE book ADD COLUMN Genre text"
            },
            {
                "User": "Set the genre of 'The Black Lamb' to 'Adventure'.",
                "Answer": "UPDATE book SET Genre = 'Adventure' WHERE Title = 'The Black Lamb'"
            },
            {
                "User": "Please create a new table called 'sales' with columns for sale_id, book_id, and quantity_sold.",
                "Answer": "CREATE TABLE sales (sale_id number PRIMARY KEY, book_id number, quantity_sold number)"
            },
            {
                "User": "Record a sale for 'The Black Lamb' with a quantity of 30.",
                "Answer": "INSERT INTO sales (sale_id, book_id, quantity_sold) VALUES ((SELECT max(sale_id) + 1 FROM sales), (SELECT Book_ID FROM book WHERE Title = 'The Black Lamb'), 30)"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 410,
        "db": "cre_Doc_Control_Systems",
        "interaction": [
            {
                "User": "Add a new document type for 'Flash Drive' with a code 'FD'.",
                "Answer": "INSERT INTO Ref_Document_Types (document_type_code, document_type_description) VALUES ('FD', 'Flash Drive')"
            },
            {
                "User": "Update the status of document with id 2 to 'archived'.",
                "Answer": "UPDATE Documents SET document_status_code = 'archived' WHERE document_id = 2"
            },
            {
                "User": "Create a new table for tracking document edits with columns for edit_id, document_id, editor_employee_id, and edit_timestamp.",
                "Answer": "CREATE TABLE Document_Edits (edit_id number PRIMARY KEY, document_id number, editor_employee_id number, edit_timestamp time)"
            },
            {
                "User": "Insert a new role for 'Archivist' with code 'AR'.",
                "Answer": "INSERT INTO Roles (role_code, role_description) VALUES ('AR', 'Archivist')"
            },
            {
                "User": "Add a new column 'last_updated' to the Documents table to track the last update timestamp.",
                "Answer": "ALTER TABLE Documents ADD COLUMN last_updated TIMESTAMP"
            },
            {
                "User": "Create a new document with id 16, status 'working', type 'FD', shipped by 'US', received on '2023-03-15 09:30:00', with receipt number '101' and other details 'confidential'.",
                "Answer": "INSERT INTO Documents (document_id, document_status_code, document_type_code, shipping_agent_code, receipt_date, receipt_number, other_details) VALUES (16, 'working', 'FD', 'US', '2023-03-15 09:30:00', '101', 'confidential')"
            },
            {
                "User": "Change the shipping agent description for 'Airline' to 'Air transport service'.",
                "Answer": "UPDATE Ref_Shipping_Agents SET shipping_agent_description = 'Air transport service' WHERE shipping_agent_code = 'AL'"
            },
            {
                "User": "Insert a draft copy for document 1, draft number 3, copy number 1.",
                "Answer": "INSERT INTO Draft_Copies (document_id, draft_number, copy_number) VALUES (1, 3, 1)"
            },
            {
                "User": "Record a new circulation history entry for document 50, draft 17, copy 15, circulated to employee with id 8.",
                "Answer": "INSERT INTO Circulation_History (document_id, draft_number, copy_number, employee_id) VALUES (50, 17, 15, 8)"
            },
            {
                "User": "Mail document 16 to address with id 2 on '2023-03-16 10:00:00'.",
                "Answer": "INSERT INTO Documents_Mailed (document_id, mailed_to_address_id, mailing_date) VALUES (16, 2, '2023-03-16 10:00:00')"
            },
            {
                "User": "Add a new column 'email' to the Employees table to store their email addresses.",
                "Answer": "ALTER TABLE Employees ADD COLUMN email TEXT;"
            },
            {
                "User": "Set the email for employee with id 1 to 'koby@example.com'.",
                "Answer": "UPDATE Employees SET email = 'koby@example.com' WHERE employee_id = 1"
            },
            {
                "User": "Create a new address record with id 11 and address details 'JP'.",
                "Answer": "INSERT INTO Addresses (address_id, address_details) VALUES (11, 'JP')"
            },
            {
                "User": "Update the document type description for 'CD' to 'Compact Disc'.",
                "Answer": "UPDATE Ref_Document_Types SET document_type_description = 'Compact Disc' WHERE document_type_code = 'CD'"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 411,
        "db": "cre_Doc_Control_Systems",
        "interaction": [
            {
                "User": "Can you add a new document type called 'Email' with the description 'electronic mail'?",
                "Answer": "INSERT INTO Ref_Document_Types (document_type_code, document_type_description) VALUES ('Email', 'electronic mail')"
            },
            {
                "User": "I need to update the address details for the address with id 1 to 'USA, Washington, Seattle'",
                "Answer": "UPDATE Addresses SET address_details = 'USA, Washington, Seattle' WHERE address_id = 1"
            },
            {
                "User": "Please create a new table called 'Document_Access_Log' to track who accessed documents, with columns for 'log_id', 'document_id', 'employee_id', and 'access_time' where 'log_id' is an auto-increment primary key",
                "Answer": "CREATE TABLE Document_Access_Log (log_id INTEGER PRIMARY KEY AUTOINCREMENT, document_id INTEGER, employee_id INTEGER, access_time TEXT);"
            },
            {
                "User": "Can you insert a record into 'Document_Access_Log' for employee with id 2 accessing document id 1 at '2023-04-01 10:00:00'?",
                "Answer": "INSERT INTO Document_Access_Log (document_id, employee_id, access_time) VALUES (1, 2, '2023-04-01 10:00:00')"
            },
            {
                "User": "We need to add a new column 'last_updated' to the 'Documents' table to record the last update timestamp",
                "Answer": "ALTER TABLE Documents ADD COLUMN last_updated time"
            },
            {
                "User": "Can you update the 'last_updated' field for document id 3 to the current timestamp?",
                "Answer": "UPDATE Documents SET last_updated = CURRENT_TIMESTAMP WHERE document_id = 3"
            },
            {
                "User": "Let's add a new role called 'Intern' with the description 'temporary assistant'",
                "Answer": "INSERT INTO Roles (role_code, role_description) VALUES ('IN', 'temporary assistant')"
            },
            {
                "User": "Change the shipping agent description for 'UPS' to 'global courier delivery services'",
                "Answer": "UPDATE Ref_Shipping_Agents SET shipping_agent_description = 'global courier delivery services' WHERE shipping_agent_code = 'UP'"
            },
            {
                "User": "I need to insert a new address with id 11 and details 'CN, Beijing'",
                "Answer": "INSERT INTO Addresses (address_id, address_details) VALUES (11, 'CN, Beijing')"
            },
            {
                "User": "Let's create a new table called 'Employee_Contacts' with columns 'employee_id', 'contact_type', and 'contact_details', where 'employee_id' is a foreign key referencing 'Employees'",
                "Answer": "CREATE TABLE Employee_Contacts (employee_id number, contact_type text, contact_details text, FOREIGN KEY (employee_id) REFERENCES Employees(employee_id))"
            },
            {
                "User": "Please insert a contact detail for employee id 3, type 'Email', and details 'haley@example.com'",
                "Answer": "INSERT INTO Employee_Contacts (employee_id, contact_type, contact_details) VALUES (3, 'Email', 'haley@example.com')"
            },
            {
                "User": "Update the document status code for document id 2 to 'overdue'",
                "Answer": "UPDATE Documents SET document_status_code = 'overdue' WHERE document_id = 2"
            },
            {
                "User": "Can we add a new column 'revision_number' to the 'Document_Drafts' table to track the revision of each draft?",
                "Answer": "ALTER TABLE Document_Drafts ADD COLUMN revision_number number"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 412,
        "db": "pilot_record",
        "interaction": [
            {
                "User": "Can you add a new pilot named 'John Doe' with a rank of 5, age 29, from Canada, joining the center team in 2021 for the Bradley team?",
                "Answer": "INSERT INTO pilot (Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team) VALUES ('John Doe', 5, 29, 'Canada', 'Center Team', 2021, 'Bradley')"
            },
            {
                "User": "Please update the rank of pilot 'Patrick O'Bryant' to 10.",
                "Answer": "UPDATE pilot SET Rank = 10 WHERE Pilot_name = 'Patrick O''Bryant'"
            },
            {
                "User": "I need to record a new flight for pilot ID 1 with aircraft ID 2 on the date '2023/03/15'.",
                "Answer": "INSERT INTO pilot_record (Pilot_ID, Aircraft_ID, Date) VALUES (1, 2, '2023/03/15')"
            },
            {
                "User": "Create a new table to track the maintenance records of the aircraft with fields for record ID, aircraft ID, maintenance date, and description.",
                "Answer": "CREATE TABLE aircraft_maintenance (Maintenance_Record_ID number PRIMARY KEY, Aircraft_ID number, Maintenance_Date text, Description text)"
            },
            {
                "User": "Add a column to the aircraft table to indicate whether the aircraft is currently active or not.",
                "Answer": "ALTER TABLE aircraft ADD COLUMN IsActive text"
            },
            {
                "User": "Set the new 'IsActive' column to 'Yes' for all aircraft manufactured by 'Gillig'.",
                "Answer": "UPDATE aircraft SET IsActive = 'Yes' WHERE Manufacturer = 'Gillig'"
            },
            {
                "User": "Could you insert a maintenance record for aircraft ID 1 with the description 'Engine overhaul' performed on '2023/04/01'?",
                "Answer": "INSERT INTO aircraft_maintenance (Aircraft_ID, Maintenance_Date, Description) VALUES (1, '2023/04/01', 'Engine overhaul')"
            },
            {
                "User": "Change the powertrain of the aircraft with ID 3 to 'GE Aviation GE90'.",
                "Answer": "UPDATE aircraft SET Powertrain = 'GE Aviation GE90' WHERE Aircraft_ID = 3"
            },
            {
                "User": "For the pilot with ID 2, increase the age by 1 year.",
                "Answer": "UPDATE pilot SET Age = Age + 1 WHERE Pilot_ID = 2"
            },
            {
                "User": "Can you list all active aircraft and their manufacturers?",
                "Answer": "SELECT Manufacturer, Model FROM aircraft WHERE IsActive = 'Yes'"
            },
            {
                "User": "Delete the pilot record for pilot ID 3 that is associated with aircraft ID 4.",
                "Answer": "DELETE FROM pilot_record WHERE Pilot_ID = 3 AND Aircraft_ID = 4"
            }
        ],
        "from_data": "train",
        "type": "single"
    },
    {
        "idx": 413,
        "db": "hospital_1",
        "interaction": [
            {
                "User": "Can we add a new column to track the email addresses of the physicians?",
                "Answer": "ALTER TABLE Physician ADD COLUMN Email text;"
            },
            {
                "User": "Please add Dr. Elliot Reid's email address as 'elliot.reid@hospital.org'.",
                "Answer": "UPDATE Physician SET Email = 'elliot.reid@hospital.org' WHERE Name = 'Elliot Reid';"
            },
            {
                "User": "What is the email address of Dr. John Dorian?",
                "Answer": "SELECT Email FROM Physician WHERE Name = 'John Dorian';"
            },
            {
                "User": "I need to schedule a new appointment for John Smith with his primary care physician for next Monday at 9:00 AM in examination room C. What is the ID of his primary care physician?",
                "Answer": "SELECT PCP FROM Patient WHERE Name = 'John Smith';"
            },
            {
                "User": "Now, please create that appointment.",
                "Answer": "INSERT INTO Appointment (Patient, PrepNurse, Physician, Start, End, ExaminationRoom) VALUES (100000001, 101, 1, '2008-04-28 09:00', '2008-04-28 10:00', 'C');"
            },
            {
                "User": "Can we create a new table to log the activities of nurses during their shifts?",
                "Answer": "CREATE TABLE NurseActivityLog (LogID number PRIMARY KEY, NurseID number, Activity text, ActivityStart time, ActivityEnd time);"
            },
            {
                "User": "Please log the start of Carla Espinosa's shift today at 8:00 AM.",
                "Answer": "INSERT INTO NurseActivityLog (NurseID, Activity, ActivityStart) VALUES (101, 'Shift Start', '2008-04-24 08:00');"
            },
            {
                "User": "What is the total cost of procedures undergone by Random J. Patient?",
                "Answer": "SELECT SUM(Cost) FROM Procedures p JOIN Undergoes u ON p.Code = u.Procedures WHERE u.Patient = (SELECT SSN FROM Patient WHERE Name = 'Random J. Patient');"
            },
            {
                "User": "Has Random J. Patient undergone a 'Reverse Rhinopodoplasty'?",
                "Answer": "SELECT COUNT(*) FROM Undergoes u JOIN Procedures p ON u.Procedures = p.Code WHERE u.Patient = (SELECT SSN FROM Patient WHERE Name = 'Random J. Patient') AND p.Name = 'Reverse Rhinopodoplasty';"
            },
            {
                "User": "Can we update the 'Unavailable' status of room 101 to true?",
                "Answer": "UPDATE Room SET Unavailable = 1 WHERE RoomNumber = 101;"
            },
            {
                "User": "Is there any room available on block floor 1, block code 1?",
                "Answer": "SELECT RoomNumber FROM Room WHERE BlockFloor = 1 AND BlockCode = 1 AND Unavailable = 0;"
            },
            {
                "User": "Can we insert a new medication into the database? With Code 6, Name 'Relaxo', Brand 'Zen Labs', Description 'Muscle relaxant'",
                "Answer": "INSERT INTO Medication (Code, Name, Brand, Description) VALUES (6, 'Relaxo', 'Zen Labs', 'Muscle relaxant');"
            }
        ]
    },
    {
        "idx": 414,
        "db": "assets_maintenance",
        "interaction": [
            {
                "User": "Can you add a column to track the warranty period for each asset?",
                "Answer": "ALTER TABLE Assets ADD COLUMN warranty_period_years number"
            },
            {
                "User": "Now, set the warranty period to 3 years for all assets acquired after January 1st, 2018.",
                "Answer": "UPDATE Assets SET warranty_period_years = 3 WHERE asset_acquired_date >= '2018-01-01'"
            },
            {
                "User": "Create a new table to log maintenance activities.",
                "Answer": "CREATE TABLE Maintenance_Activity_Log (activity_id number primary key, asset_id number, activity_date time, activity_description text, other_details text)"
            },
            {
                "User": "Log a new maintenance activity for asset with ID 2.",
                "Answer": "INSERT INTO Maintenance_Activity_Log (activity_id, asset_id, activity_date, activity_description) VALUES (1, 2, CURRENT_TIMESTAMP, 'Regular maintenance check')"
            },
            {
                "User": "Show me all maintenance activities recorded in the last month.",
                "Answer": "SELECT * FROM Maintenance_Activity_Log WHERE activity_date >= date('now', '-1 month');"
            },
            {
                "User": "I need to update the fault description for fault log entry ID 1 to 'critical system error'.",
                "Answer": "UPDATE Fault_Log SET fault_description = 'critical system error' WHERE fault_log_entry_id = 1"
            },
            {
                "User": "List all engineer visits that are marked as 'Waiting' and update their status to 'In Progress'.",
                "Answer": [
                    "UPDATE Engineer_Visits SET fault_status = 'In Progress' WHERE fault_status = 'Waiting';",
                    "SELECT * FROM Engineer_Visits WHERE fault_status = 'In Progress'"
                ]
            },
            {
                "User": "Do we have any parts that are not chargeable?",
                "Answer": "SELECT part_id, part_name FROM Parts WHERE chargeable_yn = '0'"
            },
            {
                "User": "Insert a new skill into the Skills table with the code 'PLUMB' and description 'Plumbing'.",
                "Answer": "INSERT INTO Skills (skill_id, skill_code, skill_description) VALUES ((SELECT MAX(skill_id) + 1 FROM Skills), 'PLUMB', 'Plumbing')"
            },
            {
                "User": "Which staff members have recorded a fault log entry?",
                "Answer": "SELECT DISTINCT s.staff_name FROM Staff s JOIN Fault_Log f ON s.staff_id = f.recorded_by_staff_id"
            }
        ]
    },
    {
        "idx": 415,
        "db": "assets_maintenance",
        "interaction": [
            {
                "User": "Can we add a new column to track the warranty period for parts?",
                "Answer": "ALTER TABLE Parts ADD COLUMN warranty_period_months number"
            },
            {
                "User": "I'd like to insert a new part with a warranty. The part is called 'sensor', it's chargeable, costs $15, and has a 24-month warranty.",
                "Answer": "INSERT INTO Parts (part_id, part_name, chargeable_yn, chargeable_amount, warranty_period_months) VALUES (4, 'sensor', '1', '15', 24)"
            },
            {
                "User": "Which parts have warranties longer than 12 months?",
                "Answer": "SELECT part_name FROM Parts WHERE warranty_period_months > 12"
            },
            {
                "User": "Update the warranty period for the 'top' part to 18 months.",
                "Answer": "UPDATE Parts SET warranty_period_months = 18 WHERE part_name = 'top'"
            },
            {
                "User": "Can you show me all parts that are chargeable with their prices and warranty periods?",
                "Answer": "SELECT part_name, chargeable_amount, warranty_period_months FROM Parts WHERE chargeable_yn = '1'"
            },
            {
                "User": "Create a new table to log maintenance activities with a unique ID, asset ID, activity description, and the date of activity.",
                "Answer": "CREATE TABLE Maintenance_Activities (activity_id number PRIMARY KEY, asset_id number, activity_description text, activity_date time)"
            },
            {
                "User": "Log a new maintenance activity for asset ID 2 with the description 'Replaced battery' and today's date.",
                "Answer": "INSERT INTO Maintenance_Activities (activity_id, asset_id, activity_description, activity_date) VALUES (1, 2, 'Replaced battery', CURRENT_DATE)"
            },
            {
                "User": "Show me the entire maintenance history for asset ID 2.",
                "Answer": "SELECT * FROM Maintenance_Activities WHERE asset_id = 2"
            },
            {
                "User": "Add a new engineer to the database. His name is John Doe, he works for company ID 3, and he has no other details to add.",
                "Answer": "INSERT INTO Maintenance_Engineers (engineer_id, company_id, first_name, last_name) VALUES (16, 3, 'John', 'Doe')"
            },
            {
                "User": "Which engineers have skills in both Electrical and Mechanical?",
                "Answer": "SELECT E.first_name, E.last_name FROM Maintenance_Engineers E JOIN Engineer_Skills ES ON E.engineer_id = ES.engineer_id JOIN Skills S ON ES.skill_id = S.skill_id WHERE S.skill_code IN ('ELEC', 'MECH') GROUP BY E.engineer_id HAVING COUNT(DISTINCT S.skill_code) = 2"
            },
            {
                "User": "We need to record the staff member who logged each fault. Can we add a column for this?",
                "Answer": "ALTER TABLE Fault_Log ADD COLUMN logged_by_staff_id number"
            },
            {
                "User": "Record that staff member ID 2 logged fault ID 1.",
                "Answer": "UPDATE Fault_Log SET logged_by_staff_id = 2 WHERE fault_log_entry_id = 1"
            }
        ]
    },
    {
        "idx": 416,
        "db": "store_1",
        "interaction": [
            {
                "User": "Can we add a new employee named John Smith with the title 'IT Staff' in Calgary?",
                "Answer": "INSERT INTO employees (last_name, first_name, title, city) VALUES ('Smith', 'John', 'IT Staff', 'Calgary')"
            },
            {
                "User": "What's the total number of employees now?",
                "Answer": "SELECT count(*) FROM employees"
            },
            {
                "User": "I want to update John Smith's phone number to '+1 (403) 555-1234'.",
                "Answer": "UPDATE employees SET phone = '+1 (403) 555-1234' WHERE last_name = 'Smith' AND first_name = 'John'"
            },
            {
                "User": "Can we create a new table to track employee login times?",
                "Answer": "CREATE TABLE employee_logins (id number PRIMARY KEY, employee_id number, login_time time)"
            },
            {
                "User": "Let's log a new entry for John Smith logging in right now.",
                "Answer": "INSERT INTO employee_logins (employee_id, login_time) VALUES ((SELECT id FROM employees WHERE last_name = 'Smith' AND first_name = 'John'), CURRENT_TIMESTAMP)"
            },
            {
                "User": "How many logins have been recorded so far?",
                "Answer": "SELECT count(*) FROM employee_logins"
            },
            {
                "User": "Add a new genre called 'Podcast' to the genres table.",
                "Answer": "INSERT INTO genres (name) VALUES ('Podcast')"
            },
            {
                "User": "How many genres do we have now?",
                "Answer": "SELECT count(*) FROM genres"
            },
            {
                "User": "Let's add a new column 'nickname' to the employees table for their nicknames.",
                "Answer": "ALTER TABLE employees ADD COLUMN nickname text"
            },
            {
                "User": "Set the nickname for employee Jane Peacock to 'JP'.",
                "Answer": "UPDATE employees SET nickname = 'JP' WHERE last_name = 'Peacock' AND first_name = 'Jane'"
            },
            {
                "User": "Do we have any employees with the nickname 'JP'?",
                "Answer": "SELECT * FROM employees WHERE nickname = 'JP'"
            },
            {
                "User": "Create a new playlist called 'Coding Music'.",
                "Answer": "INSERT INTO playlists (name) VALUES ('Coding Music')"
            },
            {
                "User": "How many playlists are there in total?",
                "Answer": "SELECT count(*) FROM playlists"
            },
            {
                "User": "I'd like to update the address for customer Luís Gonçalves to '1234 Paulista Ave'.",
                "Answer": "UPDATE customers SET address = '1234 Paulista Ave' WHERE first_name = 'Luís' AND last_name = 'Gonçalves'"
            }
        ]
    },
    {
        "idx": 417,
        "db": "store_1",
        "interaction": [
            {
                "User": "Can we add a new artist to the database?",
                "Answer": "INSERT INTO artists (name) VALUES ('New Artist')"
            },
            {
                "User": "What is the id of the artist we just added?",
                "Answer": "SELECT id FROM artists WHERE name = 'New Artist'"
            },
            {
                "User": "Let's create a new album for the artist we added. The album title is 'New Sounds'.",
                "Answer": "INSERT INTO albums (title, artist_id) VALUES ('New Sounds', (SELECT id FROM artists WHERE name = 'New Artist'))"
            },
            {
                "User": "Can we update the title of the new album to 'Fresh Sounds'?",
                "Answer": "UPDATE albums SET title = 'Fresh Sounds' WHERE title = 'New Sounds' AND artist_id = (SELECT id FROM artists WHERE name = 'New Artist')"
            },
            {
                "User": "I want to add a genre called 'Electro Pop'.",
                "Answer": "INSERT INTO genres (name) VALUES ('Electro Pop')"
            },
            {
                "User": "Let's add a new track called 'Electric Dreams' to the 'Fresh Sounds' album with the 'Electro Pop' genre.",
                "Answer": "INSERT INTO tracks (name, album_id, media_type_id, genre_id, composer, milliseconds, bytes, unit_price) VALUES ('Electric Dreams', (SELECT id FROM albums WHERE title = 'Fresh Sounds'), 1, (SELECT id FROM genres WHERE name = 'Electro Pop'), 'New Artist', 240000, 8000000, 0.99)"
            },
            {
                "User": "Create a new table for concert events with columns for event_id, artist_id, event_date, and location.",
                "Answer": "CREATE TABLE concert_events (event_id number PRIMARY KEY, artist_id number, event_date time, location text)"
            },
            {
                "User": "Insert a new event for 'New Artist' taking place on '2023-08-15' at 'Downtown Arena'.",
                "Answer": "INSERT INTO concert_events (artist_id, event_date, location) VALUES ((SELECT id FROM artists WHERE name = 'New Artist'), '2023-08-15', 'Downtown Arena')"
            },
            {
                "User": "Can we add a column for ticket_price to the concert_events table?",
                "Answer": "ALTER TABLE concert_events ADD ticket_price number"
            },
            {
                "User": "Set the ticket price for the 'New Artist' event at 'Downtown Arena' to 49.99.",
                "Answer": "UPDATE concert_events SET ticket_price = 49.99 WHERE artist_id = (SELECT id FROM artists WHERE name = 'New Artist') AND location = 'Downtown Arena'"
            },
            {
                "User": "How many tracks are there in the 'Fresh Sounds' album?",
                "Answer": "SELECT count(*) FROM tracks WHERE album_id = (SELECT id FROM albums WHERE title = 'Fresh Sounds')"
            },
            {
                "User": "I'd like to create a playlist called 'Electro Vibes'.",
                "Answer": "INSERT INTO playlists (name) VALUES ('Electro Vibes')"
            },
            {
                "User": "Add the track 'Electric Dreams' to the 'Electro Vibes' playlist.",
                "Answer": "INSERT INTO playlist_tracks (playlist_id, track_id) VALUES ((SELECT id FROM playlists WHERE name = 'Electro Vibes'), (SELECT id FROM tracks WHERE name = 'Electric Dreams'))"
            }
        ]
    },
    {
        "idx": 418,
        "db": "baseball_1",
        "interaction": [
            {
                "User": "What is the total number of all-star games played up to 2010?",
                "Answer": "SELECT sum(gp) FROM all_star WHERE year <= 2010"
            },
            {
                "User": "Can we track the number of MVP awards won by players over the years?",
                "Answer": "ALTER TABLE player_award ADD COLUMN mvp_awards_count number"
            },
            {
                "User": "Now, how many MVP awards has player 'bondsba01' won?",
                "Answer": "SELECT COUNT(award_id) AS mvp_awards_count FROM player_award WHERE player_id = 'bondsba01' AND award_id = 'Most Valuable Player'"
            },
            {
                "User": "Let's create a table to track the teams' world series wins.",
                "Answer": "CREATE TABLE world_series_champions (team_id text, year number, wins number)"
            },
            {
                "User": "Insert the world series win for the Boston Red Stockings in 1903.",
                "Answer": "INSERT INTO world_series_champions (team_id, year, wins) VALUES ('BS1', 1903, 1)"
            },
            {
                "User": "Update the world series wins count for the New York Yankees in 2009.",
                "Answer": "UPDATE world_series_champions SET wins = wins + 1 WHERE team_id = 'NYA' AND year = 2009"
            },
            {
                "User": "How many times did the New York Yankees win the world series up to 2010?",
                "Answer": "SELECT sum(wins) FROM world_series_champions WHERE team_id = 'NYA' AND year <= 2010"
            },
            {
                "User": "Which players were inducted into the hall of fame in 1936?",
                "Answer": "SELECT player_id FROM hall_of_fame WHERE yearid = 1936 AND inducted = 'Y'"
            },
            {
                "User": "Add a column to track the induction category for the hall of fame.",
                "Answer": "ALTER TABLE hall_of_fame ADD COLUMN induction_category text"
            },
            {
                "User": "Please update the induction category for player 'cobbty01' to 'Player'.",
                "Answer": "UPDATE hall_of_fame SET induction_category = 'Player' WHERE player_id = 'cobbty01'"
            },
            {
                "User": "Who were the managers of the Boston Red Stockings in 1871?",
                "Answer": "SELECT player_id FROM manager WHERE team_id = 'BS1' AND year = 1871"
            },
            {
                "User": "I want to see the highest salary ever paid to a player by the Boston Red Stockings.",
                "Answer": "SELECT MAX(salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'"
            },
            {
                "User": "Let's add a new column for player nicknames in the player table.",
                "Answer": "ALTER TABLE player ADD COLUMN nickname text"
            },
            {
                "User": "Set the nickname for player 'aaronha01' as 'Hammerin' Hank'.",
                "Answer": "UPDATE player SET nickname = 'Hammerin'' Hank' WHERE player_id = 'aaronha01'"
            },
            {
                "User": "Create a new table to keep track of player trades between teams.",
                "Answer": "CREATE TABLE player_trades (player_id text, from_team_id text, to_team_id text, trade_year number)"
            },
            {
                "User": "Insert a record of a trade where player 'ruthba01' was traded from 'BOS' to 'NYA' in 1920.",
                "Answer": "INSERT INTO player_trades (player_id, from_team_id, to_team_id, trade_year) VALUES ('ruthba01', 'BOS', 'NYA', 1920)"
            }
        ]
    },
    {
        "idx": 419,
        "db": "baseball_1",
        "interaction": [
            {
                "User": "Can we add a column to track the number of home runs hit during the all-star games?",
                "Answer": "ALTER TABLE all_star ADD COLUMN home_runs number;"
            },
            {
                "User": "Great, now can you update the record for player 'gehrilo01' in the 1933 all-star game to reflect that he hit 2 home runs?",
                "Answer": "UPDATE all_star SET home_runs = 2 WHERE player_id = 'gehrilo01' AND year = 1933;"
            },
            {
                "User": "Can you show me the updated record for 'gehrilo01' from the all-star game in 1933?",
                "Answer": "SELECT * FROM all_star WHERE player_id = 'gehrilo01' AND year = 1933;"
            },
            {
                "User": "I would like to see a list of all players who have hit home runs in the all-star games, along with the count of home runs.",
                "Answer": "SELECT player_id, SUM(home_runs) AS total_home_runs FROM all_star GROUP BY player_id HAVING SUM(home_runs) > 0;"
            },
            {
                "User": "Can we create a new table to track player salaries over the years?",
                "Answer": "CREATE TABLE player_salaries (player_id text, year number, salary number);"
            },
            {
                "User": "Let's add salary information for 'aardsda01' for the year 2015 with a salary of 500000.",
                "Answer": "INSERT INTO player_salaries (player_id, year, salary) VALUES ('aardsda01', 2015, 500000);"
            },
            {
                "User": "Now, can you show me all salary records for 'aardsda01'?",
                "Answer": "SELECT * FROM player_salaries WHERE player_id = 'aardsda01';"
            },
            {
                "User": "Can we compare the salaries of players in 2015 with their performance in terms of home runs?",
                "Answer": "SELECT ps.player_id, ps.salary, b.hr FROM player_salaries ps LEFT JOIN batting b ON ps.player_id = b.player_id WHERE ps.year = 2015 AND b.year = 2015;"
            },
            {
                "User": "I'm interested in knowing the average salary of all players in 2015. Can you provide that?",
                "Answer": "SELECT AVG(salary) as average_salary FROM player_salaries WHERE year = 2015;"
            },
            {
                "User": "Let's update the player_award table to include a new column for the age at which the player received the award.",
                "Answer": "ALTER TABLE player_award ADD COLUMN age_at_award number;"
            },
            {
                "User": "For the player 'bondto01' who received the 'Pitching Triple Crown' in 1877, set his age at award to 23.",
                "Answer": "UPDATE player_award SET age_at_award = 23 WHERE player_id = 'bondto01' AND award_id = 'Pitching Triple Crown' AND year = 1877;"
            },
            {
                "User": "Can you show me the updated record for 'bondto01' regarding the 'Pitching Triple Crown' award in 1877?",
                "Answer": "SELECT * FROM player_award WHERE player_id = 'bondto01' AND award_id = 'Pitching Triple Crown' AND year = 1877;"
            },
            {
                "User": "How many players received awards when they were under the age of 25?",
                "Answer": "SELECT COUNT(*) FROM player_award WHERE age_at_award < 25;"
            },
            {
                "User": "Can we track the number of awards per college? I'd like to create a table for that.",
                "Answer": "CREATE TABLE college_awards (college_id text, awards_count number);"
            },
            {
                "User": "Let's count the awards for 'rice' college and insert that into the new table.",
                "Answer": "INSERT INTO college_awards (college_id, awards_count) SELECT college_id, COUNT(*) FROM player_college pc JOIN player_award pa ON pc.player_id = pa.player_id WHERE pc.college_id = 'rice';"
            },
            {
                "User": "Show me the colleges with more than 10 awards.",
                "Answer": "SELECT * FROM college_awards WHERE awards_count > 10;"
            }
        ]
    },
    {
        "idx": 420,
        "db": "customers_card_transactions",
        "interaction": [
            {
                "User": "How many transactions were made with card id 2?",
                "Answer": "SELECT COUNT(*) FROM Financial_Transactions WHERE card_id = 2"
            },
            {
                "User": "Add a new column 'customer_dob' to the Customers table to store date of birth.",
                "Answer": "ALTER TABLE Customers ADD customer_dob date"
            },
            {
                "User": "Set the date of birth for customer id 1 to January 15, 1980.",
                "Answer": "UPDATE Customers SET customer_dob = '1980-01-15' WHERE customer_id = 1"
            },
            {
                "User": "Create a new table 'Rewards' with columns 'reward_id', 'customer_id', and 'reward_points'.",
                "Answer": "CREATE TABLE Rewards (reward_id number PRIMARY KEY, customer_id number, reward_points number)"
            },
            {
                "User": "Insert a new reward entry for customer id 1 with 500 points.",
                "Answer": "INSERT INTO Rewards (reward_id, customer_id, reward_points) VALUES (1, 1, 500)"
            },
            {
                "User": "Who has the highest reward points?",
                "Answer": "SELECT customer_id FROM Rewards ORDER BY reward_points DESC LIMIT 1"
            },
            {
                "User": "Update the account name for account id 1 to 'Premium'.",
                "Answer": "UPDATE Accounts SET account_name = 'Premium' WHERE account_id = 1"
            },
            {
                "User": "How much has customer id 6 spent in total?",
                "Answer": "SELECT SUM(transaction_amount) FROM Financial_Transactions WHERE account_id IN (SELECT account_id FROM Accounts WHERE customer_id = 6)"
            },
            {
                "User": "List all customers without a registered email.",
                "Answer": "SELECT customer_id, customer_first_name, customer_last_name FROM Customers WHERE customer_email IS NULL OR customer_email = ''"
            },
            {
                "User": "Add a new customer with the following details: id 16, first name 'Alex', last name 'Smith', address '1234 Main St', phone '555-1234', email 'alex.smith@example.com'.",
                "Answer": "INSERT INTO Customers (customer_id, customer_first_name, customer_last_name, customer_address, customer_phone, customer_email) VALUES (16, 'Alex', 'Smith', '1234 Main St', '555-1234', 'alex.smith@example.com')"
            },
            {
                "User": "Show the total number of transactions for each card type.",
                "Answer": "SELECT card_type_code, COUNT(*) FROM Financial_Transactions JOIN Customers_Cards ON Financial_Transactions.card_id = Customers_Cards.card_id GROUP BY card_type_code"
            },
            {
                "User": "What is the average transaction amount for VIP accounts?",
                "Answer": "SELECT AVG(transaction_amount) FROM Financial_Transactions WHERE account_id IN (SELECT account_id FROM Accounts WHERE other_account_details = 'VIP')"
            },
            {
                "User": "Create a new table 'Account_Types' with columns 'account_type_id', 'account_type_name', and 'account_type_description'.",
                "Answer": "CREATE TABLE Account_Types (account_type_id number PRIMARY KEY, account_type_name text, account_type_description text)"
            },
            {
                "User": "Insert account types 'Savings' and 'Checking' with descriptions into the new 'Account_Types' table.",
                "Answer": "INSERT INTO Account_Types (account_type_id, account_type_name, account_type_description) VALUES (1, 'Savings', 'A savings account'), (2, 'Checking', 'A checking account')"
            },
            {
                "User": "Add a foreign key 'account_type_id' to the 'Accounts' table to reference the 'Account_Types' table.",
                "Answer": "ALTER TABLE Accounts ADD account_type_id number REFERENCES Account_Types(account_type_id)"
            },
            {
                "User": "Update account id 1 to be of type 'Savings'.",
                "Answer": "UPDATE Accounts SET account_type_id = 1 WHERE account_id = 1"
            },
            {
                "User": "How many customers have a 'Credit' card?",
                "Answer": "SELECT COUNT(DISTINCT customer_id) FROM Customers_Cards WHERE card_type_code = 'Credit'"
            },
            {
                "User": "Add a new column 'last_transaction_date' to the 'Customers' table.",
                "Answer": "ALTER TABLE Customers ADD last_transaction_date time"
            }
        ]
    },
    {
        "idx": 421,
        "db": "customers_card_transactions",
        "interaction": [
            {
                "User": "I'd like to add a new customer named John Doe with the address '1234 Elm Street, Springfield, IL' and phone number '555-1234'.",
                "Answer": "INSERT INTO Customers (customer_id, customer_first_name, customer_last_name, customer_address, customer_phone) VALUES (16, 'John', 'Doe', '1234 Elm Street, Springfield, IL', '555-1234')"
            },
            {
                "User": "Can we update Susie Wiza's email to 'susie.wiza@example.com'?",
                "Answer": "UPDATE Customers SET customer_email = 'susie.wiza@example.com' WHERE customer_first_name = 'Susie' AND customer_last_name = 'Wiza'"
            },
            {
                "User": "How many customers do we have now?",
                "Answer": "SELECT COUNT(*) FROM Customers"
            },
            {
                "User": "Let's create a new table for customer feedback with columns for feedback_id, customer_id, feedback_text, and feedback_date.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text, feedback_date time)"
            },
            {
                "User": "Insert feedback for customer with ID 2, saying 'Very satisfied with the service', dated today.",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES (1, 2, 'Very satisfied with the service', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Can you show me the most recent feedback we've received?",
                "Answer": "SELECT * FROM Customer_Feedback ORDER BY feedback_date DESC LIMIT 1"
            },
            {
                "User": "I want to add a new column 'customer_since' to the Customers table to record when they became a customer.",
                "Answer": "ALTER TABLE Customers ADD COLUMN customer_since date"
            },
            {
                "User": "Update John Doe's 'customer_since' to January 1st, 2022.",
                "Answer": "UPDATE Customers SET customer_since = '2022-01-01' WHERE customer_first_name = 'John' AND customer_last_name = 'Doe'"
            },
            {
                "User": "Can we get a list of all customers who joined this year?",
                "Answer": "SELECT * FROM Customers WHERE customer_since >= '2023-01-01'"
            }
        ]
    },
    {
        "idx": 422,
        "db": "game_1",
        "interaction": [
            {
                "User": "Can we track the email addresses of students?",
                "Answer": "ALTER TABLE Student ADD COLUMN Email text;"
            },
            {
                "User": "Please add an email for Linda Smith.",
                "Answer": "UPDATE Student SET Email = 'linda.smith@example.com' WHERE LName = 'Smith' AND Fname = 'Linda';"
            },
            {
                "User": "I want to know Linda's email now.",
                "Answer": "SELECT Email FROM Student WHERE LName = 'Smith' AND Fname = 'Linda';"
            },
            {
                "User": "How many hours did Linda play RNG Stone?",
                "Answer": "SELECT Hours_Played FROM Plays_Games WHERE StuID = (SELECT StuID FROM Student WHERE LName = 'Smith' AND Fname = 'Linda') AND GameID = (SELECT GameID FROM Video_Games WHERE GName = 'RNG Stone');"
            },
            {
                "User": "Add a new game called 'Space Quest' which is an Adventure game. The GameID is 7",
                "Answer": "INSERT INTO Video_Games (GameID, GName, GType) VALUES (7, 'Space Quest', 'Adventure');"
            },
            {
                "User": "Record that Linda played Space Quest for 10 hours.",
                "Answer": "INSERT INTO Plays_Games (StuID, GameID, Hours_Played) VALUES ((SELECT StuID FROM Student WHERE LName = 'Smith' AND Fname = 'Linda'), (SELECT GameID FROM Video_Games WHERE GName = 'Space Quest'), 10);"
            },
            {
                "User": "Who is the advisor for students playing Space Quest?",
                "Answer": "SELECT DISTINCT Advisor FROM Student WHERE StuID IN (SELECT StuID FROM Plays_Games WHERE GameID = (SELECT GameID FROM Video_Games WHERE GName = 'Space Quest'));"
            },
            {
                "User": "Create a new table for game reviews with columns for the game ID, review text, and rating.",
                "Answer": "CREATE TABLE Game_Reviews (ReviewID number PRIMARY KEY, GameID number, ReviewText text, Rating number);"
            },
            {
                "User": "Add a review for Space Quest with a rating of 5.",
                "Answer": "INSERT INTO Game_Reviews (ReviewID, GameID, ReviewText, Rating) VALUES (1, (SELECT GameID FROM Video_Games WHERE GName = 'Space Quest'), 'Outstanding adventure game!', 5);"
            },
            {
                "User": "Show me all games with a rating above 4.",
                "Answer": "SELECT Video_Games.GName, Game_Reviews.Rating FROM Video_Games JOIN Game_Reviews ON Video_Games.GameID = Game_Reviews.GameID WHERE Game_Reviews.Rating > 4;"
            },
            {
                "User": "Which students are on a sports scholarship and play for over 10 hours per week?",
                "Answer": "SELECT Student.LName, Student.Fname FROM Student JOIN SportsInfo ON Student.StuID = SportsInfo.StuID WHERE SportsInfo.OnScholarship = 'Y' AND SportsInfo.HoursPerWeek > 10;"
            },
            {
                "User": "Update Tracy Kim's age to 20.",
                "Answer": "UPDATE Student SET Age = 20 WHERE LName = 'Kim' AND Fname = 'Tracy';"
            },
            {
                "User": "How many students are now 20 years old?",
                "Answer": "SELECT COUNT(*) FROM Student WHERE Age = 20;"
            },
            {
                "User": "List all sports played by students named Linda.",
                "Answer": "SELECT SportName FROM SportsInfo WHERE StuID IN (SELECT StuID FROM Student WHERE Fname = 'Linda');"
            }
        ]
    },
    {
        "idx": 423,
        "db": "game_1",
        "interaction": [
            {
                "User": "Add a new student named John Doe, age 22, male, majoring in 601, advised by 1121, living in city code LAX.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 22, 'M', 601, 1121, 'LAX')"
            },
            {
                "User": "Update Tracy Kim's age to 20.",
                "Answer": "UPDATE Student SET Age = 20 WHERE LName = 'Kim' AND Fname = 'Tracy'"
            },
            {
                "User": "How many students are now 20 years old?",
                "Answer": "SELECT COUNT(*) FROM Student WHERE Age = 20"
            },
            {
                "User": "Add a new game called 'Data Quest', which is a 'Puzzle game'. The GameId is 7",
                "Answer": "INSERT INTO Video_Games (GameID, GName, GType) VALUES (7, 'Data Quest', 'Puzzle game')"
            },
            {
                "User": "How many different types of games do we have?",
                "Answer": "SELECT COUNT(DISTINCT GType) FROM Video_Games"
            },
            {
                "User": "Record that John Doe played 'Data Quest' for 10 hours.",
                "Answer": "INSERT INTO Plays_Games (StuID, GameID, Hours_Played) VALUES (1004, 4, 10)"
            },
            {
                "User": "Show me the total hours played by each student.",
                "Answer": "SELECT StuID, SUM(Hours_Played) AS Total_Hours_Played FROM Plays_Games GROUP BY StuID"
            },
            {
                "User": "Create a new table for game reviews with columns for game ID, review text, and rating out of 5.",
                "Answer": "CREATE TABLE Game_Reviews (GameID number, Review_Text text, Rating number)"
            },
            {
                "User": "Add a review for 'Data Quest' with a rating of 4 and the text 'Challenging and fun puzzles'.",
                "Answer": "INSERT INTO Game_Reviews (GameID, Review_Text, Rating) VALUES (4, 'Challenging and fun puzzles', 4)"
            },
            {
                "User": "What's the average rating for all games?",
                "Answer": "SELECT AVG(Rating) FROM Game_Reviews"
            },
            {
                "User": "Add a column for 'YearStarted' to the SportsInfo table to record the year the student started the sport.",
                "Answer": "ALTER TABLE SportsInfo ADD YearStarted number"
            },
            {
                "User": "Set the 'YearStarted' for Linda Smith's Athletics to 2019.",
                "Answer": "UPDATE SportsInfo SET YearStarted = 2019 WHERE StuID = 1001 AND SportName = 'Athletics'"
            },
            {
                "User": "How many students started a sport in 2019?",
                "Answer": "SELECT COUNT(*) FROM SportsInfo WHERE YearStarted = 2019"
            },
            {
                "User": "Show all sports played by students who are on a scholarship.",
                "Answer": "SELECT SportName FROM SportsInfo WHERE OnScholarship = 'Y' GROUP BY SportName"
            }
        ]
    },
    {
        "idx": 424,
        "db": "phone_1",
        "interaction": [
            {
                "User": "Can we add a feature to track which stores sell these phones?",
                "Answer": "CREATE TABLE store_locations (Store_ID number PRIMARY KEY, Store_name text, Location text, Phone_Model text, FOREIGN KEY (Phone_Model) REFERENCES phone(Hardware_Model_name))"
            },
            {
                "User": "Insert a new store that sells the XPERIA T model.",
                "Answer": "INSERT INTO store_locations (Store_ID, Store_name, Location, Phone_Model) VALUES (1, 'Tech World', 'Downtown', 'XPERIA T')"
            },
            {
                "User": "Which stores sell the LG-P760 model?",
                "Answer": "SELECT Store_name, Location FROM store_locations WHERE Phone_Model = 'LG-P760'"
            },
            {
                "User": "Update the accreditation level of the Lumia 920 model to 'Advanced'.",
                "Answer": "UPDATE phone SET Accreditation_level = 'Advanced' WHERE Hardware_Model_name LIKE '%Lumia 920%'"
            },
            {
                "User": "How many phones have the 'Advanced' accreditation level now?",
                "Answer": "SELECT COUNT(*) FROM phone WHERE Accreditation_level = 'Advanced'"
            },
            {
                "User": "Add a column to track the battery capacity for each phone model.",
                "Answer": "ALTER TABLE phone ADD COLUMN Battery_Capacity_mAh number"
            },
            {
                "User": "Set the battery capacity of the XPERIA T to 1850 mAh.",
                "Answer": "UPDATE phone SET Battery_Capacity_mAh = 1850 WHERE Hardware_Model_name = 'XPERIA T'"
            },
            {
                "User": "What is the average battery capacity of the phones listed?",
                "Answer": "SELECT AVG(Battery_Capacity_mAh) FROM phone WHERE Battery_Capacity_mAh IS NOT NULL"
            },
            {
                "User": "Can we track the release date for each chip model?",
                "Answer": "ALTER TABLE chip_model ADD COLUMN Release_Date text"
            },
            {
                "User": "The X5 chip was released on January 15, 2002. Update the record with this information.",
                "Answer": "UPDATE chip_model SET Release_Date = '2002-01-15' WHERE Model_name = 'X5'"
            },
            {
                "User": "Which chip models were launched after 2002?",
                "Answer": "SELECT Model_name FROM chip_model WHERE Launch_year > 2002"
            },
            {
                "User": "Create a new table to log service issues reported for each phone model.",
                "Answer": "CREATE TABLE service_issues (Issue_ID number PRIMARY KEY, Phone_Model text, Description text, Report_Date text, Status text, FOREIGN KEY (Phone_Model) REFERENCES phone(Hardware_Model_name))"
            },
            {
                "User": "Log a new service issue for the LG-P760 model regarding its screen.",
                "Answer": "INSERT INTO service_issues (Issue_ID, Phone_Model, Description, Report_Date, Status) VALUES (1, 'LG-P760', 'Screen flickering randomly', '2023-04-01', 'Open')"
            },
            {
                "User": "How many open service issues are there currently?",
                "Answer": "SELECT COUNT(*) FROM service_issues WHERE Status = 'Open'"
            }
        ]
    },
    {
        "idx": 425,
        "db": "phone_1",
        "interaction": [
            {
                "User": "Can we add a column to track whether the chip model supports NFC?",
                "Answer": "ALTER TABLE chip_model ADD COLUMN NFC_support TEXT;"
            },
            {
                "User": "Update the NFC support for the X5 model to 'Yes'.",
                "Answer": "UPDATE chip_model SET NFC_support = 'Yes' WHERE Model_name = 'X5';"
            },
            {
                "User": "Does the X5 high end model support NFC?",
                "Answer": "SELECT NFC_support FROM chip_model WHERE Model_name = 'X5 high end';"
            },
            {
                "User": "Create a table to track phone sales data with columns for model name, units sold, and sale date.",
                "Answer": "CREATE TABLE phone_sales (Model_name TEXT, Units_sold INTEGER, Sale_date TEXT, PRIMARY KEY (Model_name, Sale_date));"
            },
            {
                "User": "Insert sales data for the XPERIA T, XPERIA J model: 500 units sold on 2023-01-15.",
                "Answer": "INSERT INTO phone_sales (Model_name, Units_sold, Sale_date) VALUES ('XPERIA T, XPERIA J', 500, '2023-01-15');"
            },
            {
                "User": "How many units of the LG-P760 were sold on 2023-01-20?",
                "Answer": "SELECT Units_sold FROM phone_sales WHERE Model_name = 'LG-P760' AND Sale_date = '2023-01-20';"
            },
            {
                "User": "Can we track the screen size for each phone model?",
                "Answer": "ALTER TABLE phone ADD COLUMN Screen_size TEXT;"
            },
            {
                "User": "Set the screen size for the Lumia 920, Lumia 820, Lumia 620 model to '4.5 inches'.",
                "Answer": "UPDATE phone SET Screen_size = '4.5 inches' WHERE Hardware_Model_name = 'Lumia 920, Lumia 820, Lumia 620';"
            },
            {
                "User": "What is the screen size of the XPERIA T, XPERIA J model?",
                "Answer": "SELECT Screen_size FROM phone WHERE Hardware_Model_name = 'XPERIA T, XPERIA J';"
            },
            {
                "User": "Show me all chip models launched after 2002 with NFC support.",
                "Answer": "SELECT * FROM chip_model WHERE Launch_year > 2002 AND NFC_support = 'Yes';"
            },
            {
                "User": "I need to add a new chip model called 'X9 Power', launched in 2023, with 128 MiB RAM, 128 MiB ROM, 2 slots, WiFi and Bluetooth support, and NFC support as 'No'.",
                "Answer": "INSERT INTO chip_model (Model_name, Launch_year, RAM_MiB, ROM_MiB, Slots, WiFi, Bluetooth, NFC_support) VALUES ('X9 Power', 2023, 128, 128, '2', 'Yes', 'Yes', 'No');"
            },
            {
                "User": "We need to record the main camera megapixel for each phone. Can you add this information?",
                "Answer": "ALTER TABLE phone ADD COLUMN Camera_MP TEXT;"
            },
            {
                "User": "Update the main camera megapixel for the LG-P760 to '8 MP'.",
                "Answer": "UPDATE phone SET Camera_MP = '8 MP' WHERE Hardware_Model_name = 'LG-P760';"
            }
        ]
    },
    {
        "idx": 426,
        "db": "swimming",
        "interaction": [
            {
                "User": "Can you add a column to track the coach for each swimmer?",
                "Answer": "ALTER TABLE swimmer ADD COLUMN coach text"
            },
            {
                "User": "Please assign 'Mark Spitz' as the coach for swimmer ID 7.",
                "Answer": "UPDATE swimmer SET coach = 'Mark Spitz' WHERE ID = 7"
            },
            {
                "User": "Who is the coach for Przemysław Stańczyk?",
                "Answer": "SELECT coach FROM swimmer WHERE name = 'Przemysław Stańczyk'"
            },
            {
                "User": "Create a new table for swimmer diet plans.",
                "Answer": "CREATE TABLE diet_plan (ID number PRIMARY KEY, Swimmer_ID number, Diet_Details text)"
            },
            {
                "User": "Insert a diet plan for swimmer ID 5, which includes 'High Protein, Low Carb'.",
                "Answer": "INSERT INTO diet_plan (ID, Swimmer_ID, Diet_Details) VALUES (1, 5, 'High Protein, Low Carb')"
            },
            {
                "User": "What is the diet plan for Federico Colbertaldo?",
                "Answer": "SELECT Diet_Details FROM diet_plan WHERE Swimmer_ID = (SELECT ID FROM swimmer WHERE name = 'Federico Colbertaldo')"
            },
            {
                "User": "I want to record the date when a record was achieved. Can we add a date column to the record table?",
                "Answer": "ALTER TABLE record ADD COLUMN Record_Date text"
            },
            {
                "User": "Update the record table to include the date '2016-08-05' for Swimmer_ID 1's 'Win' result.",
                "Answer": "UPDATE record SET Record_Date = '2016-08-05' WHERE Swimmer_ID = 1 AND Result = 'Win'"
            },
            {
                "User": "When did swimmer with ID 1 achieve the 'Win' result?",
                "Answer": "SELECT Record_Date FROM record WHERE Swimmer_ID = 1 AND Result = 'Win'"
            },
            {
                "User": "Can you show me the names of swimmers with their coaches?",
                "Answer": "SELECT name, coach FROM swimmer WHERE coach IS NOT NULL"
            },
            {
                "User": "Is there a swimmer coached by 'Mark Spitz' who has a record of 'Win'?",
                "Answer": "SELECT s.name FROM swimmer s JOIN record r ON s.ID = r.Swimmer_ID WHERE s.coach = 'Mark Spitz' AND r.Result = 'Win'"
            },
            {
                "User": "Let's create a table to track swimming equipment issued to each swimmer.",
                "Answer": "CREATE TABLE equipment (ID number PRIMARY KEY, Swimmer_ID number, Equipment_Details text)"
            },
            {
                "User": "Assign swimming goggles to swimmer ID 4.",
                "Answer": "INSERT INTO equipment (ID, Swimmer_ID, Equipment_Details) VALUES (1, 4, 'Swimming Goggles')"
            },
            {
                "User": "What equipment has been issued to Craig Stevens?",
                "Answer": "SELECT Equipment_Details FROM equipment WHERE Swimmer_ID = (SELECT ID FROM swimmer WHERE name = 'Craig Stevens')"
            },
            {
                "User": "I need to know the total number of records achieved in the 'Gazprom Arena'.",
                "Answer": "SELECT count(*) FROM record WHERE Event_ID IN (SELECT ID FROM event WHERE Stadium_ID = (SELECT ID FROM stadium WHERE name = 'Gazprom Arena'))"
            }
        ]
    },
    {
        "idx": 427,
        "db": "swimming",
        "interaction": [
            {
                "User": "Can we track the coach for each swimmer?",
                "Answer": "ALTER TABLE swimmer ADD COLUMN coach_name text"
            },
            {
                "User": "Add 'Bob Bowman' as the coach for swimmer ID 4",
                "Answer": "UPDATE swimmer SET coach_name = 'Bob Bowman' WHERE ID = 4"
            },
            {
                "User": "Who is the coach for swimmer 'Craig Stevens'?",
                "Answer": "SELECT coach_name FROM swimmer WHERE name = 'Craig Stevens'"
            },
            {
                "User": "Create a new table to log training sessions",
                "Answer": "CREATE TABLE training_log (ID number, swimmer_ID number, date text, duration text, PRIMARY KEY (ID))"
            },
            {
                "User": "Log a new training session for swimmer ID 5 on '2023-04-01' with a duration of '2 hours'",
                "Answer": "INSERT INTO training_log (ID, swimmer_ID, date, duration) VALUES (1, 5, '2023-04-01', '2 hours')"
            },
            {
                "User": "How many training sessions have been logged for swimmer ID 5?",
                "Answer": "SELECT COUNT(*) FROM training_log WHERE swimmer_ID = 5"
            },
            {
                "User": "We need to record the type of training. Can we add a column for that?",
                "Answer": "ALTER TABLE training_log ADD COLUMN training_type text"
            },
            {
                "User": "Update the last training session for swimmer ID 5 to 'Endurance'",
                "Answer": "UPDATE training_log SET training_type = 'Endurance' WHERE swimmer_ID = 5 AND ID = (SELECT MAX(ID) FROM training_log WHERE swimmer_ID = 5)"
            },
            {
                "User": "List all training sessions for swimmer ID 5 with the type of training included",
                "Answer": "SELECT * FROM training_log WHERE swimmer_ID = 5"
            },
            {
                "User": "Create a table to track swimmer diets",
                "Answer": "CREATE TABLE diet_log (ID number, swimmer_ID number, date text, meal_type text, food text, PRIMARY KEY (ID))"
            },
            {
                "User": "Log breakfast for swimmer ID 7 on '2023-04-02' consisting of 'Oatmeal, Eggs, Fruit'",
                "Answer": "INSERT INTO diet_log (ID, swimmer_ID, date, meal_type, food) VALUES (1, 7, '2023-04-02', 'Breakfast', 'Oatmeal, Eggs, Fruit')"
            },
            {
                "User": "What did swimmer ID 7 have for breakfast on '2023-04-02'?",
                "Answer": "SELECT food FROM diet_log WHERE swimmer_ID = 7 AND date = '2023-04-02' AND meal_type = 'Breakfast'"
            },
            {
                "User": "Can we track the specific event a record was set in?",
                "Answer": "ALTER TABLE record ADD COLUMN event_name text"
            },
            {
                "User": "Update the record ID 2 to reflect it was set in the 'Pacific' event",
                "Answer": "UPDATE record SET event_name = 'Pacific' WHERE ID = 2"
            },
            {
                "User": "Which event did swimmer ID 1 win?",
                "Answer": "SELECT event_name FROM record WHERE Swimmer_ID = 1 AND Result = 'Win'"
            },
            {
                "User": "How many swimmers do we have from 'Italy'?",
                "Answer": "SELECT COUNT(*) FROM swimmer WHERE Nationality = 'Italy'"
            }
        ]
    },
    {
        "idx": 428,
        "db": "aircraft",
        "interaction": [
            {
                "User": "Can we add a new pilot to the database?",
                "Answer": "INSERT INTO pilot (Pilot_Id, Name, Age) VALUES (13, 'Captain Morgan', 45)"
            },
            {
                "User": "How many aircraft are there in total?",
                "Answer": "SELECT COUNT(*) FROM aircraft"
            },
            {
                "User": "Can we update the description of the aircraft with ID 2?",
                "Answer": "UPDATE aircraft SET Description = 'Updated turboshaft utility helicopter' WHERE Aircraft_ID = 2"
            },
            {
                "User": "What is the total number of passengers for all airports combined?",
                "Answer": "SELECT SUM(Total_Passengers) FROM airport"
            },
            {
                "User": "Can we add a new column to track the airport's founding year?",
                "Answer": "ALTER TABLE airport ADD COLUMN Founding_Year number"
            },
            {
                "User": "Let's record the founding year for London Heathrow as 1946.",
                "Answer": "UPDATE airport SET Founding_Year = 1946 WHERE Airport_Name = 'London Heathrow'"
            },
            {
                "User": "Can we create a table to track maintenance records for aircraft?",
                "Answer": "CREATE TABLE maintenance_records (Record_ID number PRIMARY KEY, Aircraft_ID number, Maintenance_Date text, Description text, Cost number)"
            },
            {
                "User": "Add a maintenance record for aircraft ID 1 with today's date and a cost of 500.",
                "Answer": "INSERT INTO maintenance_records (Record_ID, Aircraft_ID, Maintenance_Date, Description, Cost) VALUES (1, 1, '2023-04-10', 'Routine check-up', 500)"
            },
            {
                "User": "What was the fastest qualifying time in the last match?",
                "Answer": "SELECT Fastest_Qualifying FROM match ORDER BY Round DESC LIMIT 1"
            },
            {
                "User": "Can we update the total disk area for aircraft ID 3 to '5800 ft²'?",
                "Answer": "UPDATE aircraft SET Total_disk_area = '5800 ft²' WHERE Aircraft_ID = 3"
            },
            {
                "User": "Show me the updated description for the Bell 206B3 JetRanger.",
                "Answer": "SELECT Description FROM aircraft WHERE Aircraft = 'Bell 206B3 JetRanger'"
            },
            {
                "User": "How many aircraft movements were there at London Gatwick in 2007?",
                "Answer": "SELECT Aircraft_Movements FROM airport WHERE Airport_Name = 'London Gatwick'"
            },
            {
                "User": "Link the new pilot to the Robinson R-22 aircraft.",
                "Answer": "INSERT INTO airport_aircraft (ID, Airport_ID, Aircraft_ID) VALUES (5, 1, 1)"
            },
            {
                "User": "Can we see the list of all pilots who are under 25 years old?",
                "Answer": "SELECT Name FROM pilot WHERE Age < 25"
            },
            {
                "User": "I want to know the number of international passengers for airports founded before the year 1950.",
                "Answer": "SELECT SUM(International_Passengers) FROM airport WHERE Founding_Year < 1950"
            },
            {
                "User": "Let's create a new table to track the aircraft models and their corresponding manufacturers.",
                "Answer": "CREATE TABLE aircraft_manufacturers (Manufacturer_ID number PRIMARY KEY, Manufacturer_Name text, Aircraft_Model text)"
            }
        ]
    },
    {
        "idx": 429,
        "db": "aircraft",
        "interaction": [
            {
                "User": "How many aircraft are registered at London Heathrow airport?",
                "Answer": "SELECT COUNT(Aircraft_ID) FROM airport_aircraft WHERE Airport_ID = (SELECT Airport_ID FROM airport WHERE Airport_Name = 'London Heathrow')"
            },
            {
                "User": "Update the total passengers for London Gatwick to 35000000.",
                "Answer": "UPDATE airport SET Total_Passengers = 35000000 WHERE Airport_Name = 'London Gatwick'"
            },
            {
                "User": "I want to record the pilots' nationality. Can you add a 'Nationality' column to the pilot table?",
                "Answer": "ALTER TABLE pilot ADD Nationality text"
            },
            {
                "User": "Set the nationality of Prof. Zackery Collins to 'British'.",
                "Answer": "UPDATE pilot SET Nationality = 'British' WHERE Name = 'Prof. Zackery Collins'"
            },
            {
                "User": "What is the new total disk area for the CH-47D Chinook if we increase it by 10%?",
                "Answer": "SELECT Total_disk_area * 1.10 AS New_Total_Disk_Area FROM aircraft WHERE Aircraft = 'CH-47D Chinook'"
            },
            {
                "User": "Create a new table to track maintenance records for the aircraft.",
                "Answer": "CREATE TABLE maintenance (Maintenance_ID number PRIMARY KEY, Aircraft_ID number, Maintenance_Date text, Description text)"
            },
            {
                "User": "Insert a maintenance record for aircraft with ID 2 on '2023-04-01' for engine check.",
                "Answer": "INSERT INTO maintenance (Aircraft_ID, Maintenance_Date, Description) VALUES (2, '2023-04-01', 'engine check')"
            },
            {
                "User": "What is the average age of pilots from the United Kingdom?",
                "Answer": "SELECT AVG(Age) FROM pilot WHERE Nationality = 'United Kingdom'"
            },
            {
                "User": "Can you provide me with the total freight in metric tonnes for all airports combined?",
                "Answer": "SELECT SUM(Freight_Metric_Tonnes) FROM airport"
            },
            {
                "User": "Alter the match table to include a new column 'Audience_Count' to record the number of spectators.",
                "Answer": "ALTER TABLE match ADD Audience_Count number"
            },
            {
                "User": "For Round 1, set the audience count to 5000.",
                "Answer": "UPDATE match SET Audience_Count = 5000 WHERE Round = 1.0"
            },
            {
                "User": "Who was the winning pilot in the match held at 'Swan River, Perth'?",
                "Answer": "SELECT Winning_Pilot FROM match WHERE Location = 'Swan River , Perth'"
            }
        ]
    },
    {
        "idx": 430,
        "db": "student_assessment",
        "interaction": [
            {
                "User": "What are the email addresses of all students?",
                "Answer": "SELECT P.email_address FROM People AS P JOIN Students AS S ON P.person_id = S.student_id"
            },
            {
                "User": "Can you add a new student named 'Alice Smith' with details? Her id is 191 and email is alice.smith@example.com",
                "Answer": [
                    "INSERT INTO Students (student_id, student_details) VALUES (191, 'Alice Smith');",
                    "INSERT INTO People (person_id, first_name, last_name, email_address) VALUES (191, 'Alice', 'Smith', 'alice.smith@example.com')"
                ]
            },
            {
                "User": "I'd like to enroll Alice in the statistics course. What's the course ID for statistics?",
                "Answer": "SELECT course_id FROM Courses WHERE course_name = 'statistics'"
            },
            {
                "User": "Now, please enroll Alice Smith (student id 191) in the statistics course with ID '301'.",
                "Answer": "INSERT INTO Student_Course_Registrations (student_id, course_id, registration_date) VALUES (191, '301', CURRENT_TIMESTAMP)"
            },
            {
                "User": "How many candidates have passed their assessments?",
                "Answer": "SELECT count(*) FROM Candidate_Assessments WHERE asessment_outcome_code = 'Pass'"
            },
            {
                "User": "Let's update the course description for the English course.",
                "Answer": "UPDATE Courses SET course_description = 'Comprehensive English course covering literature, composition, and grammar' WHERE course_name = 'English'"
            },
            {
                "User": "Can we add a new column 'date_of_birth' to the People table?",
                "Answer": "ALTER TABLE People ADD COLUMN date_of_birth DATE"
            },
            {
                "User": "Please update Alice Smith's date of birth to January 1st, 1995.",
                "Answer": "UPDATE People SET date_of_birth = '1995-01-01' WHERE first_name = 'Alice' AND last_name = 'Smith'"
            },
            {
                "User": "Create a new table for Instructors with ID, name, and email.",
                "Answer": "CREATE TABLE Instructors (instructor_id number PRIMARY KEY, name text, email_address text)"
            },
            {
                "User": "Add an instructor named 'John Doe' with email 'john.doe@example.com'.",
                "Answer": "INSERT INTO Instructors (instructor_id, name, email_address) VALUES (201, 'John Doe', 'john.doe@example.com')"
            },
            {
                "User": "Let's link courses with instructors. Add a column 'instructor_id' to the Courses table.",
                "Answer": "ALTER TABLE Courses ADD COLUMN instructor_id number"
            },
            {
                "User": "Assign John Doe to teach the statistics course.",
                "Answer": "UPDATE Courses SET instructor_id = 201 WHERE course_name = 'statistics'"
            }
        ]
    },
    {
        "idx": 431,
        "db": "student_assessment",
        "interaction": [
            {
                "User": "Can we add a new course called 'Data Science' with the description 'Introduction to Data Science'?",
                "Answer": "INSERT INTO Courses (course_id, course_name, course_description) VALUES ('307', 'Data Science', 'Introduction to Data Science')"
            },
            {
                "User": "What courses do we currently offer?",
                "Answer": "SELECT course_name FROM Courses"
            },
            {
                "User": "I'd like to update the email address for the person with login name 'pgub' to 'shannon.senger@university.edu'.",
                "Answer": "UPDATE People SET email_address = 'shannon.senger@university.edu' WHERE login_name = 'pgub'"
            },
            {
                "User": "What is the new email address for Shannon Senger?",
                "Answer": "SELECT email_address FROM People WHERE first_name = 'Shannon' AND last_name = 'Senger'"
            },
            {
                "User": "We need to track the grades for student course registrations. Can we add a 'grade' column to the Student_Course_Registrations table?",
                "Answer": "ALTER TABLE Student_Course_Registrations ADD grade text"
            },
            {
                "User": "What is the registration date for Martin in the English course?",
                "Answer": "SELECT registration_date FROM Student_Course_Registrations AS SCR JOIN Students AS S ON SCR.student_id = S.student_id JOIN Courses AS C ON SCR.course_id = C.course_id WHERE S.student_details = 'Martin' AND C.course_name = 'English'"
            },
            {
                "User": "Let's record that Martin received a 'B+' grade for the statistics course.",
                "Answer": "UPDATE Student_Course_Registrations SET grade = 'B+' FROM Students AS S WHERE S.student_details = 'Martin' AND Student_Course_Registrations.course_id = (SELECT course_id FROM Courses WHERE course_name = 'statistics') AND Student_Course_Registrations.student_id = S.student_id"
            },
            {
                "User": "Can you show me all the students and their grades for the statistics course?",
                "Answer": "SELECT S.student_details, SCR.grade FROM Student_Course_Registrations AS SCR JOIN Students AS S ON SCR.student_id = S.student_id JOIN Courses AS C ON SCR.course_id = C.course_id WHERE C.course_name = 'statistics'"
            },
            {
                "User": "I want to add a new student named 'Alice Wonderland' with the student ID 191.",
                "Answer": "INSERT INTO Students (student_id, student_details) VALUES (191, 'Alice Wonderland')"
            },
            {
                "User": "Enroll Alice Wonderland in the Data Science course.",
                "Answer": "INSERT INTO Student_Course_Registrations (student_id, course_id, registration_date) VALUES (141, '304', CURRENT_TIMESTAMP)"
            },
            {
                "User": "What is the name of the student with ID 141?",
                "Answer": "SELECT student_details FROM Students WHERE student_id = 141"
            },
            {
                "User": "Show me all courses that Alice Wonderland is registered for.",
                "Answer": "SELECT C.course_name FROM Student_Course_Registrations AS SCR JOIN Courses AS C ON SCR.course_id = C.course_id JOIN Students AS S ON SCR.student_id = S.student_id WHERE S.student_details = 'Alice Wonderland'"
            },
            {
                "User": "We need to add a new table to track instructors for each course. Can we create a table called 'Course_Instructors'?",
                "Answer": "CREATE TABLE Course_Instructors (instructor_id number PRIMARY KEY, course_id text, instructor_name text, date_assigned time)"
            },
            {
                "User": "Assign instructor 'John Doe' with ID 501 to the Data Science course.",
                "Answer": "INSERT INTO Course_Instructors (instructor_id, course_id, instructor_name, date_assigned) VALUES (501, '304', 'John Doe', CURRENT_TIMESTAMP)"
            }
        ]
    },
    {
        "idx": 432,
        "db": "icfp_1",
        "interaction": [
            {
                "User": "Please add a new author named 'John Smith' with ID 63.",
                "Answer": "INSERT INTO Authors (authID, lname, fname) VALUES (63, 'Smith', 'John')"
            },
            {
                "User": "Now, assign John Smith to the University of Oxford with an institution ID of 1000.",
                "Answer": "INSERT INTO Authorship (authID, instID, paperID, authOrder) VALUES (53, 1000, NULL, NULL)"
            },
            {
                "User": "Can you create a new table to track the conferences where the papers were presented?",
                "Answer": "CREATE TABLE Conferences (confID number PRIMARY KEY, name text, location text, year number)"
            },
            {
                "User": "Add a record for the 'ICFP Conference' that took place in 2021 in the USA.",
                "Answer": "INSERT INTO Conferences (confID, name, location, year) VALUES (300, 'ICFP Conference', 'USA', 2021)"
            },
            {
                "User": "We need to track which papers were presented at which conference. Can you add a 'confID' column to the 'Papers' table?",
                "Answer": "ALTER TABLE Papers ADD COLUMN confID number"
            },
            {
                "User": "Assign paper ID 200 to the 'ICFP Conference' we just added.",
                "Answer": "UPDATE Papers SET confID = 300 WHERE paperID = 200"
            },
            {
                "User": "Who are the authors associated with the 'ICFP Conference' in 2021?",
                "Answer": "SELECT a.lname, a.fname FROM Authors a JOIN Authorship au ON a.authID = au.authID JOIN Papers p ON au.paperID = p.paperID JOIN Conferences c ON p.confID = c.confID WHERE c.year = 2021 AND c.name = 'ICFP Conference'"
            },
            {
                "User": "Please update the country of 'Indiana University' to 'Canada'.",
                "Answer": "UPDATE Inst SET country = 'Canada' WHERE name = 'Indiana University'"
            },
            {
                "User": "Which authors are from the 'University of Oxford'?",
                "Answer": "SELECT a.lname, a.fname FROM Authors a JOIN Authorship au ON a.authID = au.authID JOIN Inst i ON au.instID = i.instID WHERE i.name = 'University of Oxford'"
            },
            {
                "User": "How many papers were presented by authors from 'USA'?",
                "Answer": "SELECT COUNT(DISTINCT p.paperID) FROM Papers p JOIN Authorship au ON p.paperID = au.paperID JOIN Inst i ON au.instID = i.instID WHERE i.country = 'USA'"
            },
            {
                "User": "I realized we made a mistake. John Smith's institution should be 'Indiana University'. Can we correct that?",
                "Answer": "UPDATE Authorship SET instID = (SELECT instID FROM Inst WHERE name = 'Indiana University') WHERE authID = 53"
            }
        ]
    },
    {
        "idx": 433,
        "db": "icfp_1",
        "interaction": [
            {
                "User": "Can you add a new paper titled 'Exploring the Efficiency of Algorithms in Data Mining' to the database?",
                "Answer": "INSERT INTO Papers (paperID, title) VALUES (207, 'Exploring the Efficiency of Algorithms in Data Mining')"
            },
            {
                "User": "Now, who is the author of the paper with paperID 203?",
                "Answer": "SELECT authID FROM Authorship WHERE paperID = 203"
            },
            {
                "User": "Please add a new author named 'Susan Lee' with an author ID of 63.",
                "Answer": "INSERT INTO Authors (authID, lname, fname) VALUES (63, 'Lee', 'Susan')"
            },
            {
                "User": "Link Susan Lee to the new paper with an authorship order of 1.",
                "Answer": "INSERT INTO Authorship (authID, instID, paperID, authOrder) VALUES (53, 1010, 203, 1)"
            },
            {
                "User": "I realized the last name of author ID 52 is incorrect. Could you update it to 'Smith'?",
                "Answer": "UPDATE Authors SET lname = 'Smith' WHERE authID = 52"
            },
            {
                "User": "Could you tell me the updated full name of the author with ID 52?",
                "Answer": "SELECT fname, lname FROM Authors WHERE authID = 52"
            },
            {
                "User": "We need to track the email addresses of authors. Can you add an 'email' column to the Authors table?",
                "Answer": "ALTER TABLE Authors ADD email text"
            },
            {
                "User": "Please set the email of Susan Lee to 'susan.lee@neu.edu'.",
                "Answer": "UPDATE Authors SET email = 'susan.lee@neu.edu' WHERE authID = 53"
            },
            {
                "User": "Create a new table to store conference information with the following columns: confID (number), name (text), year (number), and location (text).",
                "Answer": "CREATE TABLE Conferences (confID number PRIMARY KEY, name text, year number, location text)"
            },
            {
                "User": "Add a record for the 'ICFP 2023' conference, which took place in Boston.",
                "Answer": "INSERT INTO Conferences (confID, name, year, location) VALUES (3000, 'ICFP 2023', 2023, 'Boston')"
            },
            {
                "User": "Is there a link between authors and conferences? If not, create a new table for this purpose.",
                "Answer": "CREATE TABLE AuthorConference (authID number, confID number, PRIMARY KEY (authID, confID))"
            },
            {
                "User": "Link author ID 53 to the 'ICFP 2023' conference.",
                "Answer": "INSERT INTO AuthorConference (authID, confID) VALUES (53, 3000)"
            },
            {
                "User": "How many authors attended 'ICFP 2023'?",
                "Answer": "SELECT COUNT(*) FROM AuthorConference WHERE confID = (SELECT confID FROM Conferences WHERE name = 'ICFP 2023')"
            },
            {
                "User": "Update the location of 'ICFP 2023' to 'Virtual' due to a change in plans.",
                "Answer": "UPDATE Conferences SET location = 'Virtual' WHERE name = 'ICFP 2023'"
            }
        ]
    },
    {
        "idx": 434,
        "db": "formula_1",
        "interaction": [
            {
                "User": "What are the names of the drivers who have won races in the 2020 season?",
                "Answer": "SELECT DISTINCT d.forename, d.surname FROM drivers AS d JOIN results AS r ON d.driverId = r.driverId JOIN races AS ra ON r.raceId = ra.raceId WHERE r.positionOrder = 1 AND ra.year = 2020"
            },
            {
                "User": "Can we track the number of pit stops for each driver? If not, please add this capability.",
                "Answer": "ALTER TABLE drivers ADD COLUMN pitStopsCount number"
            },
            {
                "User": "Now, how many pit stops did driver with ID 44 have in the last race?",
                "Answer": "SELECT pitStopsCount FROM drivers WHERE driverId = 44"
            },
            {
                "User": "Please insert a new constructor with ID 211, reference 'neo_racing', name 'Neo Racing Team', nationality 'International', and the appropriate URL.",
                "Answer": "INSERT INTO constructors (constructorId, constructorRef, name, nationality, url) VALUES (211, 'neo_racing', 'Neo Racing Team', 'International', 'http://en.wikipedia.org/wiki/Neo_Racing_Team')"
            },
            {
                "User": "Update the nationality of the constructor with ID 209 to 'Global'.",
                "Answer": "UPDATE constructors SET nationality = 'Global' WHERE constructorId = 209"
            },
            {
                "User": "Create a new table to track the social media profiles of drivers, with columns for driver ID, platform, and profile link.",
                "Answer": "CREATE TABLE driverSocialMedia (id number PRIMARY KEY, driverId number, platform text, profileLink text, FOREIGN KEY (driverId) REFERENCES drivers(driverId))"
            },
            {
                "User": "Add social media profiles for Lewis Hamilton with ID 1, platform 'Twitter', and link 'http://twitter.com/LewisHamilton'.",
                "Answer": "INSERT INTO driverSocialMedia (driverId, platform, profileLink) VALUES (1, 'Twitter', 'http://twitter.com/LewisHamilton')"
            },
            {
                "User": "Can you show me the current points of all constructors in the 2020 season?",
                "Answer": "SELECT c.name, SUM(cs.points) AS total_points FROM constructors AS c JOIN constructorStandings AS cs ON c.constructorId = cs.constructorId JOIN races AS r ON cs.raceId = r.raceId WHERE r.year = 2020 GROUP BY c.name"
            },
            {
                "User": "I'd like to know the average lap time for each driver in the 2020 Chinese Grand Prix.",
                "Answer": "SELECT d.driverId, AVG(lt.milliseconds) AS average_lap_time FROM drivers AS d JOIN lapTimes AS lt ON d.driverId = lt.driverId JOIN races AS r ON lt.raceId = r.raceId WHERE r.name = 'Chinese Grand Prix' AND r.year = 2020 GROUP BY d.driverId"
            },
            {
                "User": "How many races have been won by the driver with ID 44?",
                "Answer": "SELECT COUNT(*) AS wins FROM results WHERE driverId = 44 AND positionOrder = 1"
            },
            {
                "User": "Let's keep track of the engine suppliers. Create a new table 'engineSuppliers' with columns 'supplierId', 'name', and 'nationality'.",
                "Answer": "CREATE TABLE engineSuppliers (supplierId number PRIMARY KEY, name text, nationality text)"
            },
            {
                "User": "Insert a record for an engine supplier with ID 1, name 'PowerX', and nationality 'French'.",
                "Answer": "INSERT INTO engineSuppliers (supplierId, name, nationality) VALUES (1, 'PowerX', 'French')"
            },
            {
                "User": "Add a column 'supplierId' to the 'constructors' table to reference the engine suppliers.",
                "Answer": "ALTER TABLE constructors ADD COLUMN supplierId number"
            },
            {
                "User": "Update the 'constructors' table to set the 'supplierId' for 'Neo Racing Team' to 1.",
                "Answer": "UPDATE constructors SET supplierId = 1 WHERE constructorId = 209"
            }
        ]
    },
    {
        "idx": 435,
        "db": "formula_1",
        "interaction": [
            {
                "User": "What countries do the circuits belong to?",
                "Answer": "SELECT DISTINCT country FROM circuits"
            },
            {
                "User": "Can you add a record for a new circuit in Finland?",
                "Answer": "INSERT INTO circuits (circuitId, circuitRef, name, location, country, lat, lng, alt, url) VALUES (74, 'helsinki', 'Helsinki Circuit', 'Helsinki', 'Finland', 60.1699, 24.9384, '20', 'http://en.wikipedia.org/wiki/Helsinki_Circuit')"
            },
            {
                "User": "Which driver won the first race of the 2009 season?",
                "Answer": "SELECT D.forename, D.surname FROM drivers D JOIN results R ON D.driverId = R.driverId WHERE R.raceId = 1 AND R.positionOrder = 1"
            },
            {
                "User": "Please update the nationality of driver Lewis Hamilton to 'British-Grenadian'.",
                "Answer": "UPDATE drivers SET nationality = 'British-Grenadian' WHERE driverRef = 'hamilton'"
            },
            {
                "User": "How many circuits have an altitude over 30 meters?",
                "Answer": "SELECT COUNT(*) FROM circuits WHERE alt > 30"
            },
            {
                "User": "I want to track the tire choices for each race. Can you create a new table for that?",
                "Answer": "CREATE TABLE tireChoices (raceId number, driverId number, lap number, tireType text, PRIMARY KEY (raceId, driverId, lap))"
            },
            {
                "User": "Insert tire choice data for the first driver in the first race.",
                "Answer": "INSERT INTO tireChoices (raceId, driverId, lap, tireType) VALUES (1, 1, 1, 'Soft')"
            },
            {
                "User": "Can we add a column to the races table to indicate if it was a night race?",
                "Answer": "ALTER TABLE races ADD COLUMN isNightRace text"
            },
            {
                "User": "Mark the Singapore Grand Prix as a night race.",
                "Answer": "UPDATE races SET isNightRace = 'Yes' WHERE name LIKE '%Singapore Grand Prix%'"
            },
            {
                "User": "List all the drivers who have ever won a race.",
                "Answer": "SELECT DISTINCT D.forename, D.surname FROM drivers D JOIN results R ON D.driverId = R.driverId WHERE R.positionOrder = 1"
            },
            {
                "User": "How many constructors are there from the UK?",
                "Answer": "SELECT COUNT(*) FROM constructors WHERE nationality = 'British'"
            },
            {
                "User": "Add a new status for drivers who retired due to electrical issues.",
                "Answer": "INSERT INTO status (statusId, status) VALUES (137, 'Electrical')"
            },
            {
                "User": "Show me the latest three additions to the status table.",
                "Answer": "SELECT * FROM status ORDER BY statusId DESC LIMIT 3"
            },
            {
                "User": "Which driver has the most wins recorded in the driverStandings table?",
                "Answer": "SELECT D.forename, D.surname FROM drivers D JOIN driverStandings DS ON D.driverId = DS.driverId ORDER BY DS.wins DESC LIMIT 1"
            },
            {
                "User": "Update the Helsinki Circuit's altitude to 25 meters.",
                "Answer": "UPDATE circuits SET alt = '25' WHERE circuitRef = 'helsinki'"
            }
        ]
    },
    {
        "idx": 436,
        "db": "station_weather",
        "interaction": [
            {
                "User": "Can you tell me which days of the week have the highest average high temperature at the station in Chiltern?",
                "Answer": "SELECT day_of_week, AVG(high_temperature) as avg_high_temp FROM weekly_weather AS ww JOIN station AS st ON ww.station_id = st.id WHERE st.local_authority = 'Chiltern' GROUP BY day_of_week ORDER BY avg_high_temp DESC LIMIT 1"
            },
            {
                "User": "I'm interested in adding a new train route. Could you please create a new train entry for 'Sunshine Express' from 'Beachtown' to 'Mountaintop' departing at '10:00' daily?",
                "Answer": "INSERT INTO train (train_number, name, origin, destination, time, interval) VALUES (16725, 'Sunshine Express', 'Beachtown', 'Mountaintop', '10:00', 'Daily')"
            },
            {
                "User": "Can you confirm the ID of the 'Sunshine Express' train we just added?",
                "Answer": "SELECT id FROM train WHERE name = 'Sunshine Express'"
            },
            {
                "User": "Let's add a new station called 'Sunnyville' to the network. It should be part of the 'Sunshine network' with 'Sunshine Railways' services and under the 'Sunny County' local authority.",
                "Answer": "INSERT INTO station (network_name, services, local_authority) VALUES ('Sunshine network', 'Sunshine Railways', 'Sunny County')"
            },
            {
                "User": "Now, I want to create a new route for the 'Sunshine Express' that stops at 'Sunnyville'. Can we add this to the route table?",
                "Answer": "INSERT INTO route (train_id, station_id) VALUES ((SELECT id FROM train WHERE name = 'Sunshine Express'), (SELECT id FROM station WHERE network_name = 'Sunshine network'))"
            },
            {
                "User": "I noticed we don't track the number of passengers on each train. Can we add a 'passenger_count' column to the 'train' table to record this data?",
                "Answer": "ALTER TABLE train ADD COLUMN passenger_count number"
            },
            {
                "User": "Let's update the 'Sunshine Express' train record to reflect that it can carry 200 passengers.",
                "Answer": "UPDATE train SET passenger_count = 200 WHERE name = 'Sunshine Express'"
            },
            {
                "User": "Can you provide me with a list of all stations that are part of the 'Sunshine network'?",
                "Answer": "SELECT * FROM station WHERE network_name = 'Sunshine network'"
            },
            {
                "User": "I am planning a report for next Monday's meeting. Could you generate a list of trains, including their names, origin, destination, and passenger count, that are traveling from 'Beachtown'?",
                "Answer": "SELECT name, origin, destination, passenger_count FROM train WHERE origin = 'Beachtown'"
            }
        ]
    },
    {
        "idx": 437,
        "db": "station_weather",
        "interaction": [
            {
                "User": "Can we add a status column to the train table to indicate if the train is active or not?",
                "Answer": "ALTER TABLE train ADD COLUMN status text;"
            },
            {
                "User": "Set the status of all trains to 'active'.",
                "Answer": "UPDATE train SET status = 'active';"
            },
            {
                "User": "What are the active trains between Trivandrum and Chennai?",
                "Answer": "SELECT name FROM train WHERE origin = 'Trivandrum' AND destination = 'Chennai' AND status = 'active';"
            },
            {
                "User": "Change the status of the Ananthapuri Express to 'inactive'.",
                "Answer": "UPDATE train SET status = 'inactive' WHERE name = 'Ananthapuri Express';"
            },
            {
                "User": "How many trains are currently inactive?",
                "Answer": "SELECT COUNT(*) FROM train WHERE status = 'inactive';"
            },
            {
                "User": "Can we track the maintenance dates for each train? We need to add a new table for that.",
                "Answer": "CREATE TABLE train_maintenance (train_id number, maintenance_date text, description text, PRIMARY KEY (train_id, maintenance_date));"
            },
            {
                "User": "Log a maintenance date for the Ananthapuri Express on April 1st, 2023 for engine check.",
                "Answer": "INSERT INTO train_maintenance (train_id, maintenance_date, description) VALUES ((SELECT id FROM train WHERE name = 'Ananthapuri Express'), '2023-04-01', 'engine check');"
            },
            {
                "User": "What's the weather forecast for the upcoming Monday at Amersham station?",
                "Answer": "SELECT high_temperature, low_temperature, precipitation, wind_speed_mph FROM weekly_weather WHERE station_id = (SELECT id FROM station WHERE network_name = 'Amersham') AND day_of_week = 'Monday';"
            },
            {
                "User": "Can we add a column to the weekly_weather table to include humidity readings?",
                "Answer": "ALTER TABLE weekly_weather ADD COLUMN humidity_percentage number;"
            },
            {
                "User": "Update the humidity for Amersham station on Monday to 75%.",
                "Answer": "UPDATE weekly_weather SET humidity_percentage = 75 WHERE station_id = (SELECT id FROM station WHERE network_name = 'Amersham') AND day_of_week = 'Monday';"
            },
            {
                "User": "How many stations have 'Greater Anglia' services?",
                "Answer": "SELECT COUNT(*) FROM station WHERE services LIKE '%Greater Anglia%';"
            },
            {
                "User": "Create a new table to log user feedback on train services.",
                "Answer": "CREATE TABLE user_feedback (feedback_id number, train_id number, user_comment text, rating number, feedback_date text, PRIMARY KEY (feedback_id));"
            },
            {
                "User": "Insert a user feedback for the Guruvayur Express train with a rating of 4 on April 2nd, 2023.",
                "Answer": "INSERT INTO user_feedback (feedback_id, train_id, user_comment, rating, feedback_date) VALUES (1, (SELECT id FROM train WHERE name = 'Guruvayur Express'), 'Clean and punctual', 4, '2023-04-02');"
            },
            {
                "User": "What is the average rating of the feedback we have received so far?",
                "Answer": "SELECT AVG(rating) FROM user_feedback;"
            }
        ]
    },
    {
        "idx": 438,
        "db": "local_govt_and_lot",
        "interaction": [
            {
                "User": "What are the types of properties available?",
                "Answer": "SELECT DISTINCT property_type_code FROM Properties"
            },
            {
                "User": "I want to add a new property type called 'villa'.",
                "Answer": "INSERT INTO Properties (property_id, property_type_code, property_address, other_details) VALUES (109, 'villa', '123 Luxury Blvd', 'Newly constructed')"
            },
            {
                "User": "Can you show me all the properties that are either apartments or villas?",
                "Answer": "SELECT * FROM Properties WHERE property_type_code IN ('apartment', 'villa')"
            },
            {
                "User": "I'd like to update the address of the property with ID 107.",
                "Answer": "UPDATE Properties SET property_address = '1234 Updated Address St' WHERE property_id = 107"
            },
            {
                "User": "How many properties do we have now?",
                "Answer": "SELECT COUNT(*) FROM Properties"
            },
            {
                "User": "I noticed we don't have a column for the number of bedrooms in properties. Can we add that?",
                "Answer": "ALTER TABLE Properties ADD COLUMN number_of_bedrooms number"
            },
            {
                "User": "Now that we have a bedrooms column, set the number of bedrooms for property ID 24 to 3.",
                "Answer": "UPDATE Properties SET number_of_bedrooms = 3 WHERE property_id = 24"
            },
            {
                "User": "Create a new table for property inspections.",
                "Answer": "CREATE TABLE Property_Inspections (inspection_id number PRIMARY KEY, property_id number, inspection_date time, inspection_result text)"
            },
            {
                "User": "Insert a new inspection record for property ID 24.",
                "Answer": "INSERT INTO Property_Inspections (inspection_id, property_id, inspection_date, inspection_result) VALUES (1, 24, CURRENT_TIMESTAMP, 'Passed')"
            },
            {
                "User": "Let's see all the properties that have had an inspection.",
                "Answer": "SELECT P.property_id, P.property_address FROM Properties P JOIN Property_Inspections PI ON P.property_id = PI.property_id"
            },
            {
                "User": "How many events does customer with ID 5 have?",
                "Answer": "SELECT COUNT(*) FROM Customer_Events WHERE customer_id = 5"
            },
            {
                "User": "I want to record a new event for customer ID 16, involving property ID 629 and thing ID 14.",
                "Answer": "INSERT INTO Customer_Events (Customer_Event_ID, customer_id, date_moved_in, property_id, resident_id, thing_id) VALUES (171, 16, CURRENT_TIMESTAMP, 629, 28, 14)"
            },
            {
                "User": "Update the 'other_details' for resident ID 10 to 'Long-term resident'.",
                "Answer": "UPDATE Residents SET other_details = 'Long-term resident' WHERE resident_id = 10"
            },
            {
                "User": "Can we see a list of all residents and the services they requested, along with whether they were satisfied?",
                "Answer": "SELECT R.resident_id, R.other_details, RS.service_id, RS.other_details FROM Residents R JOIN Residents_Services RS ON R.resident_id = RS.resident_id"
            }
        ]
    },
    {
        "idx": 439,
        "db": "local_govt_and_lot",
        "interaction": [
            {
                "User": "Can we add a new customer named 'John Doe', with customer_id 92?",
                "Answer": "INSERT INTO Customers (customer_id, customer_details) VALUES (92, 'John Doe')"
            },
            {
                "User": "Great, now how many customers do we have in total?",
                "Answer": "SELECT count(customer_id) FROM Customers"
            },
            {
                "User": "I'd like to update John Doe's details to include his phone number 123-456-7890. Can you do that?",
                "Answer": "UPDATE Customers SET customer_details = 'John Doe, Phone: 123-456-7890' WHERE customer_id = 17"
            },
            {
                "User": "Can you show me the updated details of John Doe?",
                "Answer": "SELECT customer_details FROM Customers WHERE customer_id = 17"
            },
            {
                "User": "Let's create a new table to track customer interactions with a timestamp. Can you set that up?",
                "Answer": "CREATE TABLE Customer_Interactions (interaction_id number PRIMARY KEY, customer_id number, interaction_time time, interaction_details text)"
            },
            {
                "User": "Now, record a new interaction for John Doe saying 'Inquired about property taxes' with the current timestamp.",
                "Answer": "INSERT INTO Customer_Interactions (interaction_id, customer_id, interaction_time, interaction_details) VALUES (1, 17, CURRENT_TIMESTAMP, 'Inquired about property taxes')"
            },
            {
                "User": "How many interactions have been recorded so far?",
                "Answer": "SELECT count(interaction_id) FROM Customer_Interactions"
            },
            {
                "User": "Can we add a new column 'email' to the Customers table to store their email addresses?",
                "Answer": "ALTER TABLE Customers ADD COLUMN email text"
            },
            {
                "User": "Please update John Doe's email to 'john.doe@example.com'.",
                "Answer": "UPDATE Customers SET email = 'john.doe@example.com' WHERE customer_id = 17"
            },
            {
                "User": "I need to see the list of all customers along with their email addresses.",
                "Answer": "SELECT customer_id, customer_details, email FROM Customers"
            },
            {
                "User": "Let's add a new property with the address '123 Main St' and type 'office'.",
                "Answer": "INSERT INTO Properties (property_id, property_type_code, property_address, other_details) VALUES (109, 'office', '123 Main St', 'USA')"
            },
            {
                "User": "Can you give me a list of all office type properties?",
                "Answer": "SELECT * FROM Properties WHERE property_type_code = 'office'"
            },
            {
                "User": "We need to track the maintenance status for properties. Could we add a new table for that?",
                "Answer": "CREATE TABLE Property_Maintenance (maintenance_id number PRIMARY KEY, property_id number, maintenance_status text, last_maintenance_date time)"
            },
            {
                "User": "Record that the property at '123 Main St' just had maintenance done today.",
                "Answer": "INSERT INTO Property_Maintenance (maintenance_id, property_id, maintenance_status, last_maintenance_date) VALUES (1, 109, 'Completed', CURRENT_DATE)"
            }
        ]
    },
    {
        "idx": 440,
        "db": "university_basketball",
        "interaction": [
            {
                "User": "Hi there! Can you tell me how many schools have an affiliation type that is not public?",
                "Answer": "SELECT COUNT(*) FROM university WHERE affiliation != 'Public'"
            },
            {
                "User": "Can you please tell me the name of that school and the enrollment?",
                "Answer": "SELECT school, enrollment FROM university WHERE affiliation != 'Public'"
            },
            {
                "User": "What year was that school founded?",
                "Answer": "SELECT founded FROM university WHERE affiliation != 'Public'"
            },
            {
                "User": "Can we add information about the basketball coaches for the teams?",
                "Answer": "ALTER TABLE basketball_match ADD COLUMN Coach text"
            },
            {
                "User": "Great, now please add the coach name 'Roy Williams' for the North Carolina team.",
                "Answer": "UPDATE basketball_match SET Coach = 'Roy Williams' WHERE Team_Name = 'North Carolina'"
            },
            {
                "User": "Who is the coach for the North Carolina team now?",
                "Answer": "SELECT Coach FROM basketball_match WHERE Team_Name = 'North Carolina'"
            },
            {
                "User": "Can you create a new table to track the seasons' best players?",
                "Answer": "CREATE TABLE best_players (Player_ID number PRIMARY KEY, Player_Name text, Team_ID number, Season text, Points_Per_Game number, Rebounds_Per_Game number, Assists_Per_Game number)"
            },
            {
                "User": "Insert the season's best player 'John Doe' with an average of 22 points, 8 rebounds, and 5 assists per game for the North Carolina team.",
                "Answer": "INSERT INTO best_players (Player_ID, Player_Name, Team_ID, Season, Points_Per_Game, Rebounds_Per_Game, Assists_Per_Game) VALUES (1, 'John Doe', 1, '2022-2023', 22, 8, 5)"
            },
            {
                "User": "I want to know the name and stats of the best player for the North Carolina team this season.",
                "Answer": "SELECT Player_Name, Points_Per_Game, Rebounds_Per_Game, Assists_Per_Game FROM best_players WHERE Team_ID = (SELECT Team_ID FROM basketball_match WHERE Team_Name = 'North Carolina') AND Season = '2022-2023'"
            },
            {
                "User": "Can you update the enrollment for Lebanon Valley College to 2200?",
                "Answer": "UPDATE university SET Enrollment = 2200 WHERE School = 'Lebanon Valley College'"
            },
            {
                "User": "What is the new enrollment for Lebanon Valley College?",
                "Answer": "SELECT Enrollment FROM university WHERE School = 'Lebanon Valley College'"
            },
            {
                "User": "Let's track the number of championships won by each team. Please add a 'Championships_Won' column to the basketball_match table.",
                "Answer": "ALTER TABLE basketball_match ADD COLUMN Championships_Won number"
            },
            {
                "User": "Update the number of championships won to 6 for the North Carolina team.",
                "Answer": "UPDATE basketball_match SET Championships_Won = 6 WHERE Team_Name = 'North Carolina'"
            }
        ]
    },
    {
        "idx": 441,
        "db": "university_basketball",
        "interaction": [
            {
                "User": "Can we add a new team to the basketball_match table?",
                "Answer": "INSERT INTO basketball_match (Team_ID, School_ID, Team_Name, ACC_Regular_Season, ACC_Percent, ACC_Home, ACC_Road, All_Games, All_Games_Percent, All_Home, All_Road, All_Neutral) VALUES (5, 5, 'New Team', '0–0', '.000', '0–0', '0–0', '0–0', 0.000, '0–0', '0–0', '0–0')"
            },
            {
                "User": "What is the win percentage of all games for 'New Team'?",
                "Answer": "SELECT All_Games_Percent FROM basketball_match WHERE Team_Name = 'New Team'"
            },
            {
                "User": "Update the All_Games_Percent for 'New Team' to 0.500",
                "Answer": "UPDATE basketball_match SET All_Games_Percent = 0.500 WHERE Team_Name = 'New Team'"
            },
            {
                "User": "How many teams have a better All_Games_Percent than 'New Team'?",
                "Answer": "SELECT COUNT(*) FROM basketball_match WHERE All_Games_Percent > (SELECT All_Games_Percent FROM basketball_match WHERE Team_Name = 'New Team')"
            },
            {
                "User": "Add a column for 'Coach_Name' to the basketball_match table.",
                "Answer": "ALTER TABLE basketball_match ADD Coach_Name text"
            },
            {
                "User": "Set the coach for 'New Team' to 'John Smith'.",
                "Answer": "UPDATE basketball_match SET Coach_Name = 'John Smith' WHERE Team_Name = 'New Team'"
            },
            {
                "User": "Which team does John Smith coach?",
                "Answer": "SELECT Team_Name FROM basketball_match WHERE Coach_Name = 'John Smith'"
            },
            {
                "User": "Create a new table for basketball statistics with columns for player name, points per game, and assists per game.",
                "Answer": "CREATE TABLE basketball_statistics (Player_Name text, Points_Per_Game number, Assists_Per_Game number)"
            },
            {
                "User": "Insert data for a player named 'James Doe' with 15.2 points per game and 4.3 assists per game into the basketball_statistics table.",
                "Answer": "INSERT INTO basketball_statistics (Player_Name, Points_Per_Game, Assists_Per_Game) VALUES ('James Doe', 15.2, 4.3)"
            },
            {
                "User": "Who are the players with more than 5 assists per game?",
                "Answer": "SELECT Player_Name FROM basketball_statistics WHERE Assists_Per_Game > 5"
            },
            {
                "User": "Can we track the player's school as well? We need to add a School_ID column to the basketball_statistics table.",
                "Answer": "ALTER TABLE basketball_statistics ADD School_ID number"
            },
            {
                "User": "Update 'James Doe' record with his School_ID as 1.",
                "Answer": "UPDATE basketball_statistics SET School_ID = 1 WHERE Player_Name = 'James Doe'"
            }
        ]
    },
    {
        "idx": 442,
        "db": "election_representative",
        "interaction": [
            {
                "User": "Can we track the number of elections each representative has participated in?",
                "Answer": "ALTER TABLE representative ADD COLUMN Elections_Participated number"
            },
            {
                "User": "Please update the number of elections participated for Dan Quayle to 3.",
                "Answer": "UPDATE representative SET Elections_Participated = 3 WHERE Name = 'Dan Quayle'"
            },
            {
                "User": "Update the number of elections participated for John Quayle to 2.",
                "Answer": "UPDATE representative SET Elections_Participated = 2 WHERE Name = 'John Quayle'"
            },
            {
                "User": "How many elections has Al Quie participated in?",
                "Answer": "SELECT Elections_Participated FROM representative WHERE Name = 'Al Quie'"
            },
            {
                "User": "Let's add a new representative named 'Alex Smith' from 'California' who is a 'Democrat' and born in '1985'.",
                "Answer": "INSERT INTO representative (Representative_ID, Name, State, Party, Lifespan) VALUES (8, 'Alex Smith', 'California', 'Democrat', '1985–')"
            },
            {
                "User": "Now, add an election record for Alex Smith with 5000 votes and 10% of the vote percent in place number 4.",
                "Answer": "INSERT INTO election (Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place) VALUES (6, 8, '2023', 5000, 10.0, 1, 4)"
            },
            {
                "User": "Create a new table to track representatives' education with columns for representative ID, degree, and university.",
                "Answer": "CREATE TABLE education (Representative_ID number, Degree text, University text, PRIMARY KEY (Representative_ID))"
            },
            {
                "User": "Add education records indicating that Dan Quayle has a 'JD' from 'Indiana University' and Alex Smith has a 'BS' from 'Stanford University'.",
                "Answer": "INSERT INTO education (Representative_ID, Degree, University) VALUES (1, 'JD', 'Indiana University'), (8, 'BS', 'Stanford University')"
            },
            {
                "User": "Who has a law degree?",
                "Answer": "SELECT Name FROM representative r JOIN education e ON r.Representative_ID = e.Representative_ID WHERE e.Degree = 'JD'"
            },
            {
                "User": "I need to see the full profile of representatives who have participated in more than one election.",
                "Answer": "SELECT * FROM representative WHERE Elections_Participated > 1"
            },
            {
                "User": "Can we track the age of representatives? Please add an 'Age' column.",
                "Answer": "ALTER TABLE representative ADD COLUMN Age number"
            },
            {
                "User": "Set the age for Dan Quayle to 75.",
                "Answer": "UPDATE representative SET Age = 75 WHERE Name = 'Dan Quayle'"
            },
            {
                "User": "What is the average age of the representatives?",
                "Answer": "SELECT avg(Age) FROM representative"
            }
        ]
    },
    {
        "idx": 443,
        "db": "election_representative",
        "interaction": [
            {
                "User": "Can we add a new representative?",
                "Answer": "INSERT INTO representative (Representative_ID, Name, State, Party, Lifespan) VALUES (8, 'Jane Doe', 'California', 'Independent', '1985–')"
            },
            {
                "User": "How many representatives do we have now?",
                "Answer": "SELECT count(*) FROM representative"
            },
            {
                "User": "Let's record the election results for the new representative. Can you add that?",
                "Answer": "INSERT INTO election (Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place) VALUES (6, 8, 'April 2023', 5000, 10.0, 1, 4)"
            },
            {
                "User": "What is the average percentage of votes that representatives got in the last election?",
                "Answer": "SELECT AVG(Vote_Percent) FROM election WHERE Date = 'April 2023'"
            },
            {
                "User": "I made a mistake in the previous data entry for Jane Doe. She's from Nevada, not California. Can you update that?",
                "Answer": "UPDATE representative SET State = 'Nevada' WHERE Name = 'Jane Doe'"
            },
            {
                "User": "Let's add a column to track the representatives' email addresses. Can you do that?",
                "Answer": "ALTER TABLE representative ADD COLUMN Email text"
            },
            {
                "User": "Great, now please update the email address for Dan Quayle.",
                "Answer": "UPDATE representative SET Email = 'dan.quayle@example.com' WHERE Name = 'Dan Quayle'"
            },
            {
                "User": "Can we create a table to keep track of election campaigns?",
                "Answer": "CREATE TABLE campaign (Campaign_ID number PRIMARY KEY, Representative_ID number, Start_Date text, End_Date text, Budget number)"
            },
            {
                "User": "Add a campaign for John Quayle with a budget of 20000.",
                "Answer": "INSERT INTO campaign (Campaign_ID, Representative_ID, Start_Date, End_Date, Budget) VALUES (1, 2, 'March 2023', 'April 2023', 20000)"
            },
            {
                "User": "Which representative spent the most on their campaign?",
                "Answer": "SELECT r.Name FROM representative r JOIN campaign c ON r.Representative_ID = c.Representative_ID ORDER BY c.Budget DESC LIMIT 1"
            },
            {
                "User": "Can we see a list of representatives who are not affiliated with any party?",
                "Answer": "SELECT Name FROM representative WHERE Party = 'Independent' OR Party = ''"
            },
            {
                "User": "Update the votes for Jane Doe to 5500 as there was a recount.",
                "Answer": "UPDATE election SET Votes = 5500 WHERE Representative_ID = (SELECT Representative_ID FROM representative WHERE Name = 'Jane Doe')"
            }
        ]
    },
    {
        "idx": 444,
        "db": "railway",
        "interaction": [
            {
                "User": "Can you add a new table to track train maintenance schedules?",
                "Answer": "CREATE TABLE maintenance_schedule (Maintenance_ID number PRIMARY KEY, Train_ID number, Schedule_Date text, Description text, FOREIGN KEY (Train_ID) REFERENCES train(Train_ID))"
            },
            {
                "User": "Please insert a maintenance schedule for train 51195 on April 15, 2023, for engine inspection.",
                "Answer": "INSERT INTO maintenance_schedule (Maintenance_ID, Train_ID, Schedule_Date, Description) VALUES (1, 1, '2023-04-15', 'Engine Inspection')"
            },
            {
                "User": "Add a record for train 12139 on April 20, 2023, for brake check.",
                "Answer": "INSERT INTO maintenance_schedule (Maintenance_ID, Train_ID, Schedule_Date, Description) VALUES (2, 2, '2023-04-20', 'Brake Check')"
            },
            {
                "User": "What is the schedule for train 51195?",
                "Answer": "SELECT Schedule_Date, Description FROM maintenance_schedule WHERE Train_ID = 1"
            },
            {
                "User": "Can you update the maintenance schedule for train 51195 to include wheel alignment on the same date?",
                "Answer": "UPDATE maintenance_schedule SET Description = 'Engine Inspection, Wheel Alignment' WHERE Train_ID = 1 AND Schedule_Date = '2023-04-15'"
            },
            {
                "User": "Show me all the maintenance schedules we have.",
                "Answer": "SELECT * FROM maintenance_schedule"
            },
            {
                "User": "I need to add a new column to the railway table to track the last maintenance date.",
                "Answer": "ALTER TABLE railway ADD COLUMN Last_Maintenance_Date text"
            },
            {
                "User": "Update the last maintenance date for the SECR railway to today's date.",
                "Answer": "UPDATE railway SET Last_Maintenance_Date = '2023-04-01' WHERE Railway = 'SECR'"
            },
            {
                "User": "Show me all railways with their last maintenance date.",
                "Answer": "SELECT Railway, Last_Maintenance_Date FROM railway"
            },
            {
                "User": "Can we see the entire record for railways that were built before 1902?",
                "Answer": "SELECT * FROM railway WHERE Built < '1902'"
            },
            {
                "User": "Let's add a new manager to the database, id 8, name 'Ella Fitzgerald', from 'Canada', starting in 2021, aged 39, level 4.",
                "Answer": "INSERT INTO manager (Manager_ID, Name, Country, Working_year_starts, Age, Level) VALUES (8, 'Ella Fitzgerald', 'Canada', '2021', 39, 4)"
            },
            {
                "User": "Assign the new manager to the GNRD railway starting from this year.",
                "Answer": "INSERT INTO railway_manage (Railway_ID, Manager_ID, From_Year) VALUES (3, 8, '2023')"
            },
            {
                "User": "Who is managing the GNRD railway now?",
                "Answer": "SELECT m.Name FROM manager m JOIN railway_manage rm ON m.Manager_ID = rm.Manager_ID WHERE rm.Railway_ID = 3"
            },
            {
                "User": "What is the average age of managers?",
                "Answer": "SELECT AVG(Age) FROM manager"
            }
        ]
    },
    {
        "idx": 445,
        "db": "railway",
        "interaction": [
            {
                "User": "Can we add a new column to the railway table to track the maintenance status?",
                "Answer": "ALTER TABLE railway ADD COLUMN Maintenance_Status text"
            },
            {
                "User": "Please mark the railway with ID 1 as 'Under Maintenance'.",
                "Answer": "UPDATE railway SET Maintenance_Status = 'Under Maintenance' WHERE Railway_ID = 1"
            },
            {
                "User": "What is the maintenance status of the railway with ID 2?",
                "Answer": "SELECT Maintenance_Status FROM railway WHERE Railway_ID = 2"
            },
            {
                "User": "I'd like to add a new manager with the following details: ID 8, Name 'Phil Mickelson', Country 'United States', Working_year_starts '2007', Age 51, Level 5.",
                "Answer": "INSERT INTO manager (Manager_ID, Name, Country, Working_year_starts, Age, Level) VALUES (8, 'Phil Mickelson', 'United States', '2007', 51, 5)"
            },
            {
                "User": "Can you show me a list of all railways that are not under maintenance?",
                "Answer": "SELECT * FROM railway WHERE Maintenance_Status IS NULL OR Maintenance_Status != 'Under Maintenance'"
            },
            {
                "User": "Let's create a new table to track the service history of each train. It should include a Service_ID, Train_ID, Service_Date, and Notes.",
                "Answer": "CREATE TABLE service_history (Service_ID number PRIMARY KEY, Train_ID number, Service_Date text, Notes text)"
            },
            {
                "User": "Insert a service record for Train_ID 1 with Service_ID 1, serviced on '2023-04-01', with notes 'Routine maintenance completed'.",
                "Answer": "INSERT INTO service_history (Service_ID, Train_ID, Service_Date, Notes) VALUES (1, 1, '2023-04-01', 'Routine maintenance completed')"
            },
            {
                "User": "The train with Train_ID 2 has been serviced today. Add a record with Service_ID 2 and note 'Emergency brake repair'.",
                "Answer": "INSERT INTO service_history (Service_ID, Train_ID, Service_Date, Notes) VALUES (2, 2, CURRENT_DATE, 'Emergency brake repair')"
            },
            {
                "User": "Can we get the latest service history for the train with Train_ID 1?",
                "Answer": "SELECT * FROM service_history WHERE Train_ID = 1 ORDER BY Service_Date DESC LIMIT 1"
            },
            {
                "User": "I need to correct the name of the manager with Manager_ID 2 to 'Tom Watson'.",
                "Answer": "UPDATE manager SET Name = 'Tom Watson' WHERE Manager_ID = 2"
            },
            {
                "User": "Let's link the new manager to the railway with ID 3. Add a record in railway_manage starting from this year.",
                "Answer": "INSERT INTO railway_manage (Railway_ID, Manager_ID, From_Year) VALUES (3, 4, '2023')"
            }
        ]
    },
    {
        "idx": 446,
        "db": "customers_campaigns_ecommerce",
        "interaction": [
            {
                "User": "What are the names of the products in the 'Electronics' category?",
                "Answer": "SELECT product_name FROM Products WHERE product_category = 'Electronics'"
            },
            {
                "User": "Can you add a new 'Electronics' product named 'Smartphone'?",
                "Answer": "INSERT INTO Products (product_id, product_category, product_name) VALUES (16, 'Electronics', 'Smartphone')"
            },
            {
                "User": "I need to update the customer address for customer ID 1 to '1234 New Address Blvd Apt. 101'.",
                "Answer": "UPDATE Customers SET customer_address = '1234 New Address Blvd Apt. 101' WHERE customer_id = 1"
            },
            {
                "User": "Create a new table to track customer feedback with columns for feedback_id, customer_id, and feedback_text.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text)"
            },
            {
                "User": "Add a feedback record for customer ID 2 with the text 'Very satisfied with the product quality.'",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, feedback_text) VALUES (1, 2, 'Very satisfied with the product quality.')"
            },
            {
                "User": "Show me the feedback text for customer ID 2.",
                "Answer": "SELECT feedback_text FROM Customer_Feedback WHERE customer_id = 2"
            },
            {
                "User": "Add a column 'last_purchase_date' to the Customers table to track the last purchase date.",
                "Answer": "ALTER TABLE Customers ADD COLUMN last_purchase_date time"
            },
            {
                "User": "Update the last purchase date for customer ID 3 to '2023-03-15'.",
                "Answer": "UPDATE Customers SET last_purchase_date = '2023-03-15' WHERE customer_id = 3"
            },
            {
                "User": "Which customers have not provided an email address?",
                "Answer": "SELECT customer_id, customer_name FROM Customers WHERE customer_email IS NULL OR customer_email = ''"
            },
            {
                "User": "Add a new mailshot campaign for the 'Books' category named 'Read More' starting on '2023-04-01' and ending on '2023-04-30'.",
                "Answer": "INSERT INTO Mailshot_Campaigns (mailshot_id, product_category, mailshot_name, mailshot_start_date, mailshot_end_date) VALUES (21, 'Books', 'Read More', '2023-04-01', '2023-04-30')"
            },
            {
                "User": "Link customer ID 1 to the new 'Read More' mailshot campaign.",
                "Answer": "INSERT INTO Mailshot_Customers (mailshot_id, customer_id, outcome_code, mailshot_customer_date) VALUES (21, 1, 'Pending', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Show me all the products linked to orders that were shipped using 'FedEx'.",
                "Answer": "SELECT DISTINCT p.product_name FROM Products p JOIN Order_Items oi ON p.product_id = oi.product_id JOIN Customer_Orders co ON oi.order_id = co.order_id WHERE co.shipping_method_code = 'FedEx'"
            }
        ]
    },
    {
        "idx": 447,
        "db": "customers_campaigns_ecommerce",
        "interaction": [
            {
                "User": "Can we add a column to track the preferred contact method for customers?",
                "Answer": "ALTER TABLE Customers ADD COLUMN preferred_contact_method text;"
            },
            {
                "User": "Now, set the preferred contact method to 'Email' for all customers who have an email address.",
                "Answer": "UPDATE Customers SET preferred_contact_method = 'Email' WHERE customer_email IS NOT NULL;"
            },
            {
                "User": "What is the preferred contact method for customer Wendell?",
                "Answer": "SELECT preferred_contact_method FROM Customers WHERE customer_name = 'Wendell';"
            },
            {
                "User": "Can we create a new table to log customer interactions?",
                "Answer": "CREATE TABLE Customer_Interactions (interaction_id number PRIMARY KEY, customer_id number, interaction_type text, interaction_date time, interaction_details text);"
            },
            {
                "User": "Log a phone call interaction for customer Gage.",
                "Answer": "INSERT INTO Customer_Interactions (interaction_id, customer_id, interaction_type, interaction_date, interaction_details) VALUES (1, 2, 'Phone Call', CURRENT_TIMESTAMP, 'Discussed product feedback');"
            },
            {
                "User": "Show me all interactions for customer Elvera.",
                "Answer": "SELECT * FROM Customer_Interactions WHERE customer_id = 3;"
            },
            {
                "User": "I'd like to add a new product category 'Toys' with a product named 'Teddy Bear'.",
                "Answer": "INSERT INTO Products (product_id, product_category, product_name) VALUES (16, 'Toys', 'Teddy Bear');"
            },
            {
                "User": "How many orders have been placed for the 'Food' category?",
                "Answer": "SELECT COUNT(*) FROM Order_Items AS OI JOIN Products AS P ON OI.product_id = P.product_id WHERE P.product_category = 'Food';"
            },
            {
                "User": "Update the shipping method for order_id 1 to 'DHL'.",
                "Answer": "UPDATE Customer_Orders SET shipping_method_code = 'DHL' WHERE order_id = 1;"
            },
            {
                "User": "Show me the total shipping charges for FedEx deliveries.",
                "Answer": "SELECT SUM(CAST(order_shipping_charges AS decimal)) FROM Customer_Orders WHERE shipping_method_code = 'FedEx';"
            },
            {
                "User": "Let's track if a customer is subscribed to our newsletter. Can we add this information?",
                "Answer": "ALTER TABLE Customers ADD COLUMN is_subscribed_to_newsletter boolean;"
            },
            {
                "User": "Set customer Wendell as subscribed to the newsletter.",
                "Answer": "UPDATE Customers SET is_subscribed_to_newsletter = TRUE WHERE customer_name = 'Wendell';"
            },
            {
                "User": "Which customers are subscribed to the newsletter?",
                "Answer": "SELECT customer_name FROM Customers WHERE is_subscribed_to_newsletter = TRUE;"
            },
            {
                "User": "Create a campaign for 'Toys' category named 'Summer Fun'.",
                "Answer": "INSERT INTO Mailshot_Campaigns (mailshot_id, product_category, mailshot_name, mailshot_start_date, mailshot_end_date) VALUES (21, 'Toys', 'Summer Fun', '2023-06-01 00:00:00', '2023-08-31 23:59:59');"
            },
            {
                "User": "Link customer Elvera to the 'Summer Fun' campaign with an outcome 'Interested'.",
                "Answer": "INSERT INTO Mailshot_Customers (mailshot_id, customer_id, outcome_code, mailshot_customer_date) VALUES (21, 3, 'Interested', CURRENT_TIMESTAMP);"
            }
        ]
    },
    {
        "idx": 448,
        "db": "company_1",
        "interaction": [
            {
                "User": "Who is the manager of the Research department?",
                "Answer": "SELECT Fname, Minit, Lname FROM employee WHERE Ssn = (SELECT Mgr_ssn FROM department WHERE Dname = 'Research')"
            },
            {
                "User": "Add a new employee named Alice Thompson with SSN 999817776, born on 1990-04-23, living at 1200 Richmond Ave, Houston, TX, female, with a salary of 35000, supervised by Franklin Wong, and working in the Administration department.",
                "Answer": "INSERT INTO employee (Fname, Minit, Lname, Ssn, Bdate, Address, Sex, Salary, Super_ssn, Dno) VALUES ('Alice', '', 'Thompson', 999817776, '1990-04-23', '1200 Richmond Ave, Houston, TX', 'F', 35000, 333445555, 4)"
            },
            {
                "User": "Increase the salary of all employees in the Research department by 10%.",
                "Answer": "UPDATE employee SET Salary = Salary * 1.10 WHERE Dno = (SELECT Dnumber FROM department WHERE Dname = 'Research')"
            },
            {
                "User": "Create a new table to track employee benefits with columns for SSN, benefit name, and benefit value.",
                "Answer": "CREATE TABLE employee_benefits (Ssn number, Benefit_name text, Benefit_value number, PRIMARY KEY (Ssn, Benefit_name))"
            },
            {
                "User": "Add a new benefit called 'Health Insurance' with a value of 1200 for employee John B Smith.",
                "Answer": "INSERT INTO employee_benefits (Ssn, Benefit_name, Benefit_value) VALUES (123456789, 'Health Insurance', 1200)"
            },
            {
                "User": "How many employees are currently working on ProjectX?",
                "Answer": "SELECT COUNT(*) FROM works_on WHERE Pno = (SELECT Pnumber FROM project WHERE Pname = 'ProductX')"
            },
            {
                "User": "Add a new project called 'ProjectA' with project number 40, located in 'Galveston', under the Administration department.",
                "Answer": "INSERT INTO project (Pname, Pnumber, Plocation, Dnum) VALUES ('ProjectA', 40, 'Galveston', 4)"
            },
            {
                "User": "Who are the dependents of Franklin T Wong?",
                "Answer": "SELECT Dependent_name FROM dependent WHERE Essn = (SELECT Ssn FROM employee WHERE Fname = 'Franklin' AND Minit = 'T' AND Lname = 'Wong')"
            },
            {
                "User": "Assign John B Smith to work 10 hours on ProjectA.",
                "Answer": "INSERT INTO works_on (Essn, Pno, Hours) VALUES (123456789, 10, 10)"
            },
            {
                "User": "Move the location of the Headquarters department to 'Dallas'.",
                "Answer": "UPDATE dept_locations SET Dlocation = 'Dallas' WHERE Dnumber = (SELECT Dnumber FROM department WHERE Dname = 'Headquarters')"
            },
            {
                "User": "Show me the total salary expenditure for the Research department.",
                "Answer": "SELECT SUM(Salary) FROM employee WHERE Dno = (SELECT Dnumber FROM department WHERE Dname = 'Research')"
            },
            {
                "User": "Add a column 'Email' to the employee table to store their email addresses.",
                "Answer": "ALTER TABLE employee ADD Email text"
            }
        ]
    },
    {
        "idx": 449,
        "db": "company_1",
        "interaction": [
            {
                "User": "Can we add a new department called 'Development' with a department number 6?",
                "Answer": "INSERT INTO department (Dname, Dnumber) VALUES ('Development', 6)"
            },
            {
                "User": "Who is going to manage the new Development department?",
                "Answer": "SELECT Fname, Lname FROM employee WHERE Dno = 6"
            },
            {
                "User": "I'd like to see all departments along with their managers' names.",
                "Answer": "SELECT department.Dname, employee.Fname, employee.Lname FROM department LEFT JOIN employee ON department.Mgr_ssn = employee.Ssn"
            },
            {
                "User": "We need to track the email addresses of employees. Can you add an email column to the employee table?",
                "Answer": "ALTER TABLE employee ADD COLUMN Email text"
            },
            {
                "User": "Please add the email 'john.smith@company1.com' for John B Smith.",
                "Answer": "UPDATE employee SET Email = 'john.smith@company1.com' WHERE Fname = 'Jonh' AND Minit = 'B' AND Lname = 'Smith'"
            },
            {
                "User": "Can you show me the updated record for John B Smith?",
                "Answer": "SELECT * FROM employee WHERE Fname = 'Jonh' AND Minit = 'B' AND Lname = 'Smith'"
            },
            {
                "User": "Let's start tracking the participation of employees in projects. Can we create a new table for this?",
                "Answer": "CREATE TABLE employee_projects (Essn number, Pno number, Role text, PRIMARY KEY (Essn, Pno))"
            },
            {
                "User": "Add John B Smith to the ProductX project as a 'Lead Developer'.",
                "Answer": "INSERT INTO employee_projects (Essn, Pno, Role) VALUES (123456789, 1, 'Lead Developer')"
            },
            {
                "User": "Now, how many projects does John B Smith participate in?",
                "Answer": "SELECT count(*) FROM employee_projects WHERE Essn = 123456789"
            },
            {
                "User": "I realized we should also have the start date for project participation. Can you add this to the employee_projects table?",
                "Answer": "ALTER TABLE employee_projects ADD COLUMN Start_date text"
            },
            {
                "User": "Set the start date for John B Smith's participation in ProductX to January 1st, 2021.",
                "Answer": "UPDATE employee_projects SET Start_date = '2021-01-01' WHERE Essn = 123456789 AND Pno = 1"
            },
            {
                "User": "Show me all the projects along with the employee names and their roles.",
                "Answer": "SELECT project.Pname, employee.Fname, employee.Lname, employee_projects.Role FROM employee_projects JOIN employee ON employee_projects.Essn = employee.Ssn JOIN project ON employee_projects.Pno = project.Pnumber"
            },
            {
                "User": "Let's increase the salary of all female employees by 10%.",
                "Answer": "UPDATE employee SET Salary = Salary * 1.10 WHERE Sex = 'F'"
            }
        ]
    },
    {
        "idx": 450,
        "db": "csu_1",
        "interaction": [
            {
                "User": "How many degrees were awarded by the California State University-Bakersfield in 1992?",
                "Answer": "SELECT Degrees FROM degrees WHERE Campus = 1 AND Year = 1992"
            },
            {
                "User": "Can you update the number of degrees awarded by the California State University-Bakersfield in 1992 to 800?",
                "Answer": "UPDATE degrees SET Degrees = 800 WHERE Campus = 1 AND Year = 1992"
            },
            {
                "User": "Please add a new campus record for 'California State University-Fresno' founded in 1911 located in Fresno, Fresno County.",
                "Answer": "INSERT INTO Campuses (Campus, Location, County, Year) VALUES ('California State University-Fresno', 'Fresno', 'Fresno', 1911)"
            },
            {
                "User": "I need to know the total enrollment for California State University-Bakersfield in 1958.",
                "Answer": "SELECT TotalEnrollment_AY FROM enrollments WHERE Campus = 1 AND Year = 1958"
            },
            {
                "User": "Let's add a column for 'OnlineEnrollment' to the enrollments table to record the number of students enrolled online.",
                "Answer": "ALTER TABLE enrollments ADD OnlineEnrollment number"
            },
            {
                "User": "Now, set the 'OnlineEnrollment' for California State University-Bakersfield in the year 1958 to 50.",
                "Answer": "UPDATE enrollments SET OnlineEnrollment = 50 WHERE Campus = 1 AND Year = 1958"
            },
            {
                "User": "What was the campus fee for California State University-Channel Islands in 2003?",
                "Answer": "SELECT CampusFee FROM csu_fees WHERE Campus = 2 AND Year = 2003"
            },
            {
                "User": "Can you create a new table to record research grants with columns 'Campus', 'Year', 'GrantAmount'?",
                "Answer": "CREATE TABLE research_grants (Campus number, Year number, GrantAmount number, PRIMARY KEY (Campus, Year))"
            },
            {
                "User": "Insert a record for a research grant of $500,000 awarded to California State University-Bakersfield in 2003.",
                "Answer": "INSERT INTO research_grants (Campus, Year, GrantAmount) VALUES (1, 2003, 500000)"
            }
        ]
    },
    {
        "idx": 451,
        "db": "csu_1",
        "interaction": [
            {
                "User": "How much is the campus fee for California State University-Bakersfield in 1996?",
                "Answer": "SELECT CampusFee FROM csu_fees WHERE Campus = 1 AND Year = 1996"
            },
            {
                "User": "Can you update the campus fee for California State University-Bakersfield in 1996 to $2000?",
                "Answer": "UPDATE csu_fees SET CampusFee = 2000 WHERE Campus = 1 AND Year = 1996"
            },
            {
                "User": "I'd like to add a new record for California State University-Bakersfield with the campus fee for 2021, with CampusFee 2500",
                "Answer": "INSERT INTO csu_fees (Campus, Year, CampusFee) VALUES (24, 2021, 2500)"
            },
            {
                "User": "Can we create a new table to track sports team achievements with columns for Campus ID, Year, Sport, and Championships won?",
                "Answer": "CREATE TABLE sports_achievements (CampusID number, Year number, Sport text, ChampionshipsWon number, PRIMARY KEY (CampusID, Year, Sport))"
            },
            {
                "User": "Please add a new column to the Campuses table to indicate whether the campus is urban or rural.",
                "Answer": "ALTER TABLE Campuses ADD COLUMN CampusType text"
            },
            {
                "User": "Set the CampusType for California State University-Bakersfield to 'Urban'.",
                "Answer": "UPDATE Campuses SET CampusType = 'Urban' WHERE Id = 1"
            },
            {
                "User": "How many degrees were awarded by California State University-Chico in 1992?",
                "Answer": "SELECT Degrees FROM degrees WHERE Campus = 3 AND Year = 1992"
            },
            {
                "User": "Show me the total faculty count for all campuses in 2002.",
                "Answer": "SELECT SUM(Faculty) FROM faculty WHERE Year = 2002"
            },
            {
                "User": "Please create a new table to track faculty publications with columns for Campus ID, Year, Faculty ID, and Publication Count.",
                "Answer": "CREATE TABLE faculty_publications (CampusID number, Year number, FacultyID number, PublicationCount number, PRIMARY KEY (CampusID, FacultyID, Year))"
            },
            {
                "User": "Add a publication count of 15 for a faculty member with ID 10 at California State University-Bakersfield for the year 2021.",
                "Answer": "INSERT INTO faculty_publications (CampusID, Year, FacultyID, PublicationCount) VALUES (1, 2021, 10, 15)"
            },
            {
                "User": "Update the total enrollment for California State University-Bakersfield in 1956 to 400 students.",
                "Answer": "UPDATE enrollments SET TotalEnrollment_AY = 400 WHERE Campus = 1 AND Year = 1956"
            },
            {
                "User": "What is the new average campus fee across all campuses for the year 1996 after the update?",
                "Answer": "SELECT AVG(CampusFee) FROM csu_fees WHERE Year = 1996"
            },
            {
                "User": "Show the campus type for each campus along with the location and county.",
                "Answer": "SELECT Campus, Location, County, CampusType FROM Campuses"
            }
        ]
    },
    {
        "idx": 452,
        "db": "flight_company",
        "interaction": [
            {
                "User": "How many flights have been recorded from Akureyri Airport?",
                "Answer": "SELECT COUNT(*) FROM flight WHERE airport_id = (SELECT id FROM airport WHERE name = 'Akureyri Airport')"
            },
            {
                "User": "Can you add a new flight record for Air China from Schiphol Airport on April 1st, 2023, with a velocity of 500 and altitude of 10000?",
                "Answer": "INSERT INTO flight (Vehicle_Flight_number, Date, Pilot, Velocity, Altitude, airport_id, company_id) VALUES ('CA789', 'April 1, 2023', 'Wang', 500, 10000, (SELECT id FROM airport WHERE name = 'Schiphol Airport'), (SELECT id FROM operate_company WHERE name = 'Air China'))"
            },
            {
                "User": "Update the principal activities of 'Air China Cargo' to 'International Cargo Airline'.",
                "Answer": "UPDATE operate_company SET Principal_activities = 'International Cargo Airline' WHERE name = 'Air China Cargo'"
            },
            {
                "User": "Which company has the highest group equity shareholding?",
                "Answer": "SELECT name FROM operate_company ORDER BY Group_Equity_Shareholding DESC LIMIT 1"
            },
            {
                "User": "I would like to add a new column 'Capacity' to the flight table to record the number of passengers. Can you do that?",
                "Answer": "ALTER TABLE flight ADD COLUMN Capacity number"
            },
            {
                "User": "For flight 'M2-F1 #6', set the capacity to 120 passengers.",
                "Answer": "UPDATE flight SET Capacity = 120 WHERE Vehicle_Flight_number = 'M2-F1 #6'"
            },
            {
                "User": "Create a new table 'crew' with columns 'id', 'name', 'role', and 'flight_id' to keep track of crew members.",
                "Answer": "CREATE TABLE crew (id number PRIMARY KEY, name text, role text, flight_id number, FOREIGN KEY (flight_id) REFERENCES flight(id))"
            },
            {
                "User": "Insert a new crew member named 'James Smith' as a pilot for flight 'CA789'.",
                "Answer": "INSERT INTO crew (name, role, flight_id) VALUES ('James Smith', 'Pilot', (SELECT id FROM flight WHERE Vehicle_Flight_number = 'CA789'))"
            },
            {
                "User": "What is the average velocity of all flights operated by Air China?",
                "Answer": "SELECT AVG(Velocity) FROM flight WHERE company_id = (SELECT id FROM operate_company WHERE name = 'Air China')"
            }
        ]
    },
    {
        "idx": 453,
        "db": "flight_company",
        "interaction": [
            {
                "User": "Can you add a new column to track the number of passengers for each flight?",
                "Answer": "ALTER TABLE flight ADD COLUMN passengers_number INT DEFAULT 0"
            },
            {
                "User": "Record that flight M2-F1 #0 had 120 passengers.",
                "Answer": "UPDATE flight SET passengers_number = 120 WHERE Vehicle_Flight_number = 'M2-F1 #0'"
            },
            {
                "User": "How many passengers were on the flight on August 16, 1963?",
                "Answer": "SELECT passengers_number FROM flight WHERE Date = 'August 16, 1963'"
            },
            {
                "User": "Which airport has the most flights departing from it?",
                "Answer": "SELECT airport_id, COUNT(*) AS flights_count FROM flight GROUP BY airport_id ORDER BY flights_count DESC LIMIT 1"
            },
            {
                "User": "Please create a new table to track airport facilities with columns for id, airport_id, facility_name, and facility_type.",
                "Answer": "CREATE TABLE airport_facilities (id INT PRIMARY KEY, airport_id INT, facility_name TEXT, facility_type TEXT)"
            },
            {
                "User": "Add a record for a new facility, a 'Lounge', at Schiphol Airport.",
                "Answer": "INSERT INTO airport_facilities (id, airport_id, facility_name, facility_type) VALUES (1, 2, 'VIP Lounge', 'Lounge')"
            },
            {
                "User": "Can we update the name of Air China Cargo to Air China Freight?",
                "Answer": "UPDATE operate_company SET name = 'Air China Freight' WHERE name = 'Air China Cargo'"
            },
            {
                "User": "How many flights are operated by Air China Freight?",
                "Answer": "SELECT COUNT(*) FROM flight INNER JOIN operate_company ON flight.company_id = operate_company.id WHERE operate_company.name = 'Air China Freight'"
            },
            {
                "User": "Show me the average velocity of flights operated by Air China Freight.",
                "Answer": "SELECT AVG(flight.Velocity) FROM flight INNER JOIN operate_company ON flight.company_id = operate_company.id WHERE operate_company.name = 'Air China Freight'"
            },
            {
                "User": "List all flights with more than 100 passengers.",
                "Answer": "SELECT * FROM flight WHERE passengers_number > 100"
            },
            {
                "User": "Alter the airport table to include a column for the year it was opened.",
                "Answer": "ALTER TABLE airport ADD COLUMN opened_year INT"
            },
            {
                "User": "Update the opened_year for Akureyri Airport to 1955.",
                "Answer": "UPDATE airport SET opened_year = 1955 WHERE IATA = 'AEY'"
            },
            {
                "User": "What is the average number of passengers across all flights?",
                "Answer": "SELECT AVG(passengers_number) FROM flight"
            },
            {
                "User": "Which company has the highest Group Equity Shareholding?",
                "Answer": "SELECT name FROM operate_company ORDER BY Group_Equity_Shareholding DESC LIMIT 1"
            }
        ]
    },
    {
        "idx": 454,
        "db": "behavior_monitoring",
        "interaction": [
            {
                "User": "What are the email addresses of students who live in Texas?",
                "Answer": "SELECT S.email_address FROM Students AS S JOIN Addresses AS A ON S.address_id = A.address_id WHERE A.state_province_county = 'Texas'"
            },
            {
                "User": "Add a new student named John Doe with email john.doe@example.com, and the address_id is 1",
                "Answer": "INSERT INTO Students (student_id, address_id, first_name, last_name, email_address) VALUES (16, 1, 'John', 'Doe', 'john.doe@example.com')"
            },
            {
                "User": "John Doe has moved to a new address at 123 Main St, Austin, Texas. Update his address record.",
                "Answer": "UPDATE Addresses SET line_1 = '123 Main St', city = 'Austin', state_province_county = 'Texas' WHERE address_id = (SELECT address_id FROM Students WHERE first_name = 'John' AND last_name = 'Doe')"
            },
            {
                "User": "Create a table to track the subjects that teachers specialize in.",
                "Answer": "CREATE TABLE Teacher_Subjects (teacher_id number, subject text, PRIMARY KEY (teacher_id))"
            },
            {
                "User": "Insert subjects 'Mathematics' for teacher with ID 1.",
                "Answer": "INSERT INTO Teacher_Subjects (teacher_id, subject) VALUES (1, 'Mathematics')"
            },
            {
                "User": "Can we have a list of teachers and their specialized subjects?",
                "Answer": "SELECT T.first_name, T.last_name, TS.subject FROM Teachers AS T JOIN Teacher_Subjects AS TS ON T.teacher_id = TS.teacher_id"
            },
            {
                "User": "We need to keep track of student attendance. Can you add a 'present' column to the Behavior_Incident table to indicate if the student was present?",
                "Answer": "ALTER TABLE Behavior_Incident ADD COLUMN present boolean"
            },
            {
                "User": "Mark student with ID 6 as present for the incident on '2017-07-09'.",
                "Answer": "UPDATE Behavior_Incident SET present = TRUE WHERE student_id = 6 AND date_incident_start = '2017-07-09 10:04:13'"
            },
            {
                "User": "How many incidents have there been where student was present?",
                "Answer": "SELECT COUNT(*) FROM Behavior_Incident WHERE present = TRUE"
            },
            {
                "User": "Add a new detention type for 'Homework' with the description 'Detention for not completing homework'.",
                "Answer": "INSERT INTO Ref_Detention_Type (detention_type_code, detention_type_description) VALUES ('HOMEWORK', 'Detention for not completing homework')"
            }
        ]
    },
    {
        "idx": 455,
        "db": "behavior_monitoring",
        "interaction": [
            {
                "User": "How many students have been involved in a noise incident?",
                "Answer": "SELECT count(distinct student_id) FROM Behavior_Incident WHERE incident_type_code = 'NOISE'"
            },
            {
                "User": "Can we track the email addresses of those students?",
                "Answer": "SELECT S.email_address FROM Students AS S JOIN Behavior_Incident AS B ON S.student_id = B.student_id WHERE B.incident_type_code = 'NOISE'"
            },
            {
                "User": "I want to insert a new detention type for 'Weekend'. How can I do that?",
                "Answer": "INSERT INTO Ref_Detention_Type (detention_type_code, detention_type_description) VALUES ('WKND', 'Weekend')"
            },
            {
                "User": "How many detention types do we have now?",
                "Answer": "SELECT count(*) FROM Ref_Detention_Type"
            },
            {
                "User": "Let's update the detention summary for detention ID 1 to 'After School Misconduct'.",
                "Answer": "UPDATE Detention SET detention_summary = 'After School Misconduct' WHERE detention_id = 1"
            },
            {
                "User": "What is the new summary for detention ID 1?",
                "Answer": "SELECT detention_summary FROM Detention WHERE detention_id = 1"
            },
            {
                "User": "I need to add a column for recording the action taken in a behavior incident. Can you add it?",
                "Answer": "ALTER TABLE Behavior_Incident ADD COLUMN action_taken TEXT"
            },
            {
                "User": "Now, can you set the action taken for incident ID 2 to 'Parental Notification'?",
                "Answer": "UPDATE Behavior_Incident SET action_taken = 'Parental Notification' WHERE incident_id = 2"
            },
            {
                "User": "Show me the updated record for incident ID 2.",
                "Answer": "SELECT * FROM Behavior_Incident WHERE incident_id = 2"
            },
            {
                "User": "Can we create a new table to track teacher specializations?",
                "Answer": "CREATE TABLE Teacher_Specializations (teacher_id NUMBER, specialization TEXT, PRIMARY KEY (teacher_id))"
            },
            {
                "User": "Add a specialization 'Mathematics' for teacher with ID 2.",
                "Answer": "INSERT INTO Teacher_Specializations (teacher_id, specialization) VALUES (2, 'Mathematics')"
            },
            {
                "User": "List all teachers with their specializations if they have one.",
                "Answer": "SELECT T.first_name, T.last_name, TS.specialization FROM Teachers AS T LEFT JOIN Teacher_Specializations AS TS ON T.teacher_id = TS.teacher_id"
            },
            {
                "User": "Can you create a view that shows students and their addresses?",
                "Answer": "CREATE VIEW Student_Address_View AS SELECT S.student_id, S.first_name, S.last_name, A.line_1, A.city, A.state_province_county, A.country FROM Students AS S JOIN Addresses AS A ON S.address_id = A.address_id"
            }
        ]
    },
    {
        "idx": 456,
        "db": "browser_web",
        "interaction": [
            {
                "User": "Can you add a new browser to the database? With name is 'Chrome' and market_share is 59.69. The id of it is 5",
                "Answer": "INSERT INTO browser (id, name, market_share) VALUES (5, 'Chrome', 59.69)"
            },
            {
                "User": "Now, list all browsers with more than 10% market share.",
                "Answer": "SELECT name FROM browser WHERE market_share > 10"
            },
            {
                "User": "I've noticed that the 'Fasterfox' accelerator is compatible with 'Firefox'. Can we update its compatibility to include 'Chrome' as well?",
                "Answer": "INSERT INTO accelerator_compatible_browser (accelerator_id, browser_id, compatible_since_year) VALUES (3, 4, 2023)"
            },
            {
                "User": "Which accelerators are compatible with 'Chrome' now?",
                "Answer": "SELECT a.name FROM web_client_accelerator a JOIN accelerator_compatible_browser acb ON a.id = acb.accelerator_id WHERE acb.browser_id = 4"
            },
            {
                "User": "Can we track the version of the browsers as well? We need to add a new column for that.",
                "Answer": "ALTER TABLE browser ADD COLUMN version text"
            },
            {
                "User": "Please set the initial version for 'Internet Explorer' to '11.0', 'Firefox' to '85.0', and 'Safari' to '14.0'.",
                "Answer": [
                    "UPDATE browser SET version = '11.0' WHERE name = 'Internet Explorer';",
                    "UPDATE browser SET version = '85.0' WHERE name = 'Firefox';",
                    "UPDATE browser SET version = '14.0' WHERE name = 'Safari'"
                ]
            },
            {
                "User": "Now, show me the name and version of all browsers.",
                "Answer": "SELECT name, version FROM browser"
            },
            {
                "User": "I want to add a new accelerator called 'SpeedBoost' for Windows users. Can you do that?",
                "Answer": "INSERT INTO web_client_accelerator (id, name, Operating_system, Client, Connection) VALUES (20, 'SpeedBoost', 'Windows', 'user', 'Broadband')"
            },
            {
                "User": "Can you show me all accelerators for Windows users?",
                "Answer": "SELECT name FROM web_client_accelerator WHERE Operating_system LIKE '%Windows%'"
            },
            {
                "User": "Let's create a new table to track the users' feedback on different accelerators. It should have columns for ID, accelerator name, user ID, rating, and comments.",
                "Answer": "CREATE TABLE accelerator_feedback (id number, accelerator_name text, user_id number, rating number, comments text, PRIMARY KEY (id))"
            },
            {
                "User": "I'd like to give feedback for 'CACHEbox'. My user ID is 101, and I rate it 5 out of 5. Comment: 'Excellent performance and easy to use.'",
                "Answer": "INSERT INTO accelerator_feedback (id, accelerator_name, user_id, rating, comments) VALUES (1, 'CACHEbox', 101, 5, 'Excellent performance and easy to use')"
            },
            {
                "User": "Can you show me the average rating of each accelerator based on user feedback?",
                "Answer": "SELECT accelerator_name, AVG(rating) as average_rating FROM accelerator_feedback GROUP BY accelerator_name"
            },
            {
                "User": "Let's update the market share of 'Safari' to 10.1% as per the latest data.",
                "Answer": "UPDATE browser SET market_share = 10.1 WHERE name = 'Safari'"
            },
            {
                "User": "What is the new market share of 'Safari' now?",
                "Answer": "SELECT market_share FROM browser WHERE name = 'Safari'"
            },
            {
                "User": "Can we also track the release date for each browser version? We need another column for that.",
                "Answer": "ALTER TABLE browser ADD COLUMN release_date date"
            },
            {
                "User": "Set the release date of 'Internet Explorer 11.0' to '2013-10-17', 'Firefox 85.0' to '2021-01-26', and 'Safari 14.0' to '2020-09-16'.",
                "Answer": [
                    "UPDATE browser SET release_date = '2013-10-17' WHERE version = '11.0';",
                    "UPDATE browser SET release_date = '2021-01-26' WHERE version = '85.0';",
                    "UPDATE browser SET release_date = '2020-09-16' WHERE version = '14.0'"
                ]
            }
        ]
    },
    {
        "idx": 457,
        "db": "browser_web",
        "interaction": [
            {
                "User": "Can we track the version of the accelerators in our database?",
                "Answer": "ALTER TABLE Web_client_accelerator ADD COLUMN version TEXT;"
            },
            {
                "User": "Add version 'v1.0' to the CACHEbox accelerator entry.",
                "Answer": "UPDATE Web_client_accelerator SET version = 'v1.0' WHERE name = 'CACHEbox';"
            },
            {
                "User": "What is the version of the accelerator named 'CACHEbox'?",
                "Answer": "SELECT version FROM Web_client_accelerator WHERE name = 'CACHEbox';"
            },
            {
                "User": "Insert a new browser called 'Edge' with a market share of 10.55 into the browsers table, with id 5",
                "Answer": "INSERT INTO browser (id, name, market_share) VALUES (5, 'Edge', 10.55);"
            },
            {
                "User": "Which browsers are compatible with the accelerator named 'CProxy'?",
                "Answer": "SELECT T3.name FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'CProxy';"
            },
            {
                "User": "Update the market share of 'Firefox' to 20.75.",
                "Answer": "UPDATE browser SET market_share = 20.75 WHERE name = 'Firefox';"
            },
            {
                "User": "Create a new table to track user reviews for browsers.",
                "Answer": "CREATE TABLE browser_reviews (id NUMBER, browser_id NUMBER, review TEXT, rating NUMBER, PRIMARY KEY (id), FOREIGN KEY (browser_id) REFERENCES browser (id));"
            },
            {
                "User": "Add a new review for the 'Firefox' browser with a rating of 4.",
                "Answer": "INSERT INTO browser_reviews (id, browser_id, review, rating) VALUES (1, 2, 'Great performance and customization options', 4);"
            },
            {
                "User": "What is the average rating of the browser 'Firefox' based on user reviews?",
                "Answer": "SELECT AVG(rating) FROM browser_reviews WHERE browser_id = (SELECT id FROM browser WHERE name = 'Firefox');"
            },
            {
                "User": "Can we see a list of all browsers and their average ratings?",
                "Answer": "SELECT T1.name, AVG(T2.rating) AS avg_rating FROM browser AS T1 LEFT JOIN browser_reviews AS T2 ON T1.id = T2.browser_id GROUP BY T1.name;"
            },
            {
                "User": "I want to add a compatibility score between accelerators and browsers. How can we do this?",
                "Answer": "ALTER TABLE accelerator_compatible_browser ADD COLUMN compatibility_score NUMBER;"
            },
            {
                "User": "Set the compatibility score of the CACHEbox with Internet Explorer to 9.2.",
                "Answer": "UPDATE accelerator_compatible_browser SET compatibility_score = 9.2 WHERE accelerator_id = (SELECT id FROM Web_client_accelerator WHERE name = 'CACHEbox') AND browser_id = (SELECT id FROM browser WHERE name = 'Internet Explorer');"
            }
        ]
    },
    {
        "idx": 458,
        "db": "sports_competition",
        "interaction": [
            {
                "User": "Can we start tracking the number of assists for players?",
                "Answer": "ALTER TABLE player ADD COLUMN Assists number;"
            },
            {
                "User": "Add 3 assists to player Michael Platt.",
                "Answer": "UPDATE player SET Assists = 3 WHERE name = 'Michael Platt';"
            },
            {
                "User": "Who has the most assists now?",
                "Answer": "SELECT name FROM player WHERE Assists = (SELECT MAX(Assists) FROM player);"
            },
            {
                "User": "How many players have more than 10 goals?",
                "Answer": "SELECT COUNT(*) FROM player WHERE Goals > 10;"
            },
            {
                "User": "Create a new table to track player injuries.",
                "Answer": "CREATE TABLE player_injury (Injury_ID number PRIMARY KEY, Player_ID number, Injury_type text, Recovery_time text);"
            },
            {
                "User": "Log an injury for Dave Halley with a recovery time of 4 weeks.",
                "Answer": "INSERT INTO player_injury (Injury_ID, Player_ID, Injury_type, Recovery_time) VALUES (1, 2, 'Knee', '4 weeks');"
            },
            {
                "User": "Which players are currently injured?",
                "Answer": "SELECT p.name FROM player p JOIN player_injury pi ON p.Player_ID = pi.Player_ID;"
            },
            {
                "User": "Update the club 'AIB' to have a start year of 2008.",
                "Answer": "UPDATE club SET Start_year = '2008' WHERE name = 'AIB';"
            },
            {
                "User": "How many clubs were started after 2000?",
                "Answer": "SELECT COUNT(*) FROM club WHERE Start_year > '2000';"
            },
            {
                "User": "Show me the total number of medals for each club.",
                "Answer": "SELECT c.name, cr.Gold + cr.Silver + cr.Bronze AS Total_Medals FROM club c JOIN club_rank cr ON c.Club_ID = cr.Club_ID;"
            },
            {
                "User": "Which club won the most gold medals?",
                "Answer": "SELECT c.name FROM club c JOIN club_rank cr ON c.Club_ID = cr.Club_ID WHERE cr.Gold = (SELECT MAX(Gold) FROM club_rank);"
            },
            {
                "User": "Add a new competition called 'Annual Sports Day' that took place in Canada in 2021.",
                "Answer": "INSERT INTO competition (Competition_ID, Year, Competition_type, Country) VALUES (12, 2021, 'Annual Sports Day', 'Canada');"
            },
            {
                "User": "List all competitions that occurred in 2021.",
                "Answer": "SELECT Competition_type FROM competition WHERE Year = 2021;"
            },
            {
                "User": "I want to add a new column to track the number of referees in each competition.",
                "Answer": "ALTER TABLE competition ADD COLUMN Referees number;"
            },
            {
                "User": "Set the number of referees for the 'Annual Sports Day' to 5.",
                "Answer": "UPDATE competition SET Referees = 5 WHERE Competition_type = 'Annual Sports Day';"
            }
        ]
    },
    {
        "idx": 459,
        "db": "sports_competition",
        "interaction": [
            {
                "User": "What was the score when Club 1 played against Club 2 in the competition?",
                "Answer": "SELECT Score FROM competition_result WHERE Club_ID_1 = 1 AND Club_ID_2 = 2"
            },
            {
                "User": "Please add a new player named 'John Smith' with Player_ID 16, playing as a 'Left Wing' for Club 1 with 10 appearances and 3 tries.",
                "Answer": "INSERT INTO player (Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points) VALUES (16, 'John Smith', 'Left Wing', 1, 10, 3, '0', 12)"
            },
            {
                "User": "Can we add a column for 'Assists' to the player table?",
                "Answer": "ALTER TABLE player ADD Assists number"
            },
            {
                "User": "Now that we have an 'Assists' column, set the assists for 'John Smith' to 2.",
                "Answer": "UPDATE player SET Assists = 2 WHERE Player_ID = 16"
            },
            {
                "User": "Which players have more than 5 assists?",
                "Answer": "SELECT name FROM player WHERE Assists > 5"
            },
            {
                "User": "Create a new table for 'club_staff' with columns for 'Staff_ID', 'name', 'role', and 'Club_ID'.",
                "Answer": "CREATE TABLE club_staff (Staff_ID number PRIMARY KEY, name text, role text, Club_ID number)"
            },
            {
                "User": "Insert a new staff member with Staff_ID 1, named 'Alice Johnson', as a 'Coach' for Club 2.",
                "Answer": "INSERT INTO club_staff (Staff_ID, name, role, Club_ID) VALUES (1, 'Alice Johnson', 'Coach', 2)"
            },
            {
                "User": "How many staff members are there for Club 2?",
                "Answer": "SELECT count(*) FROM club_staff WHERE Club_ID = 2"
            },
            {
                "User": "Update the 'Start_year' of 'IFG' club to 2004.",
                "Answer": "UPDATE club SET Start_year = '2004' WHERE name = 'IFG'"
            },
            {
                "User": "What is the latest 'Start_year' among all clubs?",
                "Answer": "SELECT MAX(Start_year) FROM club"
            },
            {
                "User": "Can you show me all staff members and their associated club names?",
                "Answer": "SELECT T1.name as staff_name, T2.name as club_name FROM club_staff AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID"
            },
            {
                "User": "Add a new competition for the year 2023 called 'Championship' in 'Germany'.",
                "Answer": "INSERT INTO competition (Competition_ID, Year, Competition_type, Country) VALUES (12, 2023, 'Championship', 'Germany')"
            },
            {
                "User": "List all competitions that will take place in 2023.",
                "Answer": "SELECT * FROM competition WHERE Year = 2023"
            },
            {
                "User": "I want to record a new result for a competition with ID 12 where Club 1 scored against Club 3 with a score of '15:8'.",
                "Answer": "INSERT INTO competition_result (Competition_ID, Club_ID_1, Club_ID_2, Score) VALUES (12, 1, 3, '15:8')"
            }
        ]
    },
    {
        "idx": 460,
        "db": "news_report",
        "interaction": [
            {
                "User": "Can we track the number of articles written by each journalist?",
                "Answer": "ALTER TABLE journalist ADD COLUMN Articles_Written number"
            },
            {
                "User": "Great, now set the initial count of articles written by Herbert Swindells to 120.",
                "Answer": "UPDATE journalist SET Articles_Written = 120 WHERE Name = 'Herbert Swindells'"
            },
            {
                "User": "I also want to add the email address for each journalist. Can you update the table for that?",
                "Answer": "ALTER TABLE journalist ADD COLUMN Email text"
            },
            {
                "User": "Update the email for Herbert Swindells to herbert@newsreport.com.",
                "Answer": "UPDATE journalist SET Email = 'herbert@newsreport.com' WHERE Name = 'Herbert Swindells'"
            },
            {
                "User": "Can you show me the list of journalists who have worked for more than 5 years?",
                "Answer": "SELECT Name, Years_working FROM journalist WHERE Years_working > 5"
            },
            {
                "User": "Let's add a new event to the database. The event is called 'Tech Conference', happening on '15 April 2021' at 'Convention Center' with an expected attendance of 2000.",
                "Answer": "INSERT INTO event (Event_ID, Date, Venue, Name, Event_Attendance) VALUES (6, '15 April 2021', 'Convention Center', 'Tech Conference', 2000)"
            },
            {
                "User": "I need to correct the venue name for the 'Tech Conference', it should be 'Tech Convention Center'.",
                "Answer": "UPDATE event SET Venue = 'Tech Convention Center' WHERE Name = 'Tech Conference'"
            },
            {
                "User": "Can you create a table to record the topics covered by journalists at each event?",
                "Answer": "CREATE TABLE event_coverage (journalist_ID number, Event_ID number, Topic text, PRIMARY KEY (journalist_ID, Event_ID))"
            },
            {
                "User": "Add a record for Herbert Swindells covering the 'Artificial Intelligence' topic at the Tech Conference.",
                "Answer": "INSERT INTO event_coverage (journalist_ID, Event_ID, Topic) VALUES (1, 6, 'Artificial Intelligence')"
            },
            {
                "User": "Show me all the events covered by journalists who have written more than 100 articles.",
                "Answer": "SELECT e.Name, e.Date, e.Venue FROM event e JOIN news_report nr ON e.Event_ID = nr.Event_ID JOIN journalist j ON nr.journalist_ID = j.journalist_ID WHERE j.Articles_Written > 100"
            },
            {
                "User": "Can you tell me which journalists have attended the 'Tech Conference' and what topics they covered?",
                "Answer": "SELECT j.Name, ec.Topic FROM journalist j JOIN event_coverage ec ON j.journalist_ID = ec.journalist_ID JOIN event e ON ec.Event_ID = e.Event_ID WHERE e.Name = 'Tech Conference'"
            },
            {
                "User": "Fred Keenor has changed his nationality to 'USA'. Please update the record.",
                "Answer": "UPDATE journalist SET Nationality = 'USA' WHERE Name = 'Fred Keenor'"
            },
            {
                "User": "How many journalists do we have from the USA now?",
                "Answer": "SELECT count(*) FROM journalist WHERE Nationality = 'USA'"
            }
        ]
    },
    {
        "idx": 461,
        "db": "news_report",
        "interaction": [
            {
                "User": "How many journalists are from England?",
                "Answer": "SELECT COUNT(*) FROM journalist WHERE Nationality = 'England'"
            },
            {
                "User": "Can you add a new journalist to the database?",
                "Answer": "INSERT INTO journalist (journalist_ID, Name, Nationality, Age, Years_working) VALUES (12, 'Alex Parker', 'USA', '30', 4)"
            },
            {
                "User": "I want to update the age of journalist Fred Keenor to 28.",
                "Answer": "UPDATE journalist SET Age = '28' WHERE Name = 'Fred Keenor'"
            },
            {
                "User": "List all events with more than 1000 attendees.",
                "Answer": "SELECT * FROM event WHERE Event_Attendance > 1000"
            },
            {
                "User": "Add a column for the event type to the event table.",
                "Answer": "ALTER TABLE event ADD COLUMN EventType TEXT"
            },
            {
                "User": "Please classify the opening event as 'Sports'.",
                "Answer": "UPDATE event SET EventType = 'Sports' WHERE Name = 'Olympia Games Openning'"
            },
            {
                "User": "Create a new table for event sponsors with sponsor ID, event ID, and sponsor name.",
                "Answer": "CREATE TABLE event_sponsors (Sponsor_ID NUMBER PRIMARY KEY, Event_ID NUMBER, Sponsor_Name TEXT)"
            },
            {
                "User": "Insert a sponsor for the Olympia Games Opening event.",
                "Answer": "INSERT INTO event_sponsors (Sponsor_ID, Event_ID, Sponsor_Name) VALUES (1, 1, 'Sportex')"
            },
            {
                "User": "Show me the names of journalists who have been working for more than 5 years.",
                "Answer": "SELECT Name FROM journalist WHERE Years_working > 5"
            },
            {
                "User": "Can we have a list of events and their sponsors?",
                "Answer": "SELECT T1.Name as EventName, T2.Sponsor_Name FROM event as T1 JOIN event_sponsors as T2 ON T1.Event_ID = T2.Event_ID"
            },
            {
                "User": "Update the venue for the 'Government Hearing' to 'Central Hall'.",
                "Answer": "UPDATE event SET Venue = 'Central Hall' WHERE Name = 'Government Hearing'"
            },
            {
                "User": "Which journalists have reported on sports events?",
                "Answer": "SELECT DISTINCT j.Name FROM journalist j JOIN news_report nr ON j.journalist_ID = nr.journalist_ID JOIN event e ON nr.Event_ID = e.Event_ID WHERE e.EventType = 'Sports'"
            },
            {
                "User": "Add a new event with ID 6, happening tomorrow at 'River Park', named 'Tech Expo', with 2500 expected attendees.",
                "Answer": "INSERT INTO event (Event_ID, Date, Venue, Name, Event_Attendance) VALUES (6, '14 April 2023', 'River Park', 'Tech Expo', 2500)"
            },
            {
                "User": "Please assign journalist Herbert Swindells to report on the 'Tech Expo'.",
                "Answer": "INSERT INTO news_report (journalist_ID, Event_ID, Work_Type) VALUES (1, 6, 'Reporting')"
            }
        ]
    },
    {
        "idx": 462,
        "db": "device",
        "interaction": [
            {
                "User": "WHICH SHOP HAS THE LARGEST QUANTITY OF DEVICES IN STOCK",
                "Answer": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.Quantity) DESC LIMIT 1"
            },
            {
                "User": "WHAT IS THE LOCATION OF THIS SHOP",
                "Answer": "SELECT T2.Location FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.Quantity) DESC LIMIT 1"
            },
            {
                "User": "WHAT IS THE SHOP ID",
                "Answer": "SELECT T2.Shop_ID FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.Quantity) DESC LIMIT 1"
            },
            {
                "User": "CAN WE ADD A COLUMN TO TRACK DEVICE COLORS IN THE DEVICE TABLE",
                "Answer": "ALTER TABLE device ADD COLUMN Color TEXT"
            },
            {
                "User": "UPDATE THE COLOR FOR DEVICE ID 1 TO 'BLACK'",
                "Answer": "UPDATE device SET Color = 'Black' WHERE Device_ID = 1"
            },
            {
                "User": "INSERT A NEW DEVICE INTO THE DATABASE",
                "Answer": "INSERT INTO device (Device_ID, Device, Carrier, Package_Version, Applications, Software_Platform, Color) VALUES (7, 'Samsung Galaxy S21', 'AT&T', '11.0.1', '11.0.1', 'Android', 'Phantom Gray')"
            },
            {
                "User": "CREATE A NEW TABLE TO TRACK EMPLOYEES IN EACH SHOP",
                "Answer": "CREATE TABLE employee (Employee_ID NUMBER PRIMARY KEY, Shop_ID NUMBER, Name TEXT, Position TEXT, Hire_Date TEXT)"
            },
            {
                "User": "ADD THREE EMPLOYEES TO THE NEW TABLE FOR SHOP ID 1",
                "Answer": "INSERT INTO employee (Employee_ID, Shop_ID, Name, Position, Hire_Date) VALUES (1, 1, 'John Doe', 'Manager', '2015-06-01'), (2, 1, 'Jane Smith', 'Sales Associate', '2017-09-15'), (3, 1, 'Bob Johnson', 'Technician', '2018-03-23')"
            },
            {
                "User": "HOW MANY DEVICES DOES SHOP ID 2 HAVE IN STOCK",
                "Answer": "SELECT SUM(Quantity) FROM stock WHERE Shop_ID = 2"
            },
            {
                "User": "UPDATE THE QUANTITY FOR SHOP ID 2, DEVICE ID 6 TO 120",
                "Answer": "UPDATE stock SET Quantity = 120 WHERE Shop_ID = 2 AND Device_ID = 6"
            },
            {
                "User": "WHAT IS THE AVERAGE QUANTITY OF DEVICES IN STOCK ACROSS ALL SHOPS",
                "Answer": "SELECT AVG(Quantity) FROM stock"
            }
        ]
    },
    {
        "idx": 463,
        "db": "device",
        "interaction": [
            {
                "User": "Can you add a column to track the device color in the device table?",
                "Answer": "ALTER TABLE device ADD COLUMN Color text"
            },
            {
                "User": "Great, now please add the color 'Black' for the BlackBerry Storm 9530.",
                "Answer": "UPDATE device SET Color = 'Black' WHERE Device = 'BlackBerry Storm 9530'"
            },
            {
                "User": "Can you show me all the devices along with their colors?",
                "Answer": "SELECT Device, Color FROM device"
            },
            {
                "User": "The details are: Device ID: 7, Device: 'Samsung Galaxy S21', Carrier: 'AT&T', Package Version: '11.0.0', Applications: '11.0.0', Software Platform: 'Android', Color: 'Phantom Gray'.",
                "Answer": "INSERT INTO device (Device_ID, Device, Carrier, Package_Version, Applications, Software_Platform, Color) VALUES (7, 'Samsung Galaxy S21', 'AT&T', '11.0.0', '11.0.0', 'Android', 'Phantom Gray')"
            },
            {
                "User": "Now, can you list all the shops that opened after 2010?",
                "Answer": "SELECT Shop_Name FROM shop WHERE Open_Year > 2010"
            },
            {
                "User": "Can you update the quantity of the Samsung Galaxy S21 in the 'Best Buy' shop to 50?",
                "Answer": "UPDATE stock SET Quantity = 50 WHERE Shop_ID = (SELECT Shop_ID FROM shop WHERE Shop_Name = 'Best Buy') AND Device_ID = 7"
            },
            {
                "User": "I want to create a new table to manage employees in each shop. It should include Employee ID, Name, Shop ID, and Role.",
                "Answer": "CREATE TABLE employees (Employee_ID number PRIMARY KEY, Name text, Shop_ID number, Role text)"
            },
            {
                "User": "Can you add three employees to the 'Dinas Device' shop?",
                "Answer": "INSERT INTO employees (Employee_ID, Name, Shop_ID, Role) VALUES (1, 'Alice Smith', 1, 'Manager'), (2, 'Bob Johnson', 1, 'Sales Associate'), (3, 'Carol Williams', 1, 'Technician')"
            },
            {
                "User": "Show me the names and roles of all employees at 'Dinas Device'.",
                "Answer": "SELECT Name, Role FROM employees WHERE Shop_ID = (SELECT Shop_ID FROM shop WHERE Shop_Name = 'Dinas Device')"
            }
        ]
    },
    {
        "idx": 464,
        "db": "e_learning",
        "interaction": [
            {
                "User": "Can we add a new course called 'Intro to Python' by author 349 for the subject 'Computer Science'?",
                "Answer": "INSERT INTO Courses (author_id, subject_id, course_name, course_description) VALUES (349, 1, 'Intro to Python', 'An introductory course to Python programming')"
            },
            {
                "User": "What is the new course ID for 'Intro to Python'?",
                "Answer": "SELECT course_id FROM Courses WHERE course_name = 'Intro to Python'"
            },
            {
                "User": "Can we update the address for author ID 1 to '123 New Address Lane, Updateville, UP 12345'?",
                "Answer": "UPDATE Course_Authors_and_Tutors SET address_line_1 = '123 New Address Lane, Updateville, UP 12345' WHERE author_id = 1"
            },
            {
                "User": "I want to see the updated address for author ID 1.",
                "Answer": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE author_id = 1"
            },
            {
                "User": "Let's add a new column 'email' to the Students table to store their email addresses.",
                "Answer": "ALTER TABLE Students ADD COLUMN email text"
            },
            {
                "User": "Add the email 'wilson.ward@email.com' for student ID 1.",
                "Answer": "UPDATE Students SET email = 'wilson.ward@email.com' WHERE student_id = 1"
            },
            {
                "User": "Now, what is the email for student ID 1?",
                "Answer": "SELECT email FROM Students WHERE student_id = 1"
            },
            {
                "User": "Can we create a new table to store feedback on courses with columns for feedback ID, course ID, student ID, and the feedback text?",
                "Answer": "CREATE TABLE Course_Feedback (feedback_id number PRIMARY KEY, course_id number, student_id number, feedback_text text)"
            },
            {
                "User": "I'd like to leave feedback for course ID 2 by student ID 3 saying 'Very informative and well-structured course'.",
                "Answer": "INSERT INTO Course_Feedback (feedback_id, course_id, student_id, feedback_text) VALUES (1, 2, 3, 'Very informative and well-structured course')"
            }
        ]
    },
    {
        "idx": 465,
        "db": "e_learning",
        "interaction": [
            {
                "User": "List the author ids listed more than once in the courses",
                "Answer": "SELECT author_id FROM Courses GROUP BY author_id HAVING COUNT(author_id) > 1"
            },
            {
                "User": "Find the addresses and author IDs of the course authors that teach at least two courses.",
                "Answer": "SELECT T1.address_line_1, T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING COUNT(*) >= 2"
            },
            {
                "User": "How about those who teaches at least one course?",
                "Answer": "SELECT T1.address_line_1, T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING COUNT(*) >= 1"
            },
            {
                "User": "I want to add a new course called 'Introduction to AI' by author with ID 2 in the subject of Computer Science.",
                "Answer": "INSERT INTO Courses (course_id, author_id, subject_id, course_name, course_description) VALUES (16, 2, 1, 'Introduction to AI', 'A comprehensive introduction to the field of artificial intelligence')"
            },
            {
                "User": "Can you show me all courses now offered by author ID 2?",
                "Answer": "SELECT course_id, course_name FROM Courses WHERE author_id = 2"
            },
            {
                "User": "I realized the course description for 'Introduction to AI' is too vague. Update it to 'An in-depth study of AI principles and techniques'.",
                "Answer": "UPDATE Courses SET course_description = 'An in-depth study of AI principles and techniques' WHERE course_name = 'Introduction to AI'"
            },
            {
                "User": "What's the updated description for the 'Introduction to AI' course?",
                "Answer": "SELECT course_description FROM Courses WHERE course_name = 'Introduction to AI'"
            },
            {
                "User": "Create a new table for course reviews with columns for review_id, course_id, student_id, and review_text.",
                "Answer": "CREATE TABLE Course_Reviews (review_id number PRIMARY KEY, course_id number, student_id number, review_text text)"
            },
            {
                "User": "Add a review for the 'Introduction to AI' course by student with ID 1, saying 'This course provided great insights into AI.'",
                "Answer": "INSERT INTO Course_Reviews (review_id, course_id, student_id, review_text) VALUES (1, 16, 1, 'This course provided great insights into AI.')"
            },
            {
                "User": "Show me all reviews for the course with ID 16.",
                "Answer": "SELECT review_text FROM Course_Reviews WHERE course_id = 16"
            },
            {
                "User": "Let's add a column to track the difficulty level of courses. Please add a 'difficulty' column to the Courses table.",
                "Answer": "ALTER TABLE Courses ADD difficulty text"
            },
            {
                "User": "Set the difficulty level of the 'Introduction to AI' course to 'Intermediate'.",
                "Answer": "UPDATE Courses SET difficulty = 'Intermediate' WHERE course_name = 'Introduction to AI'"
            }
        ]
    },
    {
        "idx": 466,
        "db": "county_public_safety",
        "interaction": [
            {
                "User": "Can you add a new table to track the annual budget for each police department?",
                "Answer": "CREATE TABLE police_budget (Department_ID number PRIMARY KEY, County_ID number, Annual_Budget number)"
            },
            {
                "User": "Insert the annual budget for the Abbotsford Police Department, which is 5 million.",
                "Answer": "INSERT INTO police_budget (Department_ID, County_ID, Annual_Budget) VALUES (1, 1, 5000000)"
            },
            {
                "User": "Now, update the budget for the RCMP in Burnaby to 6.5 million.",
                "Answer": "UPDATE police_budget SET Annual_Budget = 6500000 WHERE County_ID = (SELECT County_ID FROM county_public_safety WHERE Name = 'Burnaby')"
            },
            {
                "User": "How much budget is allocated to the RCMP in Burnaby after the update?",
                "Answer": "SELECT Annual_Budget FROM police_budget WHERE County_ID = (SELECT County_ID FROM county_public_safety WHERE Name = 'Burnaby')"
            },
            {
                "User": "Please add a new column to the city table to track the year of establishment.",
                "Answer": "ALTER TABLE city ADD COLUMN Year_Established number"
            },
            {
                "User": "Set the year of establishment for Adjuntas, Aguada, and Aguadilla to 1893, 1508, and 1775 respectively.",
                "Answer": [
                    "UPDATE city SET Year_Established = 1893 WHERE Name = 'Adjuntas';",
                    "UPDATE city SET Year_Established = 1508 WHERE Name = 'Aguada';",
                    "UPDATE city SET Year_Established = 1775 WHERE Name = 'Aguadilla'"
                ]
            },
            {
                "User": "What is the oldest city among Adjuntas, Aguada, and Aguadilla?",
                "Answer": "SELECT Name FROM city WHERE Name IN ('Adjuntas', 'Aguada', 'Aguadilla') ORDER BY Year_Established ASC LIMIT 1"
            },
            {
                "User": "Can you show me the total population for cities established before 1900?",
                "Answer": "SELECT SUM(Population) AS Total_Population FROM city JOIN county_public_safety ON city.County_ID = county_public_safety.County_ID WHERE Year_Established < 1900"
            },
            {
                "User": "Let's add a new record for a city named 'Newtown' in the county with ID 2, with a population distribution of 70% White, 10% Black, 5% Amerindian, 10% Asian, 5% Multiracial, and 20% Hispanic.",
                "Answer": "INSERT INTO city (City_ID, County_ID, Name, White, Black, Amerindian, Asian, Multiracial, Hispanic) VALUES ((SELECT MAX(City_ID) + 1 FROM city), 2, 'Newtown', 70, 10, 5, 10, 5, 20)"
            },
            {
                "User": "How many cities do we now have in the county with ID 2?",
                "Answer": "SELECT COUNT(*) FROM city WHERE County_ID = 2"
            },
            {
                "User": "Update the population for Aibonito to 27000, since the previous data was outdated.",
                "Answer": "UPDATE county_public_safety SET Population = 27000 WHERE County_ID = (SELECT County_ID FROM city WHERE Name = 'Aibonito')"
            },
            {
                "User": "What is the new population of Aibonito now?",
                "Answer": "SELECT Population FROM county_public_safety WHERE County_ID = (SELECT County_ID FROM city WHERE Name = 'Aibonito')"
            },
            {
                "User": "Could you also adjust the residents per officer ratio for Aibonito based on the new population data?",
                "Answer": "UPDATE county_public_safety SET Residents_per_officer = (SELECT Population FROM county_public_safety WHERE County_ID = (SELECT County_ID FROM city WHERE Name = 'Aibonito')) / Police_officers WHERE County_ID = (SELECT County_ID FROM city WHERE Name = 'Aibonito')"
            }
        ]
    },
    {
        "idx": 467,
        "db": "county_public_safety",
        "interaction": [
            {
                "User": "Can we track the number of emergency calls in each county?",
                "Answer": "ALTER TABLE county_public_safety ADD COLUMN Emergency_calls number;"
            },
            {
                "User": "Update the number of police officers in Burnaby to 260.",
                "Answer": "UPDATE county_public_safety SET Police_officers = 260 WHERE County_ID = 2;"
            },
            {
                "User": "Which county has more than 200 police officers?",
                "Answer": "SELECT Name FROM county_public_safety WHERE Police_officers > 200;"
            },
            {
                "User": "Create a new table to track the police department budgets.",
                "Answer": "CREATE TABLE police_budget (Department_ID number PRIMARY KEY, County_ID number, Budget number);"
            },
            {
                "User": "Insert the budget for the Abbotsford Police Department at 2.5 million.",
                "Answer": "INSERT INTO police_budget (Department_ID, County_ID, Budget) VALUES (1, 1, 2500000);"
            },
            {
                "User": "How many emergency calls were there in counties with a police force of 'RCMP'?",
                "Answer": "SELECT SUM(Emergency_calls) FROM county_public_safety WHERE Police_force = 'RCMP';"
            },
            {
                "User": "Show me the average crime rate of counties with more than 100,000 residents.",
                "Answer": "SELECT AVG(Crime_rate) FROM county_public_safety WHERE Population > 100000;"
            },
            {
                "User": "Add a new county named 'Westminster' with an initial population of 50,000.",
                "Answer": "INSERT INTO county_public_safety (Name, Population) VALUES ('Westminster', 50000);"
            },
            {
                "User": "Update the location of Campbell River to 'Central' since it has been reclassified.",
                "Answer": "UPDATE county_public_safety SET Location = 'Central' WHERE Name = 'Campbell River';"
            },
            {
                "User": "How many cities are in the county with the highest crime rate?",
                "Answer": "SELECT COUNT(*) FROM city WHERE County_ID = (SELECT County_ID FROM county_public_safety ORDER BY Crime_rate DESC LIMIT 1);"
            },
            {
                "User": "Can you add a new column to track the number of fire stations in each county?",
                "Answer": "ALTER TABLE county_public_safety ADD COLUMN Fire_stations number;"
            },
            {
                "User": "Set the number of fire stations for 'Abbotsford' to 3.",
                "Answer": "UPDATE county_public_safety SET Fire_stations = 3 WHERE Name = 'Abbotsford';"
            }
        ]
    },
    {
        "idx": 468,
        "db": "musical",
        "interaction": [
            {
                "User": "How many actors have played in 'The Phantom of the Opera'?",
                "Answer": "SELECT COUNT(*) FROM actor WHERE Musical_ID = (SELECT Musical_ID FROM musical WHERE Name = 'The Phantom of the Opera')"
            },
            {
                "User": "Can you add a new musical called 'Hamilton' which was nominated in 2016 for a Tony Award in the 'Best Original Score' category?",
                "Answer": "INSERT INTO musical (Musical_ID, Name, Year, Award, Category, Nominee, Result) VALUES (8, 'Hamilton', 2016, 'Tony Award', 'Best Original Score', 'Lin-Manuel Miranda', 'Nominated')"
            },
            {
                "User": "Who was the nominee for 'Hamilton'?",
                "Answer": "SELECT Nominee FROM musical WHERE Name = 'Hamilton'"
            },
            {
                "User": "Can we update the result for 'Hamilton' to 'Won'?",
                "Answer": "UPDATE musical SET Result = 'Won' WHERE Name = 'Hamilton'"
            },
            {
                "User": "How many musicals have won the Tony Award?",
                "Answer": "SELECT COUNT(*) FROM musical WHERE Award = 'Tony Award' AND Result = 'Won'"
            },
            {
                "User": "Can we add an 'Opening_Year' column to the musical table to record the year each musical opened?",
                "Answer": "ALTER TABLE musical ADD Opening_Year number"
            },
            {
                "User": "Set the opening year for 'The Phantom of the Opera' to 1986.",
                "Answer": "UPDATE musical SET Opening_Year = 1986 WHERE Name = 'The Phantom of the Opera'"
            },
            {
                "User": "For the musical 'Les Misérables', set the opening year to 1980.",
                "Answer": "UPDATE musical SET Opening_Year = 1980 WHERE Name = 'Les Misérables'"
            },
            {
                "User": "Create a new table to store reviews for musicals with columns for review ID, musical ID, critic name, review text, and rating.",
                "Answer": "CREATE TABLE reviews (Review_ID number PRIMARY KEY, Musical_ID number, Critic_Name text, Review_Text text, Rating number)"
            },
            {
                "User": "Insert a review for 'Hamilton' with a rating of 5 by critic 'Alex Smith'.",
                "Answer": "INSERT INTO reviews (Review_ID, Musical_ID, Critic_Name, Review_Text, Rating) VALUES (1, 8, 'Alex Smith', 'An inspiring tale of American history with a modern twist.', 5)"
            },
            {
                "User": "What is the average rating of the musicals reviewed so far?",
                "Answer": "SELECT AVG(Rating) FROM reviews"
            }
        ]
    },
    {
        "idx": 469,
        "db": "musical",
        "interaction": [
            {
                "User": "What is the duration of the oldest actor?",
                "Answer": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1"
            },
            {
                "User": "What is the character of Tom Oliver?",
                "Answer": "SELECT Character FROM actor WHERE Name = 'Tom Oliver'"
            },
            {
                "User": "Please list out the actors' names.",
                "Answer": "SELECT Name FROM actor"
            },
            {
                "User": "Can we add a column to track the actors' debut year?",
                "Answer": "ALTER TABLE actor ADD COLUMN Debut_Year number"
            },
            {
                "User": "Update the debut year for Ray Meagher to 1988.",
                "Answer": "UPDATE actor SET Debut_Year = 1988 WHERE Name = 'Ray Meagher'"
            },
            {
                "User": "Set the debut year for Lynne McGranger to 1993.",
                "Answer": "UPDATE actor SET Debut_Year = 1993 WHERE Name = 'Lynne McGranger'"
            },
            {
                "User": "Who debuted in the same year as 'The Phantom of the Opera'?",
                "Answer": "SELECT actor.Name FROM actor INNER JOIN musical ON actor.Debut_Year = musical.Year WHERE musical.Name = 'The Phantom of the Opera'"
            },
            {
                "User": "Create a new table to track the theaters where the musicals are played.",
                "Answer": "CREATE TABLE theater(Theater_ID number PRIMARY KEY, Name text, Location text, Capacity number)"
            },
            {
                "User": "Insert the first theater with ID 1, name 'Majestic Theatre', located in New York, with a capacity of 1600.",
                "Answer": "INSERT INTO theater (Theater_ID, Name, Location, Capacity) VALUES (1, 'Majestic Theatre', 'New York', 1600)"
            },
            {
                "User": "What is the capacity of 'Majestic Theatre'?",
                "Answer": "SELECT Capacity FROM theater WHERE Name = 'Majestic Theatre'"
            },
            {
                "User": "Add a new musical 'Hamilton' from 2015 that won a Tony Award for 'Best Musical' with 'Lin-Manuel Miranda' as a nominee and the result was 'Won'.",
                "Answer": "INSERT INTO musical (Musical_ID, Name, Year, Award, Category, Nominee, Result) VALUES (8, 'Hamilton', 2015, 'Tony Award', 'Best Musical', 'Lin-Manuel Miranda', 'Won')"
            },
            {
                "User": "Which musicals have won a Tony Award in the category 'Best Musical'?",
                "Answer": "SELECT Name FROM musical WHERE Category = 'Best Musical' AND Result = 'Won'"
            },
            {
                "User": "Can we see a list of musicals and the theaters they are played in?",
                "Answer": "SELECT musical.Name, theater.Name FROM musical INNER JOIN theater ON musical.Musical_ID = theater.Theater_ID"
            },
            {
                "User": "Update the location of the 'Majestic Theatre' to 'Broadway, New York'.",
                "Answer": "UPDATE theater SET Location = 'Broadway, New York' WHERE Name = 'Majestic Theatre'"
            }
        ]
    },
    {
        "idx": 470,
        "db": "coffee_shop",
        "interaction": [
            {
                "User": "Can we track the favorite drink of each member in our database?",
                "Answer": "ALTER TABLE member ADD COLUMN Favorite_Drink text"
            },
            {
                "User": "Now that we have the favorite drink column, can you add 'Espresso' as the favorite drink for member with ID 1?",
                "Answer": "UPDATE member SET Favorite_Drink = 'Espresso' WHERE Member_ID = 1"
            },
            {
                "User": "Who are the members with 'Black' membership cards and what are their favorite drinks?",
                "Answer": "SELECT Name, Membership_card, Favorite_Drink FROM member WHERE Membership_card = 'Black'"
            },
            {
                "User": "Let's create a new table to log the visits of members to our shops. What fields should we include?",
                "Answer": "CREATE TABLE member_visits (Visit_ID number PRIMARY KEY, Member_ID number, Shop_ID number, Visit_Date text, Purchase_Amount number)"
            },
            {
                "User": "Please log a new visit for member 2 at shop 1 on April 1st with a purchase amount of $15.50.",
                "Answer": "INSERT INTO member_visits (Visit_ID, Member_ID, Shop_ID, Visit_Date, Purchase_Amount) VALUES (1, 2, 1, 'April 1st', 15.50)"
            },
            {
                "User": "Can you show me the total amount spent by each member during their visits?",
                "Answer": "SELECT Member_ID, SUM(Purchase_Amount) as Total_Spent FROM member_visits GROUP BY Member_ID"
            },
            {
                "User": "I'd like to give a special discount for members over 60 years old. How many of our members are eligible?",
                "Answer": "SELECT COUNT(*) FROM member WHERE Age > 60"
            },
            {
                "User": "Let's add a new column to the shop table to record the type of coffee machine they use. Can we do that?",
                "Answer": "ALTER TABLE shop ADD COLUMN Coffee_Machine_Type text"
            },
            {
                "User": "Great, now add 'Espresso Master 3000' as the coffee machine type for shop 2.",
                "Answer": "UPDATE shop SET Coffee_Machine_Type = 'Espresso Master 3000' WHERE Shop_ID = 2"
            },
            {
                "User": "Can you find out which shops have 'Espresso Master 3000' coffee machines and have a score above 35?",
                "Answer": "SELECT * FROM shop WHERE Coffee_Machine_Type = 'Espresso Master 3000' AND Score > 35"
            },
            {
                "User": "How many members have visited shop 1 during the happy hour in May?",
                "Answer": "SELECT COUNT(DISTINCT mv.Member_ID) FROM member_visits mv JOIN happy_hour hh ON mv.Shop_ID = hh.Shop_ID WHERE mv.Shop_ID = 1 AND hh.Month = 'May'"
            },
            {
                "User": "Can we track the number of visits for each member in the member table?",
                "Answer": "ALTER TABLE member ADD COLUMN Visit_Count number"
            },
            {
                "User": "Now that we have the visit count column, update the visit count for member 1 to 5.",
                "Answer": "UPDATE member SET Visit_Count = 5 WHERE Member_ID = 1"
            }
        ]
    },
    {
        "idx": 471,
        "db": "coffee_shop",
        "interaction": [
            {
                "User": "Can we add a new member named John Doe with a Bronze membership card, age 25, who lives in Boston?",
                "Answer": "INSERT INTO member (Name, Membership_card, Age, Address) VALUES ('John Doe', 'Bronze', 25, 'Boston')"
            },
            {
                "User": "I'd like to update the score of the shop at 1200 Main Street to 45.",
                "Answer": "UPDATE shop SET Score = 45 WHERE Address = '1200 Main Street'"
            },
            {
                "User": "What's the total number of staff across all shops?",
                "Answer": "SELECT SUM(CAST(Num_of_staff AS INTEGER)) as Total_Staff FROM shop"
            },
            {
                "User": "Can we add a column to track the email addresses of our members?",
                "Answer": "ALTER TABLE member ADD COLUMN Email text"
            },
            {
                "User": "Please add the email 'john.doe@email.com' for John Doe.",
                "Answer": "UPDATE member SET Email = 'john.doe@email.com' WHERE Name = 'John Doe'"
            },
            {
                "User": "Create a new table for shop reviews with columns for review ID, shop ID, member ID, rating, and comments.",
                "Answer": "CREATE TABLE shop_reviews (Review_ID number PRIMARY KEY, Shop_ID number, Member_ID number, Rating number, Comments text)"
            },
            {
                "User": "Insert a review for the shop at 1200 Main Street by member John Doe with a rating of 4 and a comment 'Great coffee!'.",
                "Answer": "INSERT INTO shop_reviews (Shop_ID, Member_ID, Rating, Comments) VALUES ((SELECT Shop_ID FROM shop WHERE Address = '1200 Main Street'), (SELECT Member_ID FROM member WHERE Name = 'John Doe'), 4, 'Great coffee!')"
            },
            {
                "User": "Can we track the duration of happy hours for each shop?",
                "Answer": "ALTER TABLE happy_hour ADD COLUMN Duration_hours number"
            },
            {
                "User": "Set the duration of the May happy hour for the shop with ID 1 to 3 hours.",
                "Answer": "UPDATE happy_hour SET Duration_hours = 3 WHERE Shop_ID = 1 AND Month = 'May'"
            },
            {
                "User": "What is the average age of members with a level of membership above 5?",
                "Answer": "SELECT AVG(Age) as Average_Age FROM member WHERE Level_of_membership > 5"
            },
            {
                "User": "Which shop has the highest number of staff?",
                "Answer": "SELECT Address FROM shop ORDER BY CAST(Num_of_staff AS INTEGER) DESC LIMIT 1"
            },
            {
                "User": "For the new shop reviews, can we see all reviews with a rating of 4 or higher?",
                "Answer": "SELECT * FROM shop_reviews WHERE Rating >= 4"
            },
            {
                "User": "Can we have a list of all members who live in Hartford and have attended a happy hour event?",
                "Answer": "SELECT DISTINCT m.Name FROM member m JOIN happy_hour_member hh ON m.Member_ID = hh.Member_ID WHERE m.Address = 'Hartford'"
            },
            {
                "User": "How many happy hour events has John Doe attended?",
                "Answer": "SELECT COUNT(*) FROM happy_hour_member WHERE Member_ID = (SELECT Member_ID FROM member WHERE Name = 'John Doe')"
            }
        ]
    },
    {
        "idx": 472,
        "db": "insurance_policies",
        "interaction": [
            {
                "User": "Can you add a new customer named 'John Doe' to the database, with customer id 92?",
                "Answer": "INSERT INTO Customers (Customer_ID, Customer_Details) VALUES (92, 'John Doe')"
            },
            {
                "User": "John Doe just bought a new home policy starting today. Can you record it with a policy ID of 150?",
                "Answer": "INSERT INTO Customer_Policies (Policy_ID, Customer_ID, Policy_Type_Code, Start_Date) VALUES (150, 16, 'Home', CURRENT_DATE)"
            },
            {
                "User": "I need to update the end date for policy ID 119 to today's date.",
                "Answer": "UPDATE Customer_Policies SET End_Date = CURRENT_DATE WHERE Policy_ID = 119"
            },
            {
                "User": "How many policies does John Doe have now?",
                "Answer": "SELECT COUNT(*) FROM Customer_Policies WHERE Customer_ID = (SELECT Customer_ID FROM Customers WHERE Customer_Details = 'John Doe')"
            },
            {
                "User": "Could we track email addresses for our customers? We need to add a new column for that.",
                "Answer": "ALTER TABLE Customers ADD COLUMN Email_Address text"
            },
            {
                "User": "Please add John Doe's email address as 'john.doe@example.com'.",
                "Answer": "UPDATE Customers SET Email_Address = 'john.doe@example.com' WHERE Customer_Details = 'John Doe'"
            },
            {
                "User": "Create a table to track customer feedback with feedback ID, customer ID, and feedback text.",
                "Answer": "CREATE TABLE Customer_Feedback (Feedback_ID number PRIMARY KEY, Customer_ID number, Feedback_Text text)"
            },
            {
                "User": "John Doe has provided feedback, stating 'Very satisfied with the new policy'. Can you add this to the feedback table with ID 1?",
                "Answer": "INSERT INTO Customer_Feedback (Feedback_ID, Customer_ID, Feedback_Text) VALUES (1, 16, 'Very satisfied with the new policy')"
            },
            {
                "User": "We need to see all feedback left by customers along with their email addresses.",
                "Answer": "SELECT f.Feedback_Text, c.Email_Address FROM Customer_Feedback f JOIN Customers c ON f.Customer_ID = c.Customer_ID"
            },
            {
                "User": "Ellsworth Paucek has settled a claim for $2000. Can we record this in the settlements table?",
                "Answer": "INSERT INTO Settlements (Settlement_ID, Claim_ID, Date_Claim_Made, Date_Claim_Settled, Amount_Claimed, Amount_Settled, Customer_Policy_ID) VALUES (16, (SELECT Claim_ID FROM Claims WHERE Policy_ID = (SELECT Policy_ID FROM Customer_Policies WHERE Customer_ID = 2)), CURRENT_DATE, CURRENT_DATE, 2000, 2000, (SELECT Policy_ID FROM Customer_Policies WHERE Customer_ID = 2))"
            },
            {
                "User": "Show me the total amount settled for each customer.",
                "Answer": "SELECT c.Customer_ID, SUM(s.Amount_Settled) AS Total_Settled FROM Customers c JOIN Customer_Policies cp ON c.Customer_ID = cp.Customer_ID JOIN Settlements s ON cp.Policy_ID = s.Customer_Policy_ID GROUP BY c.Customer_ID"
            },
            {
                "User": "Can you tell me the average amount claimed for car policies?",
                "Answer": "SELECT AVG(Amount_Claimed) FROM Claims WHERE Policy_ID IN (SELECT Policy_ID FROM Customer_Policies WHERE Policy_Type_Code = 'Car')"
            },
            {
                "User": "Let's create a report that shows each payment method and the total amount paid with that method.",
                "Answer": "SELECT Payment_Method_Code, SUM(Amount_Payment) AS Total_Amount FROM Payments GROUP BY Payment_Method_Code"
            }
        ]
    },
    {
        "idx": 473,
        "db": "insurance_policies",
        "interaction": [
            {
                "User": "Can you add a new table to track customer feedback on policy services?",
                "Answer": "CREATE TABLE Customer_Feedback (Feedback_ID number PRIMARY KEY, Customer_ID number, Policy_ID number, Feedback_Text text, Feedback_Date time, FOREIGN KEY (Customer_ID) REFERENCES Customers(Customer_ID), FOREIGN KEY (Policy_ID) REFERENCES Customer_Policies(Policy_ID))"
            },
            {
                "User": "Please insert a feedback record for customer with ID 2 regarding their life policy.",
                "Answer": "INSERT INTO Customer_Feedback (Feedback_ID, Customer_ID, Policy_ID, Feedback_Text, Feedback_Date) VALUES (1, 2, 141, 'Very satisfied with the services.', '2023-03-15')"
            },
            {
                "User": "Could you tell me the total amount claimed by customers who have given feedback?",
                "Answer": "SELECT SUM(Amount_Claimed) FROM Claims WHERE Policy_ID IN (SELECT Policy_ID FROM Customer_Feedback)"
            },
            {
                "User": "I need to add a new 'Email' column to the Customers table to store their email addresses.",
                "Answer": "ALTER TABLE Customers ADD Email text"
            },
            {
                "User": "Update the email address for customer Ellsworth Paucek to 'ellsworth.paucek@email.com'.",
                "Answer": "UPDATE Customers SET Email = 'ellsworth.paucek@email.com' WHERE Customer_Details = 'Ellsworth Paucek'"
            },
            {
                "User": "How many customers have we updated with an email address?",
                "Answer": "SELECT COUNT(*) FROM Customers WHERE Email IS NOT NULL"
            },
            {
                "User": "Please add a new payment method called 'Bitcoin' for the settlement with ID 412.",
                "Answer": "UPDATE Payments SET Payment_Method_Code = 'Bitcoin' WHERE Settlement_ID = 412"
            },
            {
                "User": "Can we see the list of all payment methods used in the settlements after the date '2017-01-01'?",
                "Answer": "SELECT DISTINCT Payment_Method_Code FROM Payments JOIN Settlements ON Payments.Settlement_ID = Settlements.Settlement_ID WHERE Date_Payment_Made > '2017-01-01'"
            },
            {
                "User": "I need to know the latest 3 feedback entries we received.",
                "Answer": "SELECT * FROM Customer_Feedback ORDER BY Feedback_Date DESC LIMIT 3"
            },
            {
                "User": "Can you create a report that shows the average amount claimed and settled for each policy type?",
                "Answer": "SELECT T1.Policy_Type_Code, AVG(T2.Amount_Claimed) AS Avg_Claimed, AVG(T2.Amount_Settled) AS Avg_Settled FROM Customer_Policies AS T1 JOIN Claims AS T2 ON T1.Policy_ID = T2.Policy_ID GROUP BY T1.Policy_Type_Code"
            },
            {
                "User": "We need to add a status column to the Claims table to track the claim process.",
                "Answer": "ALTER TABLE Claims ADD Status text"
            },
            {
                "User": "Update the status of claim ID 143 to 'Resolved'.",
                "Answer": "UPDATE Claims SET Status = 'Resolved' WHERE Claim_ID = 143"
            }
        ]
    },
    {
        "idx": 474,
        "db": "cre_Drama_Workshop_Groups",
        "interaction": [
            {
                "User": "How many bookings are there?",
                "Answer": "SELECT count(*) FROM Bookings"
            },
            {
                "User": "How many different statuses are used on those bookings?",
                "Answer": "SELECT count(distinct status_code) FROM Bookings"
            },
            {
                "User": "Which of those statuses is used most commonly?",
                "Answer": "SELECT status_code FROM Bookings group by status_code order by count(*) desc limit 1"
            },
            {
                "User": "Can we add a column to track the payment status for bookings?",
                "Answer": "ALTER TABLE Bookings ADD COLUMN Payment_Status text"
            },
            {
                "User": "How many bookings have been made at the 'Amely Cafe' store?",
                "Answer": "SELECT count(*) FROM Bookings WHERE Workshop_Group_ID IN (SELECT Workshop_Group_ID FROM Drama_Workshop_Groups WHERE Store_Name = 'Amely Cafe')"
            },
            {
                "User": "Let's add a new payment method called 'PayPal' with the description 'online'.",
                "Answer": "INSERT INTO Ref_Payment_Methods (payment_method_code, payment_method_description) VALUES ('PayPal', 'online')"
            },
            {
                "User": "I need to correct the phone number for the 'FJA Filming' store. The new number is '+65(1)9876543210'.",
                "Answer": "UPDATE Stores SET Store_Phone = '+65(1)9876543210' WHERE Store_Name = 'FJA Filming'"
            },
            {
                "User": "Could you show me the top 3 most expensive products we offer?",
                "Answer": "SELECT * FROM Products ORDER BY Product_Price DESC LIMIT 3"
            },
            {
                "User": "Can we create a table to track the attendance of performers in workshops?",
                "Answer": "CREATE TABLE Performer_Attendance (Attendance_ID number PRIMARY KEY, Performer_ID number, Workshop_Group_ID number, Attendance_Date time, Other_Details text)"
            },
            {
                "User": "Let's record an attendance for performer 153 in workshop group 136 for today's date.",
                "Answer": "INSERT INTO Performer_Attendance (Attendance_ID, Performer_ID, Workshop_Group_ID, Attendance_Date) VALUES (1, 153, 136, CURRENT_DATE)"
            },
            {
                "User": "Update the status of booking ID 1 to 'completed'.",
                "Answer": "UPDATE Bookings SET Status_Code = 'completed' WHERE Booking_ID = 1"
            },
            {
                "User": "I want to see all the bookings for customer ID 938.",
                "Answer": "SELECT * FROM Bookings WHERE Customer_ID = 938"
            },
            {
                "User": "Let's add a new service type for 'makeup' with the parent service type code '1' with Service_Type_Code 5.",
                "Answer": "INSERT INTO Ref_Service_Types (Service_Type_Code, Parent_Service_Type_Code, Service_Type_Description) VALUES ('5', '1', 'provide makeup service')"
            },
            {
                "User": "I need to update the email address for customer 'Federico' to 'federico.new@example.com'.",
                "Answer": "UPDATE Customers SET Customer_Email_Address = 'federico.new@example.com' WHERE Customer_Name = 'Federico'"
            }
        ]
    },
    {
        "idx": 475,
        "db": "cre_Drama_Workshop_Groups",
        "interaction": [
            {
                "User": "Can I add a new payment method called 'PayPal' with the description 'online payment'?",
                "Answer": "INSERT INTO Ref_Payment_Methods (payment_method_code, payment_method_description) VALUES ('PayPal', 'online payment')"
            },
            {
                "User": "What are the available payment methods now?",
                "Answer": "SELECT payment_method_code, payment_method_description FROM Ref_Payment_Methods"
            },
            {
                "User": "I need to update the email address of the Amely Cafe to 'contact@amelycafe.com'.",
                "Answer": "UPDATE Drama_Workshop_Groups SET Store_Email_Address = 'contact@amelycafe.com' WHERE Store_Name = 'Amely Cafe'"
            },
            {
                "User": "What's the new email address of the Amely Cafe?",
                "Answer": "SELECT Store_Email_Address FROM Drama_Workshop_Groups WHERE Store_Name = 'Amely Cafe'"
            },
            {
                "User": "Can we track the number of attendees for each workshop?",
                "Answer": "ALTER TABLE Drama_Workshop_Groups ADD COLUMN Attendee_Count number"
            },
            {
                "User": "Set the number of attendees for the 'Amely Cafe' workshop to 23.",
                "Answer": "UPDATE Drama_Workshop_Groups SET Attendee_Count = 23 WHERE Store_Name = 'Amely Cafe'"
            },
            {
                "User": "How many attendees are expected for workshops in the 'EU' marketing region?",
                "Answer": "SELECT SUM(Attendee_Count) FROM Drama_Workshop_Groups WHERE Marketing_Region_Code = 'EU'"
            },
            {
                "User": "Create a new table to track the special requests for each booking.",
                "Answer": "CREATE TABLE Booking_Requests (Request_ID number PRIMARY KEY, Booking_ID number, Request_Description text)"
            },
            {
                "User": "Add a special request for booking with ID 2 to have vegetarian catering.",
                "Answer": "INSERT INTO Booking_Requests (Request_ID, Booking_ID, Request_Description) VALUES (1, 2, 'Vegetarian catering')"
            },
            {
                "User": "What special requests do we have for the bookings so far?",
                "Answer": "SELECT * FROM Booking_Requests"
            },
            {
                "User": "We need to keep track of customer feedback. Can we add a feedback column to the Customers table?",
                "Answer": "ALTER TABLE Customers ADD COLUMN Feedback text"
            },
            {
                "User": "Harold just gave us a positive feedback saying 'Great experience!'. Could you update the record?",
                "Answer": "UPDATE Customers SET Feedback = 'Great experience!' WHERE Customer_Name = 'Harold'"
            },
            {
                "User": "Can you show me the feedback from all customers?",
                "Answer": "SELECT Customer_Name, Feedback FROM Customers WHERE Feedback IS NOT NULL"
            },
            {
                "User": "Let's add a new column to track if a customer is a subscriber to our newsletter.",
                "Answer": "ALTER TABLE Customers ADD COLUMN Is_Subscriber boolean"
            },
            {
                "User": "Harold has just subscribed to our newsletter. Please update his record.",
                "Answer": "UPDATE Customers SET Is_Subscriber = TRUE WHERE Customer_Name = 'Harold'"
            }
        ]
    },
    {
        "idx": 476,
        "db": "shop_membership",
        "interaction": [
            {
                "User": "Can we add a new member with ID 11, card number 'LX01', named 'Alex Smith', from 'Manchester', with level 4?",
                "Answer": "INSERT INTO member (Member_ID, Card_Number, Name, Hometown, Level) VALUES (11, 'LX01', 'Alex Smith', 'Manchester', 4)"
            },
            {
                "User": "How many members are from Manchester?",
                "Answer": "SELECT COUNT(*) FROM member WHERE Hometown = 'Manchester'"
            },
            {
                "User": "I'd like to update the level of member Alex Smith to level 5.",
                "Answer": "UPDATE member SET Level = 5 WHERE Name = 'Alex Smith'"
            },
            {
                "User": "Can we register the new member Alex Smith to the branch with ID 2 for the year 2021?",
                "Answer": "INSERT INTO membership_register_branch (Member_ID, Branch_ID, Register_Year) VALUES (11, '2', '2021')"
            },
            {
                "User": "What's the total number of members registered in branch ID 2?",
                "Answer": "SELECT COUNT(*) FROM membership_register_branch WHERE Branch_ID = '2'"
            },
            {
                "User": "Can we record a new purchase for Alex Smith at branch ID 2 for the year 2021, totaling 500 pounds?",
                "Answer": "INSERT INTO purchase (Member_ID, Branch_ID, Year, Total_pounds) VALUES (11, '2', '2021', 500)"
            },
            {
                "User": "What is the average purchase amount at branch ID 2?",
                "Answer": "SELECT AVG(Total_pounds) FROM purchase WHERE Branch_ID = '2'"
            },
            {
                "User": "Can we add a new column 'Email' to the member table?",
                "Answer": "ALTER TABLE member ADD COLUMN Email text"
            },
            {
                "User": "Please update Alex Smith's email to 'alex.smith@email.com'.",
                "Answer": "UPDATE member SET Email = 'alex.smith@email.com' WHERE Name = 'Alex Smith'"
            },
            {
                "User": "Can we create a new table for member feedback with columns Feedback_ID, Member_ID, Date, and Content?",
                "Answer": "CREATE TABLE member_feedback (Feedback_ID number PRIMARY KEY, Member_ID number, Date text, Content text)"
            },
            {
                "User": "Let's add a feedback entry for Alex Smith made on 2021-04-12 with the content 'Great customer service!'",
                "Answer": "INSERT INTO member_feedback (Feedback_ID, Member_ID, Date, Content) VALUES (1, 11, '2021-04-12', 'Great customer service!')"
            },
            {
                "User": "Show me all feedback entries for members from Manchester.",
                "Answer": "SELECT f.* FROM member_feedback AS f JOIN member AS m ON f.Member_ID = m.Member_ID WHERE m.Hometown = 'Manchester'"
            },
            {
                "User": "Can we add a new branch with ID 9, named 'Highland', opened in 2021, located on 'High Street', in 'Manchester', with a membership amount of '0'?",
                "Answer": "INSERT INTO branch (Branch_ID, Name, Open_year, Address_road, City, membership_amount) VALUES (9, 'Highland', '2021', 'High Street', 'Manchester', '0')"
            },
            {
                "User": "Update the membership amount of branch 'Highland' to 1 since we now have Alex Smith.",
                "Answer": "UPDATE branch SET membership_amount = '1' WHERE Name = 'Highland'"
            }
        ]
    },
    {
        "idx": 477,
        "db": "shop_membership",
        "interaction": [
            {
                "User": "Show me the top 3 members by level.",
                "Answer": "SELECT * FROM member ORDER BY Level DESC LIMIT 3"
            },
            {
                "User": "I want to add a new member with ID 11, Card Number 'LT99', Name 'John Doe', Hometown 'New York', Level 3.",
                "Answer": "INSERT INTO member (Member_ID, Card_Number, Name, Hometown, Level) VALUES (11, 'LT99', 'John Doe', 'New York', 3)"
            },
            {
                "User": "Update the hometown of member with ID 2 to 'Lexington, Kentucky'.",
                "Answer": "UPDATE member SET Hometown = 'Lexington, Kentucky' WHERE Member_ID = 2"
            },
            {
                "User": "Create a new table to track member email addresses with Member_ID and Email.",
                "Answer": "CREATE TABLE member_email (Member_ID number, Email text, PRIMARY KEY (Member_ID))"
            },
            {
                "User": "Add the email 'jeremy@example.com' for the member with ID 1.",
                "Answer": "INSERT INTO member_email (Member_ID, Email) VALUES (1, 'jeremy@example.com')"
            },
            {
                "User": "Can we track the number of visits for each member at each branch?",
                "Answer": "ALTER TABLE purchase ADD COLUMN Visits number"
            },
            {
                "User": "Set the number of visits to 5 for member ID 1 at branch ID 3.",
                "Answer": "UPDATE purchase SET Visits = 5 WHERE Member_ID = 1 AND Branch_ID = '3'"
            },
            {
                "User": "Show me the total pounds purchased and visits by each member.",
                "Answer": "SELECT Member_ID, SUM(Total_pounds) as Total_Purchases, SUM(Visits) as Total_Visits FROM purchase GROUP BY Member_ID"
            },
            {
                "User": "How many members are from 'Louisville, Kentucky'?",
                "Answer": "SELECT COUNT(*) FROM member WHERE Hometown = 'Louisville, Kentucky'"
            },
            {
                "User": "Create a new table to record member birthdates.",
                "Answer": "CREATE TABLE member_birthdate (Member_ID number, Birthdate text, PRIMARY KEY (Member_ID))"
            },
            {
                "User": "Add birthdate '1985-04-22' for member with ID 2.",
                "Answer": "INSERT INTO member_birthdate (Member_ID, Birthdate) VALUES (2, '1985-04-22')"
            },
            {
                "User": "Show me all members who have a membership level greater than 5 and are from 'London'.",
                "Answer": "SELECT * FROM member WHERE Level > 5 AND Hometown = 'London'"
            },
            {
                "User": "Can you tell me which branch has the highest membership amount?",
                "Answer": "SELECT Name FROM branch ORDER BY membership_amount DESC LIMIT 1"
            }
        ]
    },
    {
        "idx": 478,
        "db": "entrepreneur",
        "interaction": [
            {
                "User": "Can we add a new entrepreneur to the database? With the values Entrepreneur_ID, People_ID, Company, Money_Requested, Investor are 7, 4, 'Innovatech', 250000.0, 'Peter Jones'",
                "Answer": "INSERT INTO entrepreneur (Entrepreneur_ID, People_ID, Company, Money_Requested, Investor) VALUES (7, 4, 'Innovatech', 250000.0, 'Peter Jones')"
            },
            {
                "User": "Who is the investor for Innovatech?",
                "Answer": "SELECT Investor FROM entrepreneur WHERE Company = 'Innovatech'"
            },
            {
                "User": "I want to update the amount requested by Umbrolly to 200000.",
                "Answer": "UPDATE entrepreneur SET Money_Requested = 200000 WHERE Company = 'Umbrolly'"
            },
            {
                "User": "Can you show me the updated money requested for Umbrolly?",
                "Answer": "SELECT Money_Requested FROM entrepreneur WHERE Company = 'Umbrolly'"
            },
            {
                "User": "Let's add a new column 'Industry' to the entrepreneur table.",
                "Answer": "ALTER TABLE entrepreneur ADD Industry text"
            },
            {
                "User": "Now, set the industry for Umbrolly to 'Umbrellas'.",
                "Answer": "UPDATE entrepreneur SET Industry = 'Umbrellas' WHERE Company = 'Umbrolly'"
            },
            {
                "User": "What industries are our entrepreneurs involved in?",
                "Answer": "SELECT DISTINCT Industry FROM entrepreneur"
            },
            {
                "User": "Create a new table to track investments with columns Investment_ID, Entrepreneur_ID, and Amount.",
                "Answer": "CREATE TABLE investments (Investment_ID number PRIMARY KEY, Entrepreneur_ID number, Amount number)"
            },
            {
                "User": "Record a new investment for entrepreneur ID 1, with an amount of 50000.",
                "Answer": "INSERT INTO investments (Investment_ID, Entrepreneur_ID, Amount) VALUES (1, 1, 50000)"
            },
            {
                "User": "Show me all the investments made to entrepreneur ID 1.",
                "Answer": "SELECT * FROM investments WHERE Entrepreneur_ID = 1"
            },
            {
                "User": "Can you add a new person named 'Giulia Bianchi' with the id is 9 and the height of 1.75 meters and weight of 65 kilograms, born on '1985-06-15'?",
                "Answer": "INSERT INTO people (People_ID, Name, Height, Weight, Date_of_Birth) VALUES (9, 'Giulia Bianchi', 1.75, 65.0, '1985-06-15')"
            },
            {
                "User": "Which entrepreneur has Giulia Bianchi as their representative?",
                "Answer": "SELECT Company FROM entrepreneur WHERE People_ID = (SELECT People_ID FROM people WHERE Name = 'Giulia Bianchi')"
            },
            {
                "User": "I need to correct Giulia's weight to 62 kilograms.",
                "Answer": "UPDATE people SET Weight = 62 WHERE Name = 'Giulia Bianchi'"
            },
            {
                "User": "Could you show me the latest details of Giulia Bianchi?",
                "Answer": "SELECT * FROM people WHERE Name = 'Giulia Bianchi'"
            }
        ]
    },
    {
        "idx": 479,
        "db": "entrepreneur",
        "interaction": [
            {
                "User": "I'm interested in the entrepreneurs. Can you show me the full list of entrepreneurs and their requested money?",
                "Answer": "SELECT Entrepreneur_ID, Company, Money_Requested FROM entrepreneur"
            },
            {
                "User": "I'd like to add a new entrepreneur to the list. Their name is 'Tech Innovations Ltd', requesting $200,000, with People_ID 4 and Investor 'Peter Jones'.",
                "Answer": "INSERT INTO entrepreneur (People_ID, Company, Money_Requested, Investor) VALUES (4, 'Tech Innovations Ltd', 200000, 'Peter Jones')"
            },
            {
                "User": "Oops, I made a mistake. The correct company name is 'InnoTech Ltd'. Please update the previous entry.",
                "Answer": "UPDATE entrepreneur SET Company = 'InnoTech Ltd' WHERE People_ID = 4 AND Investor = 'Peter Jones'"
            },
            {
                "User": "I'm curious about the age of entrepreneurs. Could we add a 'Age' column to the 'people' table?",
                "Answer": "ALTER TABLE people ADD Age number"
            },
            {
                "User": "Let's see which entrepreneurs are over 40 years old. Can you show me their names and companies?",
                "Answer": "SELECT p.Name, e.Company FROM people p JOIN entrepreneur e ON p.People_ID = e.People_ID WHERE p.Age > 40"
            },
            {
                "User": "Can you create a new table to track the investments made by each investor?",
                "Answer": "CREATE TABLE investments (Investment_ID number, Investor text, Amount number, Date_of_Investment text, primary key (Investment_ID))"
            },
            {
                "User": "I'd like to record a new investment. Investor 'Deborah Meaden' invested $50,000 on '2023-03-15'.",
                "Answer": "INSERT INTO investments (Investor, Amount, Date_of_Investment) VALUES ('Deborah Meaden', 50000, '2023-03-15')"
            },
            {
                "User": "It seems we have a new investor 'Sophie Kain'. Can we add her to the list of investors without associating her with any company yet?",
                "Answer": "INSERT INTO entrepreneur (Investor) VALUES ('Sophie Kain')"
            },
            {
                "User": "Now, I want to see a list of all investors and the total amount they've invested. Please include even those who haven't made any investments yet.",
                "Answer": "SELECT e.Investor, COALESCE(SUM(i.Amount), 0) AS Total_Invested FROM entrepreneur e LEFT JOIN investments i ON e.Investor = i.Investor GROUP BY e.Investor"
            }
        ]
    },
    {
        "idx": 480,
        "db": "entertainment_awards",
        "interaction": [
            {
                "User": "Can we add a new category for 'Best Actor' in the artwork table?",
                "Answer": "ALTER TABLE artwork ADD COLUMN Best_Actor text"
            },
            {
                "User": "Please insert a record for the Best Actor category for the artwork 'Indonesian Idol' with artwordId is 10.",
                "Answer": "INSERT INTO artwork (Artwork_ID, Type, Name, Best_Actor) VALUES (10, 'Program Music/Variety Show', 'Indonesian Idol', 'John Doe')"
            },
            {
                "User": "Update the festival location for 'Cherry Awards' to 'Japan'.",
                "Answer": "UPDATE festival_detail SET Location = 'Japan' WHERE Festival_Name = 'Cherry Awards'"
            },
            {
                "User": "How many awards have been held in Japan?",
                "Answer": "SELECT COUNT(*) FROM festival_detail WHERE Location = 'Japan'"
            },
            {
                "User": "Create a new table for festival sponsors with sponsor name and amount contributed.",
                "Answer": "CREATE TABLE festival_sponsors (Sponsor_ID number PRIMARY KEY, Festival_ID number, Sponsor_Name text, Amount_Contributed number)"
            },
            {
                "User": "Insert a new sponsor for the 'Flower Awards' with a contribution of $5000.",
                "Answer": "INSERT INTO festival_sponsors (Sponsor_ID, Festival_ID, Sponsor_Name, Amount_Contributed) VALUES (1, 2, 'Floral Inc.', 5000)"
            },
            {
                "User": "List all the artwork names along with their Best Actor if available.",
                "Answer": "SELECT Name, Best_Actor FROM artwork WHERE Best_Actor IS NOT NULL"
            },
            {
                "User": "I need to know the total audience number for festivals held in 2007.",
                "Answer": "SELECT SUM(Num_of_Audience) FROM festival_detail WHERE Year = 2007"
            },
            {
                "User": "Add a new column to track the duration of each festival in days.",
                "Answer": "ALTER TABLE festival_detail ADD COLUMN Duration_Days number"
            },
            {
                "User": "Set the duration of the 'Panasonic Awards' to 5 days.",
                "Answer": "UPDATE festival_detail SET Duration_Days = 5 WHERE Festival_Name = 'Panasonic Awards'"
            },
            {
                "User": "Which festivals lasted more than 3 days?",
                "Answer": "SELECT Festival_Name FROM festival_detail WHERE Duration_Days > 3"
            }
        ]
    },
    {
        "idx": 481,
        "db": "entertainment_awards",
        "interaction": [
            {
                "User": "What is the total number of audiences for festivals in 2007?",
                "Answer": "SELECT SUM(Num_of_Audience) FROM festival_detail WHERE Year = 2007"
            },
            {
                "User": "Can we add a new festival that took place in 2021?",
                "Answer": "INSERT INTO festival_detail (Festival_ID, Festival_Name, Chair_Name, Location, Year, Num_of_Audience) VALUES (6, 'Digital Entertainment Awards', 'Alex Johnson', 'United States', 2021, 300)"
            },
            {
                "User": "I want to update the number of audiences for the 'Digital Entertainment Awards' to 350.",
                "Answer": "UPDATE festival_detail SET Num_of_Audience = 350 WHERE Festival_Name = 'Digital Entertainment Awards'"
            },
            {
                "User": "Create a new table to track the sponsors of each festival.",
                "Answer": "CREATE TABLE festival_sponsors (Festival_ID number, Sponsor_Name text, Amount_Donated number);"
            },
            {
                "User": "Add a record for a sponsor of the 'Panasonic Awards'.",
                "Answer": "INSERT INTO festival_sponsors (Festival_ID, Sponsor_Name, Amount_Donated) VALUES (1, 'ElectroCorp', 50000)"
            },
            {
                "User": "Show me all festivals that had more than 150 audiences.",
                "Answer": "SELECT * FROM festival_detail WHERE Num_of_Audience > 150"
            },
            {
                "User": "Can we track the duration of each festival? We need to add a new column for that.",
                "Answer": "ALTER TABLE festival_detail ADD COLUMN Duration_days number"
            },
            {
                "User": "Set the duration of the 'Cherry Awards' to 3 days.",
                "Answer": "UPDATE festival_detail SET Duration_days = 3 WHERE Festival_Name = 'Cherry Awards'"
            },
            {
                "User": "Which artwork won an award at the 'Flower Awards'?",
                "Answer": "SELECT artwork.Name FROM artwork JOIN nomination ON artwork.Artwork_ID = nomination.Artwork_ID WHERE nomination.Festival_ID = 2 AND nomination.Result = 'Won'"
            },
            {
                "User": "List all the sponsors who donated more than $30,000.",
                "Answer": "SELECT Sponsor_Name FROM festival_sponsors WHERE Amount_Donated > 30000"
            },
            {
                "User": "How many days was the 'Digital Entertainment Awards' festival?",
                "Answer": "SELECT Duration_days FROM festival_detail WHERE Festival_Name = 'Digital Entertainment Awards'"
            },
            {
                "User": "Add a new column to track the host of each festival.",
                "Answer": "ALTER TABLE festival_detail ADD COLUMN Host_Name text"
            },
            {
                "User": "Who was the chairperson for the 'Flower Awards' in 2007?",
                "Answer": "SELECT Chair_Name FROM festival_detail WHERE Festival_Name = 'Flower Awards' AND Year = 2007"
            },
            {
                "User": "Update the host name for 'Panasonic Awards' to 'Sarah Lee'.",
                "Answer": "UPDATE festival_detail SET Host_Name = 'Sarah Lee' WHERE Festival_Name = 'Panasonic Awards'"
            }
        ]
    },
    {
        "idx": 482,
        "db": "flight_4",
        "interaction": [
            {
                "User": "Can we track the number of flights each airline operates?",
                "Answer": "ALTER TABLE airlines ADD COLUMN num_flights number;"
            },
            {
                "User": "Please add the number of flights for the airline with alid 410.",
                "Answer": "UPDATE airlines SET num_flights = (SELECT COUNT(*) FROM routes WHERE alid = 410) WHERE alid = 410;"
            },
            {
                "User": "I want to know the total number of flights operated by '2B' airline.",
                "Answer": "SELECT num_flights FROM airlines WHERE iata = '2B';"
            },
            {
                "User": "How can we record the last flight date for each airline?",
                "Answer": "ALTER TABLE airlines ADD COLUMN last_flight_date date;"
            },
            {
                "User": "Set the last flight date for '2B' airline to '2023-04-01'.",
                "Answer": "UPDATE airlines SET last_flight_date = '2023-04-01' WHERE iata = '2B';"
            },
            {
                "User": "Can we add a new airline called 'SkyJet'?",
                "Answer": "INSERT INTO airlines (alid, name, iata, icao, callsign, country, active) VALUES ((SELECT MAX(alid) + 1 FROM airlines), 'SkyJet', 'SJ', 'SKJ', 'SKYJET', 'United States', 'Y');"
            },
            {
                "User": "What are the active airlines in the United States?",
                "Answer": "SELECT name FROM airlines WHERE country = 'United States' AND active = 'Y';"
            },
            {
                "User": "Can we create a new table to record the airport managers?",
                "Answer": "CREATE TABLE airport_managers (amid number PRIMARY KEY, apid number, name text, contact_info text, FOREIGN KEY (apid) REFERENCES airports(apid));"
            },
            {
                "User": "Add 'John Doe' as the manager for the 'Goroka Airport'.",
                "Answer": "INSERT INTO airport_managers (amid, apid, name, contact_info) VALUES ((SELECT MAX(amid) + 1 FROM airport_managers), 1, 'John Doe', 'john.doe@example.com');"
            },
            {
                "User": "What is the contact information for the manager of 'Goroka Airport'?",
                "Answer": "SELECT contact_info FROM airport_managers WHERE apid = (SELECT apid FROM airports WHERE name = 'Goroka Airport');"
            },
            {
                "User": "Can we record the airport's annual passenger count?",
                "Answer": "ALTER TABLE airports ADD COLUMN annual_passenger_count number;"
            },
            {
                "User": "Update 'Goroka Airport's annual passenger count to 150000.",
                "Answer": "UPDATE airports SET annual_passenger_count = 150000 WHERE name = 'Goroka Airport';"
            },
            {
                "User": "Which airport has the highest elevation?",
                "Answer": "SELECT name FROM airports ORDER BY elevation DESC LIMIT 1;"
            }
        ]
    },
    {
        "idx": 483,
        "db": "flight_4",
        "interaction": [
            {
                "User": "Can we add a column to track the timezone of each airport?",
                "Answer": "ALTER TABLE airports ADD COLUMN timezone text;"
            },
            {
                "User": "Please add the timezone 'Pacific/Auckland' to the Goroka Airport record.",
                "Answer": "UPDATE airports SET timezone = 'Pacific/Auckland' WHERE apid = 1;"
            },
            {
                "User": "For the airports in 'Papua New Guinea', set the timezone to 'Pacific/Port_Moresby'.",
                "Answer": "UPDATE airports SET timezone = 'Pacific/Port_Moresby' WHERE country = 'Papua New Guinea';"
            },
            {
                "User": "Create a new table to track frequent flyer programs with program_id, airline_id, and program_name.",
                "Answer": "CREATE TABLE frequent_flyer_programs (program_id number PRIMARY KEY, airline_id number, program_name text);"
            },
            {
                "User": "Insert a new frequent flyer program for airline with ID 410 named 'Club 2B'.",
                "Answer": "INSERT INTO frequent_flyer_programs (program_id, airline_id, program_name) VALUES (1, 410, 'Club 2B');"
            },
            {
                "User": "What is the average elevation of the airports in each country?",
                "Answer": "SELECT country, AVG(elevation) FROM airports GROUP BY country;"
            },
            {
                "User": "Update the callsign of the airline with ID 2 to 'GENERAL AIRWAYS'.",
                "Answer": "UPDATE airlines SET callsign = 'GENERAL AIRWAYS' WHERE alid = 2;"
            },
            {
                "User": "Show me all airlines that are currently active.",
                "Answer": "SELECT * FROM airlines WHERE active = 'Y';"
            },
            {
                "User": "How many routes does each airline operate?",
                "Answer": "SELECT airline, COUNT(*) FROM routes GROUP BY airline;"
            },
            {
                "User": "Can we track the aircraft type used for each route? We need to add a new column for that.",
                "Answer": "ALTER TABLE routes ADD COLUMN aircraft_type text;"
            },
            {
                "User": "Set the aircraft type for the new route we just added to 'Boeing 737'.",
                "Answer": "UPDATE routes SET aircraft_type = 'Boeing 737' WHERE rid = 67241;"
            },
            {
                "User": "Create a table to log the user searches with columns for search_id, user_id, and search_query.",
                "Answer": "CREATE TABLE user_searches (search_id number PRIMARY KEY, user_id number, search_query text);"
            },
            {
                "User": "Log the first user's search for cities with more than one airport.",
                "Answer": "INSERT INTO user_searches (search_id, user_id, search_query) VALUES (1, 1, 'SELECT city FROM airports GROUP BY city HAVING count(*) > 1');"
            }
        ]
    },
    {
        "idx": 484,
        "db": "gymnast",
        "interaction": [
            {
                "User": "Add a new gymnast named Alex Smith with an ID of 11, with age 22, height 1.68 and his hometown is 'New York'",
                "Answer": "INSERT INTO people (People_ID, Name, Age, Height, Hometown) VALUES (11, 'Alex Smith', 22, 1.68, 'New York')"
            },
            {
                "User": "Now, record Alex Smith's gymnast scores: Floor Exercise 9.4, Pommel Horse 9.3, Rings 9.5, Vault 9.6, Parallel Bars 9.2, Horizontal Bar 9.3.",
                "Answer": "INSERT INTO gymnast (Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points) VALUES (5, 9.4, 9.3, 9.5, 9.6, 9.2, 9.3, 56.3)"
            },
            {
                "User": "Alex Smith just improved his Vault score to 9.8. Update his score.",
                "Answer": "UPDATE gymnast SET Vault_Points = 9.8, Total_Points = Total_Points + 0.2 WHERE Gymnast_ID = 5"
            },
            {
                "User": "We need to track the coaches of each gymnast. Add a 'Coach_Name' column to the 'gymnast' table.",
                "Answer": "ALTER TABLE gymnast ADD Coach_Name text"
            },
            {
                "User": "Assign coach 'John Doe' to Alex Smith.",
                "Answer": "UPDATE gymnast SET Coach_Name = 'John Doe' WHERE Gymnast_ID = 5"
            },
            {
                "User": "Who is coaching the gymnast with the highest total points?",
                "Answer": "SELECT Coach_Name FROM gymnast ORDER BY Total_Points DESC LIMIT 1"
            },
            {
                "User": "Create a new table 'events' to track events with columns 'Event_ID', 'Event_Name', and 'Event_Date'.",
                "Answer": "CREATE TABLE events (Event_ID number PRIMARY KEY, Event_Name text, Event_Date text)"
            },
            {
                "User": "Add an event named 'Regional Qualifiers' scheduled for May 5th, 2023.",
                "Answer": "INSERT INTO events (Event_ID, Event_Name, Event_Date) VALUES (1, 'Regional Qualifiers', '2023-05-05')"
            },
            {
                "User": "Who is the youngest gymnast?",
                "Answer": "SELECT Name FROM people ORDER BY Age ASC LIMIT 1"
            },
            {
                "User": "Update Lorraine Súarez Carmona's hometown to 'Santo Domingo' to match her recent move.",
                "Answer": "UPDATE people SET Hometown = 'Santo Domingo' WHERE Name = 'Lorraine Súarez Carmona'"
            },
            {
                "User": "How many gymnasts are from 'Santo Domingo'?",
                "Answer": "SELECT COUNT(*) FROM people WHERE Hometown = 'Santo Domingo'"
            },
            {
                "User": "Show the average height of gymnasts.",
                "Answer": "SELECT AVG(Height) FROM people"
            },
            {
                "User": "Increase the age of all gymnasts by 1 year.",
                "Answer": "UPDATE people SET Age = Age + 1"
            }
        ]
    },
    {
        "idx": 485,
        "db": "gymnast",
        "interaction": [
            {
                "User": "Can you update Paul Hamm's hometown to 'Columbus'?",
                "Answer": "UPDATE people SET Hometown = 'Columbus' WHERE Name = 'Paul Hamm'"
            },
            {
                "User": "What is Paul Hamm's hometown now?",
                "Answer": "SELECT Hometown FROM people WHERE Name = 'Paul Hamm'"
            },
            {
                "User": "Can we add a new column for the coach's name to the gymnast table?",
                "Answer": "ALTER TABLE gymnast ADD COLUMN Coach_Name text"
            },
            {
                "User": "Let's assign 'John Smith' as the coach for the gymnast with ID 1.",
                "Answer": "UPDATE gymnast SET Coach_Name = 'John Smith' WHERE Gymnast_ID = 1"
            },
            {
                "User": "Who is the coach of the gymnast with the highest total points?",
                "Answer": "SELECT Coach_Name FROM gymnast ORDER BY Total_Points DESC LIMIT 1"
            },
            {
                "User": "Add a new gymnast with the following scores: Gymnast_ID 5, Floor 9.8, Pommel Horse 9.7, Rings 9.6, Vault 9.5, Parallel Bars 9.4, Horizontal Bar 9.3, Total 57.3 and coach 'Jane Doe'.",
                "Answer": "INSERT INTO gymnast (Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points, Coach_Name) VALUES (5, 9.8, 9.7, 9.6, 9.5, 9.4, 9.3, 57.3, 'Jane Doe')"
            },
            {
                "User": "Create a new table for competition results with columns for Competition_ID, Gymnast_ID, Event, and Score.",
                "Answer": "CREATE TABLE competition_results (Competition_ID number, Gymnast_ID number, Event text, Score number, PRIMARY KEY (Competition_ID, Gymnast_ID, Event))"
            },
            {
                "User": "Insert the following competition results: Competition_ID 101, Gymnast_ID 1, Event 'Floor Exercise', Score 9.8.",
                "Answer": "INSERT INTO competition_results (Competition_ID, Gymnast_ID, Event, Score) VALUES (101, 1, 'Floor Exercise', 9.8)"
            },
            {
                "User": "What is the average score of all gymnasts in the 'Floor Exercise' event?",
                "Answer": "SELECT AVG(Score) FROM competition_results WHERE Event = 'Floor Exercise'"
            },
            {
                "User": "Who scored the highest in the 'Pommel Horse' event?",
                "Answer": "SELECT Gymnast_ID FROM competition_results WHERE Event = 'Pommel Horse' ORDER BY Score DESC LIMIT 1"
            },
            {
                "User": "Can we see a list of all events a specific gymnast with ID 2 has participated in along with their scores?",
                "Answer": "SELECT Event, Score FROM competition_results WHERE Gymnast_ID = 2"
            }
        ]
    },
    {
        "idx": 486,
        "db": "activity_1",
        "interaction": [
            {
                "User": "Show all activities that a student with ID 1001 has participated in.",
                "Answer": "SELECT A.activity_name FROM Activity A JOIN Participates_in P ON A.actid = P.actid WHERE P.stuid = 1001"
            },
            {
                "User": "Add a new activity called 'Skiing' to the list of activities, the actid is 800",
                "Answer": "INSERT INTO Activity (actid, activity_name) VALUES (800, 'Skiing')"
            },
            {
                "User": "Show the latest activity added.",
                "Answer": "SELECT * FROM Activity ORDER BY actid DESC LIMIT 1"
            },
            {
                "User": "Update the phone number for faculty member with FacID 1082 to 5551234.",
                "Answer": "UPDATE Faculty SET Phone = 5551234 WHERE FacID = 1082"
            },
            {
                "User": "Which faculty member has the updated phone number 5551234?",
                "Answer": "SELECT Fname, Lname FROM Faculty WHERE Phone = 5551234"
            },
            {
                "User": "Add a new column 'Email' to the Faculty table.",
                "Answer": "ALTER TABLE Faculty ADD Email text"
            },
            {
                "User": "Set the email for faculty member with FacID 1121 to 'goodrich@university.edu'.",
                "Answer": "UPDATE Faculty SET Email = 'goodrich@university.edu' WHERE FacID = 1121"
            },
            {
                "User": "Show the email addresses for all faculty members.",
                "Answer": "SELECT Fname, Lname, Email FROM Faculty"
            },
            {
                "User": "Create a new table for keeping track of student hobbies with columns 'StuID' and 'Hobby'.",
                "Answer": "CREATE TABLE Student_Hobbies (StuID number, Hobby text, PRIMARY KEY (StuID, Hobby))"
            },
            {
                "User": "Add that student Linda Smith has a hobby 'Painting'.",
                "Answer": "INSERT INTO Student_Hobbies (StuID, Hobby) VALUES (1001, 'Painting')"
            },
            {
                "User": "Can you show me all hobbies for Linda Smith?",
                "Answer": "SELECT Hobby FROM Student_Hobbies WHERE StuID = 1001"
            },
            {
                "User": "Let's record that Tracy Kim also enjoys 'Painting' and add 'Hiking' as another hobby for Linda Smith.",
                "Answer": "INSERT INTO Student_Hobbies (StuID, Hobby) VALUES (1002, 'Painting'), (1001, 'Hiking')"
            },
            {
                "User": "Which students share a hobby with Linda Smith?",
                "Answer": "SELECT DISTINCT S.Fname, S.Lname FROM Student S JOIN Student_Hobbies SH ON S.StuID = SH.StuID WHERE SH.Hobby IN (SELECT Hobby FROM Student_Hobbies WHERE StuID = 1001) AND S.StuID != 1001"
            },
            {
                "User": "I need to correct Linda's age to 19. Please update it.",
                "Answer": "UPDATE Student SET Age = 19 WHERE StuID = 1001"
            }
        ]
    },
    {
        "idx": 487,
        "db": "activity_1",
        "interaction": [
            {
                "User": "Can you add a new activity called 'Soccer' to the list of activities? The actid is 800",
                "Answer": "INSERT INTO Activity (actid, activity_name) VALUES (800, 'Soccer')"
            },
            {
                "User": "I'd like to know the new activity ID for 'Soccer'.",
                "Answer": "SELECT actid FROM Activity WHERE activity_name = 'Soccer'"
            },
            {
                "User": "Please enroll student 1002 in the new 'Soccer' activity.",
                "Answer": "INSERT INTO Participates_in (stuid, actid) VALUES (1002, (SELECT actid FROM Activity WHERE activity_name = 'Soccer'))"
            },
            {
                "User": "How many activities is student 1001 now participating in?",
                "Answer": "SELECT COUNT(actid) FROM Participates_in WHERE stuid = 1001"
            },
            {
                "User": "Can we add a new column 'Email' to the Faculty table?",
                "Answer": "ALTER TABLE Faculty ADD Email text"
            },
            {
                "User": "Update Professor Goodrich's email to 'mgoodrich@univ.edu'.",
                "Answer": "UPDATE Faculty SET Email = 'mgoodrich@univ.edu' WHERE Lname = 'Goodrich' AND Rank = 'Professor'"
            },
            {
                "User": "Which professors have we recorded emails for?",
                "Answer": "SELECT Fname, Lname FROM Faculty WHERE Email IS NOT NULL AND Rank = 'Professor'"
            },
            {
                "User": "Create a new table for 'Activity_Feedback' with columns 'FeedbackID', 'actid', 'FeedbackText', and 'Rating'.",
                "Answer": "CREATE TABLE Activity_Feedback (FeedbackID number PRIMARY KEY, actid number, FeedbackText text, Rating number)"
            },
            {
                "User": "Add feedback for activity 770 with the text 'Great experience' and a rating of 5.",
                "Answer": "INSERT INTO Activity_Feedback (FeedbackID, actid, FeedbackText, Rating) VALUES (1, 770, 'Great experience', 5)"
            },
            {
                "User": "Show me all feedback with a rating of 5.",
                "Answer": "SELECT * FROM Activity_Feedback WHERE Rating = 5"
            },
            {
                "User": "Increase the age of all students by 1 year.",
                "Answer": "UPDATE Student SET Age = Age + 1"
            },
            {
                "User": "How old is student Linda Smith now?",
                "Answer": "SELECT Age FROM Student WHERE Fname = 'Linda' AND Lname = 'Smith'"
            },
            {
                "User": "Is there a student advisor with ID 1121 participating in any activity?",
                "Answer": "SELECT EXISTS(SELECT 1 FROM Faculty_Participates_in WHERE FacID = 1121)"
            }
        ]
    },
    {
        "idx": 488,
        "db": "music_4",
        "interaction": [
            {
                "User": "Can you tell me how many artists are older than 30?",
                "Answer": "SELECT COUNT(*) FROM artist WHERE Age > 30"
            },
            {
                "User": "Please add a new artist named 'Euphoria' who is 28 years old, with the famous title 'Endless Highways' released on March 15, 2021.",
                "Answer": "INSERT INTO artist (Artist, Age, Famous_Title, Famous_Release_date) VALUES ('Euphoria', 28, 'Endless Highways', 'March 15, 2021')"
            },
            {
                "User": "I would like to update the age of 'Gorgoroth' to 36 as it's been two years since we last updated.",
                "Answer": "UPDATE artist SET Age = 36 WHERE Artist = 'Gorgoroth'"
            },
            {
                "User": "Can you list all the songs by 'Ophiolatry'?",
                "Answer": "SELECT Song FROM volume INNER JOIN artist ON volume.Artist_ID = artist.Artist_ID WHERE artist.Artist = 'Ophiolatry'"
            },
            {
                "User": "Let's add a new column to the artist table for 'Country_of_Origin'.",
                "Answer": "ALTER TABLE artist ADD COLUMN Country_of_Origin text"
            },
            {
                "User": "Now set the country of origin for 'Gorgoroth' to 'Norway'.",
                "Answer": "UPDATE artist SET Country_of_Origin = 'Norway' WHERE Artist = 'Gorgoroth'"
            },
            {
                "User": "What's the total number of music festivals held in February 2011?",
                "Answer": "SELECT COUNT(*) FROM music_festival WHERE Date_of_ceremony LIKE 'February 2011'"
            },
            {
                "User": "Create a new table to track the genres of each artist, with columns for Artist_ID and Genre.",
                "Answer": "CREATE TABLE artist_genre (Artist_ID number, Genre text, PRIMARY KEY (Artist_ID))"
            },
            {
                "User": "Add genres for the first three artists: 'Black Metal' for Gorgoroth, 'Death Metal' for Ophiolatry, and 'Black Metal' for the third artist.",
                "Answer": "INSERT INTO artist_genre (Artist_ID, Genre) VALUES (1, 'Black Metal'), (2, 'Death Metal'), (3, 'Black Metal')"
            },
            {
                "User": "Can we get a list of all artists and their genres?",
                "Answer": "SELECT artist.Artist, artist_genre.Genre FROM artist INNER JOIN artist_genre ON artist.Artist_ID = artist_genre.Artist_ID"
            },
            {
                "User": "Let's update the 'Weeks_on_Top' for 'The Way' by 'Gorgoroth' to 4 weeks.",
                "Answer": "UPDATE volume SET Weeks_on_Top = 4 WHERE Song = 'The Way' AND Artist_ID = (SELECT Artist_ID FROM artist WHERE Artist = 'Gorgoroth')"
            }
        ]
    },
    {
        "idx": 489,
        "db": "music_4",
        "interaction": [
            {
                "User": "Can you add a new artist named 'Eclipse' who is 28 years old and released a famous title 'Shadow Dance' on 'June 15, 2020'?",
                "Answer": "INSERT INTO artist (Artist, Age, Famous_Title, Famous_Release_date) VALUES ('Eclipse', 28, 'Shadow Dance', 'June 15, 2020')"
            },
            {
                "User": "What is the Artist ID of the newly added artist 'Eclipse'?",
                "Answer": "SELECT Artist_ID FROM artist WHERE Artist = 'Eclipse'"
            },
            {
                "User": "I would like to update the age of 'Ophiolatry' to 36, since it's their birthday today.",
                "Answer": "UPDATE artist SET Age = 36 WHERE Artist = 'Ophiolatry'"
            },
            {
                "User": "Let's add a new volume for 'Eclipse' which was issued on 'March 1, 2021', stayed 2 weeks on top, and the song is called 'Moonlight Serenade'. Assume the Artist_ID for 'Eclipse' is 8.",
                "Answer": "INSERT INTO volume (Volume_Issue, Issue_Date, Weeks_on_Top, Song, Artist_ID) VALUES ('Eclipse Debut', 'March 1, 2021', 2, 'Moonlight Serenade', 8)"
            },
            {
                "User": "Can you create a new table to store concert tours with columns for Tour_ID, Tour_Name, Start_Date, End_Date, and Artist_ID?",
                "Answer": "CREATE TABLE concert_tour (Tour_ID number PRIMARY KEY, Tour_Name text, Start_Date text, End_Date text, Artist_ID number)"
            },
            {
                "User": "Let's add the first concert tour for 'Eclipse' named 'Eclipse Rising' starting on 'July 20, 2021' and ending on 'September 20, 2021'.",
                "Answer": "INSERT INTO concert_tour (Tour_Name, Start_Date, End_Date, Artist_ID) VALUES ('Eclipse Rising', 'July 20, 2021', 'September 20, 2021', 8)"
            },
            {
                "User": "I've noticed we don't have a column for Genre in the artist table. Can we add that?",
                "Answer": "ALTER TABLE artist ADD COLUMN Genre text"
            },
            {
                "User": "Now set the genre for 'Eclipse' to 'Synthwave'.",
                "Answer": "UPDATE artist SET Genre = 'Synthwave' WHERE Artist = 'Eclipse'"
            },
            {
                "User": "Could you tell me all the genres available in our artist table?",
                "Answer": "SELECT DISTINCT Genre FROM artist WHERE Genre IS NOT NULL"
            },
            {
                "User": "I want to record the result of 'Eclipse' for the '35th England Academy Prize' in the category 'Best New Artist'. Let's say they won.",
                "Answer": "INSERT INTO music_festival (Music_Festival, Date_of_ceremony, Category, Volume, Result) VALUES ('35th England Academy Prize', 'February 18, 2022', 'Best New Artist', (SELECT Volume_ID FROM volume WHERE Artist_ID = 8 LIMIT 1), 'Won')"
            },
            {
                "User": "What are the upcoming concert dates for 'Eclipse'?",
                "Answer": "SELECT Start_Date, End_Date FROM concert_tour WHERE Artist_ID = (SELECT Artist_ID FROM artist WHERE Artist = 'Eclipse')"
            }
        ]
    },
    {
        "idx": 490,
        "db": "journal_committee",
        "interaction": [
            {
                "User": "Can we track the email addresses of editors? I'd like to add this information.",
                "Answer": "ALTER TABLE editor ADD COLUMN Email text;"
            },
            {
                "User": "Great, please add an email for Kamila Porczyk as 'kamila.porczyk@example.com'.",
                "Answer": "UPDATE editor SET Email = 'kamila.porczyk@example.com' WHERE Name = 'Kamila Porczyk';"
            },
            {
                "User": "Also, add an email for Anna Powierza, 'anna.powierza@example.com'.",
                "Answer": "UPDATE editor SET Email = 'anna.powierza@example.com' WHERE Name = 'Anna Powierza';"
            },
            {
                "User": "Show me the list of all editors with their emails.",
                "Answer": "SELECT Name, Email FROM editor;"
            },
            {
                "User": "I want to record the number of articles each editor has worked on. Can we add this information?",
                "Answer": "ALTER TABLE editor ADD COLUMN Articles_Count number DEFAULT 0;"
            },
            {
                "User": "Can you update the article count for the editor who worked on the journal with ID 13?",
                "Answer": "UPDATE editor SET Articles_Count = Articles_Count + 1 WHERE Editor_ID = (SELECT Editor_ID FROM journal_committee WHERE Journal_ID = 13);"
            },
            {
                "User": "Now, tell me which editor has worked on the most articles.",
                "Answer": "SELECT Name FROM editor ORDER BY Articles_Count DESC LIMIT 1;"
            },
            {
                "User": "We should also track the sales revenue from each journal. Can we add a 'Revenue' column to the journal table?",
                "Answer": "ALTER TABLE journal ADD COLUMN Revenue number;"
            },
            {
                "User": "Let's say the journal with ID 2 had a revenue of 1500. Update the record please.",
                "Answer": "UPDATE journal SET Revenue = 1500 WHERE Journal_ID = 2;"
            },
            {
                "User": "What is the total revenue from all journals?",
                "Answer": "SELECT SUM(Revenue) FROM journal;"
            },
            {
                "User": "Can you create a new table to log the details of journal purchases?",
                "Answer": "CREATE TABLE journal_purchases (Purchase_ID number PRIMARY KEY, Journal_ID number, Purchase_Date text, Quantity number, Purchaser_Email text);"
            },
            {
                "User": "Add a record of a purchase for journal ID 4, quantity 10, by 'john.doe@example.com' on 'April 1, 2023'.",
                "Answer": "INSERT INTO journal_purchases (Purchase_ID, Journal_ID, Purchase_Date, Quantity, Purchaser_Email) VALUES (1, 4, 'April 1, 2023', 10, 'john.doe@example.com');"
            },
            {
                "User": "Show me all purchases for the journal with the theme 'Miami Dolphins'.",
                "Answer": "SELECT * FROM journal_purchases WHERE Journal_ID = (SELECT Journal_ID FROM journal WHERE Theme = 'Miami Dolphins');"
            }
        ]
    },
    {
        "idx": 491,
        "db": "journal_committee",
        "interaction": [
            {
                "User": "What's the theme of the journal with the highest sales?",
                "Answer": "SELECT Theme FROM journal ORDER BY Sales DESC LIMIT 1"
            },
            {
                "User": "Can you add a new editor named John Doe, aged 29?",
                "Answer": "INSERT INTO editor (Name, Age) VALUES ('John Doe', 29)"
            },
            {
                "User": "I'd like to update the sales for the 'Miami Dolphins' theme to 850. Can you do that?",
                "Answer": "UPDATE journal SET Sales = 850 WHERE Theme = 'Miami Dolphins'"
            },
            {
                "User": "How many journals have a sales figure greater than 900?",
                "Answer": "SELECT COUNT(*) FROM journal WHERE Sales > 900"
            },
            {
                "User": "Can we create a new table for subscribers with their ID, name, and subscription date?",
                "Answer": "CREATE TABLE subscribers (Subscriber_ID number PRIMARY KEY, Name text, Subscription_Date text)"
            },
            {
                "User": "Let's add a new column 'Email' to the editor table.",
                "Answer": "ALTER TABLE editor ADD Email text"
            },
            {
                "User": "Now, can you add an email address 'john.doe@email.com' for John Doe?",
                "Answer": "UPDATE editor SET Email = 'john.doe@email.com' WHERE Name = 'John Doe'"
            },
            {
                "User": "How many editors are now in the database?",
                "Answer": "SELECT COUNT(*) FROM editor"
            },
            {
                "User": "Let's add a record to the journal_committee table with Editor_ID 2 for Journal_ID 4 with Work_Type 'Review'.",
                "Answer": "INSERT INTO journal_committee (Editor_ID, Journal_ID, Work_Type) VALUES (2, 4, 'Review')"
            },
            {
                "User": "Can you show me the latest journal entry?",
                "Answer": "SELECT * FROM journal ORDER BY Date DESC LIMIT 1"
            },
            {
                "User": "I want to see all the work types that are associated with the journal with ID 4.",
                "Answer": "SELECT Work_Type FROM journal_committee WHERE Journal_ID = 4"
            },
            {
                "User": "What's the average age of all editors?",
                "Answer": "SELECT AVG(Age) FROM editor"
            },
            {
                "User": "Let's insert a new journal entry. The theme is 'New Tech Launches', with today's date and 500 sales.",
                "Answer": "INSERT INTO journal (Date, Theme, Sales) VALUES ('TODAY_DATE', 'New Tech Launches', 500)"
            },
            {
                "User": "Can we see a list of all themes and their total sales?",
                "Answer": "SELECT Theme, SUM(Sales) FROM journal GROUP BY Theme"
            },
            {
                "User": "I need to correct the age of Marek Siudym to 22. Can you update it?",
                "Answer": "UPDATE editor SET Age = 22 WHERE Name = 'Marek Siudym'"
            },
            {
                "User": "Show me all editors who have an email set.",
                "Answer": "SELECT * FROM editor WHERE Email IS NOT NULL"
            },
            {
                "User": "Can you list all journal themes that have been assigned to editor with ID 1 for photo work?",
                "Answer": "SELECT j.Theme FROM journal j JOIN journal_committee jc ON j.Journal_ID = jc.Journal_ID WHERE jc.Editor_ID = 1 AND jc.Work_Type = 'Photo'"
            }
        ]
    },
    {
        "idx": 492,
        "db": "decoration_competition",
        "interaction": [
            {
                "User": "Can we add a new member named 'Tiger Woods' from the United States to the Saskatchewan School?",
                "Answer": "INSERT INTO member (Name, Country, College_ID) VALUES ('Tiger Woods', 'United States', 1)"
            },
            {
                "User": "I'd like to see all members from the Saskatchewan School now.",
                "Answer": "SELECT * FROM member WHERE College_ID = 1"
            },
            {
                "User": "How many members do we have in total now?",
                "Answer": "SELECT COUNT(*) FROM member"
            },
            {
                "User": "Can we update the location of the B.C. School to 'Vancouver'?",
                "Answer": "UPDATE college SET College_Location = 'Vancouver' WHERE College_ID = 2"
            },
            {
                "User": "Which college is located in 'Vancouver' now?",
                "Answer": "SELECT Name FROM college WHERE College_Location = 'Vancouver'"
            },
            {
                "User": "Let's add a new column 'Email' to the member table for contact information.",
                "Answer": "ALTER TABLE member ADD Email text"
            },
            {
                "User": "Update the email of member 'Jack Nicklaus' to 'jack.nicklaus@example.com'.",
                "Answer": "UPDATE member SET Email = 'jack.nicklaus@example.com' WHERE Name = 'Jack Nicklaus'"
            },
            {
                "User": "Create a new table for judges with their ID, name, and nationality.",
                "Answer": "CREATE TABLE judges (Judge_ID number PRIMARY KEY, Name text, Nationality text)"
            },
            {
                "User": "Add a judge named 'Samantha Smith' from 'Canada' with ID 101.",
                "Answer": "INSERT INTO judges (Judge_ID, Name, Nationality) VALUES (101, 'Samantha Smith', 'Canada')"
            },
            {
                "User": "Can we see the list of all judges now?",
                "Answer": "SELECT * FROM judges"
            },
            {
                "User": "Create a new decoration round called 'Ocean Breeze' with member 'Tiger Woods' participating.",
                "Answer": "INSERT INTO round (Member_ID, Decoration_Theme) VALUES ((SELECT Member_ID FROM member WHERE Name = 'Tiger Woods'), 'Ocean Breeze')"
            },
            {
                "User": "What themes have been used in the decoration rounds?",
                "Answer": "SELECT DISTINCT Decoration_Theme FROM round"
            },
            {
                "User": "How can we see the ranking of members in the 'Ocean Breeze' round?",
                "Answer": "SELECT member.Name, round.Rank_in_Round FROM member INNER JOIN round ON member.Member_ID = round.Member_ID WHERE round.Decoration_Theme = 'Ocean Breeze' ORDER BY round.Rank_in_Round"
            },
            {
                "User": "Let's add a new column 'Score' to the round table to keep track of the scores.",
                "Answer": "ALTER TABLE round ADD Score number"
            },
            {
                "User": "Set the score for 'Tiger Woods' in the 'Ocean Breeze' round to 95.",
                "Answer": "UPDATE round SET Score = 95 WHERE Member_ID = (SELECT Member_ID FROM member WHERE Name = 'Tiger Woods') AND Decoration_Theme = 'Ocean Breeze'"
            }
        ]
    },
    {
        "idx": 493,
        "db": "decoration_competition",
        "interaction": [
            {
                "User": "list the name of the members in the order of their rank in rounds",
                "Answer": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID ORDER BY Rank_in_Round ASC"
            },
            {
                "User": "include member id in this table",
                "Answer": "SELECT T1.Name, T1.Member_ID FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID ORDER BY Rank_in_Round ASC"
            },
            {
                "User": "also include the college id in this table",
                "Answer": "SELECT T1.Name, T1.Member_ID, T1.College_ID FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID ORDER BY Rank_in_Round ASC"
            },
            {
                "User": "add a new member with ID 11 named 'Gary Player' from 'South Africa' to 'Saskatchewan School'",
                "Answer": "INSERT INTO member (Member_ID, Name, Country, College_ID) VALUES (11, 'Gary Player', 'South Africa', 1)"
            },
            {
                "User": "show me all members from 'Saskatchewan School' now",
                "Answer": "SELECT * FROM member WHERE College_ID = 1"
            },
            {
                "User": "update the location of 'B.C. School' to 'Vancouver'",
                "Answer": "UPDATE college SET College_Location = 'Vancouver' WHERE Name = 'B.C. School'"
            },
            {
                "User": "list all colleges with their updated locations",
                "Answer": "SELECT Name, College_Location FROM college"
            },
            {
                "User": "create a new table for competition results with columns for round id, college id, and score",
                "Answer": "CREATE TABLE competition_results (Round_ID number, College_ID number, Score number, PRIMARY KEY (Round_ID, College_ID))"
            },
            {
                "User": "add a score of 85 for 'Saskatchewan School' in round 1",
                "Answer": "INSERT INTO competition_results (Round_ID, College_ID, Score) VALUES (1, 1, 85)"
            },
            {
                "User": "show the highest score achieved in round 1",
                "Answer": "SELECT MAX(Score) AS Highest_Score FROM competition_results WHERE Round_ID = 1"
            },
            {
                "User": "alter the member table to include a new column for email addresses",
                "Answer": "ALTER TABLE member ADD COLUMN Email text"
            },
            {
                "User": "update 'Gary Player's email to 'gary.player@example.com'",
                "Answer": "UPDATE member SET Email = 'gary.player@example.com' WHERE Name = 'Gary Player'"
            }
        ]
    },
    {
        "idx": 494,
        "db": "inn_1",
        "interaction": [
            {
                "User": "Can we add a feature to track if a room is currently clean or dirty?",
                "Answer": "ALTER TABLE Rooms ADD COLUMN cleanliness TEXT DEFAULT 'Clean'"
            },
            {
                "User": "Mark room 'IBS' as dirty.",
                "Answer": "UPDATE Rooms SET cleanliness = 'Dirty' WHERE RoomId = 'IBS'"
            },
            {
                "User": "Which rooms are currently dirty?",
                "Answer": "SELECT RoomId, roomName FROM Rooms WHERE cleanliness = 'Dirty'"
            },
            {
                "User": "How many rooms do we have that are clean?",
                "Answer": "SELECT COUNT(*) FROM Rooms WHERE cleanliness = 'Clean'"
            },
            {
                "User": "Can we track the last cleaning date for the rooms?",
                "Answer": "ALTER TABLE Rooms ADD COLUMN lastCleaningDate TEXT"
            },
            {
                "User": "Set the last cleaning date for room 'RND' to today.",
                "Answer": "UPDATE Rooms SET lastCleaningDate = '2023-04-01' WHERE RoomId = 'RND'"
            },
            {
                "User": "Show me all rooms that haven't been cleaned for more than 7 days.",
                "Answer": "SELECT RoomId, roomName FROM Rooms WHERE lastCleaningDate < '2023-03-25'"
            },
            {
                "User": "I need to add a new room to the database, can you do that?",
                "Answer": "INSERT INTO Rooms (RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor) VALUES ('NEW', 'New Frontier', 3, 'Double', 6, 200, 'contemporary')"
            },
            {
                "User": "Do we have any reservations for room 'NEW'?",
                "Answer": "SELECT * FROM Reservations WHERE Room = 'NEW'"
            },
            {
                "User": "Create a table to track maintenance requests for the rooms.",
                "Answer": "CREATE TABLE MaintenanceRequests (RequestId INTEGER PRIMARY KEY, RoomId TEXT, RequestDate TEXT, Description TEXT, Status TEXT)"
            },
            {
                "User": "Log a maintenance request for a broken window in room 'AOB'.",
                "Answer": "INSERT INTO MaintenanceRequests (RoomId, RequestDate, Description, Status) VALUES ('AOB', '2023-04-01', 'Broken window', 'Pending')"
            },
            {
                "User": "Update the status of the maintenance request for room 'AOB' to 'Completed'.",
                "Answer": "UPDATE MaintenanceRequests SET Status = 'Completed' WHERE RoomId = 'AOB' AND Description = 'Broken window'"
            },
            {
                "User": "Show me all pending maintenance requests.",
                "Answer": "SELECT * FROM MaintenanceRequests WHERE Status = 'Pending'"
            },
            {
                "User": "What is the average price of all the rooms?",
                "Answer": "SELECT AVG(basePrice) FROM Rooms"
            },
            {
                "User": "Increase the price of all 'modern' decor rooms by 20.",
                "Answer": "UPDATE Rooms SET basePrice = basePrice + 20 WHERE decor = 'modern'"
            }
        ]
    },
    {
        "idx": 495,
        "db": "inn_1",
        "interaction": [
            {
                "User": "I'd like to add a new feature for tracking amenities in each room. Can we start by creating a new table for that?",
                "Answer": "CREATE TABLE RoomAmenities (AmenityId text PRIMARY KEY, RoomId text, AmenityName text, Available boolean, FOREIGN KEY (RoomId) REFERENCES Rooms(RoomId))"
            },
            {
                "User": "Great, now can you add 'WiFi' as an amenity available For Room 'RND'?",
                "Answer": "INSERT INTO RoomAmenities (AmenityId, RoomId, AmenityName, Available) Values ('1','RND','Wifi',true)"
            },
            {
                "User": "Can you show me a list of all rooms along with their amenities?",
                "Answer": "SELECT R.roomName, A.AmenityName FROM Rooms R LEFT JOIN RoomAmenities A ON R.RoomId = A.RoomId"
            },
            {
                "User": "I realized we should also track the amenity's condition. Can we add a column for that to the RoomAmenities table?",
                "Answer": "ALTER TABLE RoomAmenities ADD COLUMN Condition text"
            },
            {
                "User": "Please update the condition of WiFi in room 'RND' to 'Excellent'.",
                "Answer": "UPDATE RoomAmenities SET Condition = 'Excellent' WHERE RoomId = 'RND' AND AmenityName = 'WiFi'"
            },
            {
                "User": "Now, could you give me a report of which rooms have WiFi with 'Excellent' condition?",
                "Answer": "SELECT R.roomName FROM Rooms R JOIN RoomAmenities A ON R.RoomId = A.RoomId WHERE A.AmenityName = 'WiFi' AND A.Condition = 'Excellent'"
            },
            {
                "User": "Let's also keep track of when each amenity was last serviced. Add a 'LastServiced' date column to RoomAmenities, please.",
                "Answer": "ALTER TABLE RoomAmenities ADD COLUMN LastServiced text"
            },
            {
                "User": "For the record, the WiFi in 'IBS' was last serviced on '2023-04-01'. Please update the database.",
                "Answer": "UPDATE RoomAmenities SET LastServiced = '2023-04-01' WHERE RoomId = 'IBS' AND AmenityName = 'WiFi'"
            },
            {
                "User": "Can you find all rooms that have unserviced WiFi for more than a year?",
                "Answer": "SELECT R.roomName FROM Rooms R JOIN RoomAmenities A ON R.RoomId = A.RoomId WHERE A.AmenityName = 'WiFi' AND (A.LastServiced < '2022-04-01' OR A.LastServiced IS NULL)"
            },
            {
                "User": "I'd like to offer a discount for guests who stayed more than 5 nights. Can we add a 'Discount' field to the Reservations table?",
                "Answer": "ALTER TABLE Reservations ADD COLUMN Discount number"
            },
            {
                "User": "Apply a 10% discount to all reservations where the guest stayed more than 5 nights.",
                "Answer": "UPDATE Reservations SET Discount = 0.1 WHERE (julianday(CheckOut) - julianday(CheckIn)) > 5"
            },
            {
                "User": "How many reservations have been given a discount so far?",
                "Answer": "SELECT COUNT(*) FROM Reservations WHERE Discount IS NOT NULL AND Discount > 0"
            }
        ]
    },
    {
        "idx": 496,
        "db": "sakila_1",
        "interaction": [
            {
                "User": "What name is popular for actors? | did you mean the most popular? | yes",
                "Answer": "SELECT first_name, last_name FROM actor GROUP BY first_name, last_name ORDER BY COUNT(*) DESC LIMIT 1"
            },
            {
                "User": "Can we track the number of films each actor has played in?",
                "Answer": "SELECT actor_id, COUNT(film_id) AS film_count FROM film_actor GROUP BY actor_id"
            },
            {
                "User": "Let's update the rental rate for all 'Sci-Fi' movies to $3.99.",
                "Answer": "UPDATE film SET rental_rate = 3.99 WHERE film_id IN (SELECT film_id FROM film_category INNER JOIN category ON film_category.category_id = category.category_id WHERE category.name = 'Sci-Fi')"
            },
            {
                "User": "Can you create a table to track the store's inventory changes?",
                "Answer": "CREATE TABLE inventory_log (log_id INT AUTO_INCREMENT PRIMARY KEY, inventory_id INT, change_date TIMESTAMP, change_type text, quantity_change INT, FOREIGN KEY (inventory_id) REFERENCES inventory(inventory_id))"
            },
            {
                "User": "I need to add a 'phone' column to the staff table.",
                "Answer": "ALTER TABLE staff ADD COLUMN phone VARCHAR(20)"
            },
            {
                "User": "Now that we have a 'phone' column, let's update the phone number for staff member John Doe to '555-1234'.",
                "Answer": "UPDATE staff SET phone = '555-1234' WHERE first_name = 'John' AND last_name = 'Doe'"
            },
            {
                "User": "Can we see the inventory changes for the past week?",
                "Answer": "SELECT * FROM inventory_log WHERE change_date > datetime('now', '-7 days')"
            },
            {
                "User": "What are the top 3 categories with the most films?",
                "Answer": "SELECT category.name, COUNT(film_category.film_id) AS film_count FROM category INNER JOIN film_category ON category.category_id = film_category.category_id GROUP BY category.name ORDER BY film_count DESC LIMIT 3"
            }
        ]
    },
    {
        "idx": 497,
        "db": "sakila_1",
        "interaction": [
            {
                "User": "Can we add a new category called 'Sci-Fi' to the categories? The category_id is 17",
                "Answer": "INSERT INTO category (category_id, name, last_update) VALUES (17, 'Sci-Fi', CURRENT_TIMESTAMP);"
            },
            {
                "User": "How many categories do we have now?",
                "Answer": "SELECT COUNT(*) FROM category;"
            },
            {
                "User": "Which city has the most addresses listed?",
                "Answer": "SELECT city_id, COUNT(*) as address_count FROM address GROUP BY city_id ORDER BY address_count DESC LIMIT 1;"
            },
            {
                "User": "Can you show me the name of that city?",
                "Answer": "SELECT city FROM city WHERE city_id = (SELECT city_id FROM address GROUP BY city_id ORDER BY COUNT(*) DESC LIMIT 1);"
            },
            {
                "User": "I want to update the rental rate for 'ACADEMY DINOSAUR' to $1.99.",
                "Answer": "UPDATE film SET rental_rate = 1.99 WHERE title = 'ACADEMY DINOSAUR';"
            },
            {
                "User": "What is the new rental rate for 'ACADEMY DINOSAUR' now?",
                "Answer": "SELECT rental_rate FROM film WHERE title = 'ACADEMY DINOSAUR';"
            },
            {
                "User": "Could you create a table to track the number of times a movie has been rented?",
                "Answer": "CREATE TABLE film_rental_count (film_id number, rental_count number, PRIMARY KEY (film_id));"
            },
            {
                "User": "Now, can you populate this new table with the current rental counts from the rental table?",
                "Answer": "INSERT INTO film_rental_count (film_id, rental_count) SELECT inventory.film_id, COUNT(rental_id) FROM rental INNER JOIN inventory ON rental.inventory_id = inventory.inventory_id GROUP BY inventory.film_id;"
            },
            {
                "User": "Can you tell me which movies have been rented more than 50 times?",
                "Answer": "SELECT film.title FROM film INNER JOIN film_rental_count ON film.film_id = film_rental_count.film_id WHERE rental_count > 50;"
            },
            {
                "User": "Let's add a new column 'last_rented' to track the last time a movie was rented.",
                "Answer": "ALTER TABLE film ADD COLUMN last_rented time;"
            },
            {
                "User": "Update the 'last_rented' for 'ACADEMY DINOSAUR' to the current timestamp.",
                "Answer": "UPDATE film SET last_rented = CURRENT_TIMESTAMP WHERE title = 'ACADEMY DINOSAUR';"
            },
            {
                "User": "When was the last time 'ACADEMY DINOSAUR' was rented?",
                "Answer": "SELECT last_rented FROM film WHERE title = 'ACADEMY DINOSAUR';"
            },
            {
                "User": "Create a new table to store staff login attempts with columns 'staff_id', 'attempt_time', and 'success'.",
                "Answer": "CREATE TABLE staff_login_attempts (staff_id number, attempt_time time, success boolean, PRIMARY KEY (staff_id, attempt_time));"
            },
            {
                "User": "Record a failed login attempt for staff member with ID 1.",
                "Answer": "INSERT INTO staff_login_attempts (staff_id, attempt_time, success) VALUES (1, CURRENT_TIMESTAMP, FALSE);"
            }
        ]
    },
    {
        "idx": 498,
        "db": "mountain_photos",
        "interaction": [
            {
                "User": "What's the highest mountain in the database?",
                "Answer": "SELECT name, MAX(Height) FROM mountain"
            },
            {
                "User": "Could you add a new mountain called 'Mount Spectacular' with a height of 4500 meters, a prominence of 2000 meters, in the 'Imaginary Range' located in 'Utopia'?",
                "Answer": "INSERT INTO mountain (id, name, Height, Prominence, Range, Country) VALUES ((SELECT MAX(id)+1 FROM mountain), 'Mount Spectacular', 4500, 2000, 'Imaginary Range', 'Utopia')"
            },
            {
                "User": "I just realized that the color information for the photo named 'monkey' is incorrect. It should be 'RGB' instead of 'RBG'. Can you update that?",
                "Answer": "UPDATE photos SET color = 'RGB' WHERE name = 'monkey'"
            },
            {
                "User": "We need to track the date when each photo was taken. Can you add a 'date_taken' column to the 'photos' table with the type 'text'?",
                "Answer": "ALTER TABLE photos ADD date_taken text"
            },
            {
                "User": "Now that we have the date column, can you set the date for the photo named 'monkey' to '2023-04-01'?",
                "Answer": "UPDATE photos SET date_taken = '2023-04-01' WHERE name = 'monkey'"
            },
            {
                "User": "I am interested in creating a new table to log user activities. Can you create a table called 'user_activity' with columns for 'id', 'user_id', 'activity_type', and 'timestamp'?",
                "Answer": "CREATE TABLE user_activity (id number PRIMARY KEY, user_id number, activity_type text, timestamp text)"
            },
            {
                "User": "Can you show me the name and country of mountains that are higher than 4200 meters?",
                "Answer": "SELECT name, Country FROM mountain WHERE Height > 4200"
            },
            {
                "User": "Let's log a new activity for user 123, who performed a 'search' action just now. The timestamp is '2023-04-15 10:00:00'.",
                "Answer": "INSERT INTO user_activity (id, user_id, activity_type, timestamp) VALUES ((SELECT MAX(id)+1 FROM user_activity), 123, 'search', '2023-04-15 10:00:00')"
            },
            {
                "User": "I'd like to see all photos taken with a lens that has a focal length of 45mm. Can you list them?",
                "Answer": "SELECT p.name FROM photos p JOIN camera_lens cl ON p.camera_lens_id = cl.id WHERE cl.focal_length_mm = 45"
            },
            {
                "User": "Can we update the 'camera_lens' table to include a new column for 'lens_type'?",
                "Answer": "ALTER TABLE camera_lens ADD lens_type text"
            },
            {
                "User": "For the lens 'Olympus M.Zuiko Digital ED 45mm f/1.8', can you set the 'lens_type' as 'Prime'?",
                "Answer": "UPDATE camera_lens SET lens_type = 'Prime' WHERE name = 'Olympus M.Zuiko Digital ED 45mm f/1.8'"
            },
            {
                "User": "I'd like to compare the heights of mountains in Ethiopia. Can you provide me with a list sorted by height?",
                "Answer": "SELECT name, Height FROM mountain WHERE Country = 'Ethiopia' ORDER BY Height DESC"
            }
        ]
    },
    {
        "idx": 499,
        "db": "mountain_photos",
        "interaction": [
            {
                "User": "Can we add a new mountain to the database?",
                "Answer": "INSERT INTO mountain (id, name, Height, Prominence, Range, Country) VALUES (24, 'Mount NewPeak', 3200, 1500, 'NewRange', 'Wonderland')"
            },
            {
                "User": "What is the highest mountain in the database now?",
                "Answer": "SELECT name, MAX(Height) FROM mountain"
            },
            {
                "User": "Can we record the date when the photo was taken?",
                "Answer": "ALTER TABLE photos ADD COLUMN date_taken DATE"
            },
            {
                "User": "Please add a new photo with today's date.",
                "Answer": "INSERT INTO photos (id, camera_lens_id, mountain_id, color, name, date_taken) VALUES (11, 2, 24, 'RBG', 'sunrise', CURRENT_DATE)"
            },
            {
                "User": "Which camera lens has the smallest focal length?",
                "Answer": "SELECT name, MIN(focal_length_mm) FROM camera_lens"
            },
            {
                "User": "Can we update the color of the photo named 'monkey' to 'RGB'?",
                "Answer": "UPDATE photos SET color = 'RGB' WHERE name = 'monkey'"
            },
            {
                "User": "I'd like to see all photos taken with Olympus lenses after adding the date_taken column.",
                "Answer": "SELECT T1.name, T1.date_taken FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id WHERE T2.brand = 'Olympus'"
            },
            {
                "User": "Can we have a view that lists all photos with the mountain names and lens brands?",
                "Answer": "CREATE VIEW photos_info AS SELECT T1.id, T1.name AS photo_name, T2.name AS mountain_name, T3.brand AS lens_brand FROM photos T1 JOIN mountain T2 ON T1.mountain_id = T2.id JOIN camera_lens T3 ON T1.camera_lens_id = T3.id"
            },
            {
                "User": "Show me all records from the view we just created.",
                "Answer": "SELECT * FROM photos_info"
            },
            {
                "User": "Can we track the photographer's name for each photo?",
                "Answer": "ALTER TABLE photos ADD COLUMN photographer_name TEXT"
            },
            {
                "User": "Please add my name 'Alex' as the photographer for the 'sunrise' photo.",
                "Answer": "UPDATE photos SET photographer_name = 'Alex' WHERE name = 'sunrise'"
            },
            {
                "User": "List all photos taken by 'Alex'.",
                "Answer": "SELECT name FROM photos WHERE photographer_name = 'Alex'"
            },
            {
                "User": "Can we add a new table to track photo ratings?",
                "Answer": "CREATE TABLE photo_ratings (id number, photo_id number, rating number, PRIMARY KEY (id), FOREIGN KEY (photo_id) REFERENCES photos(id))"
            },
            {
                "User": "Add a 5-star rating for the 'sunrise' photo.",
                "Answer": "INSERT INTO photo_ratings (id, photo_id, rating) VALUES (1, 11, 5)"
            }
        ]
    },
    {
        "idx": 500,
        "db": "architecture",
        "interaction": [
            {
                "User": "Can we add a new architect to the database? With id, name, nationality, gender are 6, 'Norman Foster', 'British', 'male'",
                "Answer": "INSERT INTO architect (id, name, nationality, gender) VALUES (6, 'Norman Foster', 'British', 'male')"
            },
            {
                "User": "Now, what is the nationality of Norman Foster?",
                "Answer": "SELECT nationality FROM architect WHERE name = 'Norman Foster'"
            },
            {
                "User": "Let's add a bridge designed by Norman Foster. It's called 'The Millennium Bridge' in London.",
                "Answer": "INSERT INTO bridge (architect_id, id, name, location, length_meters, length_feet) VALUES (4, 16, 'The Millennium Bridge', 'London, UK', 325, 1066)"
            },
            {
                "User": "What is the length in meters of 'The Millennium Bridge'?",
                "Answer": "SELECT length_meters FROM bridge WHERE name = 'The Millennium Bridge'"
            },
            {
                "User": "I need to update the built year of the 'Moulin de Fexhe' to 1850.",
                "Answer": "UPDATE mill SET built_year = 1850 WHERE name = 'Moulin de Fexhe'"
            },
            {
                "User": "What is the new built year of the 'Moulin de Fexhe' now?",
                "Answer": "SELECT built_year FROM mill WHERE name = 'Moulin de Fexhe'"
            },
            {
                "User": "I noticed we don't have information on the materials used for the bridges. Can we add a column for that?",
                "Answer": "ALTER TABLE bridge ADD COLUMN material TEXT"
            },
            {
                "User": "Let's set the material of 'The Millennium Bridge' to steel.",
                "Answer": "UPDATE bridge SET material = 'steel' WHERE name = 'The Millennium Bridge'"
            },
            {
                "User": "Can you show me all the bridges that are made of steel?",
                "Answer": "SELECT name, location FROM bridge WHERE material = 'steel'"
            },
            {
                "User": "We need a new table for bridge visitors statistics. Can you create that?",
                "Answer": "CREATE TABLE bridge_visitors (id NUMBER PRIMARY KEY, bridge_id NUMBER, year NUMBER, visitors_count NUMBER)"
            },
            {
                "User": "Let's add visitor statistics for 'The Millennium Bridge' for the year 2020, with 50000 visitors.",
                "Answer": "INSERT INTO bridge_visitors (id, bridge_id, year, visitors_count) VALUES (1, 16, 2020, 50000)"
            },
            {
                "User": "How many visitors did 'The Millennium Bridge' have in 2020?",
                "Answer": "SELECT visitors_count FROM bridge_visitors WHERE bridge_id = 16 AND year = 2020"
            },
            {
                "User": "Can you give me the average length of the bridges in feet?",
                "Answer": "SELECT AVG(length_feet) FROM bridge"
            }
        ]
    },
    {
        "idx": 501,
        "db": "architecture",
        "interaction": [
            {
                "User": "What is the most common mill type?",
                "Answer": "SELECT TYPE FROM mill GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"
            },
            {
                "User": "How many of those are there?",
                "Answer": "SELECT TYPE, COUNT(*) FROM mill GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"
            },
            {
                "User": "What years were each of those built?",
                "Answer": "SELECT built_year FROM mill WHERE type = (SELECT TYPE FROM mill GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1)"
            },
            {
                "User": "Can you add a column to track the last renovation year for mills?",
                "Answer": "ALTER TABLE mill ADD COLUMN last_renovation_year NUMBER"
            },
            {
                "User": "Please update the last renovation year for the 'Moulin Bertrand' to 2005.",
                "Answer": "UPDATE mill SET last_renovation_year = 2005 WHERE name = 'Moulin Bertrand'"
            },
            {
                "User": "Which mills have been renovated after the year 2000?",
                "Answer": "SELECT name, location, last_renovation_year FROM mill WHERE last_renovation_year > 2000"
            },
            {
                "User": "I'd like to record the architects' birth years. Can we create a new table for that?",
                "Answer": "CREATE TABLE architect_birth_year (architect_id NUMBER PRIMARY KEY, birth_year NUMBER)"
            },
            {
                "User": "Let's insert the birth year 1867 for Frank Lloyd Wright.",
                "Answer": "INSERT INTO architect_birth_year (architect_id, birth_year) VALUES (1, 1867)"
            },
            {
                "User": "Now, can we see a list of architects with their names and birth years?",
                "Answer": "SELECT a.name, aby.birth_year FROM architect a JOIN architect_birth_year aby ON a.id = aby.architect_id"
            },
            {
                "User": "I realized we also need a column for the architects' death years. Please add it.",
                "Answer": "ALTER TABLE architect_birth_year ADD COLUMN death_year NUMBER"
            },
            {
                "User": "Update the death year for Frank Lloyd Wright to 1959.",
                "Answer": "UPDATE architect_birth_year SET death_year = 1959 WHERE architect_id = 1"
            },
            {
                "User": "Can we get a list of all architects with their birth and death years?",
                "Answer": "SELECT a.name, aby.birth_year, aby.death_year FROM architect a JOIN architect_birth_year aby ON a.id = aby.architect_id"
            },
            {
                "User": "Let's create a new table to track bridge renovations.",
                "Answer": "CREATE TABLE bridge_renovation (bridge_id NUMBER PRIMARY KEY, renovation_date DATE)"
            },
            {
                "User": "Insert a renovation record for the 'Fairy Bridge' with the date '2020-05-15'.",
                "Answer": "INSERT INTO bridge_renovation (bridge_id, renovation_date) VALUES (1, '2020-05-15')"
            }
        ]
    },
    {
        "idx": 502,
        "db": "cre_Theme_park",
        "interaction": [
            {
                "User": "Can we track the email addresses of our visitors?",
                "Answer": "ALTER TABLE Visitors ADD COLUMN Email_Address text;"
            },
            {
                "User": "Please add my email 'john.doe@example.com' to my visitor record. My Tourist ID is 164.",
                "Answer": "UPDATE Visitors SET Email_Address = 'john.doe@example.com' WHERE Tourist_ID = 164;"
            },
            {
                "User": "I want to know how many visitors are scheduled to visit 'Astro Orbiter' tomorrow.",
                "Answer": "SELECT count(*) FROM Visits WHERE Tourist_Attraction_ID = 333 AND Visit_Date = date('now', '+1 day');"
            },
            {
                "User": "Can we add a feature to track the duration of each visit?",
                "Answer": "ALTER TABLE Visits ADD COLUMN Duration_Hours number;"
            },
            {
                "User": "I stayed at the 'Astro Orbiter' for 3 hours today. Please update my visit record accordingly.",
                "Answer": "UPDATE Visits SET Duration_Hours = 3 WHERE Tourist_ID = 164 AND Visit_Date = CURRENT_DATE AND Tourist_Attraction_ID = 333;"
            },
            {
                "User": "What's the average duration of visits for all attractions today?",
                "Answer": "SELECT AVG(Duration_Hours) FROM Visits WHERE Visit_Date = CURRENT_DATE;"
            },
            {
                "User": "I'd like to create a new table to track visitor feedback on attractions. Can you do that?",
                "Answer": "CREATE TABLE Visitor_Feedback (Feedback_ID number PRIMARY KEY, Tourist_Attraction_ID number, Tourist_ID number, Feedback_Text text, Rating number, Visit_Date time);"
            },
            {
                "User": "I want to leave feedback for my visit to 'Astro Orbiter'. My rating is 5 and the experience was amazing!",
                "Answer": "INSERT INTO Visitor_Feedback (Feedback_ID, Tourist_Attraction_ID, Tourist_ID, Feedback_Text, Rating, Visit_Date) VALUES ((SELECT COALESCE(MAX(Feedback_ID), 0) + 1 FROM Visitor_Feedback), 333, 164, 'The experience was amazing!', 5, CURRENT_DATE);"
            },
            {
                "User": "Can we see the average rating for each attraction?",
                "Answer": "SELECT Tourist_Attraction_ID, AVG(Rating) as Average_Rating FROM Visitor_Feedback GROUP BY Tourist_Attraction_ID;"
            },
            {
                "User": "Let's add a new feature called 'Gift Shop' to our features list.",
                "Answer": "INSERT INTO Features (Feature_ID, Feature_Details) VALUES ((SELECT COALESCE(MAX(Feature_ID), 0) + 1 FROM Features), 'Gift Shop');"
            },
            {
                "User": "Can you show me a list of attractions that have a 'Gift Shop'?",
                "Answer": "SELECT TA.Tourist_Attraction_ID, TA.Name FROM Tourist_Attractions TA JOIN Tourist_Attraction_Features TAF ON TA.Tourist_Attraction_ID = TAF.Tourist_Attraction_ID JOIN Features F ON TAF.Feature_ID = F.Feature_ID WHERE F.Feature_Details = 'Gift Shop';"
            },
            {
                "User": "I heard there's a new 'Gift Shop' feature. Can we add that feature to 'Astro Orbiter'?",
                "Answer": "INSERT INTO Tourist_Attraction_Features (Tourist_Attraction_ID, Feature_ID) VALUES (333, (SELECT Feature_ID FROM Features WHERE Feature_Details = 'Gift Shop'));"
            }
        ]
    },
    {
        "idx": 503,
        "db": "cre_Theme_park",
        "interaction": [
            {
                "User": "Which places did Alison visit",
                "Answer": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID JOIN Visitors AS T2 ON T3.Tourist_ID = T2.Tourist_ID WHERE T2.Tourist_Details = 'Alison'"
            },
            {
                "User": "And which of those did Rosalind not visit",
                "Answer": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID JOIN Visitors AS T2 ON T3.Tourist_ID = T2.Tourist_ID WHERE T2.Tourist_Details = 'Alison' EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID JOIN Visitors AS T2 ON T3.Tourist_ID = T2.Tourist_ID WHERE T2.Tourist_Details = 'Rosalind'"
            },
            {
                "User": "Can we add a feature to track the favorite attractions for each visitor?",
                "Answer": "ALTER TABLE Visitors ADD COLUMN Favorite_Attraction_ID number REFERENCES Tourist_Attractions(Tourist_Attraction_ID)"
            },
            {
                "User": "Set the favorite attraction for visitor Toney to 'art museum'.",
                "Answer": "UPDATE Visitors SET Favorite_Attraction_ID = (SELECT Tourist_Attraction_ID FROM Tourist_Attractions WHERE Name = 'art museum') WHERE Tourist_Details = 'Toney'"
            },
            {
                "User": "What is the favorite attraction of Toney now?",
                "Answer": "SELECT TA.Name FROM Tourist_Attractions AS TA JOIN Visitors AS V ON TA.Tourist_Attraction_ID = V.Favorite_Attraction_ID WHERE V.Tourist_Details = 'Toney'"
            },
            {
                "User": "Create a new table to log when visitors favorite an attraction.",
                "Answer": "CREATE TABLE Visitor_Favorites (Favorite_ID number PRIMARY KEY, Tourist_ID number REFERENCES Visitors(Tourist_ID), Tourist_Attraction_ID number REFERENCES Tourist_Attractions(Tourist_Attraction_ID), Favorited_On time)"
            },
            {
                "User": "Add a log that visitor Vincent favorited 'UK gallery' on March 5th, 2023.",
                "Answer": "INSERT INTO Visitor_Favorites (Favorite_ID, Tourist_ID, Tourist_Attraction_ID, Favorited_On) VALUES (1, (SELECT Tourist_ID FROM Visitors WHERE Tourist_Details = 'Vincent'), (SELECT Tourist_Attraction_ID FROM Tourist_Attractions WHERE Name = 'UK gallery'), '2023-03-05 00:00:00')"
            },
            {
                "User": "Show the complete list of favorites for each visitor.",
                "Answer": "SELECT V.Tourist_Details, TA.Name FROM Visitor_Favorites AS VF JOIN Visitors AS V ON VF.Tourist_ID = V.Tourist_ID JOIN Tourist_Attractions AS TA ON VF.Tourist_Attraction_ID = TA.Tourist_Attraction_ID"
            },
            {
                "User": "I want to see all visitors who have 'Disney' as their favorite attraction.",
                "Answer": "SELECT V.Tourist_Details FROM Visitors AS V JOIN Tourist_Attractions AS TA ON V.Favorite_Attraction_ID = TA.Tourist_Attraction_ID WHERE TA.Name = 'Disney'"
            },
            {
                "User": "Update the favorite attraction for Graciela to 'Sea World'.",
                "Answer": "UPDATE Visitors SET Favorite_Attraction_ID = (SELECT Tourist_Attraction_ID FROM Tourist_Attractions WHERE Name = 'Sea World') WHERE Tourist_Details = 'Graciela'"
            }
        ]
    },
    {
        "idx": 504,
        "db": "college_3",
        "interaction": [
            {
                "User": "Can we add a new student to the database?",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Johnson', 'Alex', 20, 'M', 600, 1121, 'NYC')"
            },
            {
                "User": "I'd like to update the phone number for Professor Goodrich. His new number is 3622.",
                "Answer": "UPDATE Faculty SET Phone = 3622 WHERE Fname = 'Michael' AND Lname = 'Goodrich'"
            },
            {
                "User": "Is there a way to track the minors for each student?",
                "Answer": "CREATE TABLE Student_Minors (StuID number, MinorDNO number, FOREIGN KEY (StuID) REFERENCES Student(StuID), FOREIGN KEY (MinorDNO) REFERENCES Department(DNO))"
            },
            {
                "User": "Can we list all students who are majoring in department 600 and have a minor?",
                "Answer": "SELECT S.StuID, S.LName, S.Fname FROM Student S LEFT JOIN Student_Minors SM ON S.StuID = SM.StuID WHERE S.Major = 600 AND SM.MinorDNO IS NOT NULL"
            },
            {
                "User": "I want to add a 'Computer Science' minor to student Alex Johnson.",
                "Answer": "INSERT INTO Student_Minors (StuID, MinorDNO) VALUES (1004, 600)"
            },
            {
                "User": "Can we add a new 'Email' column to the Faculty table to store their email addresses?",
                "Answer": "ALTER TABLE Faculty ADD Email text"
            },
            {
                "User": "Please update the email for Professor Goodrich to 'mgoodrich@college.edu'.",
                "Answer": "UPDATE Faculty SET Email = 'mgoodrich@college.edu' WHERE Fname = 'Michael' AND Lname = 'Goodrich'"
            },
            {
                "User": "What courses are available in the 'AS' division?",
                "Answer": "SELECT C.CID, C.CName FROM Course C JOIN Department D ON C.DNO = D.DNO WHERE D.Division = 'AS'"
            },
            {
                "User": "Can we create a new table to log changes made to student records?",
                "Answer": "CREATE TABLE Student_Changelog (ChangeID number PRIMARY KEY, StuID number, Description text, ChangeDate date, FOREIGN KEY (StuID) REFERENCES Student(StuID))"
            },
            {
                "User": "Log the addition of the new student Alex Johnson.",
                "Answer": "INSERT INTO Student_Changelog (ChangeID, StuID, Description, ChangeDate) VALUES (1, 1004, 'Added new student Alex Johnson', CURRENT_DATE)"
            },
            {
                "User": "Can we see the latest changes made to the student records?",
                "Answer": "SELECT * FROM Student_Changelog ORDER BY ChangeDate DESC LIMIT 5"
            }
        ]
    },
    {
        "idx": 505,
        "db": "college_3",
        "interaction": [
            {
                "User": "How many students are enrolled in the 'INTRODUCTION TO COMPUTER SCIENCE' course?",
                "Answer": "SELECT COUNT(*) FROM Enrolled_in JOIN Course ON Enrolled_in.CID = Course.CID WHERE Course.CName = 'INTRODUCTION TO COMPUTER SCIENCE'"
            },
            {
                "User": "Can you add a new student named John Doe, aged 22, male, majoring in department 600 with an advisor 1121 from city 'NYC'?",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 22, 'M', 600, 1121, 'NYC')"
            },
            {
                "User": "I'd like to update the phone number for faculty member Mark Giuliano to 555-1234.",
                "Answer": "UPDATE Faculty SET Phone = 5551234 WHERE Lname = 'Giuliano' AND Fname = 'Mark'"
            },
            {
                "User": "What are the names of the faculty members who have a phone number starting with '555'?",
                "Answer": "SELECT Fname, Lname FROM Faculty WHERE Phone LIKE '555%'"
            },
            {
                "User": "Can we create a new table to track extracurricular activities with columns for activity ID, name, and associated department number?",
                "Answer": "CREATE TABLE Extracurricular_Activities (ActID number PRIMARY KEY, ActName text, DNO number)"
            },
            {
                "User": "Now, please add an extracurricular activity 'Chess Club' associated with department number 20.",
                "Answer": "INSERT INTO Extracurricular_Activities (ActID, ActName, DNO) VALUES (1, 'Chess Club', 20)"
            },
            {
                "User": "Let's add a column 'Minor' to the Student table to indicate whether they have a minor or not.",
                "Answer": "ALTER TABLE Student ADD Minor text"
            },
            {
                "User": "Can you update John Doe's record to indicate that he has a minor in department 520?",
                "Answer": "UPDATE Student SET Minor = 'Yes' WHERE Fname = 'John' AND LName = 'Doe'"
            },
            {
                "User": "For students who have a minor, can you show me their first name, last name, and the department number of their minor?",
                "Answer": "SELECT S.Fname, S.LName, M.DNO FROM Student S JOIN Minor_in M ON S.StuID = M.StuID WHERE S.Minor = 'Yes'"
            },
            {
                "User": "What are the names and IDs of the students who are minors in any department and are also a part of 'Chess Club'?",
                "Answer": "SELECT S.Fname, S.LName, S.StuID FROM Student S JOIN Minor_in M ON S.StuID = M.StuID JOIN Extracurricular_Activities E ON M.DNO = E.DNO WHERE S.Minor = 'Yes' AND E.ActName = 'Chess Club'"
            },
            {
                "User": "I'd like to update the grade for student with ID 1001 in course '600.303' to 'A'.",
                "Answer": "UPDATE Enrolled_in SET Grade = 'A' WHERE StuID = 1001 AND CID = '600.303'"
            }
        ]
    },
    {
        "idx": 506,
        "db": "voter_2",
        "interaction": [
            {
                "User": "How many students are majoring in number 600?",
                "Answer": "SELECT COUNT(*) FROM STUDENT WHERE Major = 600"
            },
            {
                "User": "I want to update Linda Smith's major to 700. What's the SQL for that?",
                "Answer": "UPDATE STUDENT SET Major = 700 WHERE LName = 'Smith' AND Fname = 'Linda'"
            },
            {
                "User": "Can you show me the updated major for Linda Smith?",
                "Answer": "SELECT Major FROM STUDENT WHERE LName = 'Smith' AND Fname = 'Linda'"
            },
            {
                "User": "Let's add a new student named John Doe with StuID 1036, age 20, sex M, major 600, advisor 1121, and city_code 'NYC'.",
                "Answer": "INSERT INTO STUDENT (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 600, 1121, 'NYC')"
            },
            {
                "User": "What are the names of students who have just been added to the database?",
                "Answer": "SELECT LName, Fname FROM STUDENT WHERE StuID >= 1004"
            },
            {
                "User": "I need to add a new column 'Email' to the Student table. What's the command for that?",
                "Answer": "ALTER TABLE STUDENT ADD Email text"
            },
            {
                "User": "Please insert the email 'john.doe@example.com' for John Doe.",
                "Answer": "UPDATE STUDENT SET Email = 'john.doe@example.com' WHERE LName = 'Doe' AND Fname = 'John'"
            },
            {
                "User": "Can you show me all the students and their emails?",
                "Answer": "SELECT LName, Fname, Email FROM STUDENT"
            },
            {
                "User": "Let's create a new table for student clubs with columns ClubID, ClubName, and PresidentID.",
                "Answer": "CREATE TABLE Student_Clubs (ClubID number PRIMARY KEY, ClubName text, PresidentID number)"
            },
            {
                "User": "Add a new club 'Computer Science Club' with ClubID 1 and president John Doe.",
                "Answer": "INSERT INTO Student_Clubs (ClubID, ClubName, PresidentID) VALUES (1, 'Computer Science Club', (SELECT StuID FROM STUDENT WHERE LName = 'Doe' AND Fname = 'John'))"
            },
            {
                "User": "Show me all the clubs and their presidents' names.",
                "Answer": "SELECT SC.ClubName, S.LName, S.Fname FROM Student_Clubs AS SC JOIN STUDENT AS S ON SC.PresidentID = S.StuID"
            },
            {
                "User": "I want to update the Treasurer vote for student 1001 to 1040. Can you do that?",
                "Answer": "UPDATE VOTING_RECORD SET Treasurer_Vote = 1040 WHERE StuID = 1001"
            },
            {
                "User": "Who is the treasurer that student 1001 voted for now?",
                "Answer": "SELECT Treasurer_Vote FROM VOTING_RECORD WHERE StuID = 1001"
            },
            {
                "User": "Can we add a column 'Club_Membership' to the Student table to track club memberships?",
                "Answer": "ALTER TABLE STUDENT ADD Club_Membership number"
            },
            {
                "User": "Let's record that Linda Smith is a member of the Computer Science Club. How do we do that?",
                "Answer": "UPDATE STUDENT SET Club_Membership = (SELECT ClubID FROM Student_Clubs WHERE ClubName = 'Computer Science Club') WHERE LName = 'Smith' AND Fname = 'Linda'"
            }
        ]
    },
    {
        "idx": 507,
        "db": "voter_2",
        "interaction": [
            {
                "User": "What is the first and last name of all students 18 years old who have vice president votes?",
                "Answer": "SELECT DISTINCT T1.Fname, T1.LName FROM Student AS T1 JOIN Voting_record AS T2 ON T1.StuID = T2.Vice_President_Vote WHERE T1.Age = 18"
            },
            {
                "User": "Ok, what is the first and last name of the student who has president votes?",
                "Answer": "SELECT DISTINCT T1.Fname, T1.LName FROM Student AS T1 JOIN Voting_record AS T2 ON T1.StuID = T2.President_Vote"
            },
            {
                "User": "Ok, and of the students who had President votes how many were males?",
                "Answer": "SELECT COUNT(*) FROM Student AS T1 JOIN Voting_record AS T2 ON T1.StuID = T2.President_Vote WHERE T1.Sex = 'M'"
            },
            {
                "User": "Can we add a new student record to the database?",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 601, 1122, 'NYC')"
            },
            {
                "User": "I want to update the major for student Linda Smith to 601. Can you do that?",
                "Answer": "UPDATE Student SET Major = 601 WHERE LName = 'Smith' AND Fname = 'Linda'"
            },
            {
                "User": "Can we create a new table to track the students' club memberships?",
                "Answer": "CREATE TABLE Club_Memberships (StuID number, ClubID number, Join_Date text, PRIMARY KEY (StuID, ClubID))"
            },
            {
                "User": "Let's add a new club membership for Linda Smith with ClubID 2001 and today's date as the join date.",
                "Answer": "INSERT INTO Club_Memberships (StuID, ClubID, Join_Date) VALUES ((SELECT StuID FROM Student WHERE LName = 'Smith' AND Fname = 'Linda'), 2001, CURRENT_DATE)"
            },
            {
                "User": "I realized we need to keep track of the students' email addresses as well. Can you add that to the Student table?",
                "Answer": "ALTER TABLE Student ADD COLUMN Email text"
            },
            {
                "User": "Please update John Doe's email to johndoe@example.com.",
                "Answer": "UPDATE Student SET Email = 'johndoe@example.com' WHERE LName = 'Doe' AND Fname = 'John'"
            },
            {
                "User": "Can you show me the names and email addresses of all students who joined club 2001?",
                "Answer": "SELECT T1.Fname, T1.LName, T1.Email FROM Student AS T1 JOIN Club_Memberships AS T2 ON T1.StuID = T2.StuID WHERE T2.ClubID = 2001"
            },
            {
                "User": "How many students have updated their email addresses?",
                "Answer": "SELECT COUNT(*) FROM Student WHERE Email IS NOT NULL"
            },
            {
                "User": "We need to track the students' birth dates as well. Please update the Student table to include this information.",
                "Answer": "ALTER TABLE Student ADD COLUMN Birth_Date text"
            },
            {
                "User": "Set the birth date for Tracy Kim to January 1st, 2004.",
                "Answer": "UPDATE Student SET Birth_Date = '01/01/2004' WHERE LName = 'Kim' AND Fname = 'Tracy'"
            }
        ]
    },
    {
        "idx": 508,
        "db": "body_builder",
        "interaction": [
            {
                "User": "which builder has the highest total points?",
                "Answer": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Total DESC LIMIT 1"
            },
            {
                "User": "what is his ID?",
                "Answer": "SELECT T1.Body_Builder_ID FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Total DESC LIMIT 1"
            },
            {
                "User": "Can we track the date of their best performance?",
                "Answer": "ALTER TABLE body_builder ADD COLUMN Best_Performance_Date text"
            },
            {
                "User": "Update the best performance date for the top performer to today's date.",
                "Answer": "UPDATE body_builder SET Best_Performance_Date = '2023-04-01' WHERE Body_Builder_ID = (SELECT Body_Builder_ID FROM body_builder ORDER BY Total DESC LIMIT 1)"
            },
            {
                "User": "I want to see the name and best performance date of the top three performers.",
                "Answer": "SELECT T2.Name, T1.Best_Performance_Date FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Total DESC LIMIT 3"
            },
            {
                "User": "Let's add a new competitor with ID 7, name 'Alex Smith', height 185, weight 85, born on 'July 20, 1990', birthplace 'Denver, Colorado'.",
                "Answer": "INSERT INTO people (People_ID, Name, Height, Weight, Birth_Date, Birth_Place) VALUES (7, 'Alex Smith', 185, 85, 'July 20, 1990', 'Denver, Colorado')"
            },
            {
                "User": "Now add Alex Smith's body builder record with ID 6, snatch 130, clean and jerk 160, and total 290, with the builrder id is 4",
                "Answer": "INSERT INTO body_builder (Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total) VALUES (6, 4, 130, 160, 290)"
            },
            {
                "User": "Who is the youngest competitor?",
                "Answer": "SELECT Name FROM people ORDER BY Birth_Date DESC LIMIT 1"
            },
            {
                "User": "Create a new table to log workout sessions with columns for session ID, body builder ID, date, and duration in minutes.",
                "Answer": "CREATE TABLE workout_sessions (Session_ID number PRIMARY KEY, Body_Builder_ID number, Session_Date text, Duration_Minutes number)"
            },
            {
                "User": "Log a new workout session for the body builder with ID 2 on 'April 2, 2023' with a duration of 90 minutes.",
                "Answer": "INSERT INTO workout_sessions (Session_ID, Body_Builder_ID, Session_Date, Duration_Minutes) VALUES (1, 2, 'April 2, 2023', 90)"
            },
            {
                "User": "Show me all the workout sessions logged for the top performer by total points.",
                "Answer": "SELECT WS.* FROM workout_sessions AS WS JOIN (SELECT Body_Builder_ID FROM body_builder ORDER BY Total DESC LIMIT 1) AS BB ON WS.Body_Builder_ID = BB.Body_Builder_ID"
            },
            {
                "User": "Increase the total points of Alex Smith by 10.",
                "Answer": "UPDATE body_builder SET Total = Total + 10 WHERE Body_Builder_ID = 4"
            }
        ]
    },
    {
        "idx": 509,
        "db": "body_builder",
        "interaction": [
            {
                "User": "Can you add a new record for a body builder named Emily White?",
                "Answer": "INSERT INTO people (People_ID, Name, Height, Weight, Birth_Date, Birth_Place) VALUES (7, 'Emily White', 170, 65, 'July 5, 1990', 'Denver, Colorado')"
            },
            {
                "User": "Now, record Emily's snatch and clean jerk scores as 120 and 150 respectively.",
                "Answer": "INSERT INTO body_builder (Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total) VALUES (6, 7, 120, 150, 270)"
            },
            {
                "User": "How much does Emily White weigh?",
                "Answer": "SELECT Weight FROM people WHERE Name = 'Emily White'"
            },
            {
                "User": "What's the total score of the body builder with the highest clean jerk score?",
                "Answer": "SELECT Total FROM body_builder WHERE Clean_Jerk = (SELECT MAX(Clean_Jerk) FROM body_builder)"
            },
            {
                "User": "Can you update Jack Campbell's weight to 85 kg?",
                "Answer": "UPDATE people SET Weight = 85 WHERE Name = 'Jack Campbell'"
            },
            {
                "User": "I'd like to compare the snatch scores of Jack Campbell and Ty Conklin. Can you do that?",
                "Answer": "SELECT p.Name, bb.Snatch FROM body_builder bb JOIN people p ON bb.People_ID = p.People_ID WHERE p.Name IN ('Jack Campbell', 'Ty Conklin')"
            },
            {
                "User": "Is there a way to track the city where our body builders are most successful?",
                "Answer": "ALTER TABLE body_builder ADD COLUMN Success_City text"
            },
            {
                "User": "Great, now set the success city for Emily White to 'Denver'.",
                "Answer": "UPDATE body_builder SET Success_City = 'Denver' WHERE Body_Builder_ID = (SELECT People_ID FROM people WHERE Name = 'Emily White')"
            },
            {
                "User": "Let's create a table for body builder achievements with columns for ID, title, and date.",
                "Answer": "CREATE TABLE achievements (Achievement_ID number PRIMARY KEY, Body_Builder_ID number, Title text, Achievement_Date text, FOREIGN KEY (Body_Builder_ID) REFERENCES body_builder(Body_Builder_ID))"
            },
            {
                "User": "Add a record of an achievement for Ty Conklin winning 'Best Lifter' on 'August 15, 2020'.",
                "Answer": "INSERT INTO achievements (Achievement_ID, Body_Builder_ID, Title, Achievement_Date) VALUES (1, 2, 'Best Lifter', 'August 15, 2020')"
            },
            {
                "User": "Can you show me all the achievements of body builders from 'Anchorage, Alaska'?",
                "Answer": "SELECT a.Title, a.Achievement_Date FROM achievements a JOIN people p ON a.Body_Builder_ID = p.People_ID WHERE p.Birth_Place = 'Anchorage, Alaska'"
            },
            {
                "User": "I'd like to see the list of body builders who are taller than 190 cm.",
                "Answer": "SELECT Name FROM people WHERE Height > 190"
            }
        ]
    },
    {
        "idx": 510,
        "db": "wedding",
        "interaction": [
            {
                "User": "Can we add a record of a new church that just opened?",
                "Answer": "INSERT INTO church (Church_ID, Name, Organized_by, Open_Date, Continuation_of) VALUES (10, 'Unity Church', 'Anna Smith', 2023, 'Independent Church')"
            },
            {
                "User": "What is the name of the new church we just added?",
                "Answer": "SELECT Name FROM church WHERE Church_ID = 10"
            },
            {
                "User": "Can we update the country of Juli Hanson to 'Norway'?",
                "Answer": "UPDATE people SET Country = 'Norway' WHERE Name = 'Juli Hanson'"
            },
            {
                "User": "What is Juli Hanson's country now?",
                "Answer": "SELECT Country FROM people WHERE Name = 'Juli Hanson'"
            },
            {
                "User": "Can we add a new column to track the occupation of people?",
                "Answer": "ALTER TABLE people ADD COLUMN Occupation text"
            },
            {
                "User": "Set the occupation of Mike Weir to 'Golfer'.",
                "Answer": "UPDATE people SET Occupation = 'Golfer' WHERE Name = 'Mike Weir'"
            },
            {
                "User": "What is Mike Weir's occupation?",
                "Answer": "SELECT Occupation FROM people WHERE Name = 'Mike Weir'"
            },
            {
                "User": "Who are all the people with the occupation set as 'Golfer'?",
                "Answer": "SELECT Name FROM people WHERE Occupation = 'Golfer'"
            },
            {
                "User": "Can we create a table to track the guests attending weddings?",
                "Answer": "CREATE TABLE wedding_guests (Guest_ID number, Wedding_ID number, Name text, RSVP text, PRIMARY KEY (Guest_ID))"
            },
            {
                "User": "Add a guest named 'Emily Stone' who RSVP'd 'Yes' to the wedding with ID 1.",
                "Answer": "INSERT INTO wedding_guests (Guest_ID, Wedding_ID, Name, RSVP) VALUES (1, 1, 'Emily Stone', 'Yes')"
            },
            {
                "User": "Who are the guests that have RSVP'd to wedding ID 1?",
                "Answer": "SELECT Name FROM wedding_guests WHERE Wedding_ID = 1 AND RSVP = 'Yes'"
            },
            {
                "User": "Can we track the number of guests attending each wedding by adding a column to the wedding table?",
                "Answer": "ALTER TABLE wedding ADD COLUMN Guest_Count number"
            },
            {
                "User": "Update the guest count for wedding ID 1 to 120.",
                "Answer": "UPDATE wedding SET Guest_Count = 120 WHERE Church_ID = 1"
            },
            {
                "User": "How many guests are attending the wedding at church ID 1?",
                "Answer": "SELECT Guest_Count FROM wedding WHERE Church_ID = 1"
            },
            {
                "User": "Can we add a column to the church table to indicate whether it has a garden?",
                "Answer": "ALTER TABLE church ADD COLUMN Has_Garden text"
            },
            {
                "User": "Set the 'Has_Garden' value to 'Yes' for the 'Unity Church'.",
                "Answer": "UPDATE church SET Has_Garden = 'Yes' WHERE Name = 'Unity Church'"
            }
        ]
    },
    {
        "idx": 511,
        "db": "wedding",
        "interaction": [
            {
                "User": "Can we track the number of weddings organized by each church?",
                "Answer": "ALTER TABLE church ADD COLUMN Weddings_Organized number;"
            },
            {
                "User": "How do we initialize the count for the number of weddings organized?",
                "Answer": "UPDATE church SET Weddings_Organized = (SELECT COUNT(*) FROM wedding WHERE wedding.Church_ID = church.Church_ID);"
            },
            {
                "User": "Which church has organized the most weddings?",
                "Answer": "SELECT Name FROM church ORDER BY Weddings_Organized DESC LIMIT 1;"
            },
            {
                "User": "Can we see the names of couples married at the 'Pure Church of Christ' since 2015?",
                "Answer": "SELECT p1.Name AS Male_Name, p2.Name AS Female_Name FROM wedding w JOIN people p1 ON w.Male_ID = p1.People_ID JOIN people p2 ON w.Female_ID = p2.People_ID WHERE w.Church_ID = (SELECT Church_ID FROM church WHERE Name = 'Pure Church of Christ') AND w.Year >= 2015;"
            },
            {
                "User": "I'd like to add a new church called 'Unity Chapel', organized by 'Anna Taylor', opened in 2021, and is a continuation of 'Independent Church'.",
                "Answer": "INSERT INTO church (Name, Organized_by, Open_Date, Continuation_of) VALUES ('Unity Chapel', 'Anna Taylor', 2021, 'Independent Church');"
            },
            {
                "User": "Let's add a record for a wedding held at 'Unity Chapel' between 'Mike Weir' and 'Juli Hanson' in 2022.",
                "Answer": "INSERT INTO wedding (Church_ID, Male_ID, Female_ID, Year) VALUES ((SELECT Church_ID FROM church WHERE Name = 'Unity Chapel'), (SELECT People_ID FROM people WHERE Name = 'Mike Weir'), (SELECT People_ID FROM people WHERE Name = 'Juli Hanson'), 2022);"
            },
            {
                "User": "Update the age of 'Ricky Barnes' to 31.",
                "Answer": "UPDATE people SET Age = 31 WHERE Name = 'Ricky Barnes';"
            },
            {
                "User": "I realized 'Ricky Barnes' gender was marked incorrectly. Can we correct it to 'F'?",
                "Answer": "UPDATE people SET Is_Male = 'F' WHERE Name = 'Ricky Barnes';"
            },
            {
                "User": "How many people from 'United States' have been married in our database?",
                "Answer": "SELECT COUNT(DISTINCT p.People_ID) FROM people p JOIN wedding w ON p.People_ID = w.Male_ID OR p.People_ID = w.Female_ID WHERE p.Country = 'United States';"
            },
            {
                "User": "We need a new table to track guests attending the weddings. Can you create it?",
                "Answer": "CREATE TABLE wedding_guests (Guest_ID number PRIMARY KEY, Wedding_ID number, Name text, RSVP text);"
            },
            {
                "User": "Let's add a guest 'Emma Stone', who RSVP'd 'Yes', to the first wedding in our records.",
                "Answer": "INSERT INTO wedding_guests (Guest_ID, Wedding_ID, Name, RSVP) VALUES ((SELECT MAX(Guest_ID) + 1 FROM wedding_guests), 1, 'Emma Stone', 'Yes');"
            },
            {
                "User": "Can we update the 'Unity Chapel' record to reflect that it has now organized one wedding?",
                "Answer": "UPDATE church SET Weddings_Organized = 1 WHERE Name = 'Unity Chapel';"
            },
            {
                "User": "What is the average age of all the males who have been married in our database?",
                "Answer": "SELECT AVG(p.Age) FROM people p JOIN wedding w ON p.People_ID = w.Male_ID WHERE p.Is_Male = 'T';"
            },
            {
                "User": "We need to add a column to track the main sponsor for each wedding. Can you alter the table?",
                "Answer": "ALTER TABLE wedding ADD COLUMN Sponsor_Name text;"
            }
        ]
    },
    {
        "idx": 512,
        "db": "soccer_1",
        "interaction": [
            {
                "User": "Can we add a column to track the number of goals scored by each player?",
                "Answer": "ALTER TABLE Player ADD COLUMN goals_scored number"
            },
            {
                "User": "Now, let's update the goals scored for Aaron Appindangoye to 15.",
                "Answer": "UPDATE Player SET goals_scored = 15 WHERE player_name = 'Aaron Appindangoye'"
            },
            {
                "User": "Which player scored the most goals?",
                "Answer": "SELECT player_name FROM Player ORDER BY goals_scored DESC LIMIT 1"
            },
            {
                "User": "Can we create a new table to log injuries for players?",
                "Answer": "CREATE TABLE Player_Injuries (id number PRIMARY KEY, player_api_id number, injury_date text, recovery_date text, injury_type text)"
            },
            {
                "User": "Let's log that Aaron Appindangoye was injured on 2023-03-15 with an expected recovery date of 2023-04-20 due to a knee injury.",
                "Answer": "INSERT INTO Player_Injuries (id, player_api_id, injury_date, recovery_date, injury_type) VALUES (1, 505942, '2023-03-15', '2023-04-20', 'knee')"
            },
            {
                "User": "Which players have been injured this year?",
                "Answer": "SELECT P.player_name FROM Player P JOIN Player_Injuries PI ON P.player_api_id = PI.player_api_id WHERE strftime('%Y', PI.injury_date) = '2023'"
            },
            {
                "User": "I'd like to see the top 3 players with the highest overall rating and their number of goals scored.",
                "Answer": "SELECT P.player_name, PA.overall_rating, P.goals_scored FROM Player P JOIN Player_Attributes PA ON P.player_api_id = PA.player_api_id ORDER BY PA.overall_rating DESC LIMIT 3"
            },
            {
                "User": "Let's update the league name from 'Belgium Jupiler League' to 'Belgium Pro League'.",
                "Answer": "UPDATE League SET name = 'Belgium Pro League' WHERE name = 'Belgium Jupiler League'"
            },
            {
                "User": "Which team has the fastest build-up play speed according to the latest attributes?",
                "Answer": "SELECT T.team_long_name FROM Team T JOIN Team_Attributes TA ON T.team_api_id = TA.team_api_id ORDER BY TA.buildUpPlaySpeed DESC LIMIT 1"
            },
            {
                "User": "Can we add a 'nickname' column to the Team table to store the teams' nicknames?",
                "Answer": "ALTER TABLE Team ADD COLUMN nickname text"
            },
            {
                "User": "Set the nickname for 'KRC Genk' to 'The Smurfs'.",
                "Answer": "UPDATE Team SET nickname = 'The Smurfs' WHERE team_long_name = 'KRC Genk'"
            },
            {
                "User": "Show me all the teams and their nicknames.",
                "Answer": "SELECT team_long_name, nickname FROM Team"
            }
        ]
    },
    {
        "idx": 513,
        "db": "soccer_1",
        "interaction": [
            {
                "User": "Could you add a new column to track the number of goals scored by each player?",
                "Answer": "ALTER TABLE Player ADD COLUMN goals_scored number"
            },
            {
                "User": "Now, insert the goal records for three players with IDs 505942, 155782, and 162549. Let's say they scored 10, 15, and 8 goals respectively.",
                "Answer": [
                    "UPDATE Player SET goals_scored = 10 WHERE player_api_id = 505942;",
                    "UPDATE Player SET goals_scored = 15 WHERE player_api_id = 155782;",
                    "UPDATE Player SET goals_scored = 8 WHERE player_api_id = 162549"
                ]
            },
            {
                "User": "Can you show me the top 5 players with the most goals scored?",
                "Answer": "SELECT player_name, goals_scored FROM Player ORDER BY goals_scored DESC LIMIT 5"
            },
            {
                "User": "I would like to create a new table to track team wins. Can you do that for me?",
                "Answer": "CREATE TABLE Team_Wins (id number PRIMARY KEY, team_api_id number, wins number)"
            },
            {
                "User": "Great, let's add win records for teams with IDs 9987, 9993, and 10000. Assume they have 20, 14, and 18 wins respectively.",
                "Answer": "INSERT INTO Team_Wins (id, team_api_id, wins) VALUES (1, 9987, 20), (2, 9993, 14), (3, 10000, 18)"
            },
            {
                "User": "Can you provide me with a list of teams and their win counts in descending order?",
                "Answer": "SELECT T.team_long_name, W.wins FROM Team AS T JOIN Team_Wins AS W ON T.team_api_id = W.team_api_id ORDER BY W.wins DESC"
            },
            {
                "User": "Now, can you update the player table to include a column for assists?",
                "Answer": "ALTER TABLE Player ADD COLUMN assists number"
            },
            {
                "User": "Let's update the assists records for the same three players. Assume they have assists of 7, 10, and 5 respectively.",
                "Answer": [
                    "UPDATE Player SET assists = 7 WHERE player_api_id = 505942;",
                    "UPDATE Player SET assists = 10 WHERE player_api_id = 155782;",
                    "UPDATE Player SET assists = 5 WHERE player_api_id = 162549"
                ]
            },
            {
                "User": "Can you show me all players who have both scored more than 5 goals and made more than 5 assists?",
                "Answer": "SELECT player_name FROM Player WHERE goals_scored > 5 AND assists > 5"
            }
        ]
    },
    {
        "idx": 514,
        "db": "customers_and_products_contacts",
        "interaction": [
            {
                "User": "What is the average price of all products?",
                "Answer": "SELECT avg(product_price) FROM products"
            },
            {
                "User": "What are the product names that have a price higher than the average?",
                "Answer": "SELECT product_name FROM products WHERE product_price > (SELECT avg(product_price) FROM products)"
            },
            {
                "User": "How many products have a price higher than the average?",
                "Answer": "SELECT count(*) FROM products WHERE product_price > (SELECT avg(product_price) FROM products)"
            },
            {
                "User": "Can you add a new product to the database?",
                "Answer": "INSERT INTO Products (product_id, product_type_code, product_name, product_price) VALUES (16, 'Electronics', 'Smartphone X12', 999.99)"
            },
            {
                "User": "I need to update the price of the 'Smartphone X12'. Set the new price to 1099.99.",
                "Answer": "UPDATE Products SET product_price = 1099.99 WHERE product_name = 'Smartphone X12'"
            },
            {
                "User": "How many customers do we have from the USA?",
                "Answer": "SELECT count(*) FROM Customers INNER JOIN Addresses ON Customers.customer_address = Addresses.line_1_number_building WHERE Addresses.country = 'USA'"
            },
            {
                "User": "Can we track the customers' birth dates? We need to add a new column for that.",
                "Answer": "ALTER TABLE Customers ADD COLUMN birth_date date"
            },
            {
                "User": "Add the birth date '1985-06-23' for customer Kayley.",
                "Answer": "UPDATE Customers SET birth_date = '1985-06-23' WHERE customer_name = 'Kayley'"
            },
            {
                "User": "Create a new table to log customer interactions with customer service.",
                "Answer": "CREATE TABLE Customer_Service_Logs (log_id number PRIMARY KEY, customer_id number, interaction_time timestamp, interaction_type text, interaction_notes text)"
            },
            {
                "User": "Log a new interaction for customer Kayley with the type 'Inquiry' and note 'Asked about product availability'.",
                "Answer": "INSERT INTO Customer_Service_Logs (log_id, customer_id, interaction_time, interaction_type, interaction_notes) VALUES (1, 1, CURRENT_TIMESTAMP, 'Inquiry', 'Asked about product availability')"
            },
            {
                "User": "What is the total number of orders placed in the 'Completed' status?",
                "Answer": "SELECT count(*) FROM Customer_Orders WHERE order_status_code = 'Completed'"
            },
            {
                "User": "Show me the latest address change for customer Buford.",
                "Answer": "SELECT * FROM Customer_Address_History WHERE customer_id = (SELECT customer_id FROM Customers WHERE customer_name = 'Buford') ORDER BY date_to DESC LIMIT 1"
            }
        ]
    },
    {
        "idx": 515,
        "db": "customers_and_products_contacts",
        "interaction": [
            {
                "User": "Could you add a new customer with the ID 16, named 'Alex Smith', using a credit card, with customer number '888', living at '1234 Westend Rd Apt. 101', phone '+1(555)123-4567', and email 'alex.smith@example.com'?",
                "Answer": "INSERT INTO Customers (customer_id, payment_method_code, customer_number, customer_name, customer_address, customer_phone, customer_email) VALUES (16, 'Credit Card', '888', 'Alex Smith', '1234 Westend Rd Apt. 101', '+1(555)123-4567', 'alex.smith@example.com')"
            },
            {
                "User": "I see. Now, could you please create a new table to track the customer login history, including columns for login ID, customer ID, login timestamp, and logout timestamp?",
                "Answer": "CREATE TABLE Customer_Login_History (login_id number PRIMARY KEY, customer_id number, login_timestamp time, logout_timestamp time)"
            },
            {
                "User": "Next, can we record a new login for customer ID 16, noting that they logged in on March 1st, 2023 at 09:00 AM and logged out at 10:00 AM?",
                "Answer": "INSERT INTO Customer_Login_History (login_id, customer_id, login_timestamp, logout_timestamp) VALUES (1, 16, '2023-03-01 09:00:00', '2023-03-01 10:00:00')"
            },
            {
                "User": "Let's update the address for customer ID 16. Change their address to '4321 Eastend Rd Apt. 202'.",
                "Answer": "UPDATE Customers SET customer_address = '4321 Eastend Rd Apt. 202' WHERE customer_id = 16"
            },
            {
                "User": "Can you show me a list of all products with the product type 'Hardware'?",
                "Answer": "SELECT * FROM Products WHERE product_type_code = 'Hardware'"
            },
            {
                "User": "I want to add a new product type 'Electronics'. Could you insert a new product with ID 16, named 'Smartphone', type 'Electronics', and price 799.99?",
                "Answer": "INSERT INTO Products (product_id, product_type_code, product_name, product_price) VALUES (16, 'Electronics', 'Smartphone', 799.99)"
            },
            {
                "User": "Great, now let's add a new column 'product_description' to the Products table to store a text description of each product.",
                "Answer": "ALTER TABLE Products ADD product_description text"
            },
            {
                "User": "Can you update the 'product_description' for the 'Smartphone' product to say 'Latest model with advanced features'?",
                "Answer": "UPDATE Products SET product_description = 'Latest model with advanced features' WHERE product_name = 'Smartphone'"
            },
            {
                "User": "I need to see all orders that were completed for customer ID 16. Can you provide that information?",
                "Answer": "SELECT * FROM Customer_Orders WHERE customer_id = 16 AND order_status_code = 'Completed'"
            }
        ]
    },
    {
        "idx": 516,
        "db": "company_office",
        "interaction": [
            {
                "User": "Can you list all companies with their headquarters and industry?",
                "Answer": "SELECT name, Headquarters, Industry FROM Companies"
            },
            {
                "User": "I want to add a new company called 'Tech Innovations' headquartered in 'USA', industry 'Technology', with sales of 25 billion, profits of 5 billion, assets of 50 billion, and a market value of 75 billion.",
                "Answer": "INSERT INTO Companies (name, Headquarters, Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value_billion) VALUES ('Tech Innovations', 'USA', 'Technology', 25, 5, 50, '75')"
            },
            {
                "User": "Which company moved into the 'Torre KOI' building first?",
                "Answer": "SELECT Companies.name FROM Office_locations JOIN Companies ON Office_locations.company_id = Companies.id WHERE Office_locations.building_id = (SELECT id FROM buildings WHERE name = 'Torre KOI') ORDER BY move_in_year ASC LIMIT 1"
            },
            {
                "User": "We need to track the number of employees for each company. Please add a column for employee count to the Companies table.",
                "Answer": "ALTER TABLE Companies ADD COLUMN Employees_count number"
            },
            {
                "User": "Update the employee count for 'JPMorgan Chase' to 256000.",
                "Answer": "UPDATE Companies SET Employees_count = 256000 WHERE name = 'JPMorgan Chase'"
            },
            {
                "User": "What is the average number of stories for buildings in 'Mexico City'?",
                "Answer": "SELECT AVG(Stories) FROM buildings WHERE City = 'Mexico City'"
            },
            {
                "User": "Create a table to record amenities available in each building such as parking, gym, and cafeteria.",
                "Answer": "CREATE TABLE Building_amenities (building_id number, parking boolean, gym boolean, cafeteria boolean, PRIMARY KEY (building_id))"
            },
            {
                "User": "Add records for amenities in 'Torre KOI' with parking and gym available, but no cafeteria.",
                "Answer": "INSERT INTO Building_amenities (building_id, parking, gym, cafeteria) VALUES ((SELECT id FROM buildings WHERE name = 'Torre KOI'), true, true, false)"
            },
            {
                "User": "Which buildings have a gym?",
                "Answer": "SELECT buildings.name FROM Building_amenities JOIN buildings ON Building_amenities.building_id = buildings.id WHERE gym = true"
            },
            {
                "User": "I need to know the total sales of companies in the 'Banking' industry.",
                "Answer": "SELECT SUM(Sales_billion) FROM Companies WHERE Industry = 'Banking'"
            },
            {
                "User": "Can we find out which building has the most companies located in it?",
                "Answer": "SELECT buildings.name, COUNT(Office_locations.company_id) AS company_count FROM Office_locations JOIN buildings ON Office_locations.building_id = buildings.id GROUP BY buildings.name ORDER BY company_count DESC LIMIT 1"
            }
        ]
    },
    {
        "idx": 517,
        "db": "company_office",
        "interaction": [
            {
                "User": "What is the total sales in billions for companies headquartered in the USA?",
                "Answer": "SELECT SUM(Sales_billion) FROM Companies WHERE Headquarters = 'USA'"
            },
            {
                "User": "Can you add a column to track the number of employees for each company?",
                "Answer": "ALTER TABLE Companies ADD COLUMN Employees_number number"
            },
            {
                "User": "Update the number of employees for JPMorgan Chase to 256000.",
                "Answer": "UPDATE Companies SET Employees_number = 256000 WHERE name = 'JPMorgan Chase'"
            },
            {
                "User": "How many employees does JPMorgan Chase have?",
                "Answer": "SELECT Employees_number FROM Companies WHERE name = 'JPMorgan Chase'"
            },
            {
                "User": "Create a new table to record office space area for each company location.",
                "Answer": "CREATE TABLE Office_Space (office_location_id number PRIMARY KEY, area_sqft number, company_id number)"
            },
            {
                "User": "Insert the office space area for company with ID 1 in building ID 1 as 50000 square feet.",
                "Answer": "INSERT INTO Office_Space (office_location_id, area_sqft, company_id) VALUES (1, 50000, 1)"
            },
            {
                "User": "List all companies with their total office space area.",
                "Answer": "SELECT C.name, SUM(OS.area_sqft) as total_area FROM Companies C JOIN Office_Space OS ON C.id = OS.company_id GROUP BY C.name"
            },
            {
                "User": "Add a column for the year the building was completed in the buildings table.",
                "Answer": "ALTER TABLE buildings ADD COLUMN Year_completed number"
            },
            {
                "User": "Update the year completed for 'Torre KOI' to 2021.",
                "Answer": "UPDATE buildings SET Year_completed = 2021 WHERE name = 'Torre KOI'"
            },
            {
                "User": "How many stories does the 'Torre Mitikah' have?",
                "Answer": "SELECT Stories FROM buildings WHERE name = 'Torre Mitikah'"
            },
            {
                "User": "Can we track renovations for buildings? We need to add a new table for that.",
                "Answer": "CREATE TABLE Building_Renovations (renovation_id number PRIMARY KEY, building_id number, renovation_year number, renovation_type text)"
            },
            {
                "User": "Record a renovation for building ID 2 in the year 2023, type 'Facade Update'.",
                "Answer": "INSERT INTO Building_Renovations (renovation_id, building_id, renovation_year, renovation_type) VALUES (1, 2, 2023, 'Facade Update')"
            },
            {
                "User": "Show me a list of all buildings that were renovated and the type of renovation.",
                "Answer": "SELECT B.name, BR.renovation_type FROM buildings B JOIN Building_Renovations BR ON B.id = BR.building_id"
            },
            {
                "User": "How many companies are in the 'Banking' industry?",
                "Answer": "SELECT COUNT(*) FROM Companies WHERE Industry = 'Banking'"
            }
        ]
    },
    {
        "idx": 518,
        "db": "debate",
        "interaction": [
            {
                "User": "Can we add a new column to track the number of debates each person has participated in?",
                "Answer": "ALTER TABLE people ADD COLUMN Num_of_Debates number"
            },
            {
                "User": "Now, update the number of debates for Luther C. Carter to 5.",
                "Answer": "UPDATE people SET Num_of_Debates = 5 WHERE Name = 'Luther C. Carter'"
            },
            {
                "User": "How many debates has Luther C. Carter participated in?",
                "Answer": "SELECT Num_of_Debates FROM people WHERE Name = 'Luther C. Carter'"
            },
            {
                "User": "Insert a new debate record for a debate that took place on January 15, 2020, in New York, with an audience of 200 people.",
                "Answer": "INSERT INTO debate (Debate_ID, Date, Venue, Num_of_Audience) VALUES (7, 'January 15, 2020', 'New York', 200)"
            },
            {
                "User": "Can you tell me the venue of the most recent debate?",
                "Answer": "SELECT Venue FROM debate ORDER BY Date DESC LIMIT 1"
            },
            {
                "User": "Let's record the participants of the most recent debate. Luther C. Carter was affirmative and James Humphrey was negative. Did Luther win?",
                "Answer": "INSERT INTO debate_people (Debate_ID, Affirmative, Negative, If_Affirmative_Win) VALUES (7, 1, 2, 'T')"
            },
            {
                "User": "I need to correct the number of audience for the last debate to 250.",
                "Answer": "UPDATE debate SET Num_of_Audience = 250 WHERE Debate_ID = (SELECT Debate_ID FROM debate ORDER BY Date DESC LIMIT 1)"
            },
            {
                "User": "Create a table to log the topics of each debate.",
                "Answer": "CREATE TABLE debate_topics (Debate_ID number, Topic text, PRIMARY KEY (Debate_ID))"
            },
            {
                "User": "Add a topic for the debate on January 15, 2020. The topic was 'The Future of Renewable Energy'.",
                "Answer": "INSERT INTO debate_topics (Debate_ID, Topic) VALUES (7, 'The Future of Renewable Energy')"
            },
            {
                "User": "What was the topic of the last debate?",
                "Answer": "SELECT Topic FROM debate_topics WHERE Debate_ID = (SELECT Debate_ID FROM debate ORDER BY Date DESC LIMIT 1)"
            },
            {
                "User": "Show me all the debates where the affirmative side won.",
                "Answer": "SELECT d.Debate_ID, d.Date, d.Venue FROM debate d INNER JOIN debate_people dp ON d.Debate_ID = dp.Debate_ID WHERE dp.If_Affirmative_Win = 'T'"
            },
            {
                "User": "Update the Num_of_Debates for James Humphrey to 3.",
                "Answer": "UPDATE people SET Num_of_Debates = 3 WHERE Name = 'James Humphrey'"
            },
            {
                "User": "List all people who have participated in more than two debates.",
                "Answer": "SELECT Name FROM people WHERE Num_of_Debates > 2"
            },
            {
                "User": "We need to keep track of the debate moderators. Add a 'Moderator' column to the debate table.",
                "Answer": "ALTER TABLE debate ADD COLUMN Moderator text"
            },
            {
                "User": "Set the moderator for the January 15, 2020 debate as 'Maria Gomez'.",
                "Answer": "UPDATE debate SET Moderator = 'Maria Gomez' WHERE Debate_ID = 7"
            }
        ]
    },
    {
        "idx": 519,
        "db": "debate",
        "interaction": [
            {
                "User": "Can you add a new column to track the number of debates each person has participated in?",
                "Answer": "ALTER TABLE people ADD COLUMN Num_of_debates number DEFAULT 0"
            },
            {
                "User": "Please update the number of debates for Luther C. Carter to 5.",
                "Answer": "UPDATE people SET Num_of_debates = 5 WHERE Name = 'Luther C. Carter'"
            },
            {
                "User": "How many debates has Luther C. Carter participated in?",
                "Answer": "SELECT Num_of_debates FROM people WHERE Name = 'Luther C. Carter'"
            },
            {
                "User": "Create a new table to log debate outcomes with columns for debate ID, winner, and points margin.",
                "Answer": "CREATE TABLE debate_outcomes (Debate_ID number, Winner text, Points_Margin number, PRIMARY KEY (Debate_ID))"
            },
            {
                "User": "Log the outcome of the debate with ID 1, stating that the affirmative side won by a margin of 15 points.",
                "Answer": "INSERT INTO debate_outcomes (Debate_ID, Winner, Points_Margin) VALUES (1, 'Affirmative', 15)"
            },
            {
                "User": "Who won the debate held on August 3, 2015?",
                "Answer": "SELECT T1.Winner FROM debate AS T2 JOIN debate_outcomes AS T1 ON T2.Debate_ID = T1.Debate_ID WHERE T2.Date = 'August 3, 2015'"
            },
            {
                "User": "Can you show me all the debates where the negative side won?",
                "Answer": "SELECT T2.Debate_ID, T2.Date, T2.Venue FROM debate_outcomes AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID WHERE T1.Winner = 'Negative'"
            },
            {
                "User": "Insert a new record into the people table for a person named 'Alex Smith' from 'New York 4' who is a 'Democratic' and is 30 years old.",
                "Answer": "INSERT INTO people (People_ID, District, Name, Party, Age) VALUES (11, 'New York 4', 'Alex Smith', 'Democratic', 30)"
            },
            {
                "User": "Update the debate_people table to include Alex Smith as the affirmative side in the debate with ID 2.",
                "Answer": "UPDATE debate_people SET Affirmative = 11 WHERE Debate_ID = 2"
            }
        ]
    },
    {
        "idx": 520,
        "db": "riding_club",
        "interaction": [
            {
                "User": "Can we add a new player to the database?",
                "Answer": "INSERT INTO player (Player_ID, Sponsor_name, Player_name, Gender, Residence, Occupation, Votes, Rank) VALUES (15, 'NewSponsor', 'Alex Smith', 'M', 'New City', 'Professional Athlete', 0, 'Unranked')"
            },
            {
                "User": "What's the new player's name and sponsor?",
                "Answer": "SELECT Player_name, Sponsor_name FROM player WHERE Player_ID = 15"
            },
            {
                "User": "I'd like to update Fiona Shiells' number of votes to 7500.",
                "Answer": "UPDATE player SET Votes = 7500 WHERE Player_name = 'Fiona Shiells'"
            },
            {
                "User": "Can we see the updated votes for Fiona Shiells?",
                "Answer": "SELECT Player_name, Votes FROM player WHERE Player_name = 'Fiona Shiells'"
            },
            {
                "User": "Add a new column 'Age' to the players table.",
                "Answer": "ALTER TABLE player ADD Age number"
            },
            {
                "User": "Set the age for the first three players as 30, 28, and 25 respectively.",
                "Answer": [
                    "UPDATE player SET Age = 30 WHERE Player_ID = 1;",
                    "UPDATE player SET Age = 28 WHERE Player_ID = 2;",
                    "UPDATE player SET Age = 25 WHERE Player_ID = 3"
                ]
            },
            {
                "User": "Show me all the players' names along with their ages.",
                "Answer": "SELECT Player_name, Age FROM player"
            },
            {
                "User": "Create a new table to record the equipment each player uses.",
                "Answer": "CREATE TABLE equipment (Equipment_ID number PRIMARY KEY, Player_ID number, Equipment_name text, Equipment_type text)"
            },
            {
                "User": "Insert equipment data for the first three players.",
                "Answer": [
                    "INSERT INTO equipment (Equipment_ID, Player_ID, Equipment_name, Equipment_type) VALUES (1, 1, 'Racing Bike', 'Vehicle');",
                    "INSERT INTO equipment (Equipment_ID, Player_ID, Equipment_name, Equipment_type) VALUES (2, 2, 'Helmet', 'Safety');",
                    "INSERT INTO equipment (Equipment_ID, Player_ID, Equipment_name, Equipment_type) VALUES (3, 3, 'Riding Boots', 'Apparel')"
                ]
            },
            {
                "User": "Which player uses a 'Racing Bike'?",
                "Answer": "SELECT T1.Player_name FROM player AS T1 JOIN equipment AS T2 ON T1.Player_ID = T2.Player_ID WHERE T2.Equipment_name = 'Racing Bike'"
            },
            {
                "User": "Show the complete list of equipment for each player.",
                "Answer": "SELECT T1.Player_name, T2.Equipment_name, T2.Equipment_type FROM player AS T1 JOIN equipment AS T2 ON T1.Player_ID = T2.Player_ID"
            },
            {
                "User": "Can we see the ranking of clubs based on the total points they have earned?",
                "Answer": "SELECT Club_ID, SUM(Points) as Total_Points FROM match_result GROUP BY Club_ID ORDER BY Total_Points DESC"
            },
            {
                "User": "Update the start year of the club 'AIK' to 2010.",
                "Answer": "UPDATE club SET Start_year = 2010 WHERE Club_name = 'AIK'"
            },
            {
                "User": "Show me the updated records for all clubs.",
                "Answer": "SELECT * FROM club"
            },
            {
                "User": "Let's add a new coach to the 'AIK' club.",
                "Answer": "INSERT INTO coach (Coach_ID, Coach_name, Gender, Club_ID, Rank) VALUES (6, 'Emily Stone', 'F', 1, 4)"
            }
        ]
    },
    {
        "idx": 521,
        "db": "riding_club",
        "interaction": [
            {
                "User": "Can we add a new player to the database?",
                "Answer": "INSERT INTO player (Player_ID, Sponsor_name, Player_name, Gender, Residence, Occupation, Votes, Rank) VALUES (15, 'New Sponsor', 'Alex Smith', 'M', 'New York', 'Software Developer', 0, 'Unranked')"
            },
            {
                "User": "I want to update the occupation of Fiona Shiells to 'Data Analyst'.",
                "Answer": "UPDATE player SET Occupation = 'Data Analyst' WHERE Player_name = 'Fiona Shiells'"
            },
            {
                "User": "How many coaches do we have for club with Club_ID 1?",
                "Answer": "SELECT COUNT(*) FROM coach WHERE Club_ID = 1"
            },
            {
                "User": "I want to record the email addresses of players. Can we add a new column for that?",
                "Answer": "ALTER TABLE player ADD COLUMN Email VARCHAR(255)"
            },
            {
                "User": "Add the email 'jeanluc@email.com' for Jean Luc Bouché.",
                "Answer": "UPDATE player SET Email = 'jeanluc@email.com' WHERE Player_name = 'Jean Luc Bouché'"
            },
            {
                "User": "Create a new table to log interactions between players and coaches.",
                "Answer": "CREATE TABLE interactions (Interaction_ID INT PRIMARY KEY, Player_ID INT, Coach_ID INT, Interaction_Date DATE, Notes TEXT, FOREIGN KEY (Player_ID) REFERENCES player(Player_ID), FOREIGN KEY (Coach_ID) REFERENCES coach(Coach_ID))"
            },
            {
                "User": "Log a new interaction where player ID 2 meets with coach ID 1 on March 15, 2023.",
                "Answer": "INSERT INTO interactions (Interaction_ID, Player_ID, Coach_ID, Interaction_Date, Notes) VALUES (1, 2, 1, '2023-03-15', 'Discussing training schedule')"
            },
            {
                "User": "What's the rank of the player who recently updated their occupation to 'Data Analyst'?",
                "Answer": "SELECT Rank FROM player WHERE Occupation = 'Data Analyst'"
            },
            {
                "User": "Can we see the names and email addresses of all players ranked 2nd?",
                "Answer": "SELECT Player_name, Email FROM player WHERE Rank = '2nd'"
            },
            {
                "User": "I'd like to increase the votes for Niki Ashton by 500.",
                "Answer": "UPDATE player SET Votes = Votes + 500 WHERE Player_name = 'Niki Ashton'"
            },
            {
                "User": "Who are the players with no sponsor currently?",
                "Answer": "SELECT Player_name FROM player WHERE Sponsor_name IS NULL OR Sponsor_name = ''"
            },
            {
                "User": "Can you show me the total points for each club in the match results?",
                "Answer": "SELECT Club_ID, SUM(Points) AS Total_Points FROM match_result GROUP BY Club_ID"
            },
            {
                "User": "Update the start year of the club named 'AIK' to 2010.",
                "Answer": "UPDATE club SET Start_year = 2010 WHERE Club_name = 'AIK'"
            }
        ]
    },
    {
        "idx": 522,
        "db": "e_government",
        "interaction": [
            {
                "User": "Can you add a new address for the party with id 3?",
                "Answer": "INSERT INTO Addresses (address_id, line_1_number_building, town_city, zip_postcode, state_province_county, country) VALUES (16, '123 New Street', 'Newtown', '12345', 'NewState', 'USA')"
            },
            {
                "User": "Now, update the party address to the new one for party id 3.",
                "Answer": "UPDATE Party_Addresses SET address_id = 16 WHERE party_id = 3"
            },
            {
                "User": "I'd like to record the date when the new address was added for party 3, can you add a new column for that?",
                "Answer": "ALTER TABLE Party_Addresses ADD COLUMN date_address_added time"
            },
            {
                "User": "Please set the address added date for party id 3 to today's date.",
                "Answer": "UPDATE Party_Addresses SET date_address_added = CURRENT_DATE WHERE party_id = 3"
            },
            {
                "User": "Create a new table to track service feedback with columns for service_id, party_id, feedback_text, and feedback_date.",
                "Answer": "CREATE TABLE Service_Feedback (feedback_id number PRIMARY KEY, service_id number, party_id number, feedback_text text, feedback_date time)"
            },
            {
                "User": "Insert feedback for service id 2 from party id 1 saying 'Excellent service' with today's date.",
                "Answer": "INSERT INTO Service_Feedback (feedback_id, service_id, party_id, feedback_text, feedback_date) VALUES (1, 2, 1, 'Excellent service', CURRENT_DATE)"
            },
            {
                "User": "Can we track the individual's date of birth in the database?",
                "Answer": "ALTER TABLE Individuals ADD COLUMN dob time"
            },
            {
                "User": "Set the date of birth for individual id 1 to January 1st, 1980.",
                "Answer": "UPDATE Individuals SET dob = '1980-01-01' WHERE individual_id = 1"
            },
            {
                "User": "Which individual is associated with the most recently formed organization?",
                "Answer": "SELECT t1.individual_first_name, t1.individual_last_name FROM Individuals AS t1 JOIN Organization_Contact_Individuals AS t2 ON t1.individual_id = t2.individual_id JOIN Organizations AS t3 ON t2.organization_id = t3.organization_id ORDER BY t3.date_formed DESC LIMIT 1"
            },
            {
                "User": "Create a new table to log user interactions with columns for user_id, interaction_text, and interaction_timestamp.",
                "Answer": "CREATE TABLE User_Interactions (interaction_id number PRIMARY KEY, user_id number, interaction_text text, interaction_timestamp time)"
            },
            {
                "User": "Log this interaction for user id 42 saying 'Asked about the most recently formed organization'.",
                "Answer": "INSERT INTO User_Interactions (interaction_id, user_id, interaction_text, interaction_timestamp) VALUES (1, 42, 'Asked about the most recently formed organization', CURRENT_TIMESTAMP)"
            },
            {
                "User": "What is the average number of services used by parties?",
                "Answer": "SELECT AVG(service_count) FROM (SELECT customer_id, COUNT(*) AS service_count FROM Party_Services GROUP BY customer_id) AS subquery"
            }
        ]
    },
    {
        "idx": 523,
        "db": "e_government",
        "interaction": [
            {
                "User": "How many organizations do we have in our database?",
                "Answer": "SELECT COUNT(*) FROM organizations"
            },
            {
                "User": "I want to add a new organization called 'Green Initiative' that was formed on '2023-01-15' with a VAT number '9876', with organization_id is 6",
                "Answer": "INSERT INTO organizations (organization_id, date_formed, organization_name, uk_vat_number) VALUES (6, '2023-01-15 00:00:00', 'Green Initiative', '9876')"
            },
            {
                "User": "Can you update the phone number for the individual with the last name 'Maggio' to '1-800-555-1234'?",
                "Answer": "UPDATE individuals SET inidividual_phone = '1-800-555-1234' WHERE individual_last_name = 'Maggio'"
            },
            {
                "User": "Create a new table for storing vehicle information of individuals with columns for vehicle_id, individual_id, make, model, and year.",
                "Answer": "CREATE TABLE individual_vehicles (vehicle_id number PRIMARY KEY, individual_id number, make text, model text, year number)"
            },
            {
                "User": "Insert a record for an individual with id 1 owning a 'Toyota' 'Camry' from the year 2021.",
                "Answer": "INSERT INTO individual_vehicles (vehicle_id, individual_id, make, model, year) VALUES (1, 1, 'Toyota', 'Camry', 2021)"
            },
            {
                "User": "Let's add a new column 'individual_dob' to the Individuals table to store dates of birth.",
                "Answer": "ALTER TABLE individuals ADD individual_dob time"
            },
            {
                "User": "Update the date of birth for individual 'Oscar Maggio' to '1985-06-30'.",
                "Answer": "UPDATE individuals SET individual_dob = '1985-06-30 00:00:00' WHERE individual_first_name = 'Oscar' AND individual_last_name = 'Maggio'"
            },
            {
                "User": "I need a list of all individuals along with their vehicle make and model.",
                "Answer": "SELECT i.individual_first_name, i.individual_last_name, iv.make, iv.model FROM individuals i LEFT JOIN individual_vehicles iv ON i.individual_id = iv.individual_id"
            },
            {
                "User": "Can you show me all the services available and the number of forms associated with each service?",
                "Answer": "SELECT s.service_name, COUNT(f.form_id) AS form_count FROM services s LEFT JOIN forms f ON s.service_id = f.service_id GROUP BY s.service_name"
            },
            {
                "User": "I would like to add a new service type 'Environmental' with a description 'Services related to environmental issues'.",
                "Answer": "INSERT INTO services (service_id, service_type_code, service_name, service_descriptio) VALUES ((SELECT MAX(service_id)+1 FROM Services), 'Environmental', 'Environmental', 'Services related to environmental issues')"
            },
            {
                "User": "Please add a new form for the 'Environmental' service we just created, with id 7 and a form type 'Complex', form number '9999', and name it 'Recycling Application'.",
                "Answer": "INSERT INTO forms (form_id, form_type_code, service_id, form_number, form_name, form_description) VALUES (7, 'Complex', 4, '9999', 'Recycling Application', 'Form for Recycling Application')"
            },
            {
                "User": "I need to correct the VAT number for the 'Green Initiative' organization to '8765'.",
                "Answer": "UPDATE organizations SET uk_vat_number = '8765' WHERE organization_name = 'Green Initiative'"
            },
            {
                "User": "What are the names and email addresses of individuals who have an association with any organization?",
                "Answer": "SELECT ind.individual_first_name, ind.individual_last_name, ind.individual_email FROM individuals ind INNER JOIN organization_contact_individuals oci ON ind.individual_id = oci.individual_id"
            },
            {
                "User": "List all parties that have a 'Residence' address type.",
                "Answer": "SELECT p.party_id, p.party_email FROM parties p INNER JOIN party_addresses pa ON p.party_id = pa.party_id WHERE pa.address_type_code = 'Residence'"
            }
        ]
    },
    {
        "idx": 524,
        "db": "product_catalog",
        "interaction": [
            {
                "User": "Can you add a new catalog called 'Exotic Teas' published by 'Steep & Sip' with the initial publication date as today?",
                "Answer": "INSERT INTO Catalogs (catalog_id, catalog_name, catalog_publisher, date_of_publication, date_of_latest_revision) VALUES ((SELECT MAX(catalog_id) + 1 FROM Catalogs), 'Exotic Teas', 'Steep & Sip', CURRENT_DATE, CURRENT_DATE)"
            },
            {
                "User": "I want to update the price of 'Root beer' to $750.00 in dollars, euros, and pounds.",
                "Answer": "UPDATE Catalog_Contents SET price_in_dollars = 750.00, price_in_euros = (750.00 * 0.92), price_in_pounds = (750.00 * 0.81) WHERE catalog_entry_name = 'Root beer'"
            },
            {
                "User": "Can you create a new table for customer reviews with columns for review_id, catalog_entry_id, customer_name, review_text, and rating?",
                "Answer": "CREATE TABLE Customer_Reviews (review_id number PRIMARY KEY, catalog_entry_id number, customer_name text, review_text text, rating number)"
            },
            {
                "User": "Let's add a new attribute to the Attribute_Definitions table called 'Organic' with a data type of 'Bool'.",
                "Answer": "INSERT INTO Attribute_Definitions (attribute_id, attribute_name, attribute_data_type) VALUES ((SELECT MAX(attribute_id) + 1 FROM Attribute_Definitions), 'Organic', 'Bool')"
            },
            {
                "User": "I would like to add a new attribute 'Organic' to the 'Cream Soda' catalog entry as true.",
                "Answer": "INSERT INTO Catalog_Contents_Additional_Attributes (catalog_entry_id, catalog_level_number, attribute_id, attribute_value) VALUES ((SELECT catalog_entry_id FROM Catalog_Contents WHERE catalog_entry_name = 'Cream Soda'), (SELECT catalog_level_number FROM Catalog_Contents WHERE catalog_entry_name = 'Cream Soda'), (SELECT attribute_id FROM Attribute_Definitions WHERE attribute_name = 'Organic'), '1')"
            },
            {
                "User": "Can we alter the Catalog_Contents table to include a new column for 'manufacturer'?",
                "Answer": "ALTER TABLE Catalog_Contents ADD COLUMN manufacturer text"
            },
            {
                "User": "Please update the 'manufacturer' for 'Cola' to 'Coca-Cola Enterprises'.",
                "Answer": "UPDATE Catalog_Contents SET manufacturer = 'Coca-Cola Enterprises' WHERE catalog_entry_name = 'Cola'"
            },
            {
                "User": "How many products do we have from 'Coca-Cola Enterprises'?",
                "Answer": "SELECT COUNT(*) FROM Catalog_Contents WHERE manufacturer = 'Coca-Cola Enterprises'"
            }
        ]
    },
    {
        "idx": 525,
        "db": "product_catalog",
        "interaction": [
            {
                "User": "Can you add a new attribute called 'Weight' to the attribute definitions?",
                "Answer": "ALTER TABLE attribute_definitions ADD COLUMN weight text;"
            },
            {
                "User": "Now, insert the 'Weight' attribute with the data type 'Number'.",
                "Answer": "INSERT INTO attribute_definitions (attribute_name, attribute_data_type) VALUES ('Weight', 'Number');"
            },
            {
                "User": "Please update the 'Weight' attribute to have a data type of 'Decimal' instead of 'Number'.",
                "Answer": "UPDATE attribute_definitions SET attribute_data_type = 'Decimal' WHERE attribute_name = 'Weight';"
            },
            {
                "User": "Create a new table called 'Suppliers' with 'supplier_id', 'supplier_name', and 'contact_info'.",
                "Answer": "CREATE TABLE suppliers (supplier_id number PRIMARY KEY, supplier_name text, contact_info text);"
            },
            {
                "User": "Add a supplier with ID 1, name 'Global Ingredients', and contact info 'info@globalingredients.com'.",
                "Answer": "INSERT INTO suppliers (supplier_id, supplier_name, contact_info) VALUES (1, 'Global Ingredients', 'info@globalingredients.com');"
            },
            {
                "User": "I need to add a 'supplier_id' column to the 'Catalogs' table to track where each catalog's products come from.",
                "Answer": "ALTER TABLE catalogs ADD COLUMN supplier_id number;"
            },
            {
                "User": "Update the 'Chocolate' catalog to have 'Global Ingredients' as its supplier.",
                "Answer": "UPDATE catalogs SET supplier_id = (SELECT supplier_id FROM suppliers WHERE supplier_name = 'Global Ingredients') WHERE catalog_name = 'Chocolate';"
            },
            {
                "User": "Can you show me all catalog names and their suppliers?",
                "Answer": "SELECT c.catalog_name, s.supplier_name FROM catalogs c LEFT JOIN suppliers s ON c.supplier_id = s.supplier_id;"
            },
            {
                "User": "Let's add a column 'weight' to the 'Catalog_Contents' table to record the weight of each product.",
                "Answer": "ALTER TABLE catalog_contents ADD COLUMN weight text;"
            },
            {
                "User": "Insert the weight '500g' for the 'Cola' product in the catalog contents.",
                "Answer": "UPDATE catalog_contents SET weight = '500g' WHERE catalog_entry_name = 'Cola';"
            },
            {
                "User": "What is the average price in euros for all products in the 'Chocolate' catalog?",
                "Answer": "SELECT AVG(price_in_euros) FROM catalog_contents WHERE catalog_level_number = (SELECT catalog_level_number FROM catalog_structure WHERE catalog_id = (SELECT catalog_id FROM catalogs WHERE catalog_name = 'Chocolate'));"
            },
            {
                "User": "For all products with a 'Black' attribute, increase the price in dollars by 10%.",
                "Answer": "UPDATE catalog_contents SET price_in_dollars = price_in_dollars * 1.1 WHERE catalog_entry_id IN (SELECT catalog_entry_id FROM catalog_contents_additional_attributes WHERE attribute_id = (SELECT attribute_id FROM attribute_definitions WHERE attribute_name = 'Black'));"
            }
        ]
    },
    {
        "idx": 526,
        "db": "candidate_poll",
        "interaction": [
            {
                "User": "Can we add a new candidate to the poll?",
                "Answer": "INSERT INTO candidate (Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate) VALUES (7, 5, 'Newsource Daily', 'Mar 10, 2023', 0.22, 0.35, 0.28, 0.15)"
            },
            {
                "User": "Who is the new candidate we just added?",
                "Answer": "SELECT Name FROM people WHERE People_ID = 5"
            },
            {
                "User": "Can we update the support rate for the first candidate to 0.27?",
                "Answer": "UPDATE candidate SET Support_rate = 0.27 WHERE Candidate_ID = 1"
            },
            {
                "User": "Show me the updated support rates for all candidates.",
                "Answer": "SELECT Candidate_ID, Support_rate FROM candidate ORDER BY Candidate_ID"
            },
            {
                "User": "Can we add a new column for 'Age' in the people table?",
                "Answer": "ALTER TABLE people ADD Age number"
            },
            {
                "User": "Show me the names and ages of all people in the database.",
                "Answer": "SELECT Name, Age FROM people"
            },
            {
                "User": "Can we create a new table to track the candidates' education background?",
                "Answer": "CREATE TABLE education (Education_ID number PRIMARY KEY, Candidate_ID number, Degree text, Institution text, Graduation_Year text)"
            },
            {
                "User": "Add education details for the candidate with ID 1.",
                "Answer": "INSERT INTO education (Education_ID, Candidate_ID, Degree, Institution, Graduation_Year) VALUES (1, 1, 'BSc Political Science', 'University of Somewhere', '2001')"
            },
            {
                "User": "Who has a degree in Political Science?",
                "Answer": "SELECT c.Candidate_ID, p.Name FROM candidate c JOIN people p ON c.People_ID = p.People_ID JOIN education e ON c.Candidate_ID = e.Candidate_ID WHERE e.Degree = 'BSc Political Science'"
            },
            {
                "User": "Can we update the poll source for the second candidate to 'Daily News Survey'?",
                "Answer": "UPDATE candidate SET Poll_Source = 'Daily News Survey' WHERE Candidate_ID = 2"
            },
            {
                "User": "Show me all the poll sources and dates now.",
                "Answer": "SELECT Poll_Source, Date FROM candidate ORDER BY Candidate_ID"
            },
            {
                "User": "What is the average support rate across all candidates?",
                "Answer": "SELECT AVG(Support_rate) FROM candidate"
            },
            {
                "User": "Can we add a column for 'Email' in the people table to keep track of their contact information?",
                "Answer": "ALTER TABLE people ADD Email text"
            },
            {
                "User": "Update the email for Hubert Henno to 'hubert.henno@email.com'.",
                "Answer": "UPDATE people SET Email = 'hubert.henno@email.com' WHERE Name = 'Hubert Henno'"
            }
        ]
    },
    {
        "idx": 527,
        "db": "candidate_poll",
        "interaction": [
            {
                "User": "Can you add a new candidate to the poll?",
                "Answer": "INSERT INTO candidate (Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate) VALUES (7, 5, 'Newsource Daily Poll', 'Mar 15, 2023', 0.21, 0.35, 0.28, 0.16)"
            },
            {
                "User": "I'd like to know the name of the new candidate we just added.",
                "Answer": "SELECT Name FROM people WHERE People_ID = 5"
            },
            {
                "User": "We need to update the support rate for the candidate with ID 2 to 0.22.",
                "Answer": "UPDATE candidate SET Support_rate = 0.22 WHERE Candidate_ID = 2"
            },
            {
                "User": "What's the average support rate for all candidates now?",
                "Answer": "SELECT AVG(Support_rate) FROM candidate"
            },
            {
                "User": "Let's add a new column for email addresses in the people table.",
                "Answer": "ALTER TABLE people ADD COLUMN Email text"
            },
            {
                "User": "Please insert the email address 'hubert.henno@email.com' for the person with ID 1.",
                "Answer": "UPDATE people SET Email = 'hubert.henno@email.com' WHERE People_ID = 1"
            },
            {
                "User": "Can we create a new table to track candidate expenses?",
                "Answer": "CREATE TABLE candidate_expenses (Expense_ID number PRIMARY KEY, Candidate_ID number, Expense_Type text, Amount number, Date text)"
            },
            {
                "User": "I want to record an expense of 500 for candidate 1 for campaign materials.",
                "Answer": "INSERT INTO candidate_expenses (Expense_ID, Candidate_ID, Expense_Type, Amount, Date) VALUES (1, 1, 'Campaign Materials', 500, 'Mar 20, 2023')"
            },
            {
                "User": "Is there any candidate who did not have an email yet?",
                "Answer": "SELECT Name FROM people WHERE Email IS NULL"
            },
            {
                "User": "Let's update the weight for 'Dominique Daquin' to 88.0.",
                "Answer": "UPDATE people SET Weight = 88.0 WHERE Name = 'Dominique Daquin'"
            },
            {
                "User": "I would like to see the total expenses for candidate 1.",
                "Answer": "SELECT SUM(Amount) FROM candidate_expenses WHERE Candidate_ID = 1"
            },
            {
                "User": "Can we compare the total expenses with the support rate for candidate 1?",
                "Answer": "SELECT c.Support_rate, (SELECT SUM(Amount) FROM candidate_expenses WHERE Candidate_ID = 1) AS Total_Expenses FROM candidate c WHERE Candidate_ID = 1"
            },
            {
                "User": "What is the highest unsure rate and which candidate has it?",
                "Answer": "SELECT Candidate_ID, Unsure_rate FROM candidate ORDER BY Unsure_rate DESC LIMIT 1"
            }
        ]
    },
    {
        "idx": 528,
        "db": "ship_mission",
        "interaction": [
            {
                "User": "What types of ships do we have?",
                "Answer": "SELECT DISTINCT Type FROM ship"
            },
            {
                "User": "Add a new cargo ship named 'Oceanic' from the United Kingdom with a tonnage of 5000.",
                "Answer": "INSERT INTO ship (Ship_ID, Name, Type, Nationality, Tonnage) VALUES (9, 'Oceanic', 'Cargo ship', 'United Kingdom', 5000)"
            },
            {
                "User": "Now, show me the updated list of cargo ships.",
                "Answer": "SELECT Name, Tonnage FROM ship WHERE Type = 'Cargo ship'"
            },
            {
                "User": "I want to update the tonnage of the 'Corbridge' to 4000.",
                "Answer": "UPDATE ship SET Tonnage = 4000 WHERE Name = 'Corbridge'"
            },
            {
                "User": "Can you show me the ship with the updated tonnage?",
                "Answer": "SELECT * FROM ship WHERE Name = 'Corbridge'"
            },
            {
                "User": "Let's create a table to track ship maintenance records.",
                "Answer": "CREATE TABLE maintenance (Maintenance_ID number PRIMARY KEY, Ship_ID number, Maintenance_Date text, Description text, Cost number)"
            },
            {
                "User": "Add a maintenance record for the ship 'Corbridge' for a hull cleaning on 2023-04-01, costing 1500.",
                "Answer": "INSERT INTO maintenance (Maintenance_ID, Ship_ID, Maintenance_Date, Description, Cost) VALUES (1, 1, '2023-04-01', 'Hull cleaning', 1500)"
            },
            {
                "User": "Show all maintenance activities that have been carried out so far.",
                "Answer": "SELECT * FROM maintenance"
            },
            {
                "User": "I realized that we should also track the name of the engineer responsible for each maintenance job. Can you add a column for that?",
                "Answer": "ALTER TABLE maintenance ADD Engineer_Name text"
            },
            {
                "User": "Now, assign the engineer named 'John Smith' to the maintenance record we just added.",
                "Answer": "UPDATE maintenance SET Engineer_Name = 'John Smith' WHERE Maintenance_ID = 1"
            },
            {
                "User": "Which ship has the highest cost of maintenance?",
                "Answer": "SELECT T2.Name, SUM(T1.Cost) as TotalCost FROM maintenance AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID GROUP BY T1.Ship_ID ORDER BY TotalCost DESC LIMIT 1"
            },
            {
                "User": "I want to register a new mission 'VMV-4' for the ship 'Oceanic', launched in 2023, currently sailing near the Bermuda Triangle at 20 knots, with a fate 'On mission'.",
                "Answer": "INSERT INTO mission (Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate) VALUES (8, 9, 'VMV-4', 2023, 'Bermuda Triangle', 20, 'On mission')"
            }
        ]
    },
    {
        "idx": 529,
        "db": "ship_mission",
        "interaction": [
            {
                "User": "Can we track the missions that a ship has completed?",
                "Answer": "ALTER TABLE ship ADD COLUMN Missions_Completed number"
            },
            {
                "User": "Add a record of a new ship named 'Endeavour' with a type 'Exploration ship', nationality 'Canada', and tonnage of 5000.",
                "Answer": "INSERT INTO ship (Ship_ID, Name, Type, Nationality, Tonnage) VALUES (9, 'Endeavour', 'Exploration ship', 'Canada', 5000)"
            },
            {
                "User": "Record a new mission for the ship 'Endeavour' with the code 'EXP-1', launched in 2023, located in the 'Arctic Ocean', traveling at 15 knots, and currently 'On Mission'.",
                "Answer": "INSERT INTO mission (Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate) VALUES (8, 9, 'EXP-1', 2023, 'Arctic Ocean', 15, 'On Mission')"
            },
            {
                "User": "Update the 'Missions_Completed' for the ship 'Corbridge' to 10.",
                "Answer": "UPDATE ship SET Missions_Completed = 10 WHERE Name = 'Corbridge'"
            },
            {
                "User": "Create a table to track the crew members for each ship.",
                "Answer": "CREATE TABLE crew (Crew_ID number, Ship_ID number, Name text, Rank text, PRIMARY KEY (Crew_ID))"
            },
            {
                "User": "Add three crew members to the 'Endeavour' with the following details: 1) John Smith, Captain; 2) Sarah Davis, First Officer; 3) Alex Johnson, Engineer.",
                "Answer": "INSERT INTO crew (Crew_ID, Ship_ID, Name, Rank) VALUES (1, 9, 'John Smith', 'Captain'), (2, 9, 'Sarah Davis', 'First Officer'), (3, 9, 'Alex Johnson', 'Engineer')"
            },
            {
                "User": "How many missions have been launched after 1950?",
                "Answer": "SELECT COUNT(*) FROM mission WHERE Launched_Year > 1950"
            },
            {
                "User": "What is the average speed of all missions?",
                "Answer": "SELECT AVG(Speed_knots) FROM mission"
            },
            {
                "User": "List the names of all ships that have been decommissioned.",
                "Answer": "SELECT s.Name FROM ship s JOIN mission m ON s.Ship_ID = m.Ship_ID WHERE m.Fate = 'Decommissioned 1950'"
            },
            {
                "User": "Increase the tonnage of the 'Endeavour' by 200 as they have upgraded their vessel.",
                "Answer": "UPDATE ship SET Tonnage = Tonnage + 200 WHERE Name = 'Endeavour'"
            },
            {
                "User": "What is the name of the ship that has completed the most missions?",
                "Answer": "SELECT Name FROM ship ORDER BY Missions_Completed DESC LIMIT 1"
            },
            {
                "User": "Alter the 'crew' table to add a column for 'Nationality' of the crew members.",
                "Answer": "ALTER TABLE crew ADD COLUMN Nationality text"
            },
            {
                "User": "Update the nationality for the crew members of the 'Endeavour' to 'Canadian'.",
                "Answer": "UPDATE crew SET Nationality = 'Canadian' WHERE Ship_ID = (SELECT Ship_ID FROM ship WHERE Name = 'Endeavour')"
            }
        ]
    },
    {
        "idx": 530,
        "db": "school_player",
        "interaction": [
            {
                "User": "Can you add a new column 'Email' to the player table for contact information?",
                "Answer": "ALTER TABLE player ADD COLUMN Email text"
            },
            {
                "User": "Now, insert the email 'timothy.beckham@example.com' for Timothy Beckham.",
                "Answer": "UPDATE player SET Email = 'timothy.beckham@example.com' WHERE Player = 'Timothy Beckham'"
            },
            {
                "User": "Add Pedro Álvarez's email as 'pedro.alvarez@example.com'.",
                "Answer": "UPDATE player SET Email = 'pedro.alvarez@example.com' WHERE Player = 'Pedro Álvarez'"
            },
            {
                "User": "I want to know Eric Hosmer's email.",
                "Answer": "SELECT Email FROM player WHERE Player = 'Eric Hosmer'"
            },
            {
                "User": "Let's create a new table for school events with columns for event ID, school ID, event name, and event date.",
                "Answer": "CREATE TABLE school_events (Event_ID number PRIMARY KEY, School_ID number, Event_Name text, Event_Date text)"
            },
            {
                "User": "Insert a new event for St Aloysius' College, the 'Annual Sports Day' on '2023-05-15'.",
                "Answer": "INSERT INTO school_events (Event_ID, School_ID, Event_Name, Event_Date) VALUES (1, 1, 'Annual Sports Day', '2023-05-15')"
            },
            {
                "User": "What events are scheduled for Cranbrook School?",
                "Answer": "SELECT Event_Name, Event_Date FROM school_events WHERE School_ID = 3"
            },
            {
                "User": "Can we update the school table to include a 'Website' column?",
                "Answer": "ALTER TABLE school ADD COLUMN Website text"
            },
            {
                "User": "Set the website for Barker College to 'www.barkercollege.edu'.",
                "Answer": "UPDATE school SET Website = 'www.barkercollege.edu' WHERE School_ID = 2"
            },
            {
                "User": "I need to know the website for St Aloysius' College.",
                "Answer": "SELECT Website FROM school WHERE School_ID = 1"
            },
            {
                "User": "How many students are enrolled at schools with a 'Catholic' denomination?",
                "Answer": "SELECT SUM(Enrollment) FROM school WHERE Denomination = 'Catholic'"
            },
            {
                "User": "Add a new player to the database with the following details: Player_ID: 24, Player: 'Miguel Sano', Team: 'Minnesota Twins', Age: 18, Position: 'Third Baseman', School_ID: 2, Email: 'miguel.sano@example.com'.",
                "Answer": "INSERT INTO player (Player_ID, Player, Team, Age, Position, School_ID, Email) VALUES (24, 'Miguel Sano', 'Minnesota Twins', 18, 'Third Baseman', 2, 'miguel.sano@example.com')"
            },
            {
                "User": "Which schools have boarding options?",
                "Answer": "SELECT School FROM school WHERE Day_or_Boarding LIKE '%Boarding%'"
            }
        ]
    },
    {
        "idx": 531,
        "db": "school_player",
        "interaction": [
            {
                "User": "Can you add a new school with the details provided?",
                "Answer": "INSERT INTO school (School_ID, School, Location, Enrollment, Founded, Denomination, Boys_or_Girls, Day_or_Boarding, Year_Entered_Competition, School_Colors) VALUES (7, 'Greenwood High', 'Green Valley', 800, 1965, 'Non-Denominational', 'Co-ed', 'Day', 1975, 'Green and White')"
            },
            {
                "User": "I want to update the enrollment of St Aloysius' College to 1300.",
                "Answer": "UPDATE school SET Enrollment = 1300 WHERE School_ID = 1"
            },
            {
                "User": "Can we add a new column to track whether the school has a swimming pool?",
                "Answer": "ALTER TABLE school ADD COLUMN Has_Swimming_Pool text"
            },
            {
                "User": "Now set the swimming pool availability for St Aloysius' College to 'Yes'.",
                "Answer": "UPDATE school SET Has_Swimming_Pool = 'Yes' WHERE School_ID = 1"
            },
            {
                "User": "List all schools that have a swimming pool.",
                "Answer": "SELECT School FROM school WHERE Has_Swimming_Pool = 'Yes'"
            },
            {
                "User": "Create a new table to record sports achievements.",
                "Answer": "CREATE TABLE sports_achievements (Achievement_ID number PRIMARY KEY, School_ID number, Sport text, Achievement text, Year number)"
            },
            {
                "User": "Add a record of St Aloysius' College winning a soccer championship in 2020.",
                "Answer": "INSERT INTO sports_achievements (Achievement_ID, School_ID, Sport, Achievement, Year) VALUES (1, 1, 'Soccer', 'Championship Win', 2020)"
            },
            {
                "User": "Which schools participate in the DSHA league and have a swimming pool?",
                "Answer": "SELECT s.School FROM school s JOIN school_details sd ON s.School_ID = sd.School_ID WHERE sd.League = 'DSHA' AND s.Has_Swimming_Pool = 'Yes'"
            },
            {
                "User": "Update the school colors for Cranbrook School to 'Black, Red & White'.",
                "Answer": "UPDATE school SET School_Colors = 'Black, Red & White' WHERE School = 'Cranbrook School'"
            },
            {
                "User": "How many players are there in the Kansas City Royals team?",
                "Answer": "SELECT COUNT(*) FROM player WHERE Team = 'Kansas City Royals'"
            },
            {
                "User": "Insert a new player into the player table.",
                "Answer": "INSERT INTO player (Player_ID, Player, Team, Age, Position, School_ID) VALUES (24, 'Jane Doe', 'Kansas City Royals', 17, 'Pitcher', 3)"
            },
            {
                "User": "What is the average age of players in Tampa Bay Devil Rays?",
                "Answer": "SELECT AVG(Age) FROM player WHERE Team = 'Tampa Bay Devil Rays'"
            }
        ]
    },
    {
        "idx": 532,
        "db": "epinions_1",
        "interaction": [
            {
                "User": "How many items are there in the database?",
                "Answer": "SELECT COUNT(*) FROM item"
            },
            {
                "User": "Add a new item called 'banana' to the list, with id is 8",
                "Answer": "INSERT INTO item (i_id, title) VALUES (8, 'banana')"
            },
            {
                "User": "Can you show me the updated list of items?",
                "Answer": "SELECT * FROM item"
            },
            {
                "User": "I want to update the rating for the review with a_id 2 to 8.",
                "Answer": "UPDATE review SET rating = 8 WHERE a_id = 2"
            },
            {
                "User": "Now, which user has the highest rating on their reviews?",
                "Answer": "SELECT T1.u_id FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id ORDER BY T2.rating DESC LIMIT 1"
            },
            {
                "User": "Add a new user named 'Alice' with u_id 8.",
                "Answer": "INSERT INTO useracct (u_id, name) VALUES (8, 'Alice')"
            },
            {
                "User": "I'd like to see the list of all users now.",
                "Answer": "SELECT * FROM useracct"
            },
            {
                "User": "Let's create a new table for item categories with columns category_id and category_name.",
                "Answer": "CREATE TABLE item_category (category_id number PRIMARY KEY, category_name text)"
            },
            {
                "User": "Insert categories 'Fruit' and 'Vegetable' with ids 1 and 2 respectively.",
                "Answer": "INSERT INTO item_category (category_id, category_name) VALUES (1, 'Fruit'), (2, 'Vegetable')"
            },
            {
                "User": "Can we add a category_id column to the item table to reference the item_category table?",
                "Answer": "ALTER TABLE item ADD category_id number REFERENCES item_category(category_id)"
            },
            {
                "User": "Assign all current items to the 'Fruit' category.",
                "Answer": "UPDATE item SET category_id = 1"
            },
            {
                "User": "Show me all items with their categories.",
                "Answer": "SELECT T1.title, T2.category_name FROM item AS T1 JOIN item_category AS T2 ON T1.category_id = T2.category_id"
            },
            {
                "User": "Who has trusted user with u_id 2 and what is the trust level?",
                "Answer": "SELECT source_u_id, trust FROM trust WHERE target_u_id = 2"
            },
            {
                "User": "User with u_id 3 now trusts user with u_id 4 with a trust level of 7, add this trust relationship.",
                "Answer": "INSERT INTO trust (source_u_id, target_u_id, trust) VALUES (3, 4, 7)"
            }
        ]
    },
    {
        "idx": 533,
        "db": "epinions_1",
        "interaction": [
            {
                "User": "I'd like to add a new item called 'banana' to the database. with id is 8?",
                "Answer": "INSERT INTO item (i_id, title) VALUES (8, 'banana')"
            },
            {
                "User": "Can we update the rating for the 'orange' item to 8?",
                "Answer": "UPDATE review SET rating = 8 WHERE i_id = (SELECT i_id FROM item WHERE title = 'orange')"
            },
            {
                "User": "Could you tell me the names of all users who have given a rating of 8 or above?",
                "Answer": "SELECT U.name FROM useracct AS U JOIN review AS R ON U.u_id = R.u_id WHERE R.rating >= 8"
            },
            {
                "User": "Let's create a new table to keep track of user comments with comment_id, user_id, and the comment text. How would you do that?",
                "Answer": "CREATE TABLE comments (comment_id number PRIMARY KEY, user_id number, comment_text text)"
            },
            {
                "User": "I want to add a comment made by user with ID 2. The comment is 'Great service!'. What is the SQL command?",
                "Answer": "INSERT INTO comments (comment_id, user_id, comment_text) VALUES (1, 2, 'Great service!')"
            },
            {
                "User": "Can we add a 'date' column to the review table to record when the review was made?",
                "Answer": "ALTER TABLE review ADD COLUMN date text"
            },
            {
                "User": "Let's insert a review for the 'banana' item with a rating of 9 and rank of 2 by the user with ID 3. Assume the a_id is 8 today's date is 2023-04-01.",
                "Answer": "INSERT INTO review (a_id, u_id, i_id, rating, rank, date) VALUES (8, 3, 3, 9, 2, '2023-04-01')"
            },
            {
                "User": "Now, can you show me all items that have been reviewed today?",
                "Answer": "SELECT I.title FROM item AS I JOIN review AS R ON I.i_id = R.i_id WHERE R.date = '2023-04-01'"
            },
            {
                "User": "How about we update the trust level between user 1 and user 2 to 9?",
                "Answer": "UPDATE trust SET trust = 9 WHERE source_u_id = 1 AND target_u_id = 2"
            },
            {
                "User": "Can you give me a list of items that have not been reviewed yet?",
                "Answer": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"
            }
        ]
    },
    {
        "idx": 534,
        "db": "loan_1",
        "interaction": [
            {
                "User": "Can you add a new customer named Alice with a checking account, $5000 balance, no loans, and a credit score of 750 to the downtown branch?",
                "Answer": "INSERT INTO customer (cust_ID, cust_name, acc_type, acc_bal, no_of_loans, credit_score, branch_ID, state) VALUES ('4', 'Alice', 'checking', 5000, 0, 750, 2, 'Utah')"
            },
            {
                "User": "What is the updated number of customers at the downtown branch?",
                "Answer": "SELECT no_of_customers FROM bank WHERE branch_ID = 2"
            },
            {
                "User": "Please update the number of customers for the downtown branch to include Alice.",
                "Answer": "UPDATE bank SET no_of_customers = no_of_customers + 1 WHERE branch_ID = 2"
            },
            {
                "User": "I'd like to know the total balance of all customers at the downtown branch now.",
                "Answer": "SELECT SUM(acc_bal) FROM customer WHERE branch_ID = 2"
            },
            {
                "User": "Can we create a new table to log transactions with columns for transaction ID, customer ID, transaction amount, and transaction date?",
                "Answer": "CREATE TABLE transactions (transaction_ID number PRIMARY KEY, cust_ID text, transaction_amount number, transaction_date date)"
            },
            {
                "User": "Let's record a new transaction where customer Mary deposits $500 on today's date.",
                "Answer": "INSERT INTO transactions (transaction_ID, cust_ID, transaction_amount, transaction_date) VALUES (1, '1', 500, CURRENT_DATE)"
            },
            {
                "User": "Can you show me the latest transactions for customer Mary?",
                "Answer": "SELECT * FROM transactions WHERE cust_ID = '1' ORDER BY transaction_date DESC"
            },
            {
                "User": "Please update Mary's account balance to reflect the new deposit.",
                "Answer": "UPDATE customer SET acc_bal = acc_bal + 500 WHERE cust_ID = '1'"
            },
            {
                "User": "Is it possible to add an email column to the customer table?",
                "Answer": "ALTER TABLE customer ADD email text"
            },
            {
                "User": "Can you update Alice's email to 'alice@email.com'?",
                "Answer": "UPDATE customer SET email = 'alice@email.com' WHERE cust_name = 'Alice'"
            },
            {
                "User": "I need a report of all customers with their email addresses.",
                "Answer": "SELECT cust_name, email FROM customer"
            },
            {
                "User": "How many loans does the Morningside branch have in total?",
                "Answer": "SELECT COUNT(*) FROM loan WHERE branch_ID = '1'"
            },
            {
                "User": "Let's add a new loan type called 'Student' to the loan table.",
                "Answer": "ALTER TABLE loan ADD COLUMN loan_type_student text"
            },
            {
                "User": "Record a new 'Student' loan for $20000 to customer Jack at the Morningside branch.",
                "Answer": "INSERT INTO loan (loan_ID, loan_type, loan_type_student, cust_ID, branch_ID, amount) VALUES ('4', 'Other', 'Student', '2', '1', 20000)"
            }
        ]
    },
    {
        "idx": 535,
        "db": "loan_1",
        "interaction": [
            {
                "User": "How many loans does each branch have?",
                "Answer": "SELECT branch_ID, COUNT(*) as loan_count FROM loan GROUP BY branch_ID"
            },
            {
                "User": "Can you add a new column to track the date when a customer joined the bank?",
                "Answer": "ALTER TABLE customer ADD COLUMN join_date DATE"
            },
            {
                "User": "Please update the join date for customer with cust_ID 1 to January 1, 2020.",
                "Answer": "UPDATE customer SET join_date = '2020-01-01' WHERE cust_ID = '1'"
            },
            {
                "User": "What is the total number of customers across all branches?",
                "Answer": "SELECT SUM(no_of_customers) as total_customers FROM bank"
            },
            {
                "User": "Can we create a new table to keep track of employee information?",
                "Answer": "CREATE TABLE employee (emp_ID number PRIMARY KEY, emp_name text, branch_ID number, salary number, position text)"
            },
            {
                "User": "Insert data for an employee named 'Alice' who works at branch with ID 1, has a salary of 50000, and holds the position of 'Manager'.",
                "Answer": "INSERT INTO employee (emp_ID, emp_name, branch_ID, salary, position) VALUES (1, 'Alice', 1, 50000, 'Manager')"
            },
            {
                "User": "Can you give me a list of all employees and the name of the branch they work at?",
                "Answer": "SELECT e.emp_name, b.bname FROM employee e INNER JOIN bank b ON e.branch_ID = b.branch_ID"
            },
            {
                "User": "I need to know the branch names where the number of customers is more than 300.",
                "Answer": "SELECT bname FROM bank WHERE no_of_customers > 300"
            },
            {
                "User": "Let's add a new loan type called 'Education'. Can you update the loan table to include this type?",
                "Answer": "INSERT INTO loan (loan_ID, loan_type, cust_ID, branch_ID, amount) VALUES ('4', 'Education', '2', '2', 10000)"
            },
            {
                "User": "Show me the average loan amount for each type of loan we offer.",
                "Answer": "SELECT loan_type, AVG(amount) as avg_amount FROM loan GROUP BY loan_type"
            },
            {
                "User": "Can you update the credit score of customer 'Jack' to 35?",
                "Answer": "UPDATE customer SET credit_score = 35 WHERE cust_name = 'Jack'"
            },
            {
                "User": "Now, I want to see the average account balance of customers with credit score lower than 50 for each account type, including the new data.",
                "Answer": "SELECT avg(acc_bal) as average_balance, acc_type FROM customer WHERE credit_score < 50 GROUP BY acc_type"
            },
            {
                "User": "Create a new table to record transactions with columns for transaction ID, customer ID, amount, and transaction date.",
                "Answer": "CREATE TABLE `transaction` (trans_ID number PRIMARY KEY, cust_ID text, amount number, trans_date DATE)"
            },
            {
                "User": "Insert a transaction record for customer with ID 2, with an amount of 150 and a transaction date of today.",
                "Answer": "INSERT INTO `transaction` (trans_ID, cust_ID, amount, trans_date) VALUES (1, '2', 150, CURRENT_DATE)"
            },
            {
                "User": "How many transactions have been made by customers living in Utah?",
                "Answer": "SELECT COUNT(*) as transaction_count FROM `transaction` t INNER JOIN customer c ON t.cust_ID = c.cust_ID WHERE c.state = 'Utah'"
            },
            {
                "User": "Update the number of customers for the 'morningside' branch to 210.",
                "Answer": "UPDATE bank SET no_of_customers = 210 WHERE bname = 'morningside'"
            }
        ]
    },
    {
        "idx": 536,
        "db": "perpetrator",
        "interaction": [
            {
                "User": "Can you add a new perpetrator record for an incident that happened yesterday in 'New York, USA' with 10 killed and 20 injured?",
                "Answer": "INSERT INTO perpetrator (People_ID, Date, Year, Location, Country, Killed, Injured) VALUES ((SELECT MAX(People_ID) + 1 FROM people), '03.31', 2023, 'New York', 'USA', 10, 20)"
            },
            {
                "User": "I need to update the height and weight for Ron Baxter to 6.5 and 210 respectively. Can you do that?",
                "Answer": "UPDATE people SET Height = 6.5, Weight = 210 WHERE Name = 'Ron Baxter'"
            },
            {
                "User": "Can we get the total number of incidents recorded in the database?",
                "Answer": "SELECT COUNT(*) FROM perpetrator"
            },
            {
                "User": "Please add a new column to track the motive of each incident in the perpetrator table.",
                "Answer": "ALTER TABLE perpetrator ADD COLUMN Motive text"
            },
            {
                "User": "Now that we have a motive column, can you update the motive for the incident in 'Zhaodong, China' to 'personal grudge'?",
                "Answer": "UPDATE perpetrator SET Motive = 'personal grudge' WHERE Location = 'Zhaodong' AND Country = 'China'"
            },
            {
                "User": "Let's create a new table to track witnesses. It should have Witness_ID, Perpetrator_ID, Name, and Contact_Info.",
                "Answer": "CREATE TABLE witnesses (Witness_ID number PRIMARY KEY, Perpetrator_ID number, Name text, Contact_Info text)"
            },
            {
                "User": "Can you tell me the average number of people killed in incidents that happened before the year 2000?",
                "Answer": "SELECT AVG(Killed) FROM perpetrator WHERE Year < 2000"
            },
            {
                "User": "Can you insert a new witness record for the first perpetrator with the name 'John Doe' and contact info '555-1234'?",
                "Answer": "INSERT INTO witnesses (Witness_ID, Perpetrator_ID, Name, Contact_Info) VALUES ((SELECT MAX(Witness_ID) + 1 FROM witnesses), 1, 'John Doe', '555-1234')"
            },
            {
                "User": "Show me all the incidents where the number of injured was greater than 10 and include the motive if available.",
                "Answer": "SELECT *, Motive FROM perpetrator WHERE Injured > 10"
            },
            {
                "User": "For the new incident in New York, can you set the motive as 'unknown'?",
                "Answer": "UPDATE perpetrator SET Motive = 'unknown' WHERE Location = 'New York' AND Country = 'USA' AND Date = '03.31' AND Year = 2023"
            }
        ]
    },
    {
        "idx": 537,
        "db": "customers_and_invoices",
        "interaction": [
            {
                "User": "I'd like to add a new customer named John Doe with the email address john.doe@example.com. Can you do that?",
                "Answer": "INSERT INTO Customers (customer_id, customer_first_name, customer_middle_initial, customer_last_name, gender, email_address, login_name, login_password, phone_number, town_city, state_county_province, country) VALUES (16, 'John', 'Q', 'Doe', '1', 'john.doe@example.com', 'john.doe', 'password123', '555-1234', 'Doe Town', 'Doe State', 'USA')"
            },
            {
                "User": "Can we update John Doe's phone number to '555-6789'?",
                "Answer": "UPDATE Customers SET phone_number = '555-6789' WHERE customer_first_name = 'John' AND customer_last_name = 'Doe'"
            },
            {
                "User": "John Doe has decided to use a different email. Please change his email to john.q.doe@example.com.",
                "Answer": "UPDATE Customers SET email_address = 'john.q.doe@example.com' WHERE customer_first_name = 'John' AND customer_last_name = 'Doe'"
            },
            {
                "User": "Let's add a new product under electronics with the name 'Smartphone', color 'Black', and price '299.99'.",
                "Answer": "INSERT INTO Products (product_id, parent_product_id, production_type_code, unit_price, product_name, product_color, product_size) VALUES (16, NULL, 'Electronics', 299.99, 'Smartphone', 'Black', 'N/A')"
            },
            {
                "User": "We need to keep track of the stock quantities. Can you add a 'stock_quantity' column to the products table?",
                "Answer": "ALTER TABLE Products ADD stock_quantity number"
            },
            {
                "User": "Now, set the initial stock quantity for the 'Smartphone' to 50 units.",
                "Answer": "UPDATE Products SET stock_quantity = 50 WHERE product_name = 'Smartphone'"
            },
            {
                "User": "Let's create a new table to track customer feedback on products. It should include feedback_id, product_id, customer_id, feedback_text, and feedback_date.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, product_id number, customer_id number, feedback_text text, feedback_date time)"
            },
            {
                "User": "I want to see a list of all products along with their stock quantities.",
                "Answer": "SELECT product_name, stock_quantity FROM Products"
            },
            {
                "User": "Can you show me the full details of customers who have placed more than 3 orders?",
                "Answer": "SELECT T2.* FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(T1.order_id) > 3"
            },
            {
                "User": "A customer reported a mistake in their town name. For customer_id 2, change the town_city to 'New Isabell'.",
                "Answer": "UPDATE Customers SET town_city = 'New Isabell' WHERE customer_id = 2"
            },
            {
                "User": "For tracking purposes, we need to add a 'last_updated' timestamp to the Accounts table. Please add this column.",
                "Answer": "ALTER TABLE Accounts ADD last_updated time"
            }
        ]
    },
    {
        "idx": 538,
        "db": "customers_and_invoices",
        "interaction": [
            {
                "User": "Can we add a new customer to the database?",
                "Answer": "INSERT INTO Customers (customer_id, customer_first_name, customer_middle_initial, customer_last_name, gender, email_address, login_name, login_password, phone_number, town_city, state_county_province, country) VALUES (16, 'Alice', 'B', 'Smith', '1', 'alice.smith@example.com', 'alices', 'password123', '555-1234', 'Smalltown', 'Texas', 'USA')"
            },
            {
                "User": "What's the name of the customer who was added last?",
                "Answer": "SELECT customer_first_name, customer_last_name FROM Customers ORDER BY customer_id DESC LIMIT 1"
            },
            {
                "User": "I need to update the phone number for customer ID 16.",
                "Answer": "UPDATE Customers SET phone_number = '555-9876' WHERE customer_id = 16"
            },
            {
                "User": "Can we track the favorite product category for each customer?",
                "Answer": "ALTER TABLE Customers ADD COLUMN favorite_product_category TEXT"
            },
            {
                "User": "Set the favorite product category for customer ID 16 to 'Books'.",
                "Answer": "UPDATE Customers SET favorite_product_category = 'Books' WHERE customer_id = 16"
            },
            {
                "User": "How many customers have 'Books' as their favorite product category?",
                "Answer": "SELECT COUNT(*) FROM Customers WHERE favorite_product_category = 'Books'"
            },
            {
                "User": "Create a new table for customer feedback on orders.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id NUMBER PRIMARY KEY, order_id NUMBER, customer_id NUMBER, feedback_text TEXT, feedback_date TIME)"
            },
            {
                "User": "Insert feedback for order ID 2 from customer ID 12.",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, order_id, customer_id, feedback_text, feedback_date) VALUES (1, 2, 12, 'Very satisfied with the products.', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Show me all feedback comments left by customers.",
                "Answer": "SELECT feedback_text FROM Customer_Feedback"
            },
            {
                "User": "Can we add a status for each order to track its progress?",
                "Answer": "ALTER TABLE Orders ADD COLUMN order_status TEXT"
            },
            {
                "User": "Update the status of order ID 2 to 'Delivered'.",
                "Answer": "UPDATE Orders SET order_status = 'Delivered' WHERE order_id = 2"
            },
            {
                "User": "How many orders have been delivered?",
                "Answer": "SELECT COUNT(*) FROM Orders WHERE order_status = 'Delivered'"
            },
            {
                "User": "What is the total cost of all delivered orders?",
                "Answer": "SELECT SUM(derived_total_cost) FROM Invoice_Line_Items WHERE order_item_id IN (SELECT order_item_id FROM Orders WHERE order_status = 'Delivered')"
            }
        ]
    },
    {
        "idx": 539,
        "db": "local_govt_in_alabama",
        "interaction": [
            {
                "User": "Can we add a new service type called 'Pet Registration'?",
                "Answer": "INSERT INTO Services (Service_ID, Service_Type_Code) VALUES (10, 'Pet Registration')"
            },
            {
                "User": "I'd like to update the event details for event ID 3 to 'Completed'.",
                "Answer": "UPDATE Events SET Event_Details = 'Completed' WHERE Event_ID = 3"
            },
            {
                "User": "How many organizers have participated in events?",
                "Answer": "SELECT COUNT(DISTINCT T1.Participant_ID) FROM Participants AS T1 INNER JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE T1.Participant_Type_Code = 'Organizer'"
            },
            {
                "User": "Could you tell me the names of the participants in the 'Death Proof' service events?",
                "Answer": "SELECT T1.Participant_Details FROM Participants AS T1 INNER JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID INNER JOIN Events AS T3 ON T2.Event_ID = T3.Event_ID INNER JOIN Services AS T4 ON T3.Service_ID = T4.Service_ID WHERE T4.Service_Type_Code = 'Death Proof'"
            },
            {
                "User": "Let's create a new table to track participant feedback with columns for feedback ID, event ID, participant ID, and feedback text.",
                "Answer": "CREATE TABLE Participant_Feedback (Feedback_ID number PRIMARY KEY, Event_ID number, Participant_ID number, Feedback_Text text)"
            },
            {
                "User": "Can you insert a feedback record for event ID 8 from participant ID 86 saying 'Very well organized'?",
                "Answer": "INSERT INTO Participant_Feedback (Feedback_ID, Event_ID, Participant_ID, Feedback_Text) VALUES (1, 8, 86, 'Very well organized')"
            },
            {
                "User": "How many events had participants but were not successful?",
                "Answer": "SELECT COUNT(DISTINCT T1.Event_ID) FROM Events AS T1 INNER JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID WHERE T1.Event_Details != 'Success'"
            },
            {
                "User": "Add a new column 'Date' to the Events table to record when the event happened.",
                "Answer": "ALTER TABLE Events ADD Date date"
            },
            {
                "User": "What is the average number of participants per event?",
                "Answer": "SELECT AVG(Participant_Count) FROM (SELECT Event_ID, COUNT(Participant_ID) AS Participant_Count FROM Participants_in_Events GROUP BY Event_ID) AS SubQuery"
            },
            {
                "User": "Can we track the duration of each event? We need to add 'Duration' in hours to the Events table.",
                "Answer": "ALTER TABLE Events ADD Duration number"
            },
            {
                "User": "Set the duration of event ID 8 to 2 hours.",
                "Answer": "UPDATE Events SET Duration = 2 WHERE Event_ID = 8"
            },
            {
                "User": "List all the services along with the number of events they had.",
                "Answer": "SELECT T1.Service_Type_Code, COUNT(T2.Event_ID) AS NumberOfEvents FROM Services AS T1 LEFT JOIN Events AS T2 ON T1.Service_ID = T2.Service_ID GROUP BY T1.Service_Type_Code"
            }
        ]
    },
    {
        "idx": 540,
        "db": "local_govt_in_alabama",
        "interaction": [
            {
                "User": "How many services are currently offered?",
                "Answer": "SELECT COUNT(*) FROM Services"
            },
            {
                "User": "Can we add a new service for 'Tax Filing'?",
                "Answer": "INSERT INTO Services (Service_ID, Service_Type_Code) VALUES (7, 'Tax Filing')"
            },
            {
                "User": "How many services are offered now after adding the new one?",
                "Answer": "SELECT COUNT(*) FROM Services"
            },
            {
                "User": "I need to update the 'Event_Details' for Event_ID 3 to 'Completed'.",
                "Answer": "UPDATE Events SET Event_Details = 'Completed' WHERE Event_ID = 3"
            },
            {
                "User": "List all events that have been completed.",
                "Answer": "SELECT * FROM Events WHERE Event_Details = 'Completed'"
            },
            {
                "User": "Can you show me the details of the last event we added?",
                "Answer": "SELECT * FROM Events ORDER BY Event_ID DESC LIMIT 1"
            },
            {
                "User": "I realized we need to keep track of the dates for each event. Can we add a 'Date' column to the Events table?",
                "Answer": "ALTER TABLE Events ADD Date DATE"
            },
            {
                "User": "Now that we have dates, set the date for the Event_ID 3 to '2023-04-01'.",
                "Answer": "UPDATE Events SET Date = '2023-04-01' WHERE Event_ID = 3"
            },
            {
                "User": "Show me all the events that have a set date.",
                "Answer": "SELECT * FROM Events WHERE Date IS NOT NULL"
            },
            {
                "User": "We need to keep track of the duration of each event. Can we add a 'Duration_Hours' column to the Events table?",
                "Answer": "ALTER TABLE Events ADD Duration_Hours INT"
            },
            {
                "User": "Set the duration for the Event_ID 3 to 5 hours.",
                "Answer": "UPDATE Events SET Duration_Hours = 5 WHERE Event_ID = 3"
            },
            {
                "User": "List all events with their duration and date.",
                "Answer": "SELECT Event_ID, Date, Duration_Hours FROM Events WHERE Date IS NOT NULL AND Duration_Hours IS NOT NULL"
            },
            {
                "User": "Can we create a new table to track feedback from participants for each event?",
                "Answer": "CREATE TABLE Event_Feedback (Feedback_ID number PRIMARY KEY, Event_ID number, Participant_ID number, Feedback_Details text)"
            },
            {
                "User": "Add feedback for Event_ID 3 from Participant_ID 9 saying 'Very well organized'.",
                "Answer": "INSERT INTO Event_Feedback (Feedback_ID, Event_ID, Participant_ID, Feedback_Details) VALUES (1, 3, 9, 'Very well organized')"
            },
            {
                "User": "Show me all feedback for events.",
                "Answer": "SELECT * FROM Event_Feedback"
            }
        ]
    },
    {
        "idx": 541,
        "db": "match_season",
        "interaction": [
            {
                "User": "Can we add a new team to the database?",
                "Answer": "INSERT INTO team (Team_id, Name) VALUES (11, 'New Team Name')"
            },
            {
                "User": "Please list all the teams now including the new one.",
                "Answer": "SELECT * FROM team"
            },
            {
                "User": "I want to update the capital of Iran to 'New Tehran'.",
                "Answer": "UPDATE country SET Capital = 'New Tehran' WHERE Country_name = 'Iran'"
            },
            {
                "User": "Show me the updated capital of Iran.",
                "Answer": "SELECT Capital FROM country WHERE Country_name = 'Iran'"
            },
            {
                "User": "Can we track the coaches for each team? We need to add a coach column to the team table.",
                "Answer": "ALTER TABLE team ADD COLUMN Coach text"
            },
            {
                "User": "Assign 'John Smith' as the coach for the 'New Team Name'.",
                "Answer": "UPDATE team SET Coach = 'John Smith' WHERE Name = 'New Team Name'"
            },
            {
                "User": "Show me the team details including the coach for 'New Team Name'.",
                "Answer": "SELECT * FROM team WHERE Name = 'New Team Name'"
            },
            {
                "User": "Let's create a new table to track the team's home stadiums.",
                "Answer": "CREATE TABLE stadium (Stadium_id number PRIMARY KEY, Stadium_name text, Team_id number, Capacity number, FOREIGN KEY (Team_id) REFERENCES team(Team_id))"
            },
            {
                "User": "Add a new stadium for 'New Team Name' with a capacity of 50000.",
                "Answer": "INSERT INTO stadium (Stadium_id, Stadium_name, Team_id, Capacity) VALUES (1, 'New Stadium', 11, 50000)"
            },
            {
                "User": "Show me all stadiums and their corresponding teams.",
                "Answer": "SELECT s.Stadium_name, t.Name FROM stadium s JOIN team t ON s.Team_id = t.Team_id"
            },
            {
                "User": "I realized we need to track the city location for each stadium. Can we add a city column to the stadium table?",
                "Answer": "ALTER TABLE stadium ADD COLUMN City text"
            },
            {
                "User": "Set the city for 'New Stadium' to 'New City'.",
                "Answer": "UPDATE stadium SET City = 'New City' WHERE Stadium_name = 'New Stadium'"
            }
        ]
    },
    {
        "idx": 542,
        "db": "match_season",
        "interaction": [
            {
                "User": "How many teams are there in the database?",
                "Answer": "SELECT COUNT(*) FROM team"
            },
            {
                "User": "Can you add a new team called 'Sky Rockets' with Team_id 11?",
                "Answer": "INSERT INTO team (Team_id, Name) VALUES (11, 'Sky Rockets')"
            },
            {
                "User": "I need to record the home city for each team. Can you add a 'Home_City' column to the team table?",
                "Answer": "ALTER TABLE team ADD COLUMN Home_City text"
            },
            {
                "User": "Now, set the home city for 'Sky Rockets' to 'Houston'.",
                "Answer": "UPDATE team SET Home_City = 'Houston' WHERE Name = 'Sky Rockets'"
            },
            {
                "User": "Show me all teams with their home cities.",
                "Answer": "SELECT Name, Home_City FROM team"
            },
            {
                "User": "Let's create a new table to track the seasons a player has been the most valuable player (MVP).",
                "Answer": "CREATE TABLE mvp (Season number, Player_ID number, PRIMARY KEY (Season, Player_ID))"
            },
            {
                "User": "Insert the MVP for the 1996 season with Player_ID 1.",
                "Answer": "INSERT INTO mvp (Season, Player_ID) VALUES (1996, 1)"
            },
            {
                "User": "Who was the MVP in 1996?",
                "Answer": "SELECT T1.Player FROM player AS T1 JOIN mvp AS T2 ON T1.Player_ID = T2.Player_ID WHERE T2.Season = 1996"
            },
            {
                "User": "Update the Draft_Class for player 'Ben Olsen Category:Articles with hCards' to 'Generation Adidas'.",
                "Answer": "UPDATE match_season SET Draft_Class = 'Generation Adidas' WHERE Player = 'Ben Olsen Category:Articles with hCards'"
            },
            {
                "User": "Show me all the players drafted in the 'Generation Adidas' class.",
                "Answer": "SELECT Player FROM match_season WHERE Draft_Class = 'Generation Adidas'"
            },
            {
                "User": "Which country does the team 'Anais VonRueden' come from?",
                "Answer": "SELECT T2.Country_name FROM team AS T1 JOIN country AS T2 ON T1.Team_id = T2.Country_id WHERE T1.Name = 'Anais VonRueden'"
            },
            {
                "User": "We need to track assists made by players. Can you add an 'Assists' column to the player table?",
                "Answer": "ALTER TABLE player ADD COLUMN Assists number"
            },
            {
                "User": "Record 5 assists for player with Player_ID 2.",
                "Answer": "UPDATE player SET Assists = 5 WHERE Player_ID = 2"
            },
            {
                "User": "Who has the most assists in the player table?",
                "Answer": "SELECT Player FROM player ORDER BY Assists DESC LIMIT 1"
            },
            {
                "User": "Let's keep track of the coaches. Create a 'coach' table with ID, Name, and Team_id.",
                "Answer": "CREATE TABLE coach (Coach_ID number PRIMARY KEY, Name text, Team_id number)"
            },
            {
                "User": "Add a coach named 'John Smith' for the 'Sky Rockets' team.",
                "Answer": "INSERT INTO coach (Coach_ID, Name, Team_id) VALUES (1, 'John Smith', 11)"
            }
        ]
    },
    {
        "idx": 543,
        "db": "allergy_1",
        "interaction": [
            {
                "User": "How many students are there in total?",
                "Answer": "SELECT COUNT(*) FROM Student"
            },
            {
                "User": "Can we track the date when a student was diagnosed with an allergy?",
                "Answer": "ALTER TABLE Has_Allergy ADD COLUMN DiagnosisDate date"
            },
            {
                "User": "Please add a diagnosis date of '2023-04-01' for student with StuID 1001 and allergy 'Cat'.",
                "Answer": "UPDATE Has_Allergy SET DiagnosisDate = '2023-04-01' WHERE StuID = 1001 AND Allergy = 'Cat'"
            },
            {
                "User": "I need to insert a new student with the following details: StuID 1036, Last Name 'Brown', First Name 'Michael', Age 20, Sex 'M', Major 601, Advisor 1122, city_code 'NYC'.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Brown', 'Michael', 20, 'M', 601, 1122, 'NYC')"
            },
            {
                "User": "How many students are advised by advisor number 1122?",
                "Answer": "SELECT COUNT(*) FROM Student WHERE Advisor = 1122"
            },
            {
                "User": "Create a new table to record student email addresses, with columns for StuID and Email.",
                "Answer": "CREATE TABLE Student_Email (StuID number PRIMARY KEY, Email text)"
            },
            {
                "User": "Add email 'michael.brown@university.edu' for student with StuID 1004.",
                "Answer": "INSERT INTO Student_Email (StuID, Email) VALUES (1004, 'michael.brown@university.edu')"
            },
            {
                "User": "How many students are majoring in 600 and are 19 years old?",
                "Answer": "SELECT COUNT(*) FROM Student WHERE Major = 600 AND Age = 19"
            },
            {
                "User": "Can we add a column to track students' graduation year?",
                "Answer": "ALTER TABLE Student ADD COLUMN GraduationYear number"
            },
            {
                "User": "Set the graduation year to 2025 for all students currently 18 years old.",
                "Answer": "UPDATE Student SET GraduationYear = 2025 WHERE Age = 18"
            },
            {
                "User": "List all students who are expected to graduate in 2025 along with their majors.",
                "Answer": "SELECT Fname, LName, Major FROM Student WHERE GraduationYear = 2025"
            },
            {
                "User": "Can we record the severity of allergies? I want to add a 'Severity' column to the Has_Allergy table.",
                "Answer": "ALTER TABLE Has_Allergy ADD COLUMN Severity text"
            },
            {
                "User": "Update the severity of the 'Tree Pollen' allergy for student with StuID 1002 to 'High'.",
                "Answer": "UPDATE Has_Allergy SET Severity = 'High' WHERE StuID = 1002 AND Allergy = 'Tree Pollen'"
            }
        ]
    },
    {
        "idx": 544,
        "db": "allergy_1",
        "interaction": [
            {
                "User": "What is the average age of students?",
                "Answer": "SELECT AVG(Age) FROM Student"
            },
            {
                "User": "Can we add a new allergy type for medications?",
                "Answer": "ALTER TABLE Allergy_Type ADD COLUMN Medication text"
            },
            {
                "User": "Now, insert a new allergy type for 'Aspirin' as a medication.",
                "Answer": "INSERT INTO Allergy_Type (Allergy, AllergyType, Medication) VALUES ('Aspirin', 'drug', 'Yes')"
            },
            {
                "User": "List all allergy types that are medications.",
                "Answer": "SELECT Allergy FROM Allergy_Type WHERE Medication = 'Yes'"
            },
            {
                "User": "How many students are allergic to 'Eggs'?",
                "Answer": "SELECT COUNT(*) FROM Has_Allergy WHERE Allergy = 'Eggs'"
            },
            {
                "User": "Update the age of student with StuID 1003 to 22.",
                "Answer": "UPDATE Student SET Age = 22 WHERE StuID = 1003"
            },
            {
                "User": "Who is the youngest student?",
                "Answer": "SELECT Fname, LName FROM Student ORDER BY Age ASC LIMIT 1"
            },
            {
                "User": "Create a new table to track student email addresses.",
                "Answer": "CREATE TABLE Student_Email (StuID number, Email text, PRIMARY KEY (StuID))"
            },
            {
                "User": "Insert email addresses for the three students we have records for.",
                "Answer": "INSERT INTO Student_Email (StuID, Email) VALUES (1001, 'linda.smith@email.com'), (1002, 'tracy.kim@email.com'), (1003, 'shiela.jones@email.com')"
            },
            {
                "User": "Can you show me all the students and their email addresses?",
                "Answer": "SELECT Student.StuID, Fname, LName, Email FROM Student JOIN Student_Email ON Student.StuID = Student_Email.StuID"
            },
            {
                "User": "Add a new student record for 'John Doe', aged 20, male, majoring in 601, advised by 7788, living in 'NYC', and allergic to 'Nuts'.",
                "Answer": [
                    "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 601, 7788, 'NYC');",
                    "INSERT INTO Has_Allergy (StuID, Allergy) VALUES (1004, 'Nuts');"
                ]
            },
            {
                "User": "How many male students do we have?",
                "Answer": "SELECT COUNT(*) FROM Student WHERE Sex = 'M'"
            },
            {
                "User": "Alter the Student table to include a 'GraduationYear' column.",
                "Answer": "ALTER TABLE Student ADD COLUMN GraduationYear number"
            },
            {
                "User": "Set the graduation year for student 1004 to 2025.",
                "Answer": "UPDATE Student SET GraduationYear = 2025 WHERE StuID = 1004"
            }
        ]
    },
    {
        "idx": 545,
        "db": "restaurant_1",
        "interaction": [
            {
                "User": "Which major has between 2 and 30 number of students? List major and the number of students.",
                "Answer": "SELECT Major, count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30"
            },
            {
                "User": "Which major has the highest number of students? List the students' first names.",
                "Answer": "SELECT Major, Fname FROM Student WHERE major = (SELECT major FROM Student GROUP BY Major ORDER BY count(*) DESC LIMIT 1)"
            },
            {
                "User": "Which major has the least number of students? List the students' first names.",
                "Answer": "SELECT Major, Fname FROM Student WHERE major = (SELECT major FROM Student GROUP BY Major ORDER BY count(*) ASC LIMIT 1)"
            },
            {
                "User": "I want to record the favorite dish of each student. Can we add a new column for that in the Student table?",
                "Answer": "ALTER TABLE Student ADD COLUMN FavoriteDish text"
            },
            {
                "User": "Now that we have a FavoriteDish column, can you add 'Cheese Pizza' as Linda Smith's favorite dish?",
                "Answer": "UPDATE Student SET FavoriteDish = 'Cheese Pizza' WHERE LName = 'Smith' AND Fname = 'Linda'"
            },
            {
                "User": "Can you show me the students who have 'Cheese Pizza' as their favorite dish?",
                "Answer": "SELECT * FROM Student WHERE FavoriteDish = 'Cheese Pizza'"
            },
            {
                "User": "Let's create a new table to track the student's dietary restrictions. What should be included?",
                "Answer": "CREATE TABLE DietaryRestrictions (StuID number PRIMARY KEY, Restrictions text)"
            },
            {
                "User": "Please add a dietary restriction 'Lactose Intolerant' for the Student with StuID 1001.",
                "Answer": "INSERT INTO DietaryRestrictions (StuID, Restrictions) VALUES (1001, 'Lactose Intolerant')"
            },
            {
                "User": "Can we list all students along with their dietary restrictions if they have any?",
                "Answer": "SELECT Student.*, DietaryRestrictions.Restrictions FROM Student LEFT JOIN DietaryRestrictions ON Student.StuID = DietaryRestrictions.StuID"
            },
            {
                "User": "Let's add a new restaurant to our database. The restaurant is 'Chick-fil-A', located at '3100 St Paul St, Baltimore, MD 21218', with a rating of 4.",
                "Answer": "INSERT INTO Restaurant (ResName, Address, Rating) VALUES ('Chick-fil-A', '3100 St Paul St, Baltimore, MD 21218', 4)"
            },
            {
                "User": "What type of restaurant is 'Chick-fil-A'? Add it to the Type_Of_Restaurant table with a new ResTypeID.",
                "Answer": [
                    "INSERT INTO Restaurant_Type (ResTypeName, ResTypeDescription) VALUES ('Fast Food', 'Quick service restaurant');",
                    "INSERT INTO Type_Of_Restaurant (ResID, ResTypeID) SELECT ResID, (SELECT MAX(ResTypeID) FROM Restaurant_Type) FROM Restaurant WHERE ResName = 'Chick-fil-A'"
                ]
            },
            {
                "User": "Can you update the address of 'Honeygrow' to '3200 St Paul St, Baltimore, MD 21218'?",
                "Answer": "UPDATE Restaurant SET Address = '3200 St Paul St, Baltimore, MD 21218' WHERE ResName = 'Honeygrow'"
            }
        ]
    },
    {
        "idx": 546,
        "db": "restaurant_1",
        "interaction": [
            {
                "User": "Can we add a new student named John Doe, aged 22, studying major 600, with advisor 1121, and living in city code 'NYC'?",
                "Answer": "INSERT INTO Student (LName, Fname, Age, Major, Advisor, city_code) VALUES ('Doe', 'John', 22, 600, 1121, 'NYC')"
            },
            {
                "User": "What's the new student's ID?",
                "Answer": "SELECT StuID FROM Student WHERE LName = 'Doe' AND Fname = 'John'"
            },
            {
                "User": "Can we update the rating of 'Subway' to 4?",
                "Answer": "UPDATE Restaurant SET Rating = 4 WHERE ResName = 'Subway'"
            },
            {
                "User": "How many students visited 'Subway' after its rating was updated?",
                "Answer": "SELECT COUNT(*) FROM Visits_Restaurant INNER JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Restaurant.ResName = 'Subway' AND Restaurant.Rating >= 4"
            },
            {
                "User": "Can we add a new column for student emails in the Student table?",
                "Answer": "ALTER TABLE Student ADD COLUMN Email text"
            },
            {
                "User": "Please add an email for John Doe as 'john.doe@example.com'.",
                "Answer": "UPDATE Student SET Email = 'john.doe@example.com' WHERE LName = 'Doe' AND Fname = 'John'"
            },
            {
                "User": "Create a new table for student hobbies with columns for student ID and hobby name.",
                "Answer": "CREATE TABLE Student_Hobbies (StuID number, HobbyName text, PRIMARY KEY (StuID, HobbyName))"
            },
            {
                "User": "Add a hobby 'Basketball' for student John Doe.",
                "Answer": "INSERT INTO Student_Hobbies (StuID, HobbyName) SELECT StuID, 'Basketball' FROM Student WHERE LName = 'Doe' AND Fname = 'John'"
            },
            {
                "User": "List all students who have 'Basketball' as a hobby.",
                "Answer": "SELECT Student.LName, Student.Fname FROM Student INNER JOIN Student_Hobbies ON Student.StuID = Student_Hobbies.StuID WHERE Student_Hobbies.HobbyName = 'Basketball'"
            },
            {
                "User": "What is the average amount spent by students in 'Honeygrow'?",
                "Answer": "SELECT AVG(Spent) FROM Visits_Restaurant INNER JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Restaurant.ResName = 'Honeygrow'"
            },
            {
                "User": "Can we add a timestamp column to the Visits_Restaurant table to record the date and time of entry?",
                "Answer": "ALTER TABLE Visits_Restaurant ADD COLUMN EntryTimestamp datetime"
            },
            {
                "User": "Record the current timestamp for all visits in the Visits_Restaurant table.",
                "Answer": "UPDATE Visits_Restaurant SET EntryTimestamp = CURRENT_TIMESTAMP"
            },
            {
                "User": "How many unique majors are represented in the database?",
                "Answer": "SELECT COUNT(DISTINCT Major) FROM Student"
            },
            {
                "User": "Add a new restaurant type 'Cafe' with a description 'A place to enjoy coffee and pastries.'",
                "Answer": "INSERT INTO Restaurant_Type (ResTypeName, ResTypeDescription) VALUES ('Cafe', 'A place to enjoy coffee and pastries.')"
            }
        ]
    },
    {
        "idx": 547,
        "db": "cre_Docs_and_Epenses",
        "interaction": [
            {
                "User": "I want to add a new project to our database. The project ID is 110 and it's about Artificial Intelligence research.",
                "Answer": "INSERT INTO Projects (Project_ID, Project_Details) VALUES (110, 'Artificial Intelligence research')"
            },
            {
                "User": "Now, can you find me all documents related to the new AI project we just added?",
                "Answer": "SELECT Document_ID, Document_Name, Document_Description FROM Documents WHERE Project_ID = 110"
            },
            {
                "User": "Let's update the budget type description for 'Self founded' to 'Self-financed'.",
                "Answer": "UPDATE Ref_Budget_Codes SET Budget_Type_Description = 'Self-financed' WHERE Budget_Type_Code = 'SF'"
            },
            {
                "User": "Can you show me the updated description for the 'Self-financed' budget type?",
                "Answer": "SELECT Budget_Type_Code, Budget_Type_Description FROM Ref_Budget_Codes WHERE Budget_Type_Code = 'SF'"
            },
            {
                "User": "I'd like to add a new column 'Budget_Amount' to the Documents_with_Expenses table to track the expense amount.",
                "Answer": "ALTER TABLE Documents_with_Expenses ADD COLUMN Budget_Amount number"
            },
            {
                "User": "Can you insert a new expense record for Document ID 58 with a budget type 'ORG' and an amount of 1000?",
                "Answer": "INSERT INTO Documents_with_Expenses (Document_ID, Budget_Type_Code, Document_Details, Budget_Amount) VALUES (58, 'ORG', 'organization', 1000)"
            },
            {
                "User": "I need to create a new table for 'Employee' with columns 'Employee_ID' as primary key, 'Name', 'Position', and 'Project_ID' to link with the projects they are working on.",
                "Answer": "CREATE TABLE Employee (Employee_ID number PRIMARY KEY, Name text, Position text, Project_ID number)"
            },
            {
                "User": "Can you add a new employee with ID 1, name 'John Doe', position 'Data Analyst', working on project 110?",
                "Answer": "INSERT INTO Employee (Employee_ID, Name, Position, Project_ID) VALUES (1, 'John Doe', 'Data Analyst', 110)"
            },
            {
                "User": "I realized we need to track the department for each employee. Can we add a 'Department' column to the Employee table?",
                "Answer": "ALTER TABLE Employee ADD COLUMN Department text"
            },
            {
                "User": "Please update the department for employee John Doe to 'Research and Development'.",
                "Answer": "UPDATE Employee SET Department = 'Research and Development' WHERE Name = 'John Doe'"
            },
            {
                "User": "Now, can you show me all employees in the 'Research and Development' department?",
                "Answer": "SELECT * FROM Employee WHERE Department = 'Research and Development'"
            }
        ]
    },
    {
        "idx": 548,
        "db": "cre_Docs_and_Epenses",
        "interaction": [
            {
                "User": "Can we track the expenses for each project separately?",
                "Answer": "CREATE TABLE Project_Expenses (Expense_ID number PRIMARY KEY, Project_ID number, Expense_Details text, Expense_Amount decimal, Expense_Date time)"
            },
            {
                "User": "Please add a new expense for the Internet of Things project with details 'Sensor Purchase' and amount 1500.50 on today's date.",
                "Answer": "INSERT INTO Project_Expenses (Expense_ID, Project_ID, Expense_Details, Expense_Amount, Expense_Date) VALUES (1, 35, 'Sensor Purchase', 1500.50, CURRENT_DATE)"
            },
            {
                "User": "What is the total expense recorded for the Society Research project so far?",
                "Answer": "SELECT SUM(Expense_Amount) AS Total_Expense FROM Project_Expenses WHERE Project_ID = 30"
            },
            {
                "User": "We need to track the department that approved the expense. Can you add a column for this?",
                "Answer": "ALTER TABLE Project_Expenses ADD COLUMN Approved_By_Department text"
            },
            {
                "User": "Record that the 'Sensor Purchase' expense was approved by the 'Research' department.",
                "Answer": "UPDATE Project_Expenses SET Approved_By_Department = 'Research' WHERE Expense_Details = 'Sensor Purchase'"
            },
            {
                "User": "How many projects have expenses greater than 1000?",
                "Answer": "SELECT COUNT(DISTINCT Project_ID) FROM Project_Expenses WHERE Expense_Amount > 1000"
            },
            {
                "User": "Create a new document type called 'Invoice' with a description 'Billing Document'.",
                "Answer": "INSERT INTO Ref_Document_Types (Document_Type_Code, Document_Type_Name, Document_Type_Description) VALUES ('INV', 'Invoice', 'Billing Document')"
            },
            {
                "User": "Can you show me all document types now?",
                "Answer": "SELECT Document_Type_Code, Document_Type_Name FROM Ref_Document_Types"
            },
            {
                "User": "I want to update the project details for the Graph Database project to include 'Using Neo4j'.",
                "Answer": "UPDATE Projects SET Project_Details = 'Graph Database project Using Neo4j' WHERE Project_ID = 105"
            },
            {
                "User": "Let's add a new budget type for 'Private Funding' with the code 'PF'.",
                "Answer": "INSERT INTO Ref_Budget_Codes (Budget_Type_Code, Budget_Type_Description) VALUES ('PF', 'Private Funding')"
            },
            {
                "User": "Now, which budget types do we have?",
                "Answer": "SELECT Budget_Type_Code, Budget_Type_Description FROM Ref_Budget_Codes"
            },
            {
                "User": "We need to link documents to statements. Can we add a foreign key to the Documents table?",
                "Answer": "ALTER TABLE Documents ADD COLUMN Statement_ID number REFERENCES Statements(Statement_ID)"
            },
            {
                "User": "Link the document with ID 29 to the statement with ID 57.",
                "Answer": "UPDATE Documents SET Statement_ID = 57 WHERE Document_ID = 29"
            },
            {
                "User": "Can you give me a list of documents that are linked to open projects?",
                "Answer": "SELECT d.Document_ID, d.Document_Name FROM Documents d INNER JOIN Statements s ON d.Statement_ID = s.Statement_ID WHERE s.Statement_Details = 'Open Project'"
            },
            {
                "User": "Let's create a view for documents and their expenses for easy reporting.",
                "Answer": "CREATE VIEW Documents_Expenses_View AS SELECT d.Document_ID, d.Document_Name, e.Expense_Details, e.Expense_Amount FROM Documents d LEFT JOIN Project_Expenses e ON d.Project_ID = e.Project_ID"
            }
        ]
    },
    {
        "idx": 549,
        "db": "school_bus",
        "interaction": [
            {
                "User": "I'd like to add a new driver named Alex Smith, a 36-year-old Independent from Boulder, with ID 13. Can you add this record?",
                "Answer": "INSERT INTO driver (Driver_ID, Name, Party, Home_city, Age) VALUES (13, 'Alex Smith', 'Ind', 'Boulder', 36)"
            },
            {
                "User": "Great, now can you assign Alex Smith to drive for Noelani Elementary School?",
                "Answer": "INSERT INTO school_bus (School_ID, Driver_ID, Years_Working, If_full_time) VALUES (1, 13, 0, 'F')"
            },
            {
                "User": "Can you show me the updated list of school names with their bus drivers after the new assignments?",
                "Answer": "SELECT T2.School, T3.Name FROM school_bus AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID"
            },
            {
                "User": "I noticed that we don't have information on the number of buses each school has. Can you add a 'Number_of_Buses' column to the 'school' table?",
                "Answer": "ALTER TABLE school ADD Number_of_Buses number"
            },
            {
                "User": "Now, let's update the number of buses for Noelani Elementary School to 2.",
                "Answer": "UPDATE school SET Number_of_Buses = 2 WHERE School_ID = 1"
            },
            {
                "User": "How many full-time drivers do we have?",
                "Answer": "SELECT COUNT(*) FROM school_bus WHERE If_full_time = 'T'"
            },
            {
                "User": "We need to track the bus routes as well. Can you create a new table 'bus_route' with columns 'Route_ID', 'School_ID', 'Driver_ID', and 'Route_Name'?",
                "Answer": "CREATE TABLE bus_route (Route_ID number PRIMARY KEY, School_ID number, Driver_ID number, Route_Name text)"
            },
            {
                "User": "Let's add a route for Noelani Elementary School with Route_ID 101, driven by Alex Smith, named 'Beachside Express'.",
                "Answer": "INSERT INTO bus_route (Route_ID, School_ID, Driver_ID, Route_Name) VALUES (101, 1, 13, 'Beachside Express')"
            },
            {
                "User": "Can you give me a list of all routes including the school name, driver name, and route name?",
                "Answer": "SELECT T2.School, T3.Name, T1.Route_Name FROM bus_route AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID JOIN driver AS T3 ON T1.Driver_ID = T3.Driver_ID"
            },
            {
                "User": "I think it's time we give our drivers a raise. Can you update the database to increase the age of all drivers by 1 year?",
                "Answer": "UPDATE driver SET Age = Age + 1"
            }
        ]
    },
    {
        "idx": 550,
        "db": "school_bus",
        "interaction": [
            {
                "User": "Can we track the bus mileage for each school bus?",
                "Answer": "ALTER TABLE school_bus ADD COLUMN Mileage number;"
            },
            {
                "User": "Update the mileage for the bus associated with Noelani Elementary School to 12000 miles.",
                "Answer": "UPDATE school_bus SET Mileage = 12000 WHERE School_ID = (SELECT School_ID FROM school WHERE School = 'Noelani Elementary School');"
            },
            {
                "User": "How many full-time drivers do we have?",
                "Answer": "SELECT COUNT(*) FROM school_bus WHERE If_full_time = 'T';"
            },
            {
                "User": "Add a new driver named 'Alex Johnson', party 'Ind', from 'Springfield', age 38.",
                "Answer": "INSERT INTO driver (Name, Party, Home_city, Age) VALUES ('Alex Johnson', 'Ind', 'Springfield', 38);"
            },
            {
                "User": "Assign Alex Johnson to the St. Francis Assisi school bus as a part-time driver with 0 years working.",
                "Answer": "INSERT INTO school_bus (School_ID, Driver_ID, Years_Working, If_full_time) VALUES ((SELECT School_ID FROM school WHERE School = 'St. Francis Assisi'), (SELECT Driver_ID FROM driver WHERE Name = 'Alex Johnson'), 0, 'F');"
            },
            {
                "User": "What is the average age of drivers from Hartford?",
                "Answer": "SELECT AVG(Age) FROM driver WHERE Home_city = 'Hartford';"
            },
            {
                "User": "Create a new table to log daily bus maintenance records.",
                "Answer": "CREATE TABLE maintenance_log (Log_ID number PRIMARY KEY, School_Bus_ID number, Date text, Description text, Cost number);"
            },
            {
                "User": "Log a maintenance record for the bus from Noelani Elementary School for today with a description 'Oil Change' and cost of $120.",
                "Answer": "INSERT INTO maintenance_log (School_Bus_ID, Date, Description, Cost) VALUES ((SELECT School_ID FROM school WHERE School = 'Noelani Elementary School'), '2023-04-01', 'Oil Change', 120);"
            },
            {
                "User": "Show me all the schools that have buses with more than 5 years of service.",
                "Answer": "SELECT s.School FROM school s JOIN school_bus sb ON s.School_ID = sb.School_ID WHERE sb.Years_Working > 5;"
            },
            {
                "User": "Increase the years of working for all full-time drivers by 1 year.",
                "Answer": "UPDATE school_bus SET Years_Working = Years_Working + 1 WHERE If_full_time = 'T';"
            },
            {
                "User": "For the bus driven by Minnie Gonzalez, set the mileage to 15000 miles.",
                "Answer": "UPDATE school_bus SET Mileage = 15000 WHERE Driver_ID = (SELECT Driver_ID FROM driver WHERE Name = 'Minnie Gonzalez');"
            },
            {
                "User": "Can we get a list of drivers who are not affiliated with any party?",
                "Answer": "SELECT Name FROM driver WHERE Party = 'Ind' OR Party IS NULL;"
            },
            {
                "User": "Add a column 'License_Number' to the driver table to store their driving license numbers.",
                "Answer": "ALTER TABLE driver ADD COLUMN License_Number text;"
            },
            {
                "User": "Update the license number for Matthew Ritter to 'DR123456'.",
                "Answer": "UPDATE driver SET License_Number = 'DR123456' WHERE Name = 'Matthew Ritter';"
            }
        ]
    },
    {
        "idx": 551,
        "db": "products_for_hire",
        "interaction": [
            {
                "User": "Can we track the condition of the returned products?",
                "Answer": "ALTER TABLE Products_Booked ADD COLUMN product_condition TEXT"
            },
            {
                "User": "Great, now mark the condition of product with ID 1 as 'Excellent' upon return.",
                "Answer": "UPDATE Products_Booked SET product_condition = 'Excellent' WHERE product_id = 1 AND returned_yn = '1'"
            },
            {
                "User": "What is the condition of the product that was booked 5 times now?",
                "Answer": "SELECT product_condition FROM Products_Booked WHERE booked_count = 5"
            },
            {
                "User": "Can we have a report on damaged products?",
                "Answer": "CREATE VIEW Damaged_Products_Report AS SELECT pb.product_id, pb.product_condition, pb.booked_count FROM Products_Booked pb WHERE pb.product_condition = 'Damaged'"
            },
            {
                "User": "Show me the latest report on damaged products.",
                "Answer": "SELECT * FROM Damaged_Products_Report"
            },
            {
                "User": "I'd like to give a discount to our good customers. Can we add a loyalty points column to the Customers table?",
                "Answer": "ALTER TABLE Customers ADD COLUMN loyalty_points NUMBER"
            },
            {
                "User": "Add 100 loyalty points to all good customers.",
                "Answer": "UPDATE Customers SET loyalty_points = 100 WHERE good_or_bad_customer = 'good'"
            },
            {
                "User": "Who has the highest loyalty points?",
                "Answer": "SELECT first_name, last_name FROM Customers ORDER BY loyalty_points DESC LIMIT 1"
            },
            {
                "User": "Can we see all the customers who became members this year?",
                "Answer": "SELECT * FROM Customers WHERE date_became_customer >= '2023-01-01'"
            },
            {
                "User": "I want to record when a product is serviced. Can you create a table for product service history?",
                "Answer": "CREATE TABLE Product_Service_History (service_id NUMBER PRIMARY KEY, product_id NUMBER, service_date TIME, service_notes TEXT)"
            },
            {
                "User": "Log that product ID 2 was serviced today for routine maintenance.",
                "Answer": "INSERT INTO Product_Service_History (service_id, product_id, service_date, service_notes) VALUES (1, 2, CURRENT_TIMESTAMP, 'Routine maintenance')"
            },
            {
                "User": "Show me all products that were serviced in the last month.",
                "Answer": "SELECT psh.product_id, psh.service_date, psh.service_notes \nFROM Product_Service_History psh \nWHERE psh.service_date >= date('now', '-1 month');"
            },
            {
                "User": "Can you create a summary view of bookings and payments?",
                "Answer": "CREATE VIEW Booking_Payment_Summary AS SELECT b.booking_id, b.customer_id, b.amount_payable, p.amount_paid FROM Bookings b JOIN Payments p ON b.booking_id = p.booking_id"
            }
        ]
    },
    {
        "idx": 552,
        "db": "products_for_hire",
        "interaction": [
            {
                "User": "Can you tell me the average discount amount offered by the coupons?",
                "Answer": "SELECT AVG(coupon_amount) FROM Discount_Coupons"
            },
            {
                "User": "Can you update the customer record for customer id 2 to mark them as a bad customer?",
                "Answer": "UPDATE Customers SET good_or_bad_customer = 'bad' WHERE customer_id = 2"
            },
            {
                "User": "Let's create a new table to track customer feedback with columns for feedback_id, customer_id, comments, and feedback_date.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, comments text, feedback_date time)"
            },
            {
                "User": "I want to add feedback for customer id 1 with the comment 'Excellent service!' on today's date.",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, comments, feedback_date) VALUES (1, 1, 'Excellent service!', CURRENT_DATE)"
            },
            {
                "User": "Can we also modify the Bookings table to include a column for customer feedback id?",
                "Answer": "ALTER TABLE Bookings ADD COLUMN feedback_id number"
            },
            {
                "User": "Now, please link the feedback we just added to the most recent booking for customer id 1.",
                "Answer": "UPDATE Bookings SET feedback_id = 1 WHERE booking_id = (SELECT booking_id FROM Bookings WHERE customer_id = 1 ORDER BY booking_end_date DESC LIMIT 1)"
            },
            {
                "User": "How many products do we have for hire?",
                "Answer": "SELECT COUNT(*) FROM Products_for_Hire"
            },
            {
                "User": "Please insert a new product for hire with id 6, type 'Furniture', daily hire cost 45.99, name 'Vintage Chair', and description 'Classic wooden chair'.",
                "Answer": "INSERT INTO Products_for_Hire (product_id, product_type_code, daily_hire_cost, product_name, product_description) VALUES (6, 'Furniture', 45.99, 'Vintage Chair', 'Classic wooden chair')"
            },
            {
                "User": "Could you tell me which product has been booked the most times?",
                "Answer": "SELECT product_id FROM Products_Booked GROUP BY product_id ORDER BY SUM(booked_count) DESC LIMIT 1"
            },
            {
                "User": "I need to update the booking status for booking id 2 to 'Completed'.",
                "Answer": "UPDATE Bookings SET booking_status_code = 'Completed' WHERE booking_id = 2"
            },
            {
                "User": "Let's see if we can find the total amount paid by each customer. Can you provide that information?",
                "Answer": "SELECT T1.customer_id, SUM(T2.amount_paid) AS total_amount_paid FROM Customers AS T1 JOIN Payments AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id"
            },
            {
                "User": "I'd like to offer a new discount coupon. It should be coupon id 16, issued today, with an amount of 750.",
                "Answer": "INSERT INTO Discount_Coupons (coupon_id, date_issued, coupon_amount) VALUES (16, CURRENT_DATE, 750)"
            },
            {
                "User": "Now, assign the new coupon to our new customer Alex Smith.",
                "Answer": "UPDATE Customers SET coupon_id = 4 WHERE customer_id = 16"
            }
        ]
    },
    {
        "idx": 553,
        "db": "theme_gallery",
        "interaction": [
            {
                "User": "Can you add a new artist named 'Emma Clarke' from 'Canada' who joined in 2021 and is 30 years old?",
                "Answer": "INSERT INTO artist (Name, Country, Year_Join, Age) VALUES ('Emma Clarke', 'Canada', 2021, 30)"
            },
            {
                "User": "What's the new total count of artists in the gallery after adding Emma?",
                "Answer": "SELECT COUNT(*) FROM artist"
            },
            {
                "User": "How many artists are from 'United States'?",
                "Answer": "SELECT COUNT(*) FROM artist WHERE Country = 'United States'"
            },
            {
                "User": "I want to update John Daly's age to 50. Can you do that?",
                "Answer": "UPDATE artist SET Age = 50 WHERE Name = 'John Daly'"
            },
            {
                "User": "Can we create a new table to track the sales of exhibition tickets, including sale ID, exhibition ID, number of tickets sold, and total sales amount?",
                "Answer": "CREATE TABLE exhibition_sales (Sale_ID number PRIMARY KEY, Exhibition_ID number, Tickets_Sold number, Total_Sales number)"
            },
            {
                "User": "Show me the exhibitions that have 'Santa Claus' in their theme.",
                "Answer": "SELECT * FROM exhibition WHERE Theme LIKE '%Santa Claus%'"
            },
            {
                "User": "Add a new exhibition record for 'Santa Claus and Rudolph the Red-Nosed Reindeer' on 'December 8' with an attendance of 3500.",
                "Answer": "INSERT INTO exhibition_record (Exhibition_ID, Date, Attendance) VALUES (3, 'December 8', 3500)"
            },
            {
                "User": "Can you add a column to track the duration of the exhibitions in days?",
                "Answer": "ALTER TABLE exhibition ADD COLUMN Duration_Days number"
            },
            {
                "User": "Update the duration of the 'Santa Claus' exhibition of 2004 to 30 days.",
                "Answer": "UPDATE exhibition SET Duration_Days = 30 WHERE Year = 2004 AND Theme = 'Santa Claus'"
            },
            {
                "User": "What's the total attendance for the 'Santa Claus' exhibitions over the years?",
                "Answer": "SELECT SUM(Attendance) FROM exhibition_record WHERE Exhibition_ID IN (SELECT Exhibition_ID FROM exhibition WHERE Theme LIKE '%Santa Claus%')"
            },
            {
                "User": "Record a new sale for the 'Santa Claus and Rudolph the Red-Nosed Reindeer' exhibition with 100 tickets sold for a total of 1495 dollars.",
                "Answer": "INSERT INTO exhibition_sales (Sale_ID, Exhibition_ID, Tickets_Sold, Total_Sales) VALUES ((SELECT MAX(Sale_ID) + 1 FROM exhibition_sales), 3, 100, 1495)"
            }
        ]
    },
    {
        "idx": 554,
        "db": "theme_gallery",
        "interaction": [
            {
                "User": "Can we track the number of exhibitions each artist has participated in?",
                "Answer": "ALTER TABLE artist ADD COLUMN Exhibitions_Count number"
            },
            {
                "User": "Please update the exhibitions count for artist Vijay Singh to 3.",
                "Answer": "UPDATE artist SET Exhibitions_Count = 3 WHERE Artist_ID = 1"
            },
            {
                "User": "How many exhibitions has John Daly participated in?",
                "Answer": "SELECT Exhibitions_Count FROM artist WHERE Name = 'John Daly'"
            },
            {
                "User": "Add a new artist named 'Emily Carter' from 'Canada' who joined in 2021 and is 30 years old.",
                "Answer": "INSERT INTO artist (Name, Country, Year_Join, Age) VALUES ('Emily Carter', 'Canada', 2021, 30)"
            },
            {
                "User": "Show me the list of artists who joined after the year 2000.",
                "Answer": "SELECT Name FROM artist WHERE Year_Join > 2000"
            },
            {
                "User": "Create a table to track the sales of tickets for each exhibition.",
                "Answer": "CREATE TABLE exhibition_sales (Exhibition_ID number, Tickets_Sold number, Total_Revenue number, PRIMARY KEY (Exhibition_ID))"
            },
            {
                "User": "Record the sales for the 'Santa Claus' exhibition with 150 tickets sold at the price of 19.95 each.",
                "Answer": "INSERT INTO exhibition_sales (Exhibition_ID, Tickets_Sold, Total_Revenue) VALUES ((SELECT Exhibition_ID FROM exhibition WHERE Theme = 'Santa Claus'), 150, 150 * 19.95)"
            },
            {
                "User": "Can you show me the total revenue from the 'Santa Claus' exhibition?",
                "Answer": "SELECT Total_Revenue FROM exhibition_sales WHERE Exhibition_ID = (SELECT Exhibition_ID FROM exhibition WHERE Theme = 'Santa Claus')"
            },
            {
                "User": "Update the ticket price for the 'Christmas stocking' exhibition to 24.95.",
                "Answer": "UPDATE exhibition SET Ticket_Price = 24.95 WHERE Theme = 'Christmas stocking'"
            },
            {
                "User": "How many artists are from the 'United States'?",
                "Answer": "SELECT COUNT(*) FROM artist WHERE Country = 'United States'"
            },
            {
                "User": "I would like to add a new column 'VIP_Tickets_Sold' to the exhibition_sales table.",
                "Answer": "ALTER TABLE exhibition_sales ADD COLUMN VIP_Tickets_Sold number"
            },
            {
                "User": "Record that we sold 50 VIP tickets for the 'Christmas stocking' exhibition.",
                "Answer": "UPDATE exhibition_sales SET VIP_Tickets_Sold = 50 WHERE Exhibition_ID = (SELECT Exhibition_ID FROM exhibition WHERE Theme = 'Christmas stocking')"
            }
        ]
    },
    {
        "idx": 555,
        "db": "climbing",
        "interaction": [
            {
                "User": "How many mountains in this table?",
                "Answer": "SELECT count(*) FROM mountain"
            },
            {
                "User": "How many countries are represented by the climbers?",
                "Answer": "SELECT count(DISTINCT Country) FROM climber"
            },
            {
                "User": "Show me the highest mountain in the database.",
                "Answer": "SELECT Name, Height FROM mountain ORDER BY Height DESC LIMIT 1"
            },
            {
                "User": "I want to add a new mountain called 'Peak XV' with a height of 8848 meters in Nepal. Can you add it?",
                "Answer": "INSERT INTO mountain (Name, Height, Country) VALUES ('Peak XV', 8848, 'Nepal')"
            },
            {
                "User": "Now, how many mountains are there after adding 'Peak XV'?",
                "Answer": "SELECT count(*) FROM mountain"
            },
            {
                "User": "Can you create a new table to track the equipment used by climbers with columns for equipment ID, name, and weight?",
                "Answer": "CREATE TABLE equipment (Equipment_ID number PRIMARY KEY, Name text, Weight number)"
            },
            {
                "User": "Insert a new record into the climber table for 'Alex Honnold' from USA who climbed 'Peak XV' with a time of '9:00.00' and scored 20 points.",
                "Answer": "INSERT INTO climber (Name, Country, Time, Points, Mountain_ID) VALUES ('Alex Honnold', 'USA', '9:00.00', 20, (SELECT Mountain_ID FROM mountain WHERE Name = 'Peak XV'))"
            },
            {
                "User": "Update the height of 'Peak XV' to 8850 meters since there was a recent measurement that found it to be taller.",
                "Answer": "UPDATE mountain SET Height = 8850 WHERE Name = 'Peak XV'"
            },
            {
                "User": "Add a new column 'Difficulty' to the mountain table to rate the difficulty of climbing them on a scale of 1 to 10.",
                "Answer": "ALTER TABLE mountain ADD COLUMN Difficulty number"
            },
            {
                "User": "Set the difficulty of 'Kibo (Uhuru Pk)' to 7.",
                "Answer": "UPDATE mountain SET Difficulty = 7 WHERE Name = 'Kibo (Uhuru Pk)'"
            },
            {
                "User": "What is the average difficulty rating of all mountains that have been rated so far?",
                "Answer": "SELECT AVG(Difficulty) FROM mountain WHERE Difficulty IS NOT NULL"
            },
            {
                "User": "How many climbers have climbed mountains in Tanzania?",
                "Answer": "SELECT count(*) FROM climber WHERE Mountain_ID IN (SELECT Mountain_ID FROM mountain WHERE Country = 'Tanzania')"
            },
            {
                "User": "I noticed we don't have prominence data for 'Peak XV'. Update its prominence to 8848 meters.",
                "Answer": "UPDATE mountain SET Prominence = 8848 WHERE Name = 'Peak XV'"
            },
            {
                "User": "List all the mountains along with the number of climbers who have climbed them.",
                "Answer": "SELECT m.Name, count(c.Climber_ID) as Climber_Count FROM mountain m LEFT JOIN climber c ON m.Mountain_ID = c.Mountain_ID GROUP BY m.Name"
            },
            {
                "User": "Can we add a feature to record multiple attempts by climbers on the same mountain?",
                "Answer": "ALTER TABLE climber ADD COLUMN Attempt_ID number"
            }
        ]
    },
    {
        "idx": 556,
        "db": "climbing",
        "interaction": [
            {
                "User": "Can we record new mountain expeditions?",
                "Answer": "CREATE TABLE expedition (Expedition_ID number PRIMARY KEY, Mountain_ID number, Climber_ID number, Start_Date text, End_Date text, Status text, FOREIGN KEY (Mountain_ID) REFERENCES mountain(Mountain_ID), FOREIGN KEY (Climber_ID) REFERENCES climber(Climber_ID))"
            },
            {
                "User": "I want to add a new expedition for Klaus Enders on Mountain ID 1 starting today.",
                "Answer": "INSERT INTO expedition (Expedition_ID, Mountain_ID, Climber_ID, Start_Date, Status) VALUES (1, 1, 1, '2023-04-12', 'In Progress')"
            },
            {
                "User": "How many expeditions are currently in progress?",
                "Answer": "SELECT COUNT(*) FROM expedition WHERE Status = 'In Progress'"
            },
            {
                "User": "Add a new column for Base_Camp_Location in the expeditions table.",
                "Answer": "ALTER TABLE expedition ADD Base_Camp_Location text"
            },
            {
                "User": "Update the Base_Camp_Location for the current expedition to 'Machame Camp'.",
                "Answer": "UPDATE expedition SET Base_Camp_Location = 'Machame Camp' WHERE Expedition_ID = 1"
            },
            {
                "User": "What is the Base_Camp_Location for the expedition of Klaus Enders?",
                "Answer": "SELECT Base_Camp_Location FROM expedition WHERE Climber_ID = (SELECT Climber_ID FROM climber WHERE Name = 'Klaus Enders')"
            },
            {
                "User": "Can we track the equipment used by climbers?",
                "Answer": "CREATE TABLE equipment (Equipment_ID number PRIMARY KEY, Name text, Type text, Climber_ID number, FOREIGN KEY (Climber_ID) REFERENCES climber(Climber_ID))"
            },
            {
                "User": "Record that Siegfried Schauzu took an Ice Axe and Crampons.",
                "Answer": "INSERT INTO equipment (Equipment_ID, Name, Type, Climber_ID) VALUES (1, 'Ice Axe', 'Climbing Gear', 2), (2, 'Crampons', 'Climbing Gear', 2)"
            },
            {
                "User": "Who is using the Ice Axe?",
                "Answer": "SELECT c.Name FROM climber c JOIN equipment e ON c.Climber_ID = e.Climber_ID WHERE e.Name = 'Ice Axe'"
            },
            {
                "User": "Show me all the equipment used by climbers who have climbed mountains over 5000 meters.",
                "Answer": "SELECT e.Name, e.Type FROM equipment e JOIN climber c ON e.Climber_ID = c.Climber_ID WHERE c.Mountain_ID IN (SELECT Mountain_ID FROM mountain WHERE Height > 5000)"
            },
            {
                "User": "Update the points for Hans Luthringhauser to 20 after a successful expedition.",
                "Answer": "UPDATE climber SET Points = 20 WHERE Name = 'Hans Luthringhauser'"
            },
            {
                "User": "Which climbers have points greater than 15?",
                "Answer": "SELECT Name FROM climber WHERE Points > 15"
            },
            {
                "User": "How many climbers have climbed Kibo (Uhuru Pk)?",
                "Answer": "SELECT COUNT(*) FROM climber WHERE Mountain_ID = (SELECT Mountain_ID FROM mountain WHERE Name = 'Kibo (Uhuru Pk)')"
            }
        ]
    },
    {
        "idx": 557,
        "db": "manufacturer",
        "interaction": [
            {
                "User": "What is the name of the manufacturer with the most factories?",
                "Answer": "SELECT Name FROM manufacturer ORDER BY Num_of_Factories DESC LIMIT 1"
            },
            {
                "User": "Can you add a new manufacturer called 'Modern Designs' that opened in 2020 with 5 factories and 3 shops?",
                "Answer": "INSERT INTO manufacturer (Open_Year, Name, Num_of_Factories, Num_of_Shops) VALUES (2020, 'Modern Designs', 5, 3)"
            },
            {
                "User": "How many pieces of furniture does each manufacturer produce?",
                "Answer": "SELECT Manufacturer_ID, COUNT(Furniture_ID) AS Num_of_Furniture FROM furniture_manufacte GROUP BY Manufacturer_ID"
            },
            {
                "User": "Can you update the market rate of the 'Billiard table' to 55.0?",
                "Answer": "UPDATE furniture SET Market_Rate = 55.0 WHERE Name = 'Billiard table'"
            },
            {
                "User": "I need a report on the average price of furniture produced by each manufacturer. Can you provide that?",
                "Answer": "SELECT m.Manufacturer_ID, m.Name, AVG(fm.Price_in_Dollar) AS Avg_Price FROM manufacturer m JOIN furniture_manufacte fm ON m.Manufacturer_ID = fm.Manufacturer_ID GROUP BY m.Manufacturer_ID, m.Name"
            },
            {
                "User": "Let's track the colors of the furniture. Can you add a 'Color' column to the furniture table?",
                "Answer": "ALTER TABLE furniture ADD Color text"
            },
            {
                "User": "Now, assign the color 'Brown' to all furniture items currently in the database.",
                "Answer": "UPDATE furniture SET Color = 'Brown'"
            },
            {
                "User": "I want to create a new table to keep track of customer feedback. It should include feedback ID, furniture ID, customer name, and their feedback.",
                "Answer": "CREATE TABLE customer_feedback (Feedback_ID number PRIMARY KEY, Furniture_ID number, Customer_Name text, Feedback text)"
            },
            {
                "User": "Can you insert a feedback record for the 'Billiard table' from a customer named 'John Doe' saying 'Great quality table!'?",
                "Answer": "INSERT INTO customer_feedback (Feedback_ID, Furniture_ID, Customer_Name, Feedback) VALUES (1, 1, 'John Doe', 'Great quality table!')"
            },
            {
                "User": "What is the average number of components for the furniture produced by 'IKEA'?",
                "Answer": "SELECT AVG(f.Num_of_Component) FROM furniture f JOIN furniture_manufacte fm ON f.Furniture_ID = fm.Furniture_ID JOIN manufacturer m ON fm.Manufacturer_ID = m.Manufacturer_ID WHERE m.Name = 'IKEA'"
            },
            {
                "User": "Can you show me all the furniture items that have more than 5 components?",
                "Answer": "SELECT * FROM furniture WHERE Num_of_Component > 5"
            },
            {
                "User": "Let's update the number of shops for 'Chevrolet House' to 10.",
                "Answer": "UPDATE manufacturer SET Num_of_Shops = 10 WHERE Name = 'Chevrolet House'"
            },
            {
                "User": "I'd like to see the list of all manufacturers and the total price of furniture they manufacture.",
                "Answer": "SELECT m.Name, SUM(fm.Price_in_Dollar) AS Total_Price FROM manufacturer m JOIN furniture_manufacte fm ON m.Manufacturer_ID = fm.Manufacturer_ID GROUP BY m.Name"
            },
            {
                "User": "Can we add a new 'Billiard table' to the furniture table with 15 components and a market rate of 60.0?",
                "Answer": "INSERT INTO furniture (Name, Num_of_Component, Market_Rate) VALUES ('Billiard table', 15, 60.0)"
            },
            {
                "User": "Show me the furniture names and their colors.",
                "Answer": "SELECT Name, Color FROM furniture"
            },
            {
                "User": "I need to correct the number of factories for 'Ford Make' to 15. Can you update it?",
                "Answer": "UPDATE manufacturer SET Num_of_Factories = 15 WHERE Name = 'Ford Make'"
            }
        ]
    },
    {
        "idx": 558,
        "db": "manufacturer",
        "interaction": [
            {
                "User": "Can we track the stock quantity for each furniture item?",
                "Answer": "ALTER TABLE furniture ADD COLUMN Stock_Quantity number"
            },
            {
                "User": "Please add a stock quantity of 100 for the Billiard table.",
                "Answer": "UPDATE furniture SET Stock_Quantity = 100 WHERE Name = 'Billiard table'"
            },
            {
                "User": "How many Billiard tables do we have in stock?",
                "Answer": "SELECT Stock_Quantity FROM furniture WHERE Name = 'Billiard table'"
            },
            {
                "User": "I want to add a new furniture item called 'Desk' with 3 components and a market rate of 75. How many should we add to stock?",
                "Answer": "INSERT INTO furniture (Name, Num_of_Component, Market_Rate) VALUES ('Desk', 3, 75.0)"
            },
            {
                "User": "Let's start with 50 Desks in stock.",
                "Answer": "UPDATE furniture SET Stock_Quantity = 50 WHERE Name = 'Desk'"
            },
            {
                "User": "Can we also track the year each manufacturer was last renovated?",
                "Answer": "ALTER TABLE manufacturer ADD COLUMN Last_Renovation_Year number"
            },
            {
                "User": "IKEA was last renovated in 2018. Update the record, please.",
                "Answer": "UPDATE manufacturer SET Last_Renovation_Year = 2018 WHERE Name = 'IKEA'"
            },
            {
                "User": "Which manufacturers have more than 15 shops?",
                "Answer": "SELECT Name FROM manufacturer WHERE Num_of_Shops > 15"
            },
            {
                "User": "Create a new table to log interactions with customers, including interaction ID, customer ID, date, and notes.",
                "Answer": "CREATE TABLE customer_interactions (Interaction_ID number PRIMARY KEY, Customer_ID number, Interaction_Date date, Notes text)"
            },
            {
                "User": "Log a new interaction with customer ID 123 on today's date with a note 'Inquired about Desk stock'.",
                "Answer": "INSERT INTO customer_interactions (Customer_ID, Interaction_Date, Notes) VALUES (123, CURRENT_DATE, 'Inquired about Desk stock')"
            },
            {
                "User": "How many types of furniture do we have with a market rate above 50?",
                "Answer": "SELECT COUNT(*) FROM furniture WHERE Market_Rate > 50"
            },
            {
                "User": "Show me the names of all furniture items that we have more than 20 in stock.",
                "Answer": "SELECT Name FROM furniture WHERE Stock_Quantity > 20"
            },
            {
                "User": "We need to increase the price of the Chabudai by 10 dollars in our manufacturing costs.",
                "Answer": "UPDATE furniture_manufacte SET Price_in_Dollar = Price_in_Dollar + 10 WHERE Furniture_ID = (SELECT Furniture_ID FROM furniture WHERE Name = 'Chabudai')"
            }
        ]
    },
    {
        "idx": 559,
        "db": "solvency_ii",
        "interaction": [
            {
                "User": "Can you add a new product called 'High Tech Drone' with a product type code 'Electronics' and a price of 4999.99? with Product ID 8",
                "Answer": "INSERT INTO Products (Product_ID, Product_Type_Code, Product_Name, Product_Price) VALUES (8, 'Electronics', 'High Tech Drone', 4999.99)"
            },
            {
                "User": "I need to record the details of a new event location. Can you add 'The Grand Arena' to our location listings with id 16?",
                "Answer": "INSERT INTO Locations (Location_ID, Other_Details) VALUES (16, 'The Grand Arena')"
            },
            {
                "User": "We just finalized an agreement for an event. Can you create a table to track event agreements including the agreement date?",
                "Answer": "CREATE TABLE Event_Agreements (Agreement_ID number PRIMARY KEY, Event_ID number, Agreement_Date text)"
            },
            {
                "User": "Please insert the details of the agreement for Event ID 14 with today's date.",
                "Answer": "INSERT INTO Event_Agreements (Agreement_ID, Event_ID, Agreement_Date) VALUES (1, 14, '2023-04-01')"
            },
            {
                "User": "I need to update the price of the 'Business Policy' book to 1399.99. Can you do that?",
                "Answer": "UPDATE Products SET Product_Price = 1399.99 WHERE Product_Name = 'Business Policy'"
            },
            {
                "User": "Can you tell me the updated price of the 'Business Policy' book?",
                "Answer": "SELECT Product_Price FROM Products WHERE Product_Name = 'Business Policy'"
            },
            {
                "User": "We need to start tracking the stock quantity of products. Can you add a 'Stock_Quantity' column to the Products table?",
                "Answer": "ALTER TABLE Products ADD Stock_Quantity number"
            },
            {
                "User": "Please set the initial stock quantity of 'High Tech Drone' to 50 units.",
                "Answer": "UPDATE Products SET Stock_Quantity = 50 WHERE Product_Name = 'High Tech Drone'"
            },
            {
                "User": "What is the total value of 'High Tech Drone' products we have in stock?",
                "Answer": "SELECT Product_Price * Stock_Quantity AS Total_Value FROM Products WHERE Product_Name = 'High Tech Drone'"
            },
            {
                "User": "Can you list all events that have 'Press Conferenc' in their type code?",
                "Answer": "SELECT * FROM Events WHERE Event_Type_Code LIKE '%Press Conferenc%'"
            },
            {
                "User": "We need to correct a typo in the event type codes. Can you update 'Press Conferenc' to 'Press Conference' for all events?",
                "Answer": "UPDATE Events SET Event_Type_Code = 'Press Conference' WHERE Event_Type_Code = 'Press Conferenc'"
            },
            {
                "User": "Can you show me the latest agreement date we have on record?",
                "Answer": "SELECT MAX(Agreement_Date) FROM Event_Agreements"
            },
            {
                "User": "I want to see all product names and their prices in descending order of price.",
                "Answer": "SELECT Product_Name, Product_Price FROM Products ORDER BY Product_Price DESC"
            },
            {
                "User": "Can we track the address of each party? We need to add an 'Address_ID' column to the Parties table.",
                "Answer": "ALTER TABLE Parties ADD Address_ID number"
            },
            {
                "User": "Please link the party with Party_ID 3 to Address_ID 1.",
                "Answer": "UPDATE Parties SET Address_ID = 1 WHERE Party_ID = 3"
            }
        ]
    },
    {
        "idx": 560,
        "db": "solvency_ii",
        "interaction": [
            {
                "User": "I want to track the total sales of each product. Can we add a new column for that in the Products table?",
                "Answer": "ALTER TABLE Products ADD COLUMN Total_Sales number"
            },
            {
                "User": "Now, can you show me the updated structure of the Products table?",
                "Answer": "SELECT * FROM Products"
            },
            {
                "User": "Let's initialize the Total_Sales for all products to zero.",
                "Answer": "UPDATE Products SET Total_Sales = 0"
            },
            {
                "User": "Can you confirm if the Total_Sales for all products are set to zero?",
                "Answer": "SELECT Product_ID, Product_Name, Total_Sales FROM Products"
            },
            {
                "User": "I want to record a new event that happened today. It was a 'Book Fair' at the 'Rowe PLC' location. Can you add this event?",
                "Answer": "INSERT INTO Events (Event_ID, Address_ID, Channel_ID, Event_Type_Code, Finance_ID, Location_ID) VALUES (16, 1, 1, 'Book Fair', 1, 1)"
            },
            {
                "User": "We sold 10 units of 'Business Policy' books at the book fair. Can you update the Total_Sales for that product?",
                "Answer": "UPDATE Products SET Total_Sales = Total_Sales + 10 WHERE Product_Name = 'Business Policy'"
            },
            {
                "User": "Can you show me the updated sales figure for the 'Business Policy' books?",
                "Answer": "SELECT Product_Name, Total_Sales FROM Products WHERE Product_Name = 'Business Policy'"
            },
            {
                "User": "We also need to track the number of events each product has been involved in. Could you add a column for that?",
                "Answer": "ALTER TABLE Products ADD COLUMN Events_Count number"
            },
            {
                "User": "Let's update the Events_Count for the 'Business Policy' books to reflect its involvement in the book fair.",
                "Answer": "UPDATE Products SET Events_Count = (SELECT COUNT(*) FROM Products_in_Events WHERE Product_ID = (SELECT Product_ID FROM Products WHERE Product_Name = 'Business Policy')) WHERE Product_Name = 'Business Policy'"
            },
            {
                "User": "I'd like to see the top 3 products with the highest Total_Sales.",
                "Answer": "SELECT Product_Name, Total_Sales FROM Products ORDER BY Total_Sales DESC LIMIT 3"
            },
            {
                "User": "We need to add a new product category called 'Electronics'. Can you insert this new category into the Products table?",
                "Answer": "INSERT INTO Products (Product_ID, Product_Type_Code, Product_Name, Product_Price, Total_Sales, Events_Count) VALUES (16, 'Electronics', 'New Electronic', 0, 0, 0)"
            },
            {
                "User": "I heard that the 'European Alliance for Freedom' has changed its name to 'Freedom Alliance Europe'. Can we update this in the Parties table?",
                "Answer": "UPDATE Parties SET Party_Details = 'Freedom Alliance Europe' WHERE Party_Details = 'European Alliance for Freedom'"
            },
            {
                "User": "Can you show me the updated record for the 'Freedom Alliance Europe'?",
                "Answer": "SELECT * FROM Parties WHERE Party_Details = 'Freedom Alliance Europe'"
            },
            {
                "User": "We're launching a new finance plan called 'Platinum'. Can you add this to the Finances table?",
                "Answer": "INSERT INTO Finances (Finance_ID, Other_Details) VALUES (16, 'Platinum')"
            }
        ]
    },
    {
        "idx": 561,
        "db": "tracking_software_problems",
        "interaction": [
            {
                "User": "Can you add a new status code for problems that are currently being reviewed?",
                "Answer": "INSERT INTO Problem_Status_Codes (problem_status_code, problem_status_description) VALUES ('Reviewing', 'Currently under review')"
            },
            {
                "User": "Please show me all problems that are solved.",
                "Answer": "SELECT * FROM Problem_Log WHERE problem_status_code = 'Solved'"
            },
            {
                "User": "I would like to update the status of problem log 2 to 'Reviewing'.",
                "Answer": "UPDATE Problem_Log SET problem_status_code = 'Reviewing' WHERE problem_log_id = 2"
            },
            {
                "User": "Create a new table for tracking problem resolution times.",
                "Answer": "CREATE TABLE Problem_Resolution_Time (problem_id number, resolution_time number);"
            },
            {
                "User": "Add a column for last_updated_by_staff_id in the Problem_Log table.",
                "Answer": "ALTER TABLE Problem_Log ADD COLUMN last_updated_by_staff_id number"
            },
            {
                "User": "Set the last_updated_by_staff_id for all current problem logs to staff_id 1.",
                "Answer": "UPDATE Problem_Log SET last_updated_by_staff_id = 1"
            },
            {
                "User": "List all products that have never had a problem reported.",
                "Answer": "SELECT * FROM Product WHERE product_id NOT IN (SELECT DISTINCT product_id FROM Problems)"
            },
            {
                "User": "How many problems have been reported by staff member with staff_id 2?",
                "Answer": "SELECT COUNT(*) FROM Problems WHERE reported_by_staff_id = 2"
            },
            {
                "User": "Show me the total resolution time for each problem that has been closed.",
                "Answer": "SELECT T1.problem_id, (julianday(T1.date_problem_closed) - julianday(T1.date_problem_reported)) * 24 * 60 AS resolution_time_in_minutes FROM Problems AS T1 WHERE T1.date_problem_closed IS NOT NULL"
            },
            {
                "User": "Please add a new product called 'Widget' with details 'Latest model of widget'.",
                "Answer": "INSERT INTO Product (product_id, product_name, product_details) VALUES (16, 'Widget', 'Latest model of widget')"
            },
            {
                "User": "Show me the problem categories and the number of problems in each category.",
                "Answer": "SELECT T1.problem_category_description, COUNT(T2.problem_category_code) AS number_of_problems FROM Problem_Category_Codes AS T1 LEFT JOIN Problem_Log AS T2 ON T1.problem_category_code = T2.problem_category_code GROUP BY T1.problem_category_description"
            },
            {
                "User": "For the problem reported today, set the status to 'Reported' and assign the log entry to staff_id 3.",
                "Answer": "UPDATE Problem_Log SET problem_status_code = 'Reported', assigned_to_staff_id = 3 WHERE log_entry_date = CURRENT_DATE"
            }
        ]
    },
    {
        "idx": 562,
        "db": "tracking_software_problems",
        "interaction": [
            {
                "User": "Can you add a new status code for problems that are currently being reviewed?",
                "Answer": "INSERT INTO Problem_Status_Codes (problem_status_code, problem_status_description) VALUES ('Reviewing', 'Currently under review')"
            },
            {
                "User": "What are the new status codes available now?",
                "Answer": "SELECT * FROM Problem_Status_Codes"
            },
            {
                "User": "Can we track the time taken to solve a problem? We need to add a new column to log the time spent on each problem.",
                "Answer": "ALTER TABLE Problem_Log ADD COLUMN time_spent_minutes number"
            },
            {
                "User": "Please update the time spent on problem log id 1 to 30 minutes.",
                "Answer": "UPDATE Problem_Log SET time_spent_minutes = 30 WHERE problem_log_id = 1"
            },
            {
                "User": "Show me all the problems that were solved and took more than 20 minutes.",
                "Answer": "SELECT * FROM Problem_Log WHERE problem_status_code = 'Solved' AND time_spent_minutes > 20"
            },
            {
                "User": "I noticed that we don't have a way to record who authorized the closure of a problem. Can you add a column for that?",
                "Answer": "ALTER TABLE Problems ADD COLUMN closure_authorized_by_name text"
            },
            {
                "User": "For the problem with problem_id 2, set the closure authorized by Lacey Bosco.",
                "Answer": "UPDATE Problems SET closure_authorized_by_name = 'Lacey Bosco' WHERE problem_id = 2"
            },
            {
                "User": "Create a new table to log all user interactions with the problem tracking software.",
                "Answer": "CREATE TABLE User_Interactions (interaction_id number PRIMARY KEY, user_id number, interaction_time time, interaction_type text, interaction_description text)"
            },
            {
                "User": "Log a new interaction for user 5 who reported a problem on '2023-04-01 10:00:00'.",
                "Answer": "INSERT INTO User_Interactions (interaction_id, user_id, interaction_time, interaction_type, interaction_description) VALUES (1, 5, '2023-04-01 10:00:00', 'Problem Report', 'User reported a problem with the software')"
            },
            {
                "User": "Let's update the product details for product_id 1 to 'New improved rose model with enhanced features.'",
                "Answer": "UPDATE Product SET product_details = 'New improved rose model with enhanced features.' WHERE product_id = 1"
            },
            {
                "User": "Can you show me all the problems logged for the updated product 'rose'?",
                "Answer": "SELECT T1.* FROM Problems AS T1 JOIN Product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = 'rose'"
            }
        ]
    },
    {
        "idx": 563,
        "db": "company_employee",
        "interaction": [
            {
                "User": "Can you add a new column to track the department for each employee?",
                "Answer": "ALTER TABLE people ADD COLUMN Department text;"
            },
            {
                "User": "Please update Reggie Lewis's department to 'Research and Development'.",
                "Answer": "UPDATE people SET Department = 'Research and Development' WHERE Name = 'Reggie Lewis';"
            },
            {
                "User": "What is the average age of employees in the 'Research and Development' department?",
                "Answer": "SELECT AVG(Age) FROM people WHERE Department = 'Research and Development';"
            },
            {
                "User": "I'd like to add a new employee named 'Alex Smith', aged 30, from the United States, graduated from 'Stanford', and working in the 'IT' department.",
                "Answer": "INSERT INTO people (Age, Name, Nationality, Graduation_College, Department) VALUES (30, 'Alex Smith', 'United States', 'Stanford', 'IT');"
            },
            {
                "User": "How many employees do we have in each department?",
                "Answer": "SELECT Department, COUNT(*) FROM people GROUP BY Department;"
            },
            {
                "User": "Create a new table to manage project assignments with columns for Project_ID, People_ID, Project_Name, and Start_Date.",
                "Answer": "CREATE TABLE project_assignments (Project_ID number PRIMARY KEY, People_ID number, Project_Name text, Start_Date date, FOREIGN KEY (People_ID) REFERENCES people(People_ID));"
            },
            {
                "User": "Assign Reggie Lewis to the 'Quantum Computing' project starting on 2023-05-01.",
                "Answer": "INSERT INTO project_assignments (People_ID, Project_Name, Start_Date) VALUES ((SELECT People_ID FROM people WHERE Name = 'Reggie Lewis'), 'Quantum Computing', '2023-05-01');"
            },
            {
                "User": "Show me all projects that 'Reggie Lewis' is working on.",
                "Answer": "SELECT Project_Name FROM project_assignments WHERE People_ID = (SELECT People_ID FROM people WHERE Name = 'Reggie Lewis');"
            },
            {
                "User": "How many projects are currently active?",
                "Answer": "SELECT COUNT(*) FROM project_assignments WHERE Start_Date <= CURRENT_DATE;"
            },
            {
                "User": "Update the headquarters of 'ExxonMobil' to 'Texas, USA'.",
                "Answer": "UPDATE company SET Headquarters = 'Texas, USA' WHERE Name = 'ExxonMobil';"
            },
            {
                "User": "Can we see the list of companies and their number of employees?",
                "Answer": "SELECT T1.Name, COUNT(T2.People_ID) AS Number_of_Employees FROM company AS T1 LEFT JOIN employment AS T2 ON T1.Company_ID = T2.Company_ID GROUP BY T1.Name;"
            },
            {
                "User": "Insert a new record in the employment table for Alex Smith working at 'ExxonMobil' since 2023.",
                "Answer": "INSERT INTO employment (Company_ID, People_ID, Year_working) VALUES ((SELECT Company_ID FROM company WHERE Name = 'ExxonMobil'), (SELECT People_ID FROM people WHERE Name = 'Alex Smith'), 2023);"
            }
        ]
    },
    {
        "idx": 564,
        "db": "company_employee",
        "interaction": [
            {
                "User": "Can we add a new table to track employee salaries?",
                "Answer": "CREATE TABLE salaries (People_ID number, Salary number, Currency text, PRIMARY KEY (People_ID))"
            },
            {
                "User": "Insert the salary for Reggie Lewis, which is 55000 USD.",
                "Answer": "INSERT INTO salaries (People_ID, Salary, Currency) VALUES (1, 55000, 'USD')"
            },
            {
                "User": "Insert the salary for Brad Lohaus, which is 48000 USD.",
                "Answer": "INSERT INTO salaries (People_ID, Salary, Currency) VALUES (2, 48000, 'USD')"
            },
            {
                "User": "Can you show me the average salary in the database?",
                "Answer": "SELECT AVG(Salary) FROM salaries"
            },
            {
                "User": "I'd like to update Tom Sheehey's nationality to 'United Kingdom'.",
                "Answer": "UPDATE people SET Nationality = 'United Kingdom' WHERE Name = 'Tom Sheehey'"
            },
            {
                "User": "Can we add a column for the department in the people table?",
                "Answer": "ALTER TABLE people ADD Department text"
            },
            {
                "User": "Set the department for Reggie Lewis to 'Marketing'.",
                "Answer": "UPDATE people SET Department = 'Marketing' WHERE People_ID = 1"
            },
            {
                "User": "What is the total market value of companies in the 'Oil and gas' industry?",
                "Answer": "SELECT SUM(Market_Value_in_Billion) FROM company WHERE Industry = 'Oil and gas'"
            },
            {
                "User": "Can you list all employees working at ExxonMobil?",
                "Answer": "SELECT p.Name FROM people p JOIN employment e ON p.People_ID = e.People_ID JOIN company c ON e.Company_ID = c.Company_ID WHERE c.Name = 'ExxonMobil'"
            },
            {
                "User": "Add a new company with the following details: ID 20, Name 'TechCorp', Headquarters 'Germany', Industry 'Technology', Sales 50.2, Profits 5.6, Assets 70.0, Market Value 85.3.",
                "Answer": "INSERT INTO company (Company_ID, Name, Headquarters, Industry, Sales_in_Billion, Profits_in_Billion, Assets_in_Billion, Market_Value_in_Billion) VALUES (20, 'TechCorp', 'Germany', 'Technology', 50.2, 5.6, 70.0, 85.3)"
            },
            {
                "User": "How many employees have a salary greater than 50000 USD?",
                "Answer": "SELECT COUNT(*) FROM salaries WHERE Salary > 50000 AND Currency = 'USD'"
            },
            {
                "User": "Can we see the names and salaries of employees in the 'Marketing' department?",
                "Answer": "SELECT p.Name, s.Salary FROM people p JOIN salaries s ON p.People_ID = s.People_ID WHERE p.Department = 'Marketing'"
            },
            {
                "User": "Update the sales of 'JPMorgan Chase' to 120.5 billion.",
                "Answer": "UPDATE company SET Sales_in_Billion = 120.5 WHERE Name = 'JPMorgan Chase'"
            },
            {
                "User": "Can you provide the list of companies with updated sales in descending order?",
                "Answer": "SELECT Name FROM company ORDER BY Sales_in_Billion DESC"
            }
        ]
    },
    {
        "idx": 565,
        "db": "customer_complaints",
        "interaction": [
            {
                "User": "WHAT IS LAST NAME OF THE STAFF WHO HAS HANDLED THE FIRST EVER COMPLAINT?",
                "Answer": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1"
            },
            {
                "User": "THE FIRST NAME OF THE STAFF WHO HAS HANDLED THE LAST COMPLAINT",
                "Answer": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised desc LIMIT 1"
            },
            {
                "User": "ADD A NEW CUSTOMER WITH ID 121, GOOD CREDIT RATING, LIVING AT 500 EXAMPLE STREET APT 1, IN EXAMPLETOWN, STATE OF EXAMPLE, EMAIL JOHN.DOUGH@EXAMPLE.COM AND PHONE NUMBER 555-1234.",
                "Answer": "INSERT INTO customers (customer_id, customer_type_code, address_line_1, address_line_2, town_city, state, email_address, phone_number) VALUES (121, 'Good Credit Rating', '500 Example Street', 'Apt 1', 'Exampletown', 'Example', 'john.dough@example.com', '555-1234')"
            },
            {
                "User": "UPDATE THE EMAIL ADDRESS FOR CUSTOMER ID 115 TO NEW.EMAIL@EXAMPLE.COM.",
                "Answer": "UPDATE customers SET email_address = 'new.email@example.com' WHERE customer_id = 115"
            },
            {
                "User": "CREATE A NEW TABLE TO LOG CUSTOMER INTERACTIONS, INCLUDING AN INTERACTION_ID, CUSTOMER_ID, STAFF_ID, INTERACTION_TYPE, AND INTERACTION_DATE.",
                "Answer": "CREATE TABLE customer_interactions (interaction_id number PRIMARY KEY, customer_id number, staff_id number, interaction_type text, interaction_date time)"
            },
            {
                "User": "INSERT A RECORD INTO THE CUSTOMER INTERACTIONS TABLE FOR A PHONE CALL MADE BY CUSTOMER ID 121 TO STAFF ID 116 ON MARCH 10TH, 2023.",
                "Answer": "INSERT INTO customer_interactions (interaction_id, customer_id, staff_id, interaction_type, interaction_date) VALUES (1, 121, 116, 'Phone Call', '2023-03-10 00:00:00')"
            },
            {
                "User": "RECORD ANOTHER INTERACTION WHERE CUSTOMER ID 114 SENT AN EMAIL TO STAFF ID 115 ON MARCH 11TH, 2023.",
                "Answer": "INSERT INTO customer_interactions (interaction_id, customer_id, staff_id, interaction_type, interaction_date) VALUES (2, 114, 115, 'Email', '2023-03-11 00:00:00')"
            },
            {
                "User": "ADD A COLUMN TO THE PRODUCTS TABLE TO INCLUDE STOCK_QUANTITY.",
                "Answer": "ALTER TABLE products ADD COLUMN stock_quantity number"
            },
            {
                "User": "UPDATE THE STOCK_QUANTITY FOR PRODUCT_ID 117 TO 50 UNITS.",
                "Answer": "UPDATE products SET stock_quantity = 50 WHERE product_id = 117"
            },
            {
                "User": "HOW MANY UNITS OF THE PRODUCT NAMED 'CHOCOLATE' DO WE HAVE IN STOCK?",
                "Answer": "SELECT stock_quantity FROM products WHERE product_name = 'Chocolate'"
            },
            {
                "User": "CREATE A VIEW TO SHOW COMPLAINTS LINKED TO CUSTOMER INTERACTIONS INCLUDING CUSTOMER ID, COMPLAINT ID, AND INTERACTION ID.",
                "Answer": "CREATE VIEW complaints_interactions AS SELECT c.customer_id, c.complaint_id, ci.interaction_id FROM complaints AS c JOIN customer_interactions AS ci ON c.customer_id = ci.customer_id"
            },
            {
                "User": "SHOW ME THE DETAILS FROM THE VIEW FOR CUSTOMER ID 121.",
                "Answer": "SELECT * FROM complaints_interactions WHERE customer_id = 121"
            }
        ]
    },
    {
        "idx": 566,
        "db": "customer_complaints",
        "interaction": [
            {
                "User": "Can we add a new column to track the resolution time for complaints?",
                "Answer": "ALTER TABLE Complaints ADD COLUMN resolution_time INT;"
            },
            {
                "User": "Please insert a new staff member with the following details: ID 121, Male, First Name John, Last Name Doe, Email john.doe@example.com, Phone 555-1234.",
                "Answer": "INSERT INTO Staff (staff_id, gender, first_name, last_name, email_address, phone_number) VALUES (121, 'Male', 'John', 'Doe', 'john.doe@example.com', '555-1234');"
            },
            {
                "User": "Update the email address of the staff member with ID 115 to lucie.lowe@example.com.",
                "Answer": "UPDATE Staff SET email_address = 'lucie.lowe@example.com' WHERE staff_id = 115;"
            },
            {
                "User": "Create a new table to log interactions between customers and staff. It should include interaction_id, customer_id, staff_id, and interaction_notes.",
                "Answer": "CREATE TABLE CustomerStaffInteractions (interaction_id INT PRIMARY KEY, customer_id INT, staff_id INT, interaction_notes TEXT);"
            },
            {
                "User": "Log a new interaction in the table we just created. Interaction ID is 1, Customer ID is 113, Staff ID is 117, and the note is 'Resolved billing issue'.",
                "Answer": "INSERT INTO CustomerStaffInteractions (interaction_id, customer_id, staff_id, interaction_notes) VALUES (1, 113, 117, 'Resolved billing issue');"
            },
            {
                "User": "Can we get a list of all complaints handled by staff member John Doe?",
                "Answer": "SELECT * FROM Complaints WHERE staff_id = (SELECT staff_id FROM Staff WHERE first_name = 'John' AND last_name = 'Doe');"
            },
            {
                "User": "I would like to see the total sales for each product category. Can we add a sales column to the Products table?",
                "Answer": "ALTER TABLE Products ADD COLUMN total_sales NUMBER;"
            },
            {
                "User": "Now that we have a sales column, please update the total sales for the 'Food' category to 150 units sold.",
                "Answer": "UPDATE Products SET total_sales = 150 WHERE product_category_code = 'Food';"
            }
        ]
    },
    {
        "idx": 567,
        "db": "party_people",
        "interaction": [
            {
                "User": "What regions do we have data for?",
                "Answer": "SELECT DISTINCT Region_name FROM region"
            },
            {
                "User": "Please add a new region with ID 6, name 'Canada', date '1st April 2023', label 'Universal', format 'Digital', and catalogue 'CA 2023-04'.",
                "Answer": "INSERT INTO region (Region_ID, Region_name, Date, Label, Format, Catalogue) VALUES (6, 'Canada', '1st April 2023', 'Universal', 'Digital', 'CA 2023-04')"
            },
            {
                "User": "Can you create a new table to track the number of members in each party?",
                "Answer": "CREATE TABLE party_size (Party_ID number, Member_Count number, PRIMARY KEY (Party_ID))"
            },
            {
                "User": "Now, populate the party_size table with the current number of members for each party.",
                "Answer": "INSERT INTO party_size (Party_ID, Member_Count) SELECT Party_ID, COUNT(*) FROM member GROUP BY Party_ID"
            },
            {
                "User": "I noticed a mistake in the party name for Party_ID 3. It should be 'United Gold Party'. Can you update it?",
                "Answer": "UPDATE party SET Party_name = 'United Gold Party' WHERE Party_ID = 3"
            },
            {
                "User": "What is the current office status of 'Hon Tony Abbott'?",
                "Answer": "SELECT In_office FROM member WHERE Member_Name = 'Hon Tony Abbott'"
            },
            {
                "User": "Hon Tony Abbott has retired. Please update the record.",
                "Answer": "UPDATE member SET In_office = '1994–2023' WHERE Member_Name = 'Hon Tony Abbott'"
            },
            {
                "User": "Can we add a column to track the city where each event is held?",
                "Answer": "ALTER TABLE party_events ADD COLUMN Event_City text"
            },
            {
                "User": "Please set the event city for the 'Annual Meeting' events to 'London'.",
                "Answer": "UPDATE party_events SET Event_City = 'London' WHERE Event_Name = 'Annaual Meeting'"
            },
            {
                "User": "How many parties have events in London?",
                "Answer": "SELECT COUNT(DISTINCT Party_ID) FROM party_events WHERE Event_City = 'London'"
            },
            {
                "User": "Can you show me the total number of members in the 'Convention Peoples Party'?",
                "Answer": "SELECT Member_Count FROM party_size WHERE Party_ID = (SELECT Party_ID FROM party WHERE Party_name = 'Convention Peoples Party')"
            },
            {
                "User": "Let's create a view to see party names with their corresponding region names.",
                "Answer": "CREATE VIEW party_region_view AS SELECT p.Party_name, r.Region_name FROM party p JOIN region r ON p.Region_ID = r.Region_ID"
            },
            {
                "User": "Can you list the parties and their regions from this view?",
                "Answer": "SELECT * FROM party_region_view"
            },
            {
                "User": "I want to record when members join the party. Can we add a 'Join_Date' column to the member table?",
                "Answer": "ALTER TABLE member ADD COLUMN Join_Date text"
            }
        ]
    },
    {
        "idx": 568,
        "db": "party_people",
        "interaction": [
            {
                "User": "What is the name of the member in charge of the first event?",
                "Answer": "SELECT M.Member_Name FROM member M JOIN party_events PE ON M.Member_ID = PE.Member_in_charge_ID WHERE PE.Event_ID = 1"
            },
            {
                "User": "Can you add a new event called 'Fundraising Gala' for Event_ID 9 and party id 3 with member id 5 in charge?",
                "Answer": "INSERT INTO party_events (Event_ID, Event_Name, Party_ID, Member_in_charge_ID) VALUES (9, 'Fundraising Gala', 3, 5)"
            },
            {
                "User": "I would like to update the label for region id 1 to 'Capitol'.",
                "Answer": "UPDATE region SET Label = 'Capitol' WHERE Region_ID = 1"
            },
            {
                "User": "Create a new table to track the attendance of members at events. It should have columns for attendance ID, member ID, event ID, and attendance status.",
                "Answer": "CREATE TABLE event_attendance (Attendance_ID number PRIMARY KEY, Member_ID number, Event_ID number, Attendance_Status text)"
            },
            {
                "User": "Record that member id 2 attended the event id 3 with a status of 'Present'.",
                "Answer": "INSERT INTO event_attendance (Attendance_ID, Member_ID, Event_ID, Attendance_Status) VALUES (1, 2, 3, 'Present')"
            },
            {
                "User": "Show me the names of all members who are currently in office and belong to party id 2.",
                "Answer": "SELECT Member_Name FROM member WHERE Party_ID = '2' AND In_office = '1993–2013' OR In_office = '1996–present'"
            },
            {
                "User": "Can you add a column 'Description' to the 'party_events' table to store details about the events?",
                "Answer": "ALTER TABLE party_events ADD Description text"
            },
            {
                "User": "Update the description for event id 2 to 'Annual conference discussing party strategies'.",
                "Answer": "UPDATE party_events SET Description = 'Annual conference discussing party strategies' WHERE Event_ID = 2"
            },
            {
                "User": "List all events and their descriptions for party id 1.",
                "Answer": "SELECT Event_Name, Description FROM party_events WHERE Party_ID = 1"
            },
            {
                "User": "How many members have the label 'Present' in their attendance status?",
                "Answer": "SELECT COUNT(*) FROM event_attendance WHERE Attendance_Status = 'Present'"
            },
            {
                "User": "For the region named 'Japan', change the format from 'CD' to 'Digital'.",
                "Answer": "UPDATE region SET Format = 'Digital' WHERE Region_name = 'Japan'"
            },
            {
                "User": "Retrieve the updated information for the region with region id 3.",
                "Answer": "SELECT * FROM region WHERE Region_ID = 3"
            },
            {
                "User": "Insert a new party with the following details: Party_ID: 6, Minister: 'Jane Doe', Took_office: '2021', Left_office: 'N/A', Region_ID: 2, Party_name: 'Unity Party'.",
                "Answer": "INSERT INTO party (Party_ID, Minister, Took_office, Left_office, Region_ID, Party_name) VALUES (6, 'Jane Doe', '2021', 'N/A', 2, 'Unity Party')"
            }
        ]
    },
    {
        "idx": 569,
        "db": "insurance_fnol",
        "interaction": [
            {
                "User": "Can you tell me which customers have a 'Property Insurance' policy?",
                "Answer": "SELECT Customer_name FROM Customers WHERE Customer_ID IN (SELECT Customer_ID FROM Customers_Policies WHERE Policy_ID IN (SELECT Policy_ID FROM Available_Policies WHERE policy_type_code = 'Property Insurance'))"
            },
            {
                "User": "I'd like to add a new customer named 'John Doe' with the ID 999. Could you do that?",
                "Answer": "INSERT INTO Customers (Customer_ID, Customer_name) VALUES (999, 'John Doe')"
            },
            {
                "User": "John Doe's phone number is 555-1234. Can we add a phone number column to the Customers table and update his record?",
                "Answer": [
                    "ALTER TABLE Customers ADD COLUMN Customer_Phone text;",
                    "UPDATE Customers SET Customer_Phone = '555-1234' WHERE Customer_ID = 999"
                ]
            },
            {
                "User": "Can you create a new table for 'Policy_Updates' with columns 'Update_ID', 'Policy_ID', 'Update_Date', and 'Update_Description'?",
                "Answer": "CREATE TABLE Policy_Updates (Update_ID number PRIMARY KEY, Policy_ID number, Update_Date time, Update_Description text)"
            },
            {
                "User": "Let's record an update for policy 300 stating 'Added new beneficiary' on today's date. Assume the Update_ID is 1001.",
                "Answer": "INSERT INTO Policy_Updates (Update_ID, Policy_ID, Update_Date, Update_Description) VALUES (1001, 300, CURRENT_DATE, 'Added new beneficiary')"
            },
            {
                "User": "I need to close the policy with ID 300. Can you update the 'Date_Closed' to today's date for that policy?",
                "Answer": "UPDATE Customers_Policies SET Date_Closed = CURRENT_DATE WHERE Policy_ID = 300"
            },
            {
                "User": "Can you list all policies that were closed today?",
                "Answer": "SELECT Policy_ID FROM Customers_Policies WHERE Date_Closed = CURRENT_DATE"
            },
            {
                "User": "We need to add a new service called 'Insurance Consultation'. Can you insert it with an ID of 7?",
                "Answer": "INSERT INTO Services (Service_ID, Service_name) VALUES (7, 'Insurance Consultation')"
            },
            {
                "User": "Can you show me the total settlement amount for claims related to 'Life Insurance' policies?",
                "Answer": "SELECT SUM(Settlement_Amount) FROM Settlements WHERE Claim_ID IN (SELECT Claim_ID FROM Claims WHERE FNOL_ID IN (SELECT FNOL_ID FROM First_Notification_of_Loss WHERE Policy_ID IN (SELECT Policy_ID FROM Available_Policies WHERE policy_type_code = 'Life Insurance')))"
            }
        ]
    },
    {
        "idx": 570,
        "db": "scientist_1",
        "interaction": [
            {
                "User": "How many hours in total have been spent on the project 'Aerodynamics and Bridge Design'?",
                "Answer": "SELECT SUM(Hours) FROM Projects WHERE Name = 'Aerodynamics and Bridge Design'"
            },
            {
                "User": "I want to add a new scientist named 'John Doe' with SSN 555667777. What would be the SQL statement for that?",
                "Answer": "INSERT INTO Scientists (SSN, Name) VALUES (555667777, 'John Doe')"
            },
            {
                "User": "Can we update the name of the scientist with SSN 222364883 to 'Carol Taylor'?",
                "Answer": "UPDATE Scientists SET Name = 'Carol Taylor' WHERE SSN = 222364883"
            },
            {
                "User": "I realized we need to track the department for each scientist. Can you add a 'Department' column to the Scientists table?",
                "Answer": "ALTER TABLE Scientists ADD Department text"
            },
            {
                "User": "Please assign the new scientist John Doe to the 'Aerodynamics and Gas Mileage' project.",
                "Answer": "INSERT INTO AssignedTo (Scientist, Project) VALUES (555667777, 'AeH3')"
            },
            {
                "User": "Now that we have departments, can you update John Doe's department to 'Physics'?",
                "Answer": "UPDATE Scientists SET Department = 'Physics' WHERE Name = 'John Doe'"
            },
            {
                "User": "Let's create a new table to track project expenses. What would be the SQL statement for that?",
                "Answer": "CREATE TABLE ProjectExpenses (ProjectCode text PRIMARY KEY, ExpenseAmount number)"
            },
            {
                "User": "Add an expense record for the 'Aerodynamics and Bridge Design' project with an amount of 5000.",
                "Answer": "INSERT INTO ProjectExpenses (ProjectCode, ExpenseAmount) VALUES ('AeH2', 5000)"
            },
            {
                "User": "Could you show me which projects have expenses recorded and the total hours spent on them?",
                "Answer": "SELECT T1.Name, T1.Hours, T2.ExpenseAmount FROM Projects AS T1 LEFT JOIN ProjectExpenses AS T2 ON T1.Code = T2.ProjectCode WHERE T2.ExpenseAmount IS NOT NULL"
            },
            {
                "User": "Let's add a new project called 'Quantum Computing Basics' with code 'QC101' and allocate 300 hours to it.",
                "Answer": "INSERT INTO Projects (Code, Name, Hours) VALUES ('QC101', 'Quantum Computing Basics', 300)"
            }
        ]
    },
    {
        "idx": 571,
        "db": "scientist_1",
        "interaction": [
            {
                "User": "Can we start tracking the email addresses of the scientists?",
                "Answer": "ALTER TABLE Scientists ADD COLUMN Email text"
            },
            {
                "User": "Great, please add my email to the system. I'm Michael Rogers and my email is michael.rogers@datasci.com.",
                "Answer": "UPDATE Scientists SET Email = 'michael.rogers@datasci.com' WHERE Name = 'Michael Rogers'"
            },
            {
                "User": "I need to add a new project about Quantum Computing. Its code is Qc1, and we're dedicating 300 hours to it.",
                "Answer": "INSERT INTO Projects (Code, Name, Hours) VALUES ('Qc1', 'Quantum Computing', 300)"
            },
            {
                "User": "Now, assign Anand Manikutty to the Quantum Computing project.",
                "Answer": "INSERT INTO AssignedTo (Scientist, Project) VALUES (152934485, 'Qc1')"
            },
            {
                "User": "Who is currently assigned to the Quantum Computing project?",
                "Answer": "SELECT Name FROM Scientists INNER JOIN AssignedTo ON Scientists.SSN = AssignedTo.Scientist WHERE AssignedTo.Project = 'Qc1'"
            },
            {
                "User": "I need a list of all projects with their assigned scientists' names and emails.",
                "Answer": "SELECT Projects.Name, Scientists.Name, Scientists.Email FROM Projects INNER JOIN AssignedTo ON Projects.Code = AssignedTo.Project INNER JOIN Scientists ON AssignedTo.Scientist = Scientists.SSN"
            },
            {
                "User": "We need to track the start date of the projects. Please update the schema accordingly.",
                "Answer": "ALTER TABLE Projects ADD COLUMN StartDate date"
            },
            {
                "User": "Set the start date of the Quantum Computing project to 2023-04-01.",
                "Answer": "UPDATE Projects SET StartDate = '2023-04-01' WHERE Code = 'Qc1'"
            },
            {
                "User": "What are the names of all projects that have started and their starting dates?",
                "Answer": "SELECT Name, StartDate FROM Projects WHERE StartDate IS NOT NULL"
            },
            {
                "User": "Create a new table to log project updates with columns for update text and the date of the update.",
                "Answer": "CREATE TABLE ProjectUpdates (UpdateID number PRIMARY KEY, ProjectCode text, UpdateText text, UpdateDate date)"
            },
            {
                "User": "Log an update for the Quantum Computing project saying 'Initial research phase completed' with today's date.",
                "Answer": "INSERT INTO ProjectUpdates (UpdateID, ProjectCode, UpdateText, UpdateDate) VALUES (1, 'Qc1', 'Initial research phase completed', CURRENT_DATE)"
            }
        ]
    },
    {
        "idx": 572,
        "db": "storm_record",
        "interaction": [
            {
                "User": "Can we start tracking the economic impact of storms on individual cities within the regions?",
                "Answer": "ALTER TABLE affected_region ADD COLUMN Economic_impact_millions_USD number;"
            },
            {
                "User": "How many cities were affected by Storm One?",
                "Answer": "SELECT Number_city_affected FROM affected_region WHERE Storm_ID = (SELECT Storm_ID FROM storm WHERE Name = 'One');"
            },
            {
                "User": "Let's add the economic impact data for Storm One in region AF, which was 5 million USD.",
                "Answer": "UPDATE affected_region SET Economic_impact_millions_USD = 5 WHERE Storm_ID = (SELECT Storm_ID FROM storm WHERE Name = 'One') AND Region_id = (SELECT Region_id FROM region WHERE Region_code = 'AF');"
            },
            {
                "User": "What is the total economic impact of Storm One across all affected regions?",
                "Answer": "SELECT SUM(Economic_impact_millions_USD) FROM affected_region WHERE Storm_ID = (SELECT Storm_ID FROM storm WHERE Name = 'One');"
            },
            {
                "User": "Can we add a new storm entry?",
                "Answer": "INSERT INTO storm (Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths) VALUES (11, 'Eleven', 'September10–September20', 980, 20.5, 4);"
            },
            {
                "User": "Which storm had the highest number of deaths?",
                "Answer": "SELECT Name FROM storm ORDER BY Number_Deaths DESC LIMIT 1;"
            },
            {
                "User": "Create a new table to log the response efforts for each storm.",
                "Answer": "CREATE TABLE response_log (Log_id number PRIMARY KEY, Storm_ID number, Response_details text);"
            },
            {
                "User": "Log a new entry for the response effort to Storm Two.",
                "Answer": "INSERT INTO response_log (Log_id, Storm_ID, Response_details) VALUES (1, (SELECT Storm_ID FROM storm WHERE Name = 'Two'), 'Emergency services deployed, temporary shelters provided.');"
            },
            {
                "User": "How many regions were affected by storms with a maximum speed over 990?",
                "Answer": "SELECT COUNT(DISTINCT Region_id) FROM affected_region WHERE Storm_ID IN (SELECT Storm_ID FROM storm WHERE Max_speed > 990);"
            },
            {
                "User": "Update the damage for Storm Three in region DZ to reflect new reports, which is now 17 million USD.",
                "Answer": "UPDATE affected_region SET Economic_impact_millions_USD = 17 WHERE Storm_ID = (SELECT Storm_ID FROM storm WHERE Name = 'Three') AND Region_id = (SELECT Region_id FROM region WHERE Region_name = 'Algeria');"
            },
            {
                "User": "What's the total number of cities affected by all storms?",
                "Answer": "SELECT SUM(Number_city_affected) FROM affected_region;"
            },
            {
                "User": "Can we get a list of regions along with the number of storms that affected each?",
                "Answer": "SELECT R.Region_name, COUNT(*) AS Number_of_storms FROM region AS R JOIN affected_region AS AR ON R.Region_id = AR.Region_id GROUP BY R.Region_name;"
            }
        ]
    },
    {
        "idx": 573,
        "db": "storm_record",
        "interaction": [
            {
                "User": "Could you add a new storm named 'Cyclone X' with an ID of 11, which was active from April 1 to April 5, had a maximum speed of 980, caused 20 million USD in damage, and resulted in 5 deaths?",
                "Answer": "INSERT INTO storm (Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths) VALUES (11, 'Cyclone X', 'April1–April5', 980, 20.0, 5)"
            },
            {
                "User": "How many storms have caused damage greater than 15 million USD?",
                "Answer": "SELECT COUNT(*) FROM storm WHERE Damage_millions_USD > 15"
            },
            {
                "User": "Update the number of deaths caused by 'Cyclone X' to 10.",
                "Answer": "UPDATE storm SET Number_Deaths = 10 WHERE Name = 'Cyclone X'"
            },
            {
                "User": "What is the total number of cities affected by 'Cyclone X'?",
                "Answer": "SELECT SUM(Number_city_affected) FROM affected_region WHERE Storm_ID = (SELECT Storm_ID FROM storm WHERE Name = 'Cyclone X')"
            },
            {
                "User": "Add a new column to the storm table to record the category of each storm based on the Saffir-Simpson scale.",
                "Answer": "ALTER TABLE storm ADD COLUMN Category text"
            },
            {
                "User": "Set the category of 'Cyclone X' to 'Category 3'.",
                "Answer": "UPDATE storm SET Category = 'Category 3' WHERE Name = 'Cyclone X'"
            },
            {
                "User": "How many storms are classified as 'Category 3'?",
                "Answer": "SELECT COUNT(*) FROM storm WHERE Category = 'Category 3'"
            },
            {
                "User": "Create a new table to log the emergency response cost for each storm. Include columns for storm ID, response cost in millions USD, and response team count.",
                "Answer": "CREATE TABLE emergency_response (Storm_ID number, Response_cost_millions_USD number, Response_team_count number, PRIMARY KEY (Storm_ID))"
            },
            {
                "User": "Log an emergency response cost of 5 million USD with 3 response teams for 'Cyclone X'.",
                "Answer": "INSERT INTO emergency_response (Storm_ID, Response_cost_millions_USD, Response_team_count) VALUES ((SELECT Storm_ID FROM storm WHERE Name = 'Cyclone X'), 5, 3)"
            },
            {
                "User": "Which storm had the highest response cost?",
                "Answer": "SELECT T1.Name FROM storm AS T1 JOIN emergency_response AS T2 ON T1.Storm_ID = T2.Storm_ID ORDER BY T2.Response_cost_millions_USD DESC LIMIT 1"
            },
            {
                "User": "Can you show me the average number of deaths and average damage in millions USD for each category of storm?",
                "Answer": "SELECT Category, AVG(Number_Deaths) AS Avg_Deaths, AVG(Damage_millions_USD) AS Avg_Damage FROM storm GROUP BY Category"
            },
            {
                "User": "Insert new affected region data for 'Cyclone X', indicating that region with ID 4 was affected with 25 cities impacted.",
                "Answer": "INSERT INTO affected_region (Region_id, Storm_ID, Number_city_affected) VALUES (4, (SELECT Storm_ID FROM storm WHERE Name = 'Cyclone X'), 25)"
            }
        ]
    },
    {
        "idx": 574,
        "db": "farm",
        "interaction": [
            {
                "User": "Can you add a new column to track the number of chickens on each farm?",
                "Answer": "ALTER TABLE farm ADD COLUMN Chickens number"
            },
            {
                "User": "Great, now please record that farm ID 2 has 1500 chickens.",
                "Answer": "UPDATE farm SET Chickens = 1500 WHERE Farm_ID = 2"
            },
            {
                "User": "How many chickens does farm ID 2 have now?",
                "Answer": "SELECT Chickens FROM farm WHERE Farm_ID = 2"
            },
            {
                "User": "I need to insert a new farm record. The farm ID is 9, the year is 2021, total horses are 120, working horses are 80, total cattle are 300, oxen are 50, bulls are 20, cows are 230, pigs are 400, sheep and goats are 500, and chickens are 600.",
                "Answer": "INSERT INTO farm (Farm_ID, Year, Total_Horses, Working_Horses, Total_Cattle, Oxen, Bulls, Cows, Pigs, Sheep_and_Goats, Chickens) VALUES (9, 2021, 120, 80, 300, 50, 20, 230, 400, 500, 600)"
            },
            {
                "User": "Can you create a new table to track farm owners?",
                "Answer": "CREATE TABLE farm_owners (Owner_ID number PRIMARY KEY, Owner_Name text, Farm_ID number, FOREIGN KEY (Farm_ID) REFERENCES farm (Farm_ID))"
            },
            {
                "User": "Please add the owner 'John Doe' with owner ID 101 for farm ID 3.",
                "Answer": "INSERT INTO farm_owners (Owner_ID, Owner_Name, Farm_ID) VALUES (101, 'John Doe', 3)"
            },
            {
                "User": "Who is the owner of farm ID 3?",
                "Answer": "SELECT Owner_Name FROM farm_owners WHERE Farm_ID = 3"
            },
            {
                "User": "I need to update the total number of pigs for farm ID 1 to 5000.",
                "Answer": "UPDATE farm SET Pigs = 5000 WHERE Farm_ID = 1"
            },
            {
                "User": "Can you tell me the total livestock count for farm ID 1 including the new chicken data?",
                "Answer": "SELECT (Total_Horses + Working_Horses + Total_Cattle + Oxen + Bulls + Cows + Pigs + Sheep_and_Goats + Chickens) AS Total_Livestock FROM farm WHERE Farm_ID = 1"
            },
            {
                "User": "Let's add a new competition for this year. The competition ID is 7, the year is 2023, the theme is 'Sustainable Farming', and it's hosted by city ID 2.",
                "Answer": "INSERT INTO farm_competition (Competition_ID, Year, Theme, Host_city_ID) VALUES (7, 2023, 'Sustainable Farming', 2)"
            },
            {
                "User": "Which city is hosting the 'Sustainable Farming' competition?",
                "Answer": "SELECT Official_Name FROM city INNER JOIN farm_competition ON city.City_ID = farm_competition.Host_city_ID WHERE farm_competition.Theme = 'Sustainable Farming'"
            },
            {
                "User": "Record the competition results: farm ID 2 got the 1st rank, and farm ID 3 got the 2nd rank in the 'Sustainable Farming' competition.",
                "Answer": "INSERT INTO competition_record (Competition_ID, Farm_ID, Rank) VALUES (7, 2, 1), (7, 3, 2)"
            },
            {
                "User": "Which farms participated in the 'Sustainable Farming' competition and what were their ranks?",
                "Answer": "SELECT farm.Farm_ID, competition_record.Rank FROM farm INNER JOIN competition_record ON farm.Farm_ID = competition_record.Farm_ID WHERE competition_record.Competition_ID = 7"
            }
        ]
    },
    {
        "idx": 575,
        "db": "farm",
        "interaction": [
            {
                "User": "Can you add a new column to track the number of competitions each city has hosted?",
                "Answer": "ALTER TABLE city ADD COLUMN Competitions_Hosted number;"
            },
            {
                "User": "Update the number of competitions hosted for Grand Falls/Grand-Sault to 2.",
                "Answer": "UPDATE city SET Competitions_Hosted = 2 WHERE Official_Name = 'Grand Falls/Grand-Sault';"
            },
            {
                "User": "Which city has hosted the most competitions?",
                "Answer": "SELECT Official_Name FROM city ORDER BY Competitions_Hosted DESC LIMIT 1;"
            },
            {
                "User": "Create a new table to track the revenue generated from each competition.",
                "Answer": "CREATE TABLE competition_revenue (Competition_ID number PRIMARY KEY, Revenue number);"
            },
            {
                "User": "Insert the revenue data for the competition 'Carnival M is back!' with an amount of 50000.",
                "Answer": "INSERT INTO competition_revenue (Competition_ID, Revenue) VALUES (1, 50000);"
            },
            {
                "User": "Show me the total revenue generated from competitions hosted by 'Grand Falls/Grand-Sault'.",
                "Answer": "SELECT SUM(T3.Revenue) FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID JOIN competition_revenue AS T3 ON T2.Competition_ID = T3.Competition_ID WHERE T1.Official_Name = 'Grand Falls/Grand-Sault';"
            },
            {
                "User": "Can we track the total number of animals on each farm?",
                "Answer": "ALTER TABLE farm ADD COLUMN Total_Animals number;"
            },
            {
                "User": "Update the total number of animals for Farm_ID 1 to be the sum of all animal types.",
                "Answer": "UPDATE farm SET Total_Animals = (Total_Horses + Total_Cattle + Pigs + Sheep_and_Goats) WHERE Farm_ID = 1;"
            },
            {
                "User": "Which farm has the highest number of working horses?",
                "Answer": "SELECT Farm_ID FROM farm ORDER BY Working_Horses DESC LIMIT 1;"
            },
            {
                "User": "Add a new farm record with the following details: Farm_ID 9, Year 1930, Total_Horses 6000, Working_Horses 4500, Total_Cattle 9000, Oxen 1000, Bulls 50, Cows 4000, Pigs 5000, Sheep_and_Goats 2000.",
                "Answer": "INSERT INTO farm (Farm_ID, Year, Total_Horses, Working_Horses, Total_Cattle, Oxen, Bulls, Cows, Pigs, Sheep_and_Goats) VALUES (9, 1930, 6000, 4500, 9000, 1000, 50, 4000, 5000, 2000);"
            },
            {
                "User": "Show me a list of farms that have more cows than oxen.",
                "Answer": "SELECT Farm_ID FROM farm WHERE Cows > Oxen;"
            },
            {
                "User": "Can you create a view that lists competitions alongside the hosting city and the number of animals on the winning farm?",
                "Answer": "CREATE VIEW competition_winners AS SELECT T1.Competition_ID, T1.Theme, T2.Official_Name, T3.Total_Animals FROM farm_competition AS T1 JOIN city AS T2 ON T1.Host_city_ID = T2.City_ID JOIN competition_record AS T4 ON T1.Competition_ID = T4.Competition_ID JOIN farm AS T3 ON T4.Farm_ID = T3.Farm_ID WHERE T4.Rank = 1;"
            }
        ]
    },
    {
        "idx": 576,
        "db": "program_share",
        "interaction": [
            {
                "User": "Can we add a new program to the database?",
                "Answer": "INSERT INTO program (Program_ID, Name, Origin, Launch, Owner) VALUES (6, 'NewShow', 'NewCity', 2023, 'NewNetwork')"
            },
            {
                "User": "What's the new program that was just added?",
                "Answer": "SELECT * FROM program WHERE Program_ID = 6"
            },
            {
                "User": "I'd like to schedule a broadcast for this new program on channel 2. Can we do that for the evening time slot?",
                "Answer": "INSERT INTO broadcast (Channel_ID, Program_ID, Time_of_day) VALUES (2, 6, 'Evening')"
            },
            {
                "User": "Can you show me all broadcasts scheduled for the evening?",
                "Answer": "SELECT * FROM broadcast WHERE Time_of_day = 'Evening'"
            },
            {
                "User": "We should track the director for each program. Can we add a column for that?",
                "Answer": "ALTER TABLE program ADD COLUMN Director text"
            },
            {
                "User": "Who is the director of the program 'Aniworld'?",
                "Answer": "SELECT Director FROM program WHERE Name = 'Aniworld'"
            },
            {
                "User": "Let's update the director of 'Aniworld' to 'John Smith'.",
                "Answer": "UPDATE program SET Director = 'John Smith' WHERE Name = 'Aniworld'"
            },
            {
                "User": "Can we create a table to track viewer feedback with a rating out of 10?",
                "Answer": "CREATE TABLE feedback (Feedback_ID number PRIMARY KEY, Channel_ID number, Program_ID number, Viewer_Comments text, Rating number)"
            },
            {
                "User": "Let's insert some feedback for the first program on CCTV-1 with a rating of 8.",
                "Answer": "INSERT INTO feedback (Feedback_ID, Channel_ID, Program_ID, Viewer_Comments, Rating) VALUES (1, 1, 1, 'Great show!', 8)"
            },
            {
                "User": "What's the average rating for all programs on CCTV-1?",
                "Answer": "SELECT AVG(Rating) FROM feedback WHERE Channel_ID = 1"
            },
            {
                "User": "Can you show me the top-rated program based on viewer feedback?",
                "Answer": "SELECT Program_ID, MAX(Rating) as Highest_Rating FROM feedback GROUP BY Program_ID ORDER BY Highest_Rating DESC LIMIT 1"
            },
            {
                "User": "Let's update the share percentage for Hunan Satellite TV to 5.2%.",
                "Answer": "UPDATE channel SET Share_in_percent = 5.2 WHERE Name = 'Hunan Satellite TV'"
            },
            {
                "User": "I need a report on the share percentages of all channels. Can you provide that?",
                "Answer": "SELECT Name, Share_in_percent FROM channel"
            }
        ]
    },
    {
        "idx": 577,
        "db": "program_share",
        "interaction": [
            {
                "User": "What are the top 3 channels by share percentage?",
                "Answer": "SELECT Name FROM channel ORDER BY Share_in_percent DESC LIMIT 3"
            },
            {
                "User": "Can you add a new program called 'Space Explorers' launched in 2021 by 'Space Network'?",
                "Answer": "INSERT INTO program (Name, Origin, Launch, Owner) VALUES ('Space Explorers', 'USA', 2021, 'Space Network')"
            },
            {
                "User": "I want to update the share percentage of 'Hunan Satellite TV' to 5.0.",
                "Answer": "UPDATE channel SET Share_in_percent = 5.0 WHERE Name = 'Hunan Satellite TV'"
            },
            {
                "User": "Create a new table for program genres with columns for genre ID, name, and description.",
                "Answer": "CREATE TABLE program_genre (Genre_ID number PRIMARY KEY, Name text, Description text)"
            },
            {
                "User": "Insert three genres: (1, 'Animation', 'Cartoons and animated series'), (2, 'Science Fiction', 'Shows with futuristic themes'), (3, 'Documentary', 'Non-fictional programs').",
                "Answer": "INSERT INTO program_genre (Genre_ID, Name, Description) VALUES (1, 'Animation', 'Cartoons and animated series'), (2, 'Science Fiction', 'Shows with futuristic themes'), (3, 'Documentary', 'Non-fictional programs')"
            },
            {
                "User": "How would you link the new genres to the existing programs?",
                "Answer": "ALTER TABLE program ADD COLUMN Genre_ID number REFERENCES program_genre(Genre_ID)"
            },
            {
                "User": "Set the genre of 'Aniworld' to Animation.",
                "Answer": "UPDATE program SET Genre_ID = (SELECT Genre_ID FROM program_genre WHERE Name = 'Animation') WHERE Name = 'Aniworld'"
            },
            {
                "User": "Show me all programs with their genres.",
                "Answer": "SELECT p.Name, g.Name AS Genre FROM program p LEFT JOIN program_genre g ON p.Genre_ID = g.Genre_ID"
            },
            {
                "User": "Add a new column 'Viewer_Count' to the broadcast_share table.",
                "Answer": "ALTER TABLE broadcast_share ADD COLUMN Viewer_Count number"
            },
            {
                "User": "Update the viewer count for 'CCTV-1' on '01,May' to 150000.",
                "Answer": "UPDATE broadcast_share SET Viewer_Count = 150000 WHERE Channel_ID = (SELECT Channel_ID FROM channel WHERE Name = 'CCTV-1') AND Date = '01,May'"
            }
        ]
    },
    {
        "idx": 578,
        "db": "book_2",
        "interaction": [
            {
                "User": "Can you add a new book called 'The Silent Ocean' by 'Sarah Waters' with 5 issues?",
                "Answer": "INSERT INTO book (Title, Issues, Writer) VALUES ('The Silent Ocean', 5, 'Sarah Waters')"
            },
            {
                "User": "Now, show me all books written by 'Sarah Waters'.",
                "Answer": "SELECT * FROM book WHERE Writer = 'Sarah Waters'"
            },
            {
                "User": "I want to update the price of 'The Black Lamb' published by 'Pearson' to 20000000. What's the Publication_ID for this book?",
                "Answer": "SELECT Publication_ID FROM publication WHERE Book_ID = (SELECT Book_ID FROM book WHERE Title = 'The Black Lamb') AND Publisher = 'Pearson'"
            },
            {
                "User": "Using the ID from the previous answer, update the price now.",
                "Answer": "UPDATE publication SET Price = 20000000 WHERE Publication_ID = 1"
            },
            {
                "User": "Add a new column 'Genre' to the book table.",
                "Answer": "ALTER TABLE book ADD COLUMN Genre text"
            },
            {
                "User": "Set the genre of 'The Black Lamb' to 'Horror'.",
                "Answer": "UPDATE book SET Genre = 'Horror' WHERE Title = 'The Black Lamb'"
            },
            {
                "User": "What are the different genres available in our books now?",
                "Answer": "SELECT DISTINCT Genre FROM book"
            },
            {
                "User": "Create a new table for authors with their bio. Include columns for author name, bio, and birth year.",
                "Answer": "CREATE TABLE author (Author_ID number PRIMARY KEY, Name text, Bio text, Birth_Year number)"
            },
            {
                "User": "Add 'Timothy Truman' with a short bio and birth year 1960 to the authors table.",
                "Answer": "INSERT INTO author (Name, Bio, Birth_Year) VALUES ('Timothy Truman', 'A prolific comic book writer.', 1960)"
            },
            {
                "User": "Can we get a list of all books along with their authors' birth year?",
                "Answer": "SELECT b.Title, a.Birth_Year FROM book b INNER JOIN author a ON b.Writer = a.Name"
            },
            {
                "User": "Who is the author with the most publications in our database?",
                "Answer": "SELECT Writer FROM book GROUP BY Writer ORDER BY COUNT(*) DESC LIMIT 1"
            },
            {
                "User": "What is the average price of publications by 'Wiley'?",
                "Answer": "SELECT AVG(Price) FROM publication WHERE Publisher = 'Wiley'"
            },
            {
                "User": "I'd like to record the sales for each book. Can you create a sales table with columns for Book_ID, Date, and Sold_Copies?",
                "Answer": "CREATE TABLE sales (Sale_ID number PRIMARY KEY, Book_ID number, Sale_Date text, Sold_Copies number)"
            },
            {
                "User": "Insert a sale record for 'The Silent Ocean' with 1000 copies sold on '2023-04-01'.",
                "Answer": "INSERT INTO sales (Book_ID, Sale_Date, Sold_Copies) VALUES ((SELECT Book_ID FROM book WHERE Title = 'The Silent Ocean'), '2023-04-01', 1000)"
            },
            {
                "User": "How many copies of 'The Black Lamb' have been sold?",
                "Answer": "SELECT SUM(Sold_Copies) FROM sales WHERE Book_ID = (SELECT Book_ID FROM book WHERE Title = 'The Black Lamb')"
            }
        ]
    },
    {
        "idx": 579,
        "db": "book_2",
        "interaction": [
            {
                "User": "Can we add a new book called 'The Red Dragon' by author 'Thomas Harris' with 5 issues?",
                "Answer": "INSERT INTO book (Book_ID, Title, Issues, Writer) VALUES (11, 'The Red Dragon', 5, 'Thomas Harris')"
            },
            {
                "User": "I would like to know the Book_ID of the newly added book 'The Red Dragon'.",
                "Answer": "SELECT Book_ID FROM book WHERE Title = 'The Red Dragon'"
            },
            {
                "User": "Let's publish 'The Red Dragon' with 'Penguin Books' on 'January 2021' at a price of 7500000.0.",
                "Answer": "INSERT INTO publication (Publication_ID, Book_ID, Publisher, Publication_Date, Price) VALUES (8, 11, 'Penguin Books', 'January 2021', 7500000.0)"
            },
            {
                "User": "What are all the books published by 'Penguin Books'?",
                "Answer": "SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Publisher = 'Penguin Books'"
            },
            {
                "User": "Can we update the price for 'The Black Lamb' to 16000000.0?",
                "Answer": "UPDATE publication SET Price = 16000000.0 WHERE Book_ID = (SELECT Book_ID FROM book WHERE Title = 'The Black Lamb')"
            },
            {
                "User": "I want to see the new price of 'The Black Lamb'.",
                "Answer": "SELECT T2.Price FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Title = 'The Black Lamb'"
            },
            {
                "User": "Can we add a new column 'Genre' to the book table for categorizing the books?",
                "Answer": "ALTER TABLE book ADD COLUMN Genre text"
            },
            {
                "User": "Let's categorize 'The Black Lamb' as 'Horror'.",
                "Answer": "UPDATE book SET Genre = 'Horror' WHERE Title = 'The Black Lamb'"
            },
            {
                "User": "What genre is 'The Black Lamb' listed under now?",
                "Answer": "SELECT Genre FROM book WHERE Title = 'The Black Lamb'"
            },
            {
                "User": "Create a new table 'author' with columns 'Author_ID' as number, 'Name' as text, and 'Nationality' as text.",
                "Answer": "CREATE TABLE author (Author_ID number PRIMARY KEY, Name text, Nationality text)"
            },
            {
                "User": "Add 'Timothy Truman' as an American author and 'Garth Ennis' as an Irish author to the 'author' table.",
                "Answer": "INSERT INTO author (Author_ID, Name, Nationality) VALUES (1, 'Timothy Truman', 'American'), (2, 'Garth Ennis', 'Irish')"
            },
            {
                "User": "Can we link the 'book' table and the new 'author' table?",
                "Answer": "ALTER TABLE book ADD COLUMN Author_ID number REFERENCES author (Author_ID)"
            },
            {
                "User": "Link 'The Black Lamb' to its author 'Timothy Truman' in the 'book' table.",
                "Answer": "UPDATE book SET Author_ID = (SELECT Author_ID FROM author WHERE Name = 'Timothy Truman') WHERE Title = 'The Black Lamb'"
            }
        ]
    },
    {
        "idx": 580,
        "db": "cre_Doc_Control_Systems",
        "interaction": [
            {
                "User": "Can we add a new document type called 'Email'?",
                "Answer": "INSERT INTO Ref_Document_Types (document_type_code, document_type_description) VALUES ('Email', 'Electronic mail document')"
            },
            {
                "User": "How many document types do we have now?",
                "Answer": "SELECT count(*) FROM Ref_Document_Types"
            },
            {
                "User": "I need to update the address details for address ID 1 to 'USA'.",
                "Answer": "UPDATE Addresses SET address_details = 'USA' WHERE address_id = 1"
            },
            {
                "User": "What are the updated details for address ID 1?",
                "Answer": "SELECT address_details FROM Addresses WHERE address_id = 1"
            },
            {
                "User": "We should track the creation date for documents. Can we add a 'creation_date' column to the Documents table?",
                "Answer": "ALTER TABLE Documents ADD COLUMN creation_date time"
            },
            {
                "User": "Now, set the creation date for document ID 1 to '2023-01-01 00:00:00'.",
                "Answer": "UPDATE Documents SET creation_date = '2023-01-01 00:00:00' WHERE document_id = 1"
            },
            {
                "User": "What's the creation date for the document with ID 1?",
                "Answer": "SELECT creation_date FROM Documents WHERE document_id = 1"
            },
            {
                "User": "Can we have a report of all documents created after 2020?",
                "Answer": "SELECT * FROM Documents WHERE creation_date > '2020-01-01 00:00:00'"
            },
            {
                "User": "Let's create a new table to track employee emails. It should have employee ID and email address.",
                "Answer": "CREATE TABLE Employee_Emails (employee_id number, email_address text, PRIMARY KEY (employee_id))"
            },
            {
                "User": "Add my email 'john.doe@example.com' to the new table for employee ID 2.",
                "Answer": "INSERT INTO Employee_Emails (employee_id, email_address) VALUES (2, 'john.doe@example.com')"
            },
            {
                "User": "What's the email address for employee ID 2?",
                "Answer": "SELECT email_address FROM Employee_Emails WHERE employee_id = 2"
            },
            {
                "User": "I want to see all documents mailed to Germany. Can you provide that?",
                "Answer": "SELECT * FROM Documents_Mailed JOIN Addresses ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE Addresses.address_details = 'DE'"
            },
            {
                "User": "Let's create a view that shows documents with their types and status descriptions.",
                "Answer": "CREATE VIEW Document_Details AS SELECT d.document_id, dt.document_type_description, ds.document_status_description FROM Documents d JOIN Ref_Document_Types dt ON d.document_type_code = dt.document_type_code JOIN Ref_Document_Status ds ON d.document_status_code = ds.document_status_code"
            },
            {
                "User": "Can you show me the details from the view for document ID 2?",
                "Answer": "SELECT * FROM Document_Details WHERE document_id = 2"
            },
            {
                "User": "I need to update the status of document ID 3 to 'overdue'.",
                "Answer": "UPDATE Documents SET document_status_code = 'overdue' WHERE document_id = 3"
            },
            {
                "User": "What's the current status of document ID 3?",
                "Answer": "SELECT document_status_description FROM Ref_Document_Status JOIN Documents ON Ref_Document_Status.document_status_code = Documents.document_status_code WHERE document_id = 3"
            },
            {
                "User": "Let's add a new role called 'Intern' with the code 'IN'.",
                "Answer": "INSERT INTO Roles (role_code, role_description) VALUES ('IN', 'Intern')"
            }
        ]
    },
    {
        "idx": 581,
        "db": "cre_Doc_Control_Systems",
        "interaction": [
            {
                "User": "Can you add a new document type called 'Email' with a description 'electronic mail'?",
                "Answer": "INSERT INTO Ref_Document_Types (document_type_code, document_type_description) VALUES ('Email', 'electronic mail')"
            },
            {
                "User": "What are all the document types now?",
                "Answer": "SELECT * FROM Ref_Document_Types"
            },
            {
                "User": "I need to track the number of pages for each document. Can you add a 'number_of_pages' column to the Documents table?",
                "Answer": "ALTER TABLE Documents ADD number_of_pages number"
            },
            {
                "User": "For document ID 1, set the number of pages to 120. What would be the SQL statement for that?",
                "Answer": "UPDATE Documents SET number_of_pages = 120 WHERE document_id = 1"
            },
            {
                "User": "Now, can you show me the details of document ID 1 including the number of pages?",
                "Answer": "SELECT *, number_of_pages FROM Documents WHERE document_id = 1"
            },
            {
                "User": "Create a new table called 'Email_Contacts' to store email addresses with columns 'contact_id', 'employee_id', and 'email_address'.",
                "Answer": "CREATE TABLE Email_Contacts (contact_id number PRIMARY KEY, employee_id number, email_address text)"
            },
            {
                "User": "Insert my email into the 'Email_Contacts' table with contact_id as 1, employee_id as 2, and email_address as 'kenyon@example.com'.",
                "Answer": "INSERT INTO Email_Contacts (contact_id, employee_id, email_address) VALUES (1, 2, 'kenyon@example.com')"
            },
            {
                "User": "Can we have a list of all employees with their email addresses?",
                "Answer": "SELECT t1.employee_name, t2.email_address FROM Employees t1 LEFT JOIN Email_Contacts t2 ON t1.employee_id = t2.employee_id"
            },
            {
                "User": "Let's update the role description for 'Photo' to 'Photographer'.",
                "Answer": "UPDATE Roles SET role_description = 'Photographer' WHERE role_code = 'PT'"
            },
            {
                "User": "How many documents have been mailed by 'UPS'?",
                "Answer": "SELECT COUNT(*) FROM Documents WHERE shipping_agent_code = 'UP' AND document_status_code = 'done'"
            },
            {
                "User": "I think we should track the return date for mailed documents. Can you add a 'return_date' column to the 'Documents_Mailed' table?",
                "Answer": "ALTER TABLE Documents_Mailed ADD return_date time"
            },
            {
                "User": "For the document mailed to address_id 8, set the return date to '1977-05-01 00:00:00'.",
                "Answer": "UPDATE Documents_Mailed SET return_date = '1977-05-01 00:00:00' WHERE mailed_to_address_id = 8"
            },
            {
                "User": "Show me all the documents that have been mailed but not returned yet.",
                "Answer": "SELECT * FROM Documents_Mailed WHERE return_date IS NULL"
            },
            {
                "User": "Let's create a view called 'EmployeeRoles' that shows the employee name and their role description.",
                "Answer": "CREATE VIEW EmployeeRoles AS SELECT t1.employee_name, t2.role_description FROM Employees t1 INNER JOIN Roles t2 ON t1.role_code = t2.role_code"
            }
        ]
    },
    {
        "idx": 582,
        "db": "pilot_record",
        "interaction": [
            {
                "User": "Can we track the hours each pilot has flown?",
                "Answer": "ALTER TABLE pilot ADD COLUMN Hours_Flown number"
            },
            {
                "User": "Please add that pilot Patrick O'Bryant has flown 350 hours.",
                "Answer": "UPDATE pilot SET Hours_Flown = 350 WHERE Pilot_name = 'Patrick O''Bryant'"
            },
            {
                "User": "I'd like to know how many hours pilot Dan O'Sullivan has flown.",
                "Answer": "SELECT Hours_Flown FROM pilot WHERE Pilot_name = 'Dan O''Sullivan'"
            },
            {
                "User": "Add a new pilot named 'John Smith' with rank 50, age 29, from Canada, joining the navigation team this year.",
                "Answer": "INSERT INTO pilot (Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team, Hours_Flown) VALUES (6, 'John Smith', 50, 29, 'Canada', 'Navigation Team', 2023, 'Explorer', 0)"
            },
            {
                "User": "How many pilots have joined after 2010?",
                "Answer": "SELECT COUNT(*) FROM pilot WHERE Join_Year > 2010"
            },
            {
                "User": "Create a new table to track maintenance records for aircraft.",
                "Answer": "CREATE TABLE maintenance_record (Maintenance_ID number PRIMARY KEY, Aircraft_ID number, Date text, Description text)"
            },
            {
                "User": "Log a maintenance record for aircraft with ID 2 on today's date for engine check.",
                "Answer": "INSERT INTO maintenance_record (Maintenance_ID, Aircraft_ID, Date, Description) VALUES (1, 2, '2023-04-01', 'Engine Check')"
            },
            {
                "User": "Show all maintenance records for the first aircraft.",
                "Answer": "SELECT * FROM maintenance_record WHERE Aircraft_ID = 1"
            },
            {
                "User": "Can we update the fleet series for the first aircraft to '445-465 (21)'?",
                "Answer": "UPDATE aircraft SET Fleet_Series = '445-465 (21)' WHERE Aircraft_ID = 1"
            },
            {
                "User": "I need to see the updated fleet series for all aircraft.",
                "Answer": "SELECT Aircraft_ID, Fleet_Series FROM aircraft"
            },
            {
                "User": "What is the average age of pilots in the 'Bradley' team?",
                "Answer": "SELECT AVG(Age) FROM pilot WHERE Team = 'Bradley'"
            },
            {
                "User": "Let's add a column for email addresses to the pilot table.",
                "Answer": "ALTER TABLE pilot ADD COLUMN Email text"
            },
            {
                "User": "Update the email for Patrick O'Bryant to 'patrick.obryant@airmail.com'.",
                "Answer": "UPDATE pilot SET Email = 'patrick.obryant@airmail.com' WHERE Pilot_name = 'Patrick O''Bryant'"
            },
            {
                "User": "I want to see all pilots' names with their email addresses.",
                "Answer": "SELECT Pilot_name, Email FROM pilot"
            }
        ]
    },
    {
        "idx": 583,
        "db": "pilot_record",
        "interaction": [
            {
                "User": "Can we add a new pilot to our records?",
                "Answer": "INSERT INTO pilot (Pilot_ID, Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team) VALUES (6, 'Jane Doe', 10, 29, 'Canada', 'First Officer', 2023, 'Alpha')"
            },
            {
                "User": "I'd like to see the updated list of all pilots including the new addition.",
                "Answer": "SELECT * FROM pilot ORDER BY Pilot_ID"
            },
            {
                "User": "Can we also track the hours each pilot has flown? We need to add a new column to the pilot record table.",
                "Answer": "ALTER TABLE pilot_record ADD COLUMN Hours_Flown number"
            },
            {
                "User": "How do we record the hours flown for pilot ID 6 for aircraft ID 2 on today's date?",
                "Answer": "INSERT INTO pilot_record (Record_ID, Pilot_ID, Aircraft_ID, Date, Hours_Flown) VALUES (7, 6, 2, '2023/04/01', 5)"
            },
            {
                "User": "Can you show me the total hours flown by each pilot?",
                "Answer": "SELECT Pilot_ID, SUM(Hours_Flown) AS Total_Hours FROM pilot_record GROUP BY Pilot_ID"
            },
            {
                "User": "We need to update the aircraft record for aircraft ID 3 to reflect a new powertrain. The new powertrain is 'GE Aviation GE90'.",
                "Answer": "UPDATE aircraft SET Powertrain = 'GE Aviation GE90' WHERE Aircraft_ID = 3"
            },
            {
                "User": "Which aircraft models are currently using 'Diesel' fuel propulsion?",
                "Answer": "SELECT Model FROM aircraft WHERE Fuel_Propulsion = 'Diesel'"
            },
            {
                "User": "Let's create a new table to track aircraft maintenance records. It should include a record ID, aircraft ID, date, and description of maintenance.",
                "Answer": "CREATE TABLE aircraft_maintenance (Maintenance_Record_ID number PRIMARY KEY, Aircraft_ID number, Date text, Description text)"
            },
            {
                "User": "How do we log the first maintenance record for aircraft ID 1 with today's date and a description of 'Routine Check-up'?",
                "Answer": "INSERT INTO aircraft_maintenance (Maintenance_Record_ID, Aircraft_ID, Date, Description) VALUES (1, 1, '2023/04/01', 'Routine Check-up')"
            },
            {
                "User": "Can you give me a report of all maintenance activities for aircraft ID 1?",
                "Answer": "SELECT * FROM aircraft_maintenance WHERE Aircraft_ID = 1"
            },
            {
                "User": "We need to update pilot Jane Doe's rank to 9. Please make the necessary changes.",
                "Answer": "UPDATE pilot SET Rank = 9 WHERE Pilot_name = 'Jane Doe'"
            },
            {
                "User": "Let's see the top three pilots with the highest rank now.",
                "Answer": "SELECT * FROM pilot ORDER BY Rank DESC LIMIT 3"
            },
            {
                "User": "Can we also add a column to track the type of flights (Domestic/International) in the pilot_record table?",
                "Answer": "ALTER TABLE pilot_record ADD COLUMN Flight_Type text"
            }
        ]
    },
    {
        "idx": 584,
        "db": "customer_deliveries",
        "interaction": [
            {
                "User": "What is the total revenue from all the products sold?",
                "Answer": "SELECT SUM(p.product_price) AS total_revenue FROM Products p INNER JOIN Actual_Order_Products aop ON p.product_id = aop.product_id"
            },
            {
                "User": "I'd like to add a new product. Can we add a 'books' product priced at $19.99 with the description 'educational material'?",
                "Answer": "INSERT INTO Products (product_name, product_price, product_description) VALUES ('books', 19.99, 'educational material')"
            },
            {
                "User": "Can you confirm that the 'books' product has been added?",
                "Answer": "SELECT * FROM Products WHERE product_name = 'books'"
            },
            {
                "User": "We need to start tracking the quantity of each product in stock. Can you add a 'quantity_in_stock' column to the Products table?",
                "Answer": "ALTER TABLE Products ADD COLUMN quantity_in_stock number"
            },
            {
                "User": "Now, set the initial quantity of all products to 100 units.",
                "Answer": "UPDATE Products SET quantity_in_stock = 100"
            },
            {
                "User": "A customer wants to update their payment method to 'PayPal'. The customer's name is Ron Emard. Can you update the record?",
                "Answer": "UPDATE Customers SET payment_method = 'PayPal' WHERE customer_name = 'Ron Emard'"
            },
            {
                "User": "Can you show me all the customers who have 'House' as their address type?",
                "Answer": "SELECT c.customer_name FROM Customers c INNER JOIN Customer_Addresses ca ON c.customer_id = ca.customer_id WHERE ca.address_type = 'House'"
            },
            {
                "User": "I want to create a new table to track customer feedback. It should have 'feedback_id', 'customer_id', 'feedback_text', and 'feedback_date'.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text, feedback_date time)"
            },
            {
                "User": "Let's record a new feedback from customer ID 2 saying 'Quick delivery, very satisfied!' received on March 25, 2023.",
                "Answer": "INSERT INTO Customer_Feedback (customer_id, feedback_text, feedback_date) VALUES (2, 'Quick delivery, very satisfied!', '2023-03-25 00:00:00')"
            },
            {
                "User": "How many trucks are currently listed in our database?",
                "Answer": "SELECT COUNT(truck_id) FROM Trucks"
            },
            {
                "User": "We've purchased a new truck with licence number 'AB123'. Its details are 'Brand new model'. Can you add this to the Trucks table?",
                "Answer": "INSERT INTO Trucks (truck_licence_number, truck_details) VALUES ('AB123', 'Brand new model')"
            },
            {
                "User": "A customer has reported a missing item from their order. The Actual Order ID is 2. We need to mark this order's status as 'Issue Reported'.",
                "Answer": "UPDATE Actual_Orders SET order_status_code = 'Issue Reported' WHERE actual_order_id = 2"
            },
            {
                "User": "Can we list all the orders that have 'Issue Reported' as their status?",
                "Answer": "SELECT * FROM Actual_Orders WHERE order_status_code = 'Issue Reported'"
            },
            {
                "User": "We need to track which employee last updated the order status. Can we add a 'last_updated_by_employee_id' column to the Actual_Orders table?",
                "Answer": "ALTER TABLE Actual_Orders ADD COLUMN last_updated_by_employee_id number"
            },
            {
                "User": "Let's set the 'last_updated_by_employee_id' for the order with ID 2 to employee ID 1.",
                "Answer": "UPDATE Actual_Orders SET last_updated_by_employee_id = 1 WHERE actual_order_id = 2"
            }
        ]
    },
    {
        "idx": 585,
        "db": "customer_deliveries",
        "interaction": [
            {
                "User": "Can you create a new table to track customer feedback with columns for feedback_id, customer_id, feedback_text, and feedback_date?",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text, feedback_date time)"
            },
            {
                "User": "Great, now can you add a new feedback entry for customer with ID 2, saying 'Fast delivery and great service', dated for today?",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES (1, 2, 'Fast delivery and great service', CURRENT_DATE)"
            },
            {
                "User": "I just realized we should also track the product_id in the feedback. Can you add this column to the Customer_Feedback table?",
                "Answer": "ALTER TABLE Customer_Feedback ADD COLUMN product_id number"
            },
            {
                "User": "Now, can you update the feedback entry for customer ID 2 to include the product_id 1?",
                "Answer": "UPDATE Customer_Feedback SET product_id = 1 WHERE customer_id = 2"
            },
            {
                "User": "Can you show me the feedback details along with the product name for all feedback entries?",
                "Answer": "SELECT cf.feedback_id, cf.customer_id, cf.feedback_text, cf.feedback_date, p.product_name FROM Customer_Feedback cf JOIN Products p ON cf.product_id = p.product_id"
            },
            {
                "User": "Can we also track the employees who are drivers? I want to add a 'is_driver' column to the Employees table.",
                "Answer": "ALTER TABLE Employees ADD COLUMN is_driver boolean"
            },
            {
                "User": "Can you set the 'is_driver' status to true for employee_id 1 and false for employee_id 2?",
                "Answer": [
                    "UPDATE Employees SET is_driver = true WHERE employee_id = 1;",
                    "UPDATE Employees SET is_driver = false WHERE employee_id = 2"
                ]
            },
            {
                "User": "It seems like we need to add a new truck to our fleet. Can you insert a new record for a truck with the licence number 'AB123', named 'Big Blue'?",
                "Answer": "INSERT INTO Trucks (truck_id, truck_licence_number, truck_details) VALUES ((SELECT MAX(truck_id) FROM Trucks) + 1, 'AB123', 'Big Blue')"
            },
            {
                "User": "Now, can you assign the new truck to the driver with employee_id 1 for the route 'Torphy Ltd'?",
                "Answer": "UPDATE Order_Deliveries SET truck_id = (SELECT truck_id FROM Trucks WHERE truck_licence_number = 'AB123') WHERE driver_employee_id = 1 AND location_code IN (SELECT location_code FROM Delivery_Route_Locations WHERE route_id = (SELECT route_id FROM Delivery_Routes WHERE route_name = 'Torphy Ltd'))"
            }
        ]
    },
    {
        "idx": 586,
        "db": "bike_1",
        "interaction": [
            {
                "User": "What is the average number of bikes available at the San Jose Diridon Caltrain Station?",
                "Answer": "SELECT AVG(bikes_available) FROM status WHERE station_id = 2"
            },
            {
                "User": "Please add a new station called 'New Park' in 'Palo Alto' with 15 docks.",
                "Answer": "INSERT INTO station (name, city, dock_count) VALUES ('New Park', 'Palo Alto', 15)"
            },
            {
                "User": "Now, how many stations are there in Palo Alto?",
                "Answer": "SELECT COUNT(*) FROM station WHERE city = 'Palo Alto'"
            },
            {
                "User": "Update the dock count for 'San Jose Civic Center' to 20.",
                "Answer": "UPDATE station SET dock_count = 20 WHERE name = 'San Jose Civic Center'"
            },
            {
                "User": "Let's create a new table for maintenance records with columns for station_id, start_time, end_time, and notes.",
                "Answer": "CREATE TABLE maintenance (station_id number, start_time text, end_time text, notes text)"
            },
            {
                "User": "Add a maintenance record for station id 3 with a start time of '2023-04-01 09:00', end time of '2023-04-01 12:00', and note 'Routine check-up'.",
                "Answer": "INSERT INTO maintenance (station_id, start_time, end_time, notes) VALUES (3, '2023-04-01 09:00', '2023-04-01 12:00', 'Routine check-up')"
            },
            {
                "User": "Can we also track the name of the technician in the maintenance records? Please add a column for it.",
                "Answer": "ALTER TABLE maintenance ADD COLUMN technician_name text"
            },
            {
                "User": "Record that the technician named 'Alex Smith' performed the last maintenance for station id 3.",
                "Answer": "UPDATE maintenance SET technician_name = 'Alex Smith' WHERE station_id = 3 AND start_time = '2023-04-01 09:00'"
            },
            {
                "User": "I need to know the total duration of trips that started and ended at the same station today.",
                "Answer": "SELECT SUM(duration) FROM trip WHERE start_station_id = end_station_id AND DATE(start_date) = CURRENT_DATE"
            },
            {
                "User": "Show me the list of stations without any available bikes.",
                "Answer": "SELECT name FROM station JOIN status ON station.id = status.station_id WHERE bikes_available = 0"
            },
            {
                "User": "What's the highest temperature recorded in the weather table?",
                "Answer": "SELECT MAX(max_temperature_f) FROM weather"
            },
            {
                "User": "Insert a new weather record for today with a mean temperature of 65F, mean humidity of 55, and no precipitation.",
                "Answer": "INSERT INTO weather (date, mean_temperature_f, mean_humidity, precipitation_inches) VALUES (CURRENT_DATE, 65, 55, 0)"
            },
            {
                "User": "How many trips have been taken by subscribers with zip code 94107?",
                "Answer": "SELECT COUNT(*) FROM trip WHERE subscription_type = 'Subscriber' AND zip_code = 94107"
            },
            {
                "User": "Let's track the number of repairs for each bike. Add a 'repairs_count' column to the 'trip' table.",
                "Answer": "ALTER TABLE trip ADD COLUMN repairs_count number DEFAULT 0"
            }
        ]
    },
    {
        "idx": 587,
        "db": "inn_1",
        "interaction": [
            {
                "User": "Can you add a column to track the cleaning status of each room?",
                "Answer": "ALTER TABLE Rooms ADD COLUMN cleaningStatus TEXT"
            },
            {
                "User": "Please set the default cleaning status for all rooms to 'Dirty'.",
                "Answer": "UPDATE Rooms SET cleaningStatus = 'Dirty'"
            },
            {
                "User": "Now, can you show me all rooms that are currently dirty?",
                "Answer": "SELECT RoomId, roomName FROM Rooms WHERE cleaningStatus = 'Dirty'"
            },
            {
                "User": "I'd like to mark room RND as clean.",
                "Answer": "UPDATE Rooms SET cleaningStatus = 'Clean' WHERE RoomId = 'RND'"
            },
            {
                "User": "Can you create a new table to keep track of room service orders?",
                "Answer": "CREATE TABLE RoomService (OrderId NUMBER, RoomId TEXT, Item TEXT, Quantity NUMBER, OrderTime TEXT, PRIMARY KEY (OrderId))"
            },
            {
                "User": "Please insert a room service order for room IBS for 2 teas at 10:30 AM today.",
                "Answer": "INSERT INTO RoomService (OrderId, RoomId, Item, Quantity, OrderTime) VALUES (1, 'IBS', 'Tea', 2, '10:30 AM')"
            },
            {
                "User": "How many room service orders have been made today?",
                "Answer": "SELECT COUNT(*) FROM RoomService WHERE DATE(OrderTime) = DATE('now')"
            },
            {
                "User": "Can you update the last name of the guest in reservation 10105 to 'SMITH'?",
                "Answer": "UPDATE Reservations SET LastName = 'SMITH' WHERE Code = 10105"
            },
            {
                "User": "Show me the details of the updated reservation for guest SMITH.",
                "Answer": "SELECT * FROM Reservations WHERE LastName = 'SMITH'"
            },
            {
                "User": "I need to add a new room to the database. Can you do that?",
                "Answer": "INSERT INTO Rooms (RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor) VALUES ('NEW', 'Newbie Nook', 1, 'Single', 1, 100, 'minimalist')"
            },
            {
                "User": "What is the average rate paid for all reservations?",
                "Answer": "SELECT AVG(Rate) FROM Reservations"
            },
            {
                "User": "Can you show me all rooms that have a maximum occupancy greater than 2 and are decorated in a traditional style?",
                "Answer": "SELECT RoomId, roomName FROM Rooms WHERE maxOccupancy > 2 AND decor = 'traditional'"
            },
            {
                "User": "Let's create a report that shows the total revenue per room. Can you help with that?",
                "Answer": "CREATE VIEW TotalRevenuePerRoom AS SELECT T1.Room, SUM(T1.Rate) as TotalRevenue FROM Reservations AS T1 GROUP BY T1.Room"
            }
        ]
    },
    {
        "idx": 588,
        "db": "driving_school",
        "interaction": [
            {
                "User": "Can we add a new column to track the duration of each lesson?",
                "Answer": "ALTER TABLE Lessons ADD COLUMN duration_minutes number"
            },
            {
                "User": "How long was the lesson for customer with ID 6 on March 3rd, 2018?",
                "Answer": "SELECT duration_minutes FROM Lessons WHERE customer_id = 6 AND lesson_date = '2018-03-03'"
            },
            {
                "User": "I want to update the duration for that lesson to 120 minutes.",
                "Answer": "UPDATE Lessons SET duration_minutes = 120 WHERE customer_id = 6 AND lesson_date = '2018-03-03'"
            },
            {
                "User": "Let's create a new table to track vehicles maintenance records.",
                "Answer": "CREATE TABLE Vehicle_Maintenance (maintenance_id number PRIMARY KEY, vehicle_id number, maintenance_date time, description text, cost number)"
            },
            {
                "User": "Add a maintenance record for vehicle with ID 2.",
                "Answer": "INSERT INTO Vehicle_Maintenance (maintenance_id, vehicle_id, maintenance_date, description, cost) VALUES (1, 2, '2023-04-01 09:00:00', 'Oil Change', 75)"
            },
            {
                "User": "Show me all maintenance records for the truck.",
                "Answer": "SELECT * FROM Vehicle_Maintenance WHERE vehicle_id = (SELECT vehicle_id FROM Vehicles WHERE vehicle_details = 'Truck')"
            },
            {
                "User": "How much did the maintenance cost in total for the car?",
                "Answer": "SELECT SUM(cost) AS total_cost FROM Vehicle_Maintenance WHERE vehicle_id = (SELECT vehicle_id FROM Vehicles WHERE vehicle_details = 'Car')"
            },
            {
                "User": "Can we add a status column to the customer table to indicate if they have any outstanding payments?",
                "Answer": "ALTER TABLE Customers ADD COLUMN has_outstanding_payments text"
            },
            {
                "User": "Update the status for customer Genevieve Terry to 'Yes' for outstanding payments.",
                "Answer": "UPDATE Customers SET has_outstanding_payments = 'Yes' WHERE first_name = 'Genevieve' AND last_name = 'Terry'"
            },
            {
                "User": "Which customers have outstanding payments?",
                "Answer": "SELECT first_name, last_name FROM Customers WHERE has_outstanding_payments = 'Yes'"
            },
            {
                "User": "Create a new table to track customer feedback.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_date time, comment text)"
            },
            {
                "User": "Insert a feedback record for customer with ID 1.",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, feedback_date, comment) VALUES (1, 1, '2023-04-02 14:30:00', 'Great service, but the lesson was shorter than expected.')"
            }
        ]
    },
    {
        "idx": 589,
        "db": "gymnast",
        "interaction": [
            {
                "User": "Add a new score category for balance beam.",
                "Answer": "ALTER TABLE gymnast ADD COLUMN Balance_Beam_Points number"
            },
            {
                "User": "Record Paul Hamm's balance beam score as 9.8.",
                "Answer": "UPDATE gymnast SET Balance_Beam_Points = 9.8 WHERE Gymnast_ID = (SELECT People_ID FROM people WHERE Name = 'Paul Hamm')"
            },
            {
                "User": "Who has the highest balance beam score?",
                "Answer": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T1.Balance_Beam_Points DESC LIMIT 1"
            },
            {
                "User": "Create a new table to track coaches for gymnasts.",
                "Answer": "CREATE TABLE coaches (Coach_ID number PRIMARY KEY, Name text, Gymnast_ID number, FOREIGN KEY (Gymnast_ID) REFERENCES gymnast(Gymnast_ID))"
            },
            {
                "User": "Add a coach named 'John Smith' for Paul Hamm.",
                "Answer": "INSERT INTO coaches (Coach_ID, Name, Gymnast_ID) VALUES (1, 'John Smith', (SELECT People_ID FROM people WHERE Name = 'Paul Hamm'))"
            },
            {
                "User": "Who is Paul Hamm's coach?",
                "Answer": "SELECT Name FROM coaches WHERE Gymnast_ID = (SELECT People_ID FROM people WHERE Name = 'Paul Hamm')"
            },
            {
                "User": "Update Lorraine Súarez Carmona's hometown to 'La Vega'.",
                "Answer": "UPDATE people SET Hometown = 'La Vega' WHERE Name = 'Lorraine Súarez Carmona'"
            },
            {
                "User": "Show the updated hometown of Lorraine Súarez Carmona.",
                "Answer": "SELECT Hometown FROM people WHERE Name = 'Lorraine Súarez Carmona'"
            },
            {
                "User": "Insert a new gymnast record with ID 5 and all points set to 9.0.",
                "Answer": "INSERT INTO gymnast (Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points) VALUES (5, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 54.0)"
            },
            {
                "User": "How many gymnasts are from Miami?",
                "Answer": "SELECT COUNT(*) FROM people WHERE Hometown = 'Miami'"
            },
            {
                "User": "List all gymnasts and their coaches.",
                "Answer": "SELECT T2.Name as Gymnast, T3.Name as Coach FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID LEFT JOIN coaches AS T3 ON T1.Gymnast_ID = T3.Gymnast_ID"
            },
            {
                "User": "Increase all gymnasts' vault points by 0.1.",
                "Answer": "UPDATE gymnast SET Vault_Points = Vault_Points + 0.1"
            },
            {
                "User": "Who has the highest total points after the vault points increase?",
                "Answer": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T1.Total_Points + T1.Vault_Points * 0.1 DESC LIMIT 1"
            }
        ]
    },
    {
        "idx": 590,
        "db": "college_2",
        "interaction": [
            {
                "User": "Can you add a new table to track the majors offered by each department?",
                "Answer": "CREATE TABLE majors (dept_name text, major_name text, major_id text PRIMARY KEY);"
            },
            {
                "User": "Please insert three new majors into the majors table.",
                "Answer": "INSERT INTO majors (dept_name, major_name, major_id) VALUES ('Cybernetics', 'Robotics', 'R101'), ('Statistics', 'Data Science', 'D201'), ('Marketing', 'Digital Marketing', 'DM301');"
            },
            {
                "User": "What majors are offered by the Cybernetics department?",
                "Answer": "SELECT major_name FROM majors WHERE dept_name = 'Cybernetics';"
            },
            {
                "User": "I want to update the capacity of classroom Chandler 375 to 50.",
                "Answer": "UPDATE classroom SET capacity = 50 WHERE building = 'Chandler' AND room_number = '375';"
            },
            {
                "User": "Can we get the list of all classrooms with a capacity greater than 20 after the update?",
                "Answer": "SELECT building, room_number FROM classroom WHERE capacity > 20;"
            },
            {
                "User": "Let's add a new column to track the head of each department.",
                "Answer": "ALTER TABLE department ADD COLUMN head_id text;"
            },
            {
                "User": "Set the head of the Cybernetics department to instructor ID 63395.",
                "Answer": "UPDATE department SET head_id = '63395' WHERE dept_name = 'Cybernetics';"
            },
            {
                "User": "Who is the head of the Cybernetics department now?",
                "Answer": "SELECT head_id FROM department WHERE dept_name = 'Cybernetics';"
            },
            {
                "User": "Create a new table to track departmental events.",
                "Answer": "CREATE TABLE department_events (event_id text PRIMARY KEY, dept_name text, event_name text, event_date date);"
            },
            {
                "User": "Insert an event for the Cybernetics department called 'AI Symposium' on 2023-10-15.",
                "Answer": "INSERT INTO department_events (event_id, dept_name, event_name, event_date) VALUES ('E1001', 'Cybernetics', 'AI Symposium', '2023-10-15');"
            },
            {
                "User": "What events are scheduled for the Cybernetics department?",
                "Answer": "SELECT event_name, event_date FROM department_events WHERE dept_name = 'Cybernetics';"
            },
            {
                "User": "Can you update the budget of the Biology department by increasing it by 50000?",
                "Answer": "UPDATE department SET budget = budget + 50000 WHERE dept_name = 'Biology';"
            },
            {
                "User": "What is the new budget for the Biology department?",
                "Answer": "SELECT budget FROM department WHERE dept_name = 'Biology';"
            },
            {
                "User": "Add a new student record with ID 80001, name 'John Doe', department 'Cybernetics', and total credits 0.",
                "Answer": "INSERT INTO student (ID, name, dept_name, tot_cred) VALUES ('80001', 'John Doe', 'Cybernetics', 0);"
            },
            {
                "User": "Can you assign an advisor with ID 63395 to the new student John Doe?",
                "Answer": "INSERT INTO advisor (s_ID, i_ID) VALUES ('80001', '63395');"
            }
        ]
    },
    {
        "idx": 591,
        "db": "apartment_rentals",
        "interaction": [
            {
                "User": "Can you add a new table to track maintenance requests for apartments?",
                "Answer": "CREATE TABLE Maintenance_Requests (request_id number PRIMARY KEY, apt_id number, request_date time, issue_description text, status text, FOREIGN KEY (apt_id) REFERENCES Apartments(apt_id))"
            },
            {
                "User": "Insert a maintenance request for apartment with ID 2, reporting a plumbing issue that needs to be fixed immediately.",
                "Answer": "INSERT INTO Maintenance_Requests (request_id, apt_id, request_date, issue_description, status) VALUES (1, 2, CURRENT_TIMESTAMP, 'Plumbing issue - immediate attention required', 'Pending')"
            },
            {
                "User": "Update the status of the maintenance request for apartment ID 2 to 'In Progress'.",
                "Answer": "UPDATE Maintenance_Requests SET status = 'In Progress' WHERE apt_id = 2"
            },
            {
                "User": "Show me all pending maintenance requests.",
                "Answer": "SELECT * FROM Maintenance_Requests WHERE status = 'Pending'"
            },
            {
                "User": "I need to add a column for the estimated cost to the Maintenance_Requests table.",
                "Answer": "ALTER TABLE Maintenance_Requests ADD COLUMN estimated_cost decimal"
            },
            {
                "User": "Set the estimated cost for the plumbing issue in apartment ID 2 to 150.75.",
                "Answer": "UPDATE Maintenance_Requests SET estimated_cost = 150.75 WHERE apt_id = 2"
            },
            {
                "User": "Can we have a list of all apartments and their building addresses?",
                "Answer": "SELECT T1.apt_id, T1.apt_number, T2.building_address FROM Apartments AS T1 JOIN Apartment_Buildings AS T2 ON T1.building_id = T2.building_id"
            },
            {
                "User": "How many apartments are there in 'The Eugene' building?",
                "Answer": "SELECT COUNT(*) FROM Apartments WHERE building_id = (SELECT building_id FROM Apartment_Buildings WHERE building_short_name = 'The Eugene')"
            },
            {
                "User": "I want to book an apartment for a new guest named 'John Doe', can you add him to the Guests table?",
                "Answer": "INSERT INTO Guests (guest_id, gender_code, guest_first_name, guest_last_name, date_of_birth) VALUES (16, 'Male', 'John', 'Doe', '1985-06-15')"
            },
            {
                "User": "How many guests have a booking end date in the next month?",
                "Answer": "SELECT COUNT(*) FROM Apartment_Bookings WHERE booking_end_date BETWEEN date('now') AND date('now', '+1 month');"
            }
        ]
    },
    {
        "idx": 592,
        "db": "flight_1",
        "interaction": [
            {
                "User": "Can we track which employees are certified to operate which aircraft?",
                "Answer": "ALTER TABLE Employee ADD COLUMN certifications TEXT"
            },
            {
                "User": "Please update the certifications for employee John Williams to include the Boeing 737-800 and Airbus A340-300.",
                "Answer": "UPDATE Employee SET certifications = 'Boeing 737-800, Airbus A340-300' WHERE name = 'John Williams'"
            },
            {
                "User": "How many employees are now certified to operate an aircraft?",
                "Answer": "SELECT COUNT(*) FROM Employee WHERE certifications IS NOT NULL"
            },
            {
                "User": "Can you create a new table to log flight maintenance records?",
                "Answer": "CREATE TABLE MaintenanceLogs (log_id NUMBER PRIMARY KEY, flno NUMBER, maintenance_date TIME, description TEXT, FOREIGN KEY (flno) REFERENCES flight(flno))"
            },
            {
                "User": "Log a maintenance check for flight 99 that happened on April 15, 2005.",
                "Answer": "INSERT INTO MaintenanceLogs (log_id, flno, maintenance_date, description) VALUES (1, 99, '04/15/2005 10:00', 'Routine check-up')"
            },
            {
                "User": "Show me all flights from Los Angeles to Chicago with their corresponding last maintenance date.",
                "Answer": "SELECT f.flno, f.origin, f.destination, MAX(m.maintenance_date) as last_maintenance FROM flight f LEFT JOIN MaintenanceLogs m ON f.flno = m.flno WHERE f.origin = 'Los Angeles' AND f.destination = 'Chicago' GROUP BY f.flno"
            },
            {
                "User": "I want to add a new flight from New York to Los Angeles, departing on April 20, 2005 at 8 AM, arriving at 11 AM, costing $300, and operated by aircraft 1.",
                "Answer": "INSERT INTO flight (flno, origin, destination, distance, departure_date, arrival_date, price, aid) VALUES (351, 'New York', 'Los Angeles', 2451, '04/20/2005 08:00', '04/20/2005 11:00', 300, 1)"
            },
            {
                "User": "Increase the salary of all employees by 10%.",
                "Answer": "UPDATE Employee SET salary = salary * 1.10"
            },
            {
                "User": "Who is the highest paid employee after the salary increase?",
                "Answer": "SELECT name FROM Employee ORDER BY salary DESC LIMIT 1"
            },
            {
                "User": "Add a new column to track the number of flights each aircraft has completed.",
                "Answer": "ALTER TABLE aircraft ADD COLUMN flights_completed NUMBER DEFAULT 0"
            },
            {
                "User": "Update the flights_completed for aircraft 1 to 100.",
                "Answer": "UPDATE aircraft SET flights_completed = 100 WHERE aid = 1"
            }
        ]
    },
    {
        "idx": 593,
        "db": "baseball_1",
        "interaction": [
            {
                "User": "Can we track the salary changes for players over the years?",
                "Answer": "CREATE TABLE player_salary_history (player_id text, year number, salary number, PRIMARY KEY (player_id, year))"
            },
            {
                "User": "Add the salary history for player 'barkele01' for the years 1985, 1986, and 1987.",
                "Answer": "INSERT INTO player_salary_history (player_id, year, salary) VALUES ('barkele01', 1985, 870000), ('barkele01', 1986, 890000), ('barkele01', 1987, 900000)"
            },
            {
                "User": "Update the salary for 'barkele01' in 1986 to reflect a correction to 880000.",
                "Answer": "UPDATE player_salary_history SET salary = 880000 WHERE player_id = 'barkele01' AND year = 1986"
            },
            {
                "User": "Which player had the highest salary in 1987?",
                "Answer": "SELECT player_id FROM player_salary_history WHERE year = 1987 ORDER BY salary DESC LIMIT 1"
            },
            {
                "User": "Add a column to track the position of the player in the all_star table.",
                "Answer": "ALTER TABLE all_star ADD COLUMN position text"
            },
            {
                "User": "Set the position for 'gehrilo01' in the all_star game of 1933 to '1B'.",
                "Answer": "UPDATE all_star SET position = '1B' WHERE player_id = 'gehrilo01' AND year = 1933"
            },
            {
                "User": "How many players played as a '1B' in all_star games?",
                "Answer": "SELECT COUNT(*) FROM all_star WHERE position = '1B'"
            },
            {
                "User": "Create a table to track team wins and losses per year.",
                "Answer": "CREATE TABLE team_wins_losses (year number, team_id text, wins number, losses number, PRIMARY KEY (year, team_id))"
            },
            {
                "User": "Insert win-loss records for team 'BS1' for the years 1871 and 1872.",
                "Answer": "INSERT INTO team_wins_losses (year, team_id, wins, losses) VALUES (1871, 'BS1', 20, 10), (1872, 'BS1', 22, 7)"
            },
            {
                "User": "Which team had the most wins in 1872?",
                "Answer": "SELECT team_id FROM team_wins_losses WHERE year = 1872 ORDER BY wins DESC LIMIT 1"
            },
            {
                "User": "Add a new table to track player nicknames.",
                "Answer": "CREATE TABLE player_nicknames (player_id text PRIMARY KEY, nickname text)"
            },
            {
                "User": "Add the nickname 'The Iron Horse' for player 'gehrilo01'.",
                "Answer": "INSERT INTO player_nicknames (player_id, nickname) VALUES ('gehrilo01', 'The Iron Horse')"
            },
            {
                "User": "What is the nickname of the player with ID 'gehrilo01'?",
                "Answer": "SELECT nickname FROM player_nicknames WHERE player_id = 'gehrilo01'"
            },
            {
                "User": "Create a new table for postseason awards.",
                "Answer": "CREATE TABLE postseason_awards (award_id text PRIMARY KEY, award_name text, description text)"
            },
            {
                "User": "Add 'WSMVP' as the World Series Most Valuable Player award to the postseason awards table.",
                "Answer": "INSERT INTO postseason_awards (award_id, award_name, description) VALUES ('WSMVP', 'World Series Most Valuable Player', 'Awarded to the most valuable player in the World Series')"
            }
        ]
    },
    {
        "idx": 594,
        "db": "sports_competition",
        "interaction": [
            {
                "User": "How many clubs have players with more than 10 tries?",
                "Answer": "SELECT count(DISTINCT T1.Club_ID) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Tries > 10"
            },
            {
                "User": "What is the average number of applications per player?",
                "Answer": "SELECT AVG(Apps) FROM player"
            },
            {
                "User": "Can you add a new player to the club with ID 1?",
                "Answer": "INSERT INTO player (Player_ID, name, Position, Club_ID, Apps, Tries, Goals, Points) VALUES (16, 'John Smith', 'Left Wing', 1, 15, 3, '0', 12)"
            },
            {
                "User": "What is the total number of points scored by all players in club ID 1?",
                "Answer": "SELECT SUM(Points) FROM player WHERE Club_ID = 1"
            },
            {
                "User": "Can you update the total number of tries for player ID 2 to 15?",
                "Answer": "UPDATE player SET Tries = 15 WHERE Player_ID = 2"
            },
            {
                "User": "Add a 'Stadium' column to the 'club' table to record where each club plays.",
                "Answer": "ALTER TABLE club ADD COLUMN Stadium text"
            },
            {
                "User": "Set the stadium for club ID 1 to 'Big Arena'.",
                "Answer": "UPDATE club SET Stadium = 'Big Arena' WHERE Club_ID = 1"
            },
            {
                "User": "Create a new table 'sponsor' with columns 'Sponsor_ID', 'name', and 'Industry'.",
                "Answer": "CREATE TABLE sponsor (Sponsor_ID number PRIMARY KEY, name text, Industry text)"
            },
            {
                "User": "Insert a new sponsor with ID 1, named 'GlobalTech' in the 'Technology' industry.",
                "Answer": "INSERT INTO sponsor (Sponsor_ID, name, Industry) VALUES (1, 'GlobalTech', 'Technology')"
            },
            {
                "User": "How many clubs are from the 'USA'?",
                "Answer": "SELECT count(*) FROM club WHERE Region = 'USA'"
            },
            {
                "User": "Link the 'club' and 'sponsor' tables by adding a 'Sponsor_ID' column to the 'club' table.",
                "Answer": "ALTER TABLE club ADD COLUMN Sponsor_ID number"
            },
            {
                "User": "Assign sponsor ID 1 to club ID 2.",
                "Answer": "UPDATE club SET Sponsor_ID = 1 WHERE Club_ID = 2"
            },
            {
                "User": "List all clubs along with their sponsors.",
                "Answer": "SELECT T1.name AS Club, T2.name AS Sponsor FROM club AS T1 LEFT JOIN sponsor AS T2 ON T1.Sponsor_ID = T2.Sponsor_ID"
            },
            {
                "User": "How many gold medals have been won by clubs from 'UK'?",
                "Answer": "SELECT SUM(Gold) FROM club_rank AS T1 JOIN club AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Region = 'UK'"
            }
        ]
    },
    {
        "idx": 595,
        "db": "club_1",
        "interaction": [
            {
                "User": "Can we add a new student named John Doe, aged 20, majoring in 610, advised by 1121, from city code 'NYC'?",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 610, 1121, 'NYC')"
            },
            {
                "User": "How many members are there in the 'Bootup Baltimore' club?",
                "Answer": "SELECT COUNT(*) FROM Member_of_club WHERE ClubID = (SELECT ClubID FROM Club WHERE ClubName = 'Bootup Baltimore')"
            },
            {
                "User": "I'd like to update Tracy Kim's age to 20. Can you do that?",
                "Answer": "UPDATE Student SET Age = 20 WHERE LName = 'Kim' AND Fname = 'Tracy'"
            },
            {
                "User": "Can we add a new field 'Email' for students?",
                "Answer": "ALTER TABLE Student ADD Email text"
            },
            {
                "User": "Now add the email 'john.doe@example.com' for John Doe.",
                "Answer": "UPDATE Student SET Email = 'john.doe@example.com' WHERE LName = 'Doe' AND Fname = 'John'"
            },
            {
                "User": "Create a new table for club meetings with columns for ClubID, MeetingDate, and MeetingLocation.",
                "Answer": "CREATE TABLE Club_Meetings (ClubID number, MeetingDate text, MeetingLocation text, PRIMARY KEY (ClubID, MeetingDate))"
            },
            {
                "User": "Schedule a meeting for 'Bootup Baltimore' on April 5th at 'Gilman Hall'.",
                "Answer": "INSERT INTO Club_Meetings (ClubID, MeetingDate, MeetingLocation) VALUES ((SELECT ClubID FROM Club WHERE ClubName = 'Bootup Baltimore'), '2023-04-05', 'Gilman Hall')"
            },
            {
                "User": "Can you tell me the email addresses of all students who are 20 years old?",
                "Answer": "SELECT Email FROM Student WHERE Age = 20"
            },
            {
                "User": "What is the position of John Doe in his club?",
                "Answer": "SELECT Position FROM Member_of_club WHERE StuID = (SELECT StuID FROM Student WHERE LName = 'Doe' AND Fname = 'John')"
            },
            {
                "User": "We need to track the duration of club meetings. Can we add a 'Duration' column in hours to the Club_Meetings table?",
                "Answer": "ALTER TABLE Club_Meetings ADD Duration number"
            },
            {
                "User": "Set the duration of the 'Bootup Baltimore' meeting on April 5th to 2 hours.",
                "Answer": "UPDATE Club_Meetings SET Duration = 2 WHERE ClubID = (SELECT ClubID FROM Club WHERE ClubName = 'Bootup Baltimore') AND MeetingDate = '2023-04-05'"
            },
            {
                "User": "Who is the advisor of the student who is the president of 'Bootup Baltimore'?",
                "Answer": "SELECT Advisor FROM Student WHERE StuID = (SELECT StuID FROM Member_of_club WHERE Position = 'President' AND ClubID = (SELECT ClubID FROM Club WHERE ClubName = 'Bootup Baltimore'))"
            }
        ]
    },
    {
        "idx": 596,
        "db": "customers_and_invoices",
        "interaction": [
            {
                "User": "Can you show me the first names of customers and the number of accounts they have?",
                "Answer": "SELECT T2.customer_first_name, count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id"
            },
            {
                "User": "Which customers have at least 2 accounts? List their first names please.",
                "Answer": "SELECT T2.customer_first_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*) >= 2"
            },
            {
                "User": "I need to add a new customer named 'Alice Smith' with email 'alice.smith@example.com'. Can you do that?",
                "Answer": "INSERT INTO Customers (customer_id, customer_first_name, customer_last_name, email_address) VALUES ((SELECT max(customer_id) + 1 FROM Customers), 'Alice', 'Smith', 'alice.smith@example.com')"
            },
            {
                "User": "Alice Smith just informed us that her phone number is '555-1234'. Please update her record.",
                "Answer": "UPDATE Customers SET phone_number = '555-1234' WHERE customer_first_name = 'Alice' AND customer_last_name = 'Smith'"
            },
            {
                "User": "Can we track the customer's birthdate? We need to add a new column for that.",
                "Answer": "ALTER TABLE Customers ADD COLUMN birthdate date"
            },
            {
                "User": "Alice Smith's birthday is on 1990-05-21. Please update her record with this new information.",
                "Answer": "UPDATE Customers SET birthdate = '1990-05-21' WHERE customer_first_name = 'Alice' AND customer_last_name = 'Smith'"
            },
            {
                "User": "I want to create a new table to track customer feedback. What would be the SQL statement for that?",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_date time, feedback_text text, FOREIGN KEY (customer_id) REFERENCES Customers(customer_id))"
            },
            {
                "User": "Alice Smith just gave us feedback saying 'Great service!'. Can you add this to the new feedback table?",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, feedback_date, feedback_text) VALUES ((SELECT max(feedback_id) + 1 FROM Customer_Feedback), (SELECT customer_id FROM Customers WHERE customer_first_name = 'Alice' AND customer_last_name = 'Smith'), CURRENT_TIMESTAMP, 'Great service!')"
            },
            {
                "User": "Can you show me all feedback comments left by customers named 'Alice'?",
                "Answer": "SELECT CF.feedback_text FROM Customer_Feedback CF JOIN Customers C ON CF.customer_id = C.customer_id WHERE C.customer_first_name = 'Alice'"
            },
            {
                "User": "We need to track the status of the feedback as well. Can you add a column 'status' to the feedback table to indicate whether it's 'pending', 'reviewed', or 'resolved'?",
                "Answer": "ALTER TABLE Customer_Feedback ADD COLUMN status text"
            },
            {
                "User": "Mark all current feedback as 'reviewed'.",
                "Answer": "UPDATE Customer_Feedback SET status = 'reviewed'"
            }
        ]
    },
    {
        "idx": 597,
        "db": "tracking_orders",
        "interaction": [
            {
                "User": "Can you show me the most recent order for each customer?",
                "Answer": "SELECT customer_id, MAX(date_order_placed) AS latest_order_date FROM Orders GROUP BY customer_id"
            },
            {
                "User": "I need to add a new customer named 'Alice' with customer_id 16. Can you do that?",
                "Answer": "INSERT INTO Customers (customer_id, customer_name, customer_details) VALUES (16, 'Alice', 'New customer details')"
            },
            {
                "User": "Alice has just placed an order, order_id 16, with 'Processing' status. Can we add this order?",
                "Answer": "INSERT INTO Orders (order_id, customer_id, order_status, date_order_placed) VALUES (16, 16, 'Processing', CURRENT_TIMESTAMP)"
            },
            {
                "User": "I realized we need to keep track of the address for shipments. Can we add a 'shipment_address' column to the Shipments table?",
                "Answer": "ALTER TABLE Shipments ADD COLUMN shipment_address text"
            },
            {
                "User": "Please update the shipment address for shipment_id 1 to '123 Main St, Anytown, AN'.",
                "Answer": "UPDATE Shipments SET shipment_address = '123 Main St, Anytown, AN' WHERE shipment_id = 1"
            },
            {
                "User": "Alice decided to add a 'book' product to her order. The product_id is 2. Can we update her order_items?",
                "Answer": "INSERT INTO Order_Items (order_item_id, product_id, order_id, order_item_status) VALUES ((SELECT MAX(order_item_id) + 1 FROM Order_Items), 2, 16, 'Added')"
            },
            {
                "User": "Can we see all the orders with their shipment addresses?",
                "Answer": "SELECT O.order_id, S.shipment_address FROM Orders AS O JOIN Shipments AS S ON O.order_id = S.order_id"
            },
            {
                "User": "We need to track the quantity of each product in the order items. Can you add a 'quantity' column to the Order_Items table?",
                "Answer": "ALTER TABLE Order_Items ADD COLUMN quantity number"
            },
            {
                "User": "Please set the quantity for all existing order items to 1 as we did not track this before.",
                "Answer": "UPDATE Order_Items SET quantity = 1 WHERE quantity IS NULL"
            },
            {
                "User": "For the new 'book' added to Alice's order, set the quantity to 2.",
                "Answer": "UPDATE Order_Items SET quantity = 2 WHERE order_id = 16 AND product_id = 2"
            },
            {
                "User": "Do we have any customers without orders? I'd like to start a promotional campaign for them.",
                "Answer": "SELECT C.customer_id, C.customer_name FROM Customers C LEFT JOIN Orders O ON C.customer_id = O.customer_id WHERE O.order_id IS NULL"
            },
            {
                "User": "I need to track the cost of each product. Can we create a new table for product prices?",
                "Answer": "CREATE TABLE Product_Prices (product_id number PRIMARY KEY, price decimal)"
            },
            {
                "User": "Let's add prices for the first three products: 10.99 for food and 5.99 for the book.",
                "Answer": "INSERT INTO Product_Prices (product_id, price) VALUES (1, 10.99), (2, 5.99), (3, 10.99)"
            }
        ]
    },
    {
        "idx": 598,
        "db": "customers_and_products_contacts",
        "interaction": [
            {
                "User": "Can we track the history of customer orders including the total amount spent on each order?",
                "Answer": "ALTER TABLE Customer_Orders ADD COLUMN total_amount number"
            },
            {
                "User": "Please add a new order for customer with ID 2, placed today, with a 'Processing' status and a total amount of 150000.",
                "Answer": "INSERT INTO Customer_Orders (customer_id, order_date, order_status_code, total_amount) VALUES (2, CURRENT_DATE, 'Processing', 150000)"
            },
            {
                "User": "I want to update the total amount of the last order placed by customer ID 2 to 155000.",
                "Answer": "UPDATE Customer_Orders SET total_amount = 155000 WHERE order_id = (SELECT order_id FROM Customer_Orders WHERE customer_id = 2 ORDER BY order_date DESC LIMIT 1)"
            },
            {
                "User": "How many orders have been placed by customer ID 2?",
                "Answer": "SELECT COUNT(*) FROM Customer_Orders WHERE customer_id = 2"
            },
            {
                "User": "What is the total amount spent by customer ID 2 on all of their orders?",
                "Answer": "SELECT SUM(total_amount) FROM Customer_Orders WHERE customer_id = 2"
            },
            {
                "User": "Can we add a new product category called 'Electronics' with an initial product 'Smartphone' priced at 500?",
                "Answer": "INSERT INTO Products (product_type_code, product_name, product_price) VALUES ('Electronics', 'Smartphone', 500)"
            },
            {
                "User": "Update the price of the 'Apple' product in the 'Hardware' category to 60000.",
                "Answer": "UPDATE Products SET product_price = 60000 WHERE product_name = 'Apple' AND product_type_code = 'Hardware'"
            },
            {
                "User": "Please create a new table to store promo codes with fields for promo_id, code, discount_percentage, and expiration_date.",
                "Answer": "CREATE TABLE Promo_Codes (promo_id number PRIMARY KEY, code text, discount_percentage number, expiration_date time)"
            },
            {
                "User": "Insert a new promo code 'SAVE20' that gives a 20% discount and expires at the end of this year.",
                "Answer": "INSERT INTO Promo_Codes (code, discount_percentage, expiration_date) VALUES ('SAVE20', 20, '2023-12-31')"
            },
            {
                "User": "How many customers live in 'USA'?",
                "Answer": "SELECT COUNT(*) FROM Addresses WHERE country = 'USA'"
            },
            {
                "User": "Create a view that shows the customer name, order date, and total amount for all completed orders.",
                "Answer": "CREATE VIEW Completed_Orders_View AS SELECT c.customer_name, o.order_date, o.total_amount FROM Customers c JOIN Customer_Orders o ON c.customer_id = o.customer_id WHERE o.order_status_code = 'Completed'"
            }
        ]
    },
    {
        "idx": 599,
        "db": "ship_1",
        "interaction": [
            {
                "User": "What is the name of the captain with Captain_ID 1?",
                "Answer": "SELECT Name FROM captain WHERE Captain_ID = 1"
            },
            {
                "User": "Please add a new captain named Captain Elizabeth Swann with Captain_ID 8, age 38, commanding Ship_ID 4, with the rank of Commodore.",
                "Answer": "INSERT INTO captain (Captain_ID, Name, Ship_ID, age, Class, Rank) VALUES (8, 'Captain Elizabeth Swann', 4, '38', 'Frigate', 'Commodore')"
            },
            {
                "User": "How many ships were built after 1997?",
                "Answer": "SELECT count(*) FROM Ship WHERE Built_Year > 1997"
            },
            {
                "User": "Update the Flag of the ship with Ship_ID 2 to 'United Kingdom'.",
                "Answer": "UPDATE Ship SET Flag = 'United Kingdom' WHERE Ship_ID = 2"
            },
            {
                "User": "Can we get a list of all ships that fly the Panama flag?",
                "Answer": "SELECT * FROM Ship WHERE Flag = 'Panama'"
            },
            {
                "User": "I want to add a new column 'Home_Port' to the Ship table to record the home port of each ship.",
                "Answer": "ALTER TABLE Ship ADD Home_Port text"
            },
            {
                "User": "Set the Home_Port of HMS Manxman to 'Port Royal'.",
                "Answer": "UPDATE Ship SET Home_Port = 'Port Royal' WHERE Name = 'HMS Manxman'"
            },
            {
                "User": "Create a table to log maintenance records for ships with columns: Log_ID (number), Ship_ID (number), Maintenance_Date (date), and Description (text).",
                "Answer": "CREATE TABLE Maintenance_Log (Log_ID number PRIMARY KEY, Ship_ID number, Maintenance_Date date, Description text)"
            },
            {
                "User": "Insert a maintenance record for Ship_ID 1 with Log_ID 1, on the date 2023-03-15, with the description 'Annual hull inspection'.",
                "Answer": "INSERT INTO Maintenance_Log (Log_ID, Ship_ID, Maintenance_Date, Description) VALUES (1, 1, '2023-03-15', 'Annual hull inspection')"
            },
            {
                "User": "How many ships do not have a 'Home_Port' set yet?",
                "Answer": "SELECT count(*) FROM Ship WHERE Home_Port IS NULL"
            },
            {
                "User": "Let's add a new ship called 'HMS Endeavour' with Ship_ID 10, type 'Container', built in 2005, class 'BB', flag 'United Kingdom', and home port 'Liverpool'.",
                "Answer": "INSERT INTO Ship (Ship_ID, Name, Type, Built_Year, Class, Flag, Home_Port) VALUES (10, 'HMS Endeavour', 'Container', 2005, 'BB', 'United Kingdom', 'Liverpool')"
            },
            {
                "User": "Show me all the captains who are over 50 years old.",
                "Answer": "SELECT * FROM captain WHERE age > '50'"
            }
        ]
    },
    {
        "idx": 600,
        "db": "swimming",
        "interaction": [
            {
                "User": "Can you add a new swimmer named 'Michael Phelps' with nationality 'USA' and his best times for 100m to 700m?",
                "Answer": "INSERT INTO swimmer (name, Nationality, meter_100, meter_200, meter_300, meter_400, meter_500, meter_600, meter_700) VALUES ('Michael Phelps', 'USA', '49.82', '1:45.32', '2:41.78', '3:40.14', '4:38.56', '5:35.95', '6:33.36')"
            },
            {
                "User": "Update the opening year of the 'Nou Mestalla' stadium to 2009.",
                "Answer": "UPDATE stadium SET Opening_year = 2009 WHERE name = 'Nou Mestalla'"
            },
            {
                "User": "How many swimmers are from 'Australia'?",
                "Answer": "SELECT COUNT(*) FROM swimmer WHERE Nationality = 'Australia'"
            },
            {
                "User": "Create a table to record swimmers' coaches with coach ID, name, and nationality.",
                "Answer": "CREATE TABLE coach (ID number PRIMARY KEY, name text, Nationality text)"
            },
            {
                "User": "Add a new column 'coach_ID' to the swimmer table to link swimmers with their coaches.",
                "Answer": "ALTER TABLE swimmer ADD COLUMN coach_ID number"
            },
            {
                "User": "Assign coach with ID 101 to swimmer 'Michael Phelps'.",
                "Answer": "UPDATE swimmer SET coach_ID = 101 WHERE name = 'Michael Phelps'"
            },
            {
                "User": "Which swimmer has the fastest time for 400m?",
                "Answer": "SELECT name FROM swimmer ORDER BY meter_400 ASC LIMIT 1"
            },
            {
                "User": "Insert a new event called 'Olympics' that will take place in the stadium with ID 2 in the year 2024.",
                "Answer": "INSERT INTO event (Name, Stadium_ID, Year) VALUES ('Olympics', 2, '2024')"
            },
            {
                "User": "How many events took place in the 'Gazprom Arena'?",
                "Answer": "SELECT COUNT(*) FROM event WHERE Stadium_ID = (SELECT ID FROM stadium WHERE name = 'Gazprom Arena')"
            },
            {
                "User": "Add Michael Phelps' record for the 200m freestyle event with the result 'Win'.",
                "Answer": "INSERT INTO record (Result, Swimmer_ID, Event_ID) VALUES ('Win', (SELECT ID FROM swimmer WHERE name = 'Michael Phelps'), (SELECT ID FROM event WHERE Name = 'FINA'))"
            },
            {
                "User": "Can we see a list of all swimmers and their coaches?",
                "Answer": "SELECT s.name AS Swimmer_Name, c.name AS Coach_Name FROM swimmer s LEFT JOIN coach c ON s.coach_ID = c.ID"
            }
        ]
    },
    {
        "idx": 601,
        "db": "phone_market",
        "interaction": [
            {
                "User": "Can we track the color of each phone model?",
                "Answer": "ALTER TABLE phone ADD COLUMN Color text"
            },
            {
                "User": "Add 'Black' as the color for the 'iPhone 5s'.",
                "Answer": "UPDATE phone SET Color = 'Black' WHERE Name = 'IPhone 5s'"
            },
            {
                "User": "What colors do we have for the 'iPhone 6'?",
                "Answer": "SELECT Color FROM phone WHERE Name = 'IPhone 6'"
            },
            {
                "User": "I want to add a new phone model 'Galaxy S21' with 256GB memory by 'Verizon', priced at 799, and color 'Phantom Gray'.",
                "Answer": "INSERT INTO phone (Name, Phone_ID, Memory_in_G, Carrier, Price, Color) VALUES ('Galaxy S21', 6, 256, 'Verizon', 799, 'Phantom Gray')"
            },
            {
                "User": "Which phones are available in the 'Alberta' market?",
                "Answer": "SELECT T1.Name FROM phone AS T1 JOIN phone_market AS T2 ON T1.Phone_ID = T2.Phone_ID WHERE T2.Market_ID = (SELECT Market_ID FROM market WHERE District = 'Alberta')"
            },
            {
                "User": "How many 'Galaxy S21' phones do we have in stock in all markets combined?",
                "Answer": "SELECT SUM(Num_of_stock) FROM phone_market WHERE Phone_ID = (SELECT Phone_ID FROM phone WHERE Name = 'Galaxy S21')"
            },
            {
                "User": "Let's create a table to track sales per market per phone model.",
                "Answer": "CREATE TABLE sales (Market_ID number, Phone_ID number, Units_sold number, PRIMARY KEY (Market_ID, Phone_ID))"
            },
            {
                "User": "Record a sale of 10 'iPhone 5s' units in the 'Alberta' market.",
                "Answer": "INSERT INTO sales (Market_ID, Phone_ID, Units_sold) VALUES ((SELECT Market_ID FROM market WHERE District = 'Alberta'), (SELECT Phone_ID FROM phone WHERE Name = 'IPhone 5s'), 10)"
            },
            {
                "User": "Update the 'Galaxy S21' price to 750.",
                "Answer": "UPDATE phone SET Price = 750 WHERE Name = 'Galaxy S21'"
            },
            {
                "User": "How many units of 'Galaxy S21' have been sold in 'British Columbia'?",
                "Answer": "SELECT Units_sold FROM sales WHERE Phone_ID = (SELECT Phone_ID FROM phone WHERE Name = 'Galaxy S21') AND Market_ID = (SELECT Market_ID FROM market WHERE District = 'British Columbia')"
            },
            {
                "User": "I want to track the date of each sale. Can you add a date column to the sales table?",
                "Answer": "ALTER TABLE sales ADD COLUMN Sale_date date"
            },
            {
                "User": "Record today's date for the previous sale of 'iPhone 5s' in 'Alberta'.",
                "Answer": "UPDATE sales SET Sale_date = CURRENT_DATE WHERE Market_ID = (SELECT Market_ID FROM market WHERE District = 'Alberta') AND Phone_ID = (SELECT Phone_ID FROM phone WHERE Name = 'IPhone 5s')"
            },
            {
                "User": "Show me all the sales data for 'Alberta'.",
                "Answer": "SELECT * FROM sales WHERE Market_ID = (SELECT Market_ID FROM market WHERE District = 'Alberta')"
            },
            {
                "User": "Can we see the total number of employees across all markets?",
                "Answer": "SELECT SUM(Num_of_employees) FROM market"
            },
            {
                "User": "Let's create a new market in 'Ontario' with 30 shops and 1500 employees, ranked 3, with market id 7",
                "Answer": "INSERT INTO market (Market_ID, District, Num_of_employees, Num_of_shops, Ranking) VALUES (7, 'Ontario', 1500, 30, 3)"
            }
        ]
    },
    {
        "idx": 602,
        "db": "decoration_competition",
        "interaction": [
            {
                "User": "How many schools are participating in the competition?",
                "Answer": "SELECT COUNT(*) FROM college"
            },
            {
                "User": "Can you add a new college named 'Design Institute' located in 'New York' with the leader 'Jane Smith'?",
                "Answer": "INSERT INTO college (Name, Leader_Name, College_Location) VALUES ('Design Institute', 'Jane Smith', 'New York')"
            },
            {
                "User": "I need to see the updated list of colleges including the new one.",
                "Answer": "SELECT * FROM college"
            },
            {
                "User": "We should track the number of rounds each college has participated in. Can you add a column for this to the college table?",
                "Answer": "ALTER TABLE college ADD COLUMN Rounds_Participated number"
            },
            {
                "User": "Now, set the initial value of Rounds_Participated to 0 for all colleges.",
                "Answer": "UPDATE college SET Rounds_Participated = 0"
            },
            {
                "User": "Can you show me the colleges that have a leader with the first name 'Ryan'?",
                "Answer": "SELECT * FROM college WHERE Leader_Name LIKE 'Ryan%'"
            },
            {
                "User": "I want to update the rank of member Jack Nicklaus in the 'Walk on the Moon' round to 2.",
                "Answer": "UPDATE round SET Rank_in_Round = 2 WHERE Member_ID = (SELECT Member_ID FROM member WHERE Name = 'Jack Nicklaus') AND Decoration_Theme = 'Walk on the Moon'"
            },
            {
                "User": "Can you list all members and their ranks after the update?",
                "Answer": "SELECT T1.Name, T2.Rank_in_Round FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID"
            },
            {
                "User": "Let's add a new member named 'Linda Clark' from 'United States' to the 'Saskatchewan School'.",
                "Answer": "INSERT INTO member (Name, Country, College_ID) VALUES ('Linda Clark', 'United States', (SELECT College_ID FROM college WHERE Name = 'Saskatchewan School'))"
            },
            {
                "User": "Now, I need to see all members from 'Saskatchewan School'.",
                "Answer": "SELECT T1.Name FROM member AS T1 JOIN college AS T2 ON T1.College_ID = T2.College_ID WHERE T2.Name = 'Saskatchewan School'"
            },
            {
                "User": "Create a new table to track the judges of the competition with columns for judge ID, name, and country.",
                "Answer": "CREATE TABLE judges (Judge_ID number PRIMARY KEY, Name text, Country text)"
            },
            {
                "User": "Add a judge named 'Simon Lee' from 'Canada'.",
                "Answer": "INSERT INTO judges (Name, Country) VALUES ('Simon Lee', 'Canada')"
            },
            {
                "User": "Show me a list of all judges currently in the system.",
                "Answer": "SELECT * FROM judges"
            },
            {
                "User": "I realized we need to keep track of the email addresses of our members. Please add a column for email to the member table.",
                "Answer": "ALTER TABLE member ADD COLUMN Email text"
            },
            {
                "User": "Update the email of 'Linda Clark' to 'linda.clark@decorcomp.com'.",
                "Answer": "UPDATE member SET Email = 'linda.clark@decorcomp.com' WHERE Name = 'Linda Clark'"
            }
        ]
    },
    {
        "idx": 603,
        "db": "performance_attendance",
        "interaction": [
            {
                "User": "list all dates available",
                "Answer": "SELECT Date FROM performance"
            },
            {
                "User": "on what date of the performance with the highest number of attendees?",
                "Answer": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1"
            },
            {
                "User": "of the highest number of attendees | Did you mean to ask for the performance id of the performance with the highest number of attendees? | yes",
                "Answer": "SELECT Performance_ID FROM performance ORDER BY Attendance DESC LIMIT 1"
            },
            {
                "User": "can we track the duration of each performance? we currently don't have this information",
                "Answer": "ALTER TABLE performance ADD COLUMN Duration_minutes number"
            },
            {
                "User": "add the duration for the first performance as 120 minutes",
                "Answer": "UPDATE performance SET Duration_minutes = 120 WHERE Performance_ID = 1"
            },
            {
                "User": "how long was the performance with the highest attendance?",
                "Answer": "SELECT Duration_minutes FROM performance WHERE Attendance = (SELECT MAX(Attendance) FROM performance)"
            },
            {
                "User": "can you show me all performances longer than 100 minutes?",
                "Answer": "SELECT * FROM performance WHERE Duration_minutes > 100"
            },
            {
                "User": "I want to add a new member to the database",
                "Answer": "INSERT INTO member (Member_ID, Name, Nationality, Role) VALUES ('12', 'New Member', 'New Nationality', 'New Role')"
            },
            {
                "User": "what is the new member's ID?",
                "Answer": "SELECT Member_ID FROM member WHERE Name = 'New Member'"
            },
            {
                "User": "create a new table to track solo performances",
                "Answer": "CREATE TABLE solo_performance (Solo_Performance_ID number PRIMARY KEY, Member_ID number, Performance_ID number, Piece text)"
            },
            {
                "User": "record a new solo performance for member 1 in performance 3, playing 'Vivaldi's Spring'",
                "Answer": "INSERT INTO solo_performance (Solo_Performance_ID, Member_ID, Performance_ID, Piece) VALUES (1, 1, 3, 'Vivaldi''s Spring')"
            },
            {
                "User": "show me all solo performances by member 1",
                "Answer": "SELECT * FROM solo_performance WHERE Member_ID = 1"
            },
            {
                "User": "update the nationality of member 2 to 'Chilean'",
                "Answer": "UPDATE member SET Nationality = 'Chilean' WHERE Member_ID = '2'"
            },
            {
                "User": "how many members do we have from Argentina?",
                "Answer": "SELECT COUNT(*) FROM member WHERE Nationality = 'Argentina'"
            },
            {
                "User": "can we add a column to track the main instrument of each member?",
                "Answer": "ALTER TABLE member ADD COLUMN Main_Instrument text"
            },
            {
                "User": "set the main instrument for member 1 to 'Violin'",
                "Answer": "UPDATE member SET Main_Instrument = 'Violin' WHERE Member_ID = '1'"
            }
        ]
    },
    {
        "idx": 604,
        "db": "school_bus",
        "interaction": [
            {
                "User": "Can we track the bus capacity for each school bus?",
                "Answer": "ALTER TABLE school_bus ADD COLUMN capacity number;"
            },
            {
                "User": "Add a capacity of 50 to the bus serving Noelani Elementary School.",
                "Answer": "UPDATE school_bus SET capacity = 50 WHERE School_ID = (SELECT School_ID FROM school WHERE School = 'Noelani Elementary School');"
            },
            {
                "User": "Which buses are now full-time and have a capacity over 30?",
                "Answer": "SELECT School_ID FROM school_bus WHERE If_full_time = 'T' AND capacity > 30;"
            },
            {
                "User": "How many schools do we have in Jakarta?",
                "Answer": "SELECT COUNT(*) FROM school WHERE Location LIKE '%Jakarta, Indonesia%';"
            },
            {
                "User": "Create a new table for bus maintenance records.",
                "Answer": "CREATE TABLE maintenance (Maintenance_ID number PRIMARY KEY, School_Bus_ID number, Maintenance_Date text, Description text, Cost number);"
            },
            {
                "User": "Insert a maintenance record for the bus serving St. Francis Assisi with a cost of $200.",
                "Answer": "INSERT INTO maintenance (Maintenance_ID, School_Bus_ID, Maintenance_Date, Description, Cost) VALUES (1, (SELECT School_ID FROM school WHERE School = 'St. Francis Assisi'), '2023-04-01', 'Engine check and oil change', 200);"
            },
            {
                "User": "Update the home city for Minnie Gonzalez to 'Bloomfield'.",
                "Answer": "UPDATE driver SET Home_city = 'Bloomfield' WHERE Name = 'Minnie Gonzalez';"
            },
            {
                "User": "How many drivers do we have from Hartford after the update?",
                "Answer": "SELECT COUNT(*) FROM driver WHERE Home_city = 'Hartford';"
            },
            {
                "User": "List all the schools that have full-time buses after we updated the capacities.",
                "Answer": "SELECT s.School FROM school s INNER JOIN school_bus sb ON s.School_ID = sb.School_ID WHERE sb.If_full_time = 'T' AND sb.capacity IS NOT NULL;"
            },
            {
                "User": "Can we have a view that shows school names with their driver names and bus capacities?",
                "Answer": "CREATE VIEW school_driver_info AS SELECT s.School, d.Name AS Driver_Name, sb.capacity FROM school s INNER JOIN school_bus sb ON s.School_ID = sb.School_ID INNER JOIN driver d ON sb.Driver_ID = d.Driver_ID;"
            },
            {
                "User": "Show me the information from the view for schools with a capacity of at least 50.",
                "Answer": "SELECT * FROM school_driver_info WHERE capacity >= 50;"
            },
            {
                "User": "I'd like to record the years the drivers have been working. Can you add a column for this in the driver table?",
                "Answer": "ALTER TABLE driver ADD COLUMN Years_Working number;"
            },
            {
                "User": "Set the years working for Matthew Ritter to 15 years.",
                "Answer": "UPDATE driver SET Years_Working = 15 WHERE Name = 'Matthew Ritter';"
            }
        ]
    },
    {
        "idx": 605,
        "db": "solvency_ii",
        "interaction": [
            {
                "User": "how many products in total are not in any event?",
                "Answer": "SELECT count(*) FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events)"
            },
            {
                "User": "and can you tell me the names of those 5 products?",
                "Answer": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events)"
            },
            {
                "User": "I would like to add a new product to the database. It's a 'Tech' type named 'Smartphone' priced at 799.99. Can you add it for me?",
                "Answer": "INSERT INTO Products (Product_ID, Product_Type_Code, Product_Name, Product_Price) VALUES ((SELECT max(Product_ID) + 1 FROM Products), 'Tech', 'Smartphone', 799.99)"
            },
            {
                "User": "Let's update the price of the 'Business Policy' book to 1400.00.",
                "Answer": "UPDATE Products SET Product_Price = 1400.00 WHERE Product_Name = 'Business Policy'"
            },
            {
                "User": "Can you create a new table to track product reviews with columns for Review_ID, Product_ID, Customer_Name, and Review_Text?",
                "Answer": "CREATE TABLE Product_Reviews (Review_ID number PRIMARY KEY, Product_ID number, Customer_Name text, Review_Text text)"
            },
            {
                "User": "I need to add a 'Rating' column to the Product_Reviews table to store customer ratings. Can you do that?",
                "Answer": "ALTER TABLE Product_Reviews ADD Rating number"
            },
            {
                "User": "Now, let's insert a review for the 'Smartphone' with a rating of 4.5 by customer 'John Doe'. The review text is 'Great performance and value for money'.",
                "Answer": "INSERT INTO Product_Reviews (Review_ID, Product_ID, Customer_Name, Review_Text, Rating) VALUES ((SELECT max(Review_ID) + 1 FROM Product_Reviews), (SELECT Product_ID FROM Products WHERE Product_Name = 'Smartphone'), 'John Doe', 'Great performance and value for money', 4.5)"
            },
            {
                "User": "Can you show me all the events that 'European People's Party' participated in?",
                "Answer": "SELECT e.* FROM Events e JOIN Parties_in_Events pe ON e.Event_ID = pe.Event_ID JOIN Parties p ON pe.Party_ID = p.Party_ID WHERE p.Party_Details = 'European People''s Party'"
            },
            {
                "User": "Let's organize a new event called 'Annual Tech Summit'. It will be at address ID 2, channel ID 3, finance ID 2, and location ID 1. The event type is 'Conference'.",
                "Answer": "INSERT INTO Events (Event_ID, Address_ID, Channel_ID, Event_Type_Code, Finance_ID, Location_ID) VALUES ((SELECT max(Event_ID) + 1 FROM Events), 2, 3, 'Conference', 2, 1)"
            },
            {
                "User": "The 'Annual Tech Summit' will feature our new 'Smartphone' product. Add this to the Products_in_Events table.",
                "Answer": "INSERT INTO Products_in_Events (Product_in_Event_ID, Event_ID, Product_ID) VALUES ((SELECT max(Product_in_Event_ID) + 1 FROM Products_in_Events), (SELECT Event_ID FROM Events WHERE Event_Type_Code = 'Conference' AND Address_ID = 2), (SELECT Product_ID FROM Products WHERE Product_Name = 'Smartphone'))"
            }
        ]
    },
    {
        "idx": 606,
        "db": "document_management",
        "interaction": [
            {
                "User": "Can we add a new role called 'Intern' with a description 'Temporary Assistant'?",
                "Answer": "INSERT INTO Roles (role_code, role_description) VALUES ('INTERN', 'Temporary Assistant')"
            },
            {
                "User": "I need to update the access count for the document 'Learning English' to 1900.",
                "Answer": "UPDATE Documents SET access_count = 1900 WHERE document_name = 'Learning English'"
            },
            {
                "User": "How can I see all the roles currently available?",
                "Answer": "SELECT * FROM Roles"
            },
            {
                "User": "Could you show me the documents accessed more than 2000 times?",
                "Answer": "SELECT document_name FROM Documents WHERE access_count > 2000"
            },
            {
                "User": "Let's add a new user with ID 16, role 'INTERN', name 'john.doe', login 'jdoe', and password 'securepassword'.",
                "Answer": "INSERT INTO Users (user_id, role_code, user_name, user_login, password) VALUES (16, 'INTERN', 'john.doe', 'jdoe', 'securepassword')"
            },
            {
                "User": "I think we need a new document type. Can you add a type called 'Manual' with a description 'Instruction Manual'?",
                "Answer": "ALTER TABLE Document_Structures ADD COLUMN document_type_description TEXT"
            },
            {
                "User": "Now, add the 'Manual' type to the document structures, the document_structure_code, parent_document_structure_code, document_structure_description, document_type_description are '10', '1', 'Manual', 'Instruction Manual'",
                "Answer": "INSERT INTO Document_Structures (document_structure_code, parent_document_structure_code, document_structure_description, document_type_description) VALUES ('10', '1', 'Manual', 'Instruction Manual')"
            },
            {
                "User": "Could you list all document types with their descriptions?",
                "Answer": "SELECT document_structure_code, document_structure_description, document_type_description FROM Document_Structures"
            },
            {
                "User": "I need to change the image URL for the image with ID 1 to 'https://newurl.com/image1.jpg'.",
                "Answer": "UPDATE Images SET image_url = 'https://newurl.com/image1.jpg' WHERE image_id = 1"
            },
            {
                "User": "Let's create a new table for document tags with columns for tag_id, document_code, and tag_name.",
                "Answer": "CREATE TABLE Document_Tags (tag_id NUMBER PRIMARY KEY, document_code TEXT, tag_name TEXT)"
            },
            {
                "User": "Can you assign the tag 'Educational' to the document 'Learning English'?",
                "Answer": "INSERT INTO Document_Tags (tag_id, document_code, tag_name) VALUES (1, '217', 'Educational')"
            },
            {
                "User": "Show me all documents with the 'Educational' tag.",
                "Answer": "SELECT d.document_name FROM Documents d JOIN Document_Tags dt ON d.document_code = dt.document_code WHERE dt.tag_name = 'Educational'"
            },
            {
                "User": "I want to see the total count of documents for each functional area.",
                "Answer": "SELECT fa.functional_area_description, COUNT(d.document_code) AS document_count FROM Functional_Areas fa JOIN Document_Functional_Areas dfa ON fa.functional_area_code = dfa.functional_area_code JOIN Documents d ON dfa.document_code = d.document_code GROUP BY fa.functional_area_description"
            },
            {
                "User": "Can we add a column 'last_modified' to the Documents table to track changes?",
                "Answer": "ALTER TABLE Documents ADD COLUMN last_modified DATETIME"
            }
        ]
    },
    {
        "idx": 607,
        "db": "music_4",
        "interaction": [
            {
                "User": "Can you add a new artist named 'Euphoria' who is 28 years old and famous for the title 'Sky High' released in March 2021?",
                "Answer": "INSERT INTO artist (Artist, Age, Famous_Title, Famous_Release_date) VALUES ('Euphoria', 28, 'Sky High', 'March 2021')"
            },
            {
                "User": "Now, could you tell me how many artists are there in the database?",
                "Answer": "SELECT COUNT(*) FROM artist"
            },
            {
                "User": "I'd like to update the age of 'Ophiolatry' to 36, since it's been a year since the last update.",
                "Answer": "UPDATE artist SET Age = 36 WHERE Artist = 'Ophiolatry'"
            },
            {
                "User": "Let's add a new volume for 'Euphoria' with the issue date of 1st April 2021, titled 'Rise Above', which stayed on top for 2 weeks.",
                "Answer": "INSERT INTO volume (Volume_Issue, Issue_Date, Weeks_on_Top, Song, Artist_ID) VALUES ('New Release', '1 April 2021', 2, 'Rise Above', (SELECT Artist_ID FROM artist WHERE Artist = 'Euphoria'))"
            },
            {
                "User": "Which artist released a song most recently?",
                "Answer": "SELECT T1.Artist FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID ORDER BY T2.Issue_Date DESC LIMIT 1"
            },
            {
                "User": "Can you show me all the songs from the artist 'Euphoria'?",
                "Answer": "SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = 'Euphoria'"
            },
            {
                "User": "Let's create a new table to track artist genres. The table should have columns for the artist ID, genre, and subgenre.",
                "Answer": "CREATE TABLE artist_genre (Artist_ID number, Genre text, Subgenre text, PRIMARY KEY (Artist_ID))"
            },
            {
                "User": "Now, add the genre 'Metal' with subgenre 'Black Metal' for the artist 'Gorgoroth'.",
                "Answer": "INSERT INTO artist_genre (Artist_ID, Genre, Subgenre) VALUES ((SELECT Artist_ID FROM artist WHERE Artist = 'Gorgoroth'), 'Metal', 'Black Metal')"
            },
            {
                "User": "Can you give me a list of all genres available in our new artist_genre table?",
                "Answer": "SELECT DISTINCT Genre FROM artist_genre"
            },
            {
                "User": "I think we need to add a new column to the artist table to track the country of origin. Can you do that?",
                "Answer": "ALTER TABLE artist ADD COLUMN Country_of_Origin text"
            },
            {
                "User": "Please update the country of origin for 'Euphoria' to 'USA'.",
                "Answer": "UPDATE artist SET Country_of_Origin = 'USA' WHERE Artist = 'Euphoria'"
            },
            {
                "User": "Could you tell me which artists are from the USA?",
                "Answer": "SELECT Artist FROM artist WHERE Country_of_Origin = 'USA'"
            },
            {
                "User": "Let's insert a record of 'Euphoria' winning 'Best New Artist' at the '35th European Academy Prize' on 20th February 2021.",
                "Answer": "INSERT INTO music_festival (Music_Festival, Date_of_ceremony, Category, Volume, Result) VALUES ('35th European Academy Prize', '20 February 2021', 'Best New Artist', (SELECT Volume_ID FROM volume WHERE Song = 'Rise Above'), 'Awarded')"
            },
            {
                "User": "How many awards have been won by the artists in our database?",
                "Answer": "SELECT COUNT(*) FROM music_festival WHERE Result = 'Awarded'"
            }
        ]
    },
    {
        "idx": 608,
        "db": "hospital_1",
        "interaction": [
            {
                "User": "Can you add a new column to track the email addresses of physicians?",
                "Answer": "ALTER TABLE Physician ADD COLUMN Email text;"
            },
            {
                "User": "Great, now please insert the email address 'johndorian@hospital.com' for John Dorian.",
                "Answer": "UPDATE Physician SET Email = 'johndorian@hospital.com' WHERE Name = 'John Dorian';"
            },
            {
                "User": "What is the email address of Christopher Turk?",
                "Answer": "SELECT Email FROM Physician WHERE Name = 'Christopher Turk';"
            },
            {
                "User": "Can we create a new table to log the visitors of patients?",
                "Answer": "CREATE TABLE VisitorLog (LogID number PRIMARY KEY, PatientSSN number, VisitorName text, VisitDate time, Relationship text, FOREIGN KEY (PatientSSN) REFERENCES Patient(SSN));"
            },
            {
                "User": "Please log a visit for John Smith by his friend Bob, visited on April 30, 2023.",
                "Answer": "INSERT INTO VisitorLog (LogID, PatientSSN, VisitorName, VisitDate, Relationship) VALUES (1, 100000001, 'Bob', '2023-04-30', 'Friend');"
            },
            {
                "User": "Now, I need to update the visitor log to correct the relationship to 'College Friend'.",
                "Answer": "UPDATE VisitorLog SET Relationship = 'College Friend' WHERE LogID = 1;"
            },
            {
                "User": "Can you show me all visits logged for John Smith?",
                "Answer": "SELECT * FROM VisitorLog WHERE PatientSSN = (SELECT SSN FROM Patient WHERE Name = 'John Smith');"
            },
            {
                "User": "Let's insert a new nurse into the database. Her name is Samantha Taggart, a Registered Nurse with SSN 444444440.",
                "Answer": "INSERT INTO Nurse (EmployeeID, Name, Position, Registered, SSN) VALUES (104, 'Samantha Taggart', 'Registered Nurse', 1, 444444440);"
            },
            {
                "User": "Can you tell me the total number of registered nurses we have?",
                "Answer": "SELECT COUNT(*) FROM Nurse WHERE Registered = 1;"
            },
            {
                "User": "I would like to schedule a new appointment for John Smith with John Dorian for May 10, 2023, from 10:00 to 11:00 in examination room C. Samantha Taggart will be the prep nurse.",
                "Answer": "INSERT INTO Appointment (AppointmentID, Patient, PrepNurse, Physician, Start, End, ExaminationRoom) VALUES (36549880, 100000001, 104, 1, '2023-05-10 10:00', '2023-05-10 11:00', 'C');"
            },
            {
                "User": "What is the room number for John Smith's stay that started on May 1, 2008?",
                "Answer": "SELECT Room FROM Stay WHERE Patient = (SELECT SSN FROM Patient WHERE Name = 'John Smith') AND StayStart = '2008-05-01';"
            },
            {
                "User": "Update the room type of room 101 to 'Deluxe' and set it as unavailable.",
                "Answer": "UPDATE Room SET RoomType = 'Deluxe', Unavailable = 1 WHERE RoomNumber = 101;"
            },
            {
                "User": "How many Deluxe rooms do we currently have?",
                "Answer": "SELECT COUNT(*) FROM Room WHERE RoomType = 'Deluxe';"
            }
        ]
    },
    {
        "idx": 609,
        "db": "activity_1",
        "interaction": [
            {
                "User": "Can we add a new activity called 'Hiking' to the list of activities? the actid is 800",
                "Answer": "INSERT INTO Activity (actid, activity_name) VALUES (800, 'Hiking')"
            },
            {
                "User": "What activities do we have now?",
                "Answer": "SELECT activity_name FROM Activity"
            },
            {
                "User": "Which students are participating in the 'Mountain Climbing' activity?",
                "Answer": "SELECT S.Fname, S.Lname FROM Student S JOIN Participates_in P ON S.StuID = P.stuid JOIN Activity A ON P.actid = A.actid WHERE A.activity_name = 'Mountain Climbing'"
            },
            {
                "User": "I need to record the date when faculty members participate in activities. Can we add a 'participation_date' column to the Faculty_Participates_in table?",
                "Answer": "ALTER TABLE Faculty_Participates_in ADD COLUMN participation_date DATE"
            },
            {
                "User": "Let's schedule Professor Goodrich for 'Canoeing' on March 15, 2023.",
                "Answer": "INSERT INTO Faculty_Participates_in (FacID, actid, participation_date) VALUES ((SELECT FacID FROM Faculty WHERE Lname = 'Goodrich'), (SELECT actid FROM Activity WHERE activity_name = 'Canoeing'), '2023-03-15')"
            },
            {
                "User": "Can you update the phone number of Professor Giuliano to 555-1234?",
                "Answer": "UPDATE Faculty SET Phone = 5551234 WHERE Lname = 'Giuliano'"
            },
            {
                "User": "Do we have a student named Linda participating in 'Kayaking'?",
                "Answer": "SELECT EXISTS (SELECT 1 FROM Student S JOIN Participates_in P ON S.StuID = P.stuid JOIN Activity A ON P.actid = A.actid WHERE S.Fname = 'Linda' AND A.activity_name = 'Kayaking')"
            },
            {
                "User": "I want to create a new table to track the equipment used in each activity. What should it include?",
                "Answer": "CREATE TABLE Activity_Equipment (equip_id NUMBER PRIMARY KEY, actid NUMBER, equipment_name TEXT, quantity NUMBER, FOREIGN KEY (actid) REFERENCES Activity(actid))"
            },
            {
                "User": "Let's add 10 kayaks to the 'Kayaking' activity in the equipment tracking.",
                "Answer": "INSERT INTO Activity_Equipment (equip_id, actid, equipment_name, quantity) VALUES (1, (SELECT actid FROM Activity WHERE activity_name = 'Kayaking'), 'Kayak', 10)"
            },
            {
                "User": "How many kayaks do we have for kayaking?",
                "Answer": "SELECT quantity FROM Activity_Equipment WHERE equipment_name = 'Kayak' AND actid = (SELECT actid FROM Activity WHERE activity_name = 'Kayaking')"
            },
            {
                "User": "Can you show me all activities along with the number of students participating in each?",
                "Answer": "SELECT A.activity_name, COUNT(P.stuid) AS student_count FROM Activity A LEFT JOIN Participates_in P ON A.actid = P.actid GROUP BY A.activity_name"
            },
            {
                "User": "Professor Masson has decided to also participate in 'Hiking'. Please update the records.",
                "Answer": "INSERT INTO Faculty_Participates_in (FacID, actid) VALUES ((SELECT FacID FROM Faculty WHERE Lname = 'Masson'), (SELECT actid FROM Activity WHERE activity_name = 'Hiking'))"
            },
            {
                "User": "We need to add a new major to the Student table. How should we proceed?",
                "Answer": "ALTER TABLE Student ADD COLUMN MajorName TEXT"
            },
            {
                "User": "Let's assign the major 'Computer Science' to student Linda Smith.",
                "Answer": "UPDATE Student SET MajorName = 'Computer Science' WHERE Fname = 'Linda' AND Lname = 'Smith'"
            }
        ]
    },
    {
        "idx": 610,
        "db": "small_bank_1",
        "interaction": [
            {
                "User": "Can we track the account creation dates? We need to add this information.",
                "Answer": "ALTER TABLE ACCOUNTS ADD COLUMN creation_date DATE;"
            },
            {
                "User": "Please record the account creation date for customer ID 1 as January 1, 2020.",
                "Answer": "UPDATE ACCOUNTS SET creation_date = '2020-01-01' WHERE custid = 1;"
            },
            {
                "User": "Set the creation date for customer ID 2 to February 1, 2020, and for customer ID 3 to March 1, 2020.",
                "Answer": [
                    "UPDATE ACCOUNTS SET creation_date = '2020-02-01' WHERE custid = 2;",
                    "UPDATE ACCOUNTS SET creation_date = '2020-03-01' WHERE custid = 3;"
                ]
            },
            {
                "User": "How many accounts were created in February 2020?",
                "Answer": "SELECT COUNT(*) FROM ACCOUNTS WHERE creation_date BETWEEN '2020-02-01' AND '2020-02-29';"
            },
            {
                "User": "Create a new table to log transactions with columns for transaction ID, customer ID, transaction type, amount, and date.",
                "Answer": "CREATE TABLE TRANSACTIONS (transaction_id NUMBER PRIMARY KEY, custid NUMBER, transaction_type TEXT, amount NUMBER, transaction_date DATE);"
            },
            {
                "User": "Log a new transaction for customer ID 1, a deposit of 5000 on April 1, 2023.",
                "Answer": "INSERT INTO TRANSACTIONS (transaction_id, custid, transaction_type, amount, transaction_date) VALUES (1, 1, 'Deposit', 5000, '2023-04-01');"
            },
            {
                "User": "Customer ID 2 has withdrawn 1000. Update their checking balance and log this transaction.",
                "Answer": [
                    "UPDATE CHECKING SET balance = balance - 1000 WHERE custid = 2;",
                    "INSERT INTO TRANSACTIONS (transaction_id, custid, transaction_type, amount, transaction_date) VALUES (2, 2, 'Withdrawal', 1000, '2023-04-02');"
                ]
            },
            {
                "User": "Can we see all transactions made by customer ID 1?",
                "Answer": "SELECT * FROM TRANSACTIONS WHERE custid = 1;"
            },
            {
                "User": "I need to see the total balance for each customer across savings and checking accounts.",
                "Answer": "SELECT T1.custid, T1.balance + IFNULL(T2.balance, 0) as total_balance FROM SAVINGS T1 LEFT JOIN CHECKING T2 ON T1.custid = T2.custid;"
            },
            {
                "User": "Who has the highest total balance when combining both checking and savings?",
                "Answer": "SELECT T1.custid, T1.name FROM ACCOUNTS T1 JOIN (SELECT S.custid, S.balance + IFNULL(C.balance, 0) as total_balance FROM SAVINGS S LEFT JOIN CHECKING C ON S.custid = C.custid) T2 ON T1.custid = T2.custid ORDER BY T2.total_balance DESC LIMIT 1;"
            },
            {
                "User": "Can you update the savings balance of customer ID 3 to reflect a deposit of 50000?",
                "Answer": "UPDATE SAVINGS SET balance = balance + 50000 WHERE custid = 3;"
            },
            {
                "User": "Let's add an email column to the accounts table to store customer email addresses.",
                "Answer": "ALTER TABLE ACCOUNTS ADD COLUMN email TEXT;"
            },
            {
                "User": "Please add the email 'brown@example.com' for customer ID 1.",
                "Answer": "UPDATE ACCOUNTS SET email = 'brown@example.com' WHERE custid = 1;"
            }
        ]
    },
    {
        "idx": 611,
        "db": "store_product",
        "interaction": [
            {
                "User": "Can we add a new field to track the stock quantity for each product in the stores?",
                "Answer": "ALTER TABLE store_product ADD COLUMN stock_quantity number;"
            },
            {
                "User": "Now, how much stock do we have for product ID 2 across all stores?",
                "Answer": "SELECT SUM(stock_quantity) FROM store_product WHERE Product_ID = 2;"
            },
            {
                "User": "Let's insert a new product into the database.",
                "Answer": "INSERT INTO product (product_id, product, dimensions, dpi, pages_per_minute_color, max_page_size, interface) VALUES (7, 'Brother ADS-2200', '299 x 206 x 178', 600, 35, 'A4', 'USB 3.0');"
            },
            {
                "User": "I want to update the stock quantity for product ID 2 in store ID 1 to 50 units.",
                "Answer": "UPDATE store_product SET stock_quantity = 50 WHERE Product_ID = 2 AND Store_ID = 1;"
            },
            {
                "User": "Can we create a new table to log the interactions between customers and stores?",
                "Answer": "CREATE TABLE customer_interactions (interaction_id number PRIMARY KEY, store_id number, customer_id number, interaction_type text, interaction_date text);"
            },
            {
                "User": "Please add a record of a new customer interaction at store ID 2.",
                "Answer": "INSERT INTO customer_interactions (interaction_id, store_id, customer_id, interaction_type, interaction_date) VALUES (1, 2, 101, 'Inquiry', '2023-04-10');"
            },
            {
                "User": "Let's update the Area_size of 'Neguac' store to 30.00.",
                "Answer": "UPDATE store SET Area_size = 30.00 WHERE Store_Name = 'Neguac';"
            },
            {
                "User": "What is the total area size of all stores in district 15 now?",
                "Answer": "SELECT SUM(t1.Area_size) FROM store AS t1 JOIN store_district AS t2 ON t1.Store_ID = t2.Store_ID WHERE t2.District_ID = 15;"
            },
            {
                "User": "How many products does 'Miramichi' store carry?",
                "Answer": "SELECT COUNT(*) FROM store_product WHERE Store_ID = (SELECT Store_ID FROM store WHERE Store_Name = 'Miramichi');"
            },
            {
                "User": "Can we track the date when products are added to the stores?",
                "Answer": "ALTER TABLE store_product ADD COLUMN date_added text;"
            },
            {
                "User": "Insert the date '2023-04-10' for all products currently in store ID 1.",
                "Answer": "UPDATE store_product SET date_added = '2023-04-10' WHERE Store_ID = 1;"
            },
            {
                "User": "What products were added to the stores on '2023-04-10'?",
                "Answer": "SELECT Product_ID FROM store_product WHERE date_added = '2023-04-10';"
            },
            {
                "User": "Create a new table to track store employees.",
                "Answer": "CREATE TABLE store_employees (employee_id number PRIMARY KEY, Store_ID number, employee_name text, position text, hire_date text);"
            },
            {
                "User": "Add a new employee to the 'Miramichi' store.",
                "Answer": "INSERT INTO store_employees (employee_id, Store_ID, employee_name, position, hire_date) VALUES (1, (SELECT Store_ID FROM store WHERE Store_Name = 'Miramichi'), 'John Doe', 'Manager', '2023-04-01');"
            }
        ]
    },
    {
        "idx": 612,
        "db": "book_2",
        "interaction": [
            {
                "User": "Can we track the genre of each book?",
                "Answer": "ALTER TABLE book ADD COLUMN Genre text"
            },
            {
                "User": "Add 'Graphic Novel' as the genre for all current books.",
                "Answer": "UPDATE book SET Genre = 'Graphic Novel'"
            },
            {
                "User": "What are the titles of the 'Graphic Novels'?",
                "Answer": "SELECT Title FROM book WHERE Genre = 'Graphic Novel'"
            },
            {
                "User": "How many books are written by 'Garth Ennis'?",
                "Answer": "SELECT COUNT(*) FROM book WHERE Writer = 'Garth Ennis'"
            },
            {
                "User": "Create a new table for authors with their details.",
                "Answer": "CREATE TABLE author (Author_ID number PRIMARY KEY, Name text, Birthdate text, Nationality text)"
            },
            {
                "User": "Insert 'Timothy Truman' as a new author, born on 'February 9, 1956', American.",
                "Answer": "INSERT INTO author (Author_ID, Name, Birthdate, Nationality) VALUES (1, 'Timothy Truman', 'February 9, 1956', 'American')"
            },
            {
                "User": "Insert 'Garth Ennis' as a new author, born on 'January 16, 1970', Irish.",
                "Answer": "INSERT INTO author (Author_ID, Name, Birthdate, Nationality) VALUES (2, 'Garth Ennis', 'January 16, 1970', 'Irish')"
            },
            {
                "User": "Who are the authors in our database?",
                "Answer": "SELECT Name FROM author"
            },
            {
                "User": "Update the price of 'The Black Lamb' to 17000000.",
                "Answer": "UPDATE publication SET Price = 17000000 WHERE Book_ID = (SELECT Book_ID FROM book WHERE Title = 'The Black Lamb')"
            },
            {
                "User": "What is the new price of 'The Black Lamb'?",
                "Answer": "SELECT Price FROM publication WHERE Book_ID = (SELECT Book_ID FROM book WHERE Title = 'The Black Lamb')"
            },
            {
                "User": "Link books to their authors and show the result.",
                "Answer": "ALTER TABLE book ADD COLUMN Author_ID number REFERENCES author(Author_ID)"
            },
            {
                "User": "Assign 'Timothy Truman' as the author of 'The Black Lamb'.",
                "Answer": "UPDATE book SET Author_ID = (SELECT Author_ID FROM author WHERE Name = 'Timothy Truman') WHERE Title = 'The Black Lamb'"
            },
            {
                "User": "Show the titles of books along with their authors' names.",
                "Answer": "SELECT b.Title, a.Name FROM book b INNER JOIN author a ON b.Author_ID = a.Author_ID"
            },
            {
                "User": "How many publications does each publisher have?",
                "Answer": "SELECT Publisher, COUNT(*) FROM publication GROUP BY Publisher"
            }
        ]
    },
    {
        "idx": 613,
        "db": "products_for_hire",
        "interaction": [
            {
                "User": "Can we add a new column to track the number of times a coupon has been used?",
                "Answer": "ALTER TABLE Discount_Coupons ADD COLUMN usage_count number"
            },
            {
                "User": "I'd like to initialize the usage count for all coupons to zero.",
                "Answer": "UPDATE Discount_Coupons SET usage_count = 0"
            },
            {
                "User": "Can you show me a list of all customers who have been with us since before 2017?",
                "Answer": "SELECT customer_id, first_name, last_name FROM Customers WHERE date_became_customer < '2017-01-01 00:00:00'"
            },
            {
                "User": "Let's add a new product for hire, a 'Lawn Mower', with a daily cost of $27.50, with id is 6",
                "Answer": "INSERT INTO Products_for_Hire (product_id, product_type_code, daily_hire_cost, product_name, product_description) VALUES (6, 'Garden Equipment', 27.50, 'Lawn Mower', 'Electric Lawn Mower')"
            },
            {
                "User": "What's the total amount of discounts given out to customers?",
                "Answer": "SELECT SUM(coupon_amount) FROM Discount_Coupons"
            },
            {
                "User": "Update the booking status to 'Completed' for the booking with the highest amount payable.",
                "Answer": "UPDATE Bookings SET booking_status_code = 'Completed' WHERE booking_id = (SELECT booking_id FROM Bookings ORDER BY amount_payable DESC LIMIT 1)"
            },
            {
                "User": "Please create a new table to track customer feedback with columns for feedback_id, customer_id, and comments.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, comments text)"
            },
            {
                "User": "Insert a feedback record for customer 2 saying 'Excellent service!'",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, comments) VALUES (1, 2, 'Excellent service!')"
            },
            {
                "User": "How many products have never been booked?",
                "Answer": "SELECT COUNT(*) FROM Products_for_Hire WHERE product_id NOT IN (SELECT DISTINCT product_id FROM Products_Booked)"
            },
            {
                "User": "Can we track if a product is currently booked or not directly in the Products_for_Hire table?",
                "Answer": "ALTER TABLE Products_for_Hire ADD COLUMN is_currently_booked text"
            },
            {
                "User": "Set the is_currently_booked status to 'No' for all products initially.",
                "Answer": "UPDATE Products_for_Hire SET is_currently_booked = 'No'"
            },
            {
                "User": "For the new Lawn Mower, update the is_currently_booked to 'Yes' because it has just been hired.",
                "Answer": "UPDATE Products_for_Hire SET is_currently_booked = 'Yes' WHERE product_name = 'Lawn Mower'"
            },
            {
                "User": "What is the average amount of refund given for bookings?",
                "Answer": "SELECT AVG(amount_of_refund) FROM Bookings"
            }
        ]
    },
    {
        "idx": 614,
        "db": "station_weather",
        "interaction": [
            {
                "User": "how many origin in the train table",
                "Answer": "SELECT count(distinct origin) FROM train"
            },
            {
                "User": "what highest time in the train table",
                "Answer": "SELECT time FROM train ORDER BY time DESC LIMIT 1"
            },
            {
                "User": "how many train number in the train table",
                "Answer": "SELECT count(train_number) FROM train"
            },
            {
                "User": "how many interval in the trail table",
                "Answer": "SELECT count(interval) FROM train"
            },
            {
                "User": "Can we add a status column to the train table to indicate if the train is active or not?",
                "Answer": "ALTER TABLE train ADD COLUMN status text"
            },
            {
                "User": "Set the default status of all trains to 'active'.",
                "Answer": "UPDATE train SET status = 'active'"
            },
            {
                "User": "Change the status of train number 16724 to 'inactive'.",
                "Answer": "UPDATE train SET status = 'inactive' WHERE train_number = 16724"
            },
            {
                "User": "Create a new table to log train delays with columns for train_id, delay_time in minutes, and reason.",
                "Answer": "CREATE TABLE train_delays (train_id number, delay_time number, reason text, PRIMARY KEY (train_id))"
            },
            {
                "User": "Log a 15-minute delay for train number 16127 due to maintenance.",
                "Answer": "INSERT INTO train_delays (train_id, delay_time, reason) VALUES ((SELECT id FROM train WHERE train_number = 16127), 15, 'maintenance')"
            },
            {
                "User": "How many trains are currently inactive?",
                "Answer": "SELECT count(*) FROM train WHERE status = 'inactive'"
            },
            {
                "User": "What is the average delay time logged in the train_delays table?",
                "Answer": "SELECT AVG(delay_time) FROM train_delays"
            },
            {
                "User": "Add a column to the station table to indicate the number of platforms.",
                "Answer": "ALTER TABLE station ADD COLUMN platforms number"
            },
            {
                "User": "Update the number of platforms for station ID 1 to 4.",
                "Answer": "UPDATE station SET platforms = 4 WHERE id = 1"
            },
            {
                "User": "Which stations have more than 3 platforms?",
                "Answer": "SELECT * FROM station WHERE platforms > 3"
            },
            {
                "User": "Add a record for a new station with ID 12, named 'Highgate', with services 'Northern Line', local authority 'Camden', and 2 platforms.",
                "Answer": "INSERT INTO station (id, network_name, services, local_authority, platforms) VALUES (12, 'Highgate', 'Northern Line', 'Camden', 2)"
            },
            {
                "User": "Create a table to store user feedback with columns for feedback_id, station_id, user_comment, and rating.",
                "Answer": "CREATE TABLE user_feedback (feedback_id number PRIMARY KEY, station_id number, user_comment text, rating number)"
            }
        ]
    },
    {
        "idx": 615,
        "db": "customers_and_addresses",
        "interaction": [
            {
                "User": "Can we add a loyalty points column to the Customers table to track rewards?",
                "Answer": "ALTER TABLE Customers ADD COLUMN loyalty_points INT DEFAULT 0"
            },
            {
                "User": "Great, now can you show me all customers with their loyalty points?",
                "Answer": "SELECT customer_name, loyalty_points FROM Customers"
            },
            {
                "User": "I'd like to reward Dr. Julia Wuckert MD with 100 loyalty points for her long-term patronage.",
                "Answer": "UPDATE Customers SET loyalty_points = loyalty_points + 100 WHERE customer_name = 'Dr. Julia Wuckert MD'"
            },
            {
                "User": "Can we see the top 3 customers based on loyalty points?",
                "Answer": "SELECT customer_name, loyalty_points FROM Customers ORDER BY loyalty_points DESC LIMIT 3"
            },
            {
                "User": "We should also track the referral source for each new customer. Can we add this information?",
                "Answer": "ALTER TABLE Customers ADD COLUMN referral_source TEXT"
            },
            {
                "User": "Now, can you show me the list of customers who were referred by 'Online Ad'?",
                "Answer": "SELECT customer_name FROM Customers WHERE referral_source = 'Online Ad'"
            },
            {
                "User": "Let's create a new table to track product reviews. It should include a review ID, product ID, customer ID, review text, and rating.",
                "Answer": "CREATE TABLE Product_Reviews (review_id INT PRIMARY KEY, product_id INT, customer_id INT, review_text TEXT, rating INT)"
            },
            {
                "User": "Can you insert a new review for the Dove Chocolate product by customer Dr. Julia Wuckert MD with a rating of 5?",
                "Answer": "INSERT INTO Product_Reviews (review_id, product_id, customer_id, review_text, rating) VALUES (1, 2, 1, 'Excellent quality and taste!', 5)"
            },
            {
                "User": "I'd like to update the address for Tillman Ernser to '123 New Street, NewCity, NC, USA'.",
                "Answer": "UPDATE Addresses SET address_content = '123 New Street', city = 'NewCity', state_province_county = 'NC', country = 'USA' WHERE address_id = (SELECT address_id FROM Customer_Addresses WHERE customer_id = (SELECT customer_id FROM Customers WHERE customer_name = 'Tillman Ernser'))"
            },
            {
                "User": "Can we have a view that shows the order details along with product names and customer names?",
                "Answer": "CREATE VIEW OrderDetails_View AS SELECT o.order_id, c.customer_name, p.product_details, o.order_details FROM Customer_Orders o JOIN Customers c ON o.customer_id = c.customer_id JOIN Order_Items oi ON o.order_id = oi.order_id JOIN Products p ON oi.product_id = p.product_id"
            },
            {
                "User": "Can we add a new column to track if an address is the primary address for a customer in the Customer_Addresses table?",
                "Answer": "ALTER TABLE Customer_Addresses ADD COLUMN is_primary BOOLEAN DEFAULT FALSE"
            }
        ]
    },
    {
        "idx": 616,
        "db": "epinions_1",
        "interaction": [
            {
                "User": "I'd like to add a new item called 'banana' to the database. Can you do that?",
                "Answer": "INSERT INTO item (i_id, title) VALUES (8, 'banana')"
            },
            {
                "User": "Great, now please add a review for the banana with a rating of 8 and rank of 4 by user 3. The a_id is 8",
                "Answer": "INSERT INTO review (a_id, u_id, i_id, rating, rank) VALUES (8, 3, 3, 8, 4)"
            },
            {
                "User": "Can you tell me how many items have been reviewed by user 1?",
                "Answer": "SELECT COUNT(DISTINCT i_id) FROM review WHERE u_id = 1"
            },
            {
                "User": "Let's add a new user called 'Alice' with u_id 8.",
                "Answer": "INSERT INTO useracct (u_id, name) VALUES (8, 'Alice')"
            },
            {
                "User": "Alice has decided to trust user 2. Can we update the trust table accordingly?",
                "Answer": "INSERT INTO trust (source_u_id, target_u_id, trust) VALUES (4, 2, 7)"
            },
            {
                "User": "I want to update the rating of the banana review to 9. Can you do that?",
                "Answer": "UPDATE review SET rating = 9 WHERE u_id = 3 AND i_id = 3"
            },
            {
                "User": "Can you show me all the items that have a review with a rating higher than 7?",
                "Answer": "SELECT DISTINCT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating > 7"
            },
            {
                "User": "I think we should also track the date of each review. Can you add a 'date' column to the review table?",
                "Answer": "ALTER TABLE review ADD COLUMN date text"
            },
            {
                "User": "Now, let's add the review date '2023-04-01' for the banana review.",
                "Answer": "UPDATE review SET date = '2023-04-01' WHERE u_id = 3 AND i_id = 3"
            },
            {
                "User": "Who are all the users that have given a review on '2023-04-01'?",
                "Answer": "SELECT DISTINCT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id WHERE T2.date = '2023-04-01'"
            },
            {
                "User": "Let's create a new table to track user comments on reviews. It should have columns for comment_id, review_id, user_id, and the comment text.",
                "Answer": "CREATE TABLE user_comments (comment_id number PRIMARY KEY, review_id number, user_id number, comment text)"
            },
            {
                "User": "Add a comment by Alice on the most recent review for the banana.",
                "Answer": "INSERT INTO user_comments (comment_id, review_id, user_id, comment) VALUES (1, 4, 4, 'Great banana!')"
            },
            {
                "User": "Show me all comments made by users who trust user 2.",
                "Answer": "SELECT T1.comment FROM user_comments AS T1 JOIN trust AS T2 ON T1.user_id = T2.source_u_id WHERE T2.target_u_id = 2"
            },
            {
                "User": "Can you update the trust level between Alice and user 2 to 9?",
                "Answer": "UPDATE trust SET trust = 9 WHERE source_u_id = 4 AND target_u_id = 2"
            }
        ]
    },
    {
        "idx": 617,
        "db": "election_representative",
        "interaction": [
            {
                "User": "Can we track the age of representatives?",
                "Answer": "ALTER TABLE representative ADD COLUMN Age number;"
            },
            {
                "User": "Update John Quayle's age based on his birth year 1868.",
                "Answer": "UPDATE representative SET Age = (strftime('%Y', 'now') - 1868) WHERE Name='John Quayle';"
            },
            {
                "User": "How many representatives are there in each party?",
                "Answer": "SELECT Party, COUNT(*) AS NumberOfRepresentatives FROM representative GROUP BY Party;"
            },
            {
                "User": "Create a new table to track the representatives' education.",
                "Answer": "CREATE TABLE education (Education_ID number PRIMARY KEY, Representative_ID number, Degree text, Institution text, Year text, FOREIGN KEY (Representative_ID) REFERENCES representative(Representative_ID));"
            },
            {
                "User": "Add education details for Dan Quayle with ID 1.",
                "Answer": "INSERT INTO education (Education_ID, Representative_ID, Degree, Institution, Year) VALUES (1, 1, 'J.D.', 'Indiana University Robert H. McKinney School of Law', '1974');"
            },
            {
                "User": "What are the details of representatives who have a law degree?",
                "Answer": "SELECT r.Name, e.Degree, e.Institution, e.Year FROM representative r JOIN education e ON r.Representative_ID = e.Representative_ID WHERE e.Degree LIKE '%J.D.%' OR e.Degree LIKE '%LL.B.%' OR e.Degree LIKE '%B.L.%';"
            },
            {
                "User": "Can you show the average votes and seats won by each party?",
                "Answer": "SELECT r.Party, AVG(e.Votes) AS AverageVotes, AVG(e.Seats) AS AverageSeats FROM representative r JOIN election e ON r.Representative_ID = e.Representative_ID GROUP BY r.Party;"
            },
            {
                "User": "Please record a new election result for Representative_ID 3.",
                "Answer": "INSERT INTO election (Election_ID, Representative_ID, Date, Votes, Vote_Percent, Seats, Place) VALUES (6, 3, '2023', 15342, 21.3, 12, 1);"
            },
            {
                "User": "Update the vote percent for the election in October 1942 to 19.0.",
                "Answer": "UPDATE election SET Vote_Percent = 19.0 WHERE Date = 'October 1942';"
            },
            {
                "User": "Who won the most recent election?",
                "Answer": "SELECT r.Name, e.Date FROM representative r JOIN election e ON r.Representative_ID = e.Representative_ID ORDER BY e.Date DESC LIMIT 1;"
            },
            {
                "User": "Let's add a column to track the representatives' retirement year.",
                "Answer": "ALTER TABLE representative ADD COLUMN Retirement_Year text;"
            },
            {
                "User": "Record the retirement year for Al Quie as 1993.",
                "Answer": "UPDATE representative SET Retirement_Year = '1993' WHERE Name='Al Quie';"
            }
        ]
    },
    {
        "idx": 618,
        "db": "local_govt_mdm",
        "interaction": [
            {
                "User": "Can you list all the cmi cross reference id on here",
                "Answer": "SELECT cmi_cross_ref_id FROM CMI_Cross_References"
            },
            {
                "User": "Can I have the master customer id",
                "Answer": "SELECT master_customer_id FROM CMI_Cross_References"
            },
            {
                "User": "What are the source system codes of CMI_Cross_References?",
                "Answer": "SELECT source_system_code FROM CMI_Cross_References"
            },
            {
                "User": "Could you add a new customer to the Customer_Master_Index with the details 'Smith-Jones'?",
                "Answer": "INSERT INTO Customer_Master_Index (master_customer_id, cmi_details) VALUES (10, 'Smith-Jones')"
            },
            {
                "User": "Now, can you show me the updated list of customer details?",
                "Answer": "SELECT * FROM Customer_Master_Index"
            },
            {
                "User": "I need to update the master customer id for Smith-Jones to 11. Can you do that?",
                "Answer": "UPDATE Customer_Master_Index SET master_customer_id = 11 WHERE cmi_details = 'Smith-Jones'"
            },
            {
                "User": "Let's add a new column 'email' to the Customer_Master_Index to store customer email addresses.",
                "Answer": "ALTER TABLE Customer_Master_Index ADD COLUMN email text"
            },
            {
                "User": "Can you set the email for the customer with id 11 to 'smith.jones@email.com'?",
                "Answer": "UPDATE Customer_Master_Index SET email = 'smith.jones@email.com' WHERE master_customer_id = 11"
            },
            {
                "User": "I'd like to create a new table for tracking customer interactions, with columns for interaction_id, master_customer_id, and interaction_notes.",
                "Answer": "CREATE TABLE Customer_Interactions (interaction_id number PRIMARY KEY, master_customer_id number, interaction_notes text)"
            },
            {
                "User": "Please insert a record of a new interaction with customer id 11, noting that 'Customer inquired about council tax'.",
                "Answer": "INSERT INTO Customer_Interactions (interaction_id, master_customer_id, interaction_notes) VALUES (1, 11, 'Customer inquired about council tax')"
            },
            {
                "User": "Can we see if there are any overpayments for customer id 11 in the Benefits_Overpayments table?",
                "Answer": "SELECT * FROM Benefits_Overpayments WHERE cmi_cross_ref_id IN (SELECT cmi_cross_ref_id FROM CMI_Cross_References WHERE master_customer_id = 11)"
            },
            {
                "User": "I need to correct the source system code for the cmi_cross_ref_id 8, it should be 'Council Tax' instead of 'Rent'.",
                "Answer": "UPDATE CMI_Cross_References SET source_system_code = 'Council Tax' WHERE cmi_cross_ref_id = 8"
            },
            {
                "User": "Can you show me all the parking fines for the customer who has the master customer id 5?",
                "Answer": "SELECT * FROM Parking_Fines WHERE cmi_cross_ref_id IN (SELECT cmi_cross_ref_id FROM CMI_Cross_References WHERE master_customer_id = 5)"
            }
        ]
    },
    {
        "idx": 619,
        "db": "manufactory_1",
        "interaction": [
            {
                "User": "Can we track the creation year of manufacturers?",
                "Answer": "ALTER TABLE manufacturers ADD COLUMN creation_year number"
            },
            {
                "User": "What is the creation year of Sony?",
                "Answer": "SELECT creation_year FROM manufacturers WHERE name = 'Sony'"
            },
            {
                "User": "Please add 1946 as the creation year for Sony.",
                "Answer": "UPDATE manufacturers SET creation_year = 1946 WHERE name = 'Sony'"
            },
            {
                "User": "List all products along with their manufacturer names.",
                "Answer": "SELECT p.name, m.name FROM products p INNER JOIN manufacturers m ON p.manufacturer = m.code"
            },
            {
                "User": "I would like to add a new product called 'Gaming Console' with a price of 300 that is made by Sony.",
                "Answer": "INSERT INTO products (name, price, manufacturer) VALUES ('Gaming Console', 300, (SELECT code FROM manufacturers WHERE name = 'Sony'))"
            },
            {
                "User": "How many products do we have in the database now?",
                "Answer": "SELECT COUNT(*) FROM products"
            },
            {
                "User": "Create a new table to track sales with columns sale_id, product_code, quantity, and sale_date.",
                "Answer": "CREATE TABLE sales (sale_id number PRIMARY KEY, product_code number, quantity number, sale_date date)"
            },
            {
                "User": "Please record a sale of 2 'Gaming Console' units on today's date.",
                "Answer": "INSERT INTO sales (sale_id, product_code, quantity, sale_date) VALUES (1, (SELECT code FROM products WHERE name = 'Gaming Console'), 2, CURRENT_DATE)"
            },
            {
                "User": "Show me the total revenue generated from 'Memory' product sales.",
                "Answer": "SELECT SUM(p.price * s.quantity) AS total_revenue FROM products p INNER JOIN sales s ON p.code = s.product_code WHERE p.name = 'Memory'"
            },
            {
                "User": "Can you update the price of the 'ZIP drive' to 180?",
                "Answer": "UPDATE products SET price = 180 WHERE name = 'ZIP drive'"
            },
            {
                "User": "Let's add a new manufacturer called 'Tech Innovators' with headquarters in 'New York' and founded by 'Laura' in 2021.",
                "Answer": "INSERT INTO manufacturers (name, headquarter, founder, creation_year) VALUES ('Tech Innovators', 'New York', 'Laura', 2021)"
            }
        ]
    },
    {
        "idx": 620,
        "db": "city_record",
        "interaction": [
            {
                "User": "What is the total GDP of all cities combined?",
                "Answer": "SELECT SUM(GDP) FROM city"
            },
            {
                "User": "Can you add information about the mayor for each city?",
                "Answer": "ALTER TABLE city ADD COLUMN Mayor_Name text"
            },
            {
                "User": "Update the GDP of Nanjing (Jiangsu) to 650.00.",
                "Answer": "UPDATE city SET GDP = 650.00 WHERE City = 'Nanjing (Jiangsu)'"
            },
            {
                "User": "Create a new table for city landmarks with columns for ID, City_ID, Landmark_Name, and Description.",
                "Answer": "CREATE TABLE city_landmarks (Landmark_ID number PRIMARY KEY, City_ID number, Landmark_Name text, Description text)"
            },
            {
                "User": "Add the 'Oriental Pearl Tower' as a landmark for Shanghai with a brief description.",
                "Answer": "INSERT INTO city_landmarks (City_ID, Landmark_Name, Description) VALUES (1, 'Oriental Pearl Tower', 'A distinct TV tower in Shanghai')"
            },
            {
                "User": "What cities have a Regional Population greater than 8 million but a GDP less than 700?",
                "Answer": "SELECT City FROM city WHERE Regional_Population > 8000000 AND GDP < 700"
            },
            {
                "User": "Which city hosted the most matches in 1992?",
                "Answer": "SELECT Host_City, COUNT(Match_ID) as NumberOfMatches FROM hosting_city WHERE Year = 1992 GROUP BY Host_City ORDER BY NumberOfMatches DESC LIMIT 1"
            },
            {
                "User": "How many cities have temperatures in June higher than 25 degrees?",
                "Answer": "SELECT COUNT(City_ID) FROM temperature WHERE Jun > 25"
            },
            {
                "User": "Can we track the historical GDP for cities? We need to start recording this annually.",
                "Answer": "CREATE TABLE city_gdp_history (Record_ID number PRIMARY KEY, City_ID number, Year number, Historical_GDP number)"
            },
            {
                "User": "Record the GDP for Shanghai for the year 2020 as 2000.00.",
                "Answer": "INSERT INTO city_gdp_history (City_ID, Year, Historical_GDP) VALUES (1, 2020, 2000.00)"
            },
            {
                "User": "Which cities have hosted a 'Friendly match' and have a GDP over 600?",
                "Answer": "SELECT DISTINCT T1.City FROM city AS T1 JOIN hosting_city AS T2 ON T1.City_ID = T2.Host_City JOIN match AS T3 ON T2.Match_ID = T3.Match_ID WHERE T3.Competition = 'Friendly match' AND T1.GDP > 600"
            },
            {
                "User": "I need to compare the temperature in January and December for all cities. Can you add a column for the temperature difference?",
                "Answer": "ALTER TABLE temperature ADD COLUMN Jan_Dec_Diff number"
            },
            {
                "User": "Update the temperature difference for each city based on the existing January and December data.",
                "Answer": "UPDATE temperature SET Jan_Dec_Diff = Jan - Dec"
            }
        ]
    },
    {
        "idx": 621,
        "db": "pilot_record",
        "interaction": [
            {
                "User": "Can you show me the total number of flights each pilot has made?",
                "Answer": "SELECT T1.Pilot_ID, T2.Pilot_name, COUNT(*) as Total_Flights FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.Pilot_ID = T2.Pilot_ID GROUP BY T1.Pilot_ID, T2.Pilot_name"
            },
            {
                "User": "I would like to update the rank of pilot Patrick O'Bryant to 14. What is the SQL statement for that?",
                "Answer": "UPDATE pilot SET Rank = 14 WHERE Pilot_name = 'Patrick O''Bryant'"
            },
            {
                "User": "Can you provide the updated rank of Patrick O'Bryant?",
                "Answer": "SELECT Rank FROM pilot WHERE Pilot_name = 'Patrick O''Bryant'"
            },
            {
                "User": "Let's add a new pilot named 'John Doe', age 29, from 'Canada', joining the 'Alpha' team in 2021 with rank 7. What would the insert statement look like?",
                "Answer": "INSERT INTO pilot (Pilot_name, Rank, Age, Nationality, Position, Join_Year, Team) VALUES ('John Doe', 7, 29, 'Canada', 'Pilot', 2021, 'Alpha')"
            },
            {
                "User": "I want to create a new table for tracking maintenance records of aircraft. How do I create that table?",
                "Answer": "CREATE TABLE maintenance_record (Maintenance_ID number PRIMARY KEY, Aircraft_ID number, Maintenance_Date text, Description text, FOREIGN KEY (Aircraft_ID) REFERENCES aircraft(Aircraft_ID))"
            },
            {
                "User": "Let's record a maintenance check for aircraft with ID 2 on '2023-04-01'. The description is 'Annual engine overhaul'.",
                "Answer": "INSERT INTO maintenance_record (Maintenance_ID, Aircraft_ID, Maintenance_Date, Description) VALUES (1, 2, '2023-04-01', 'Annual engine overhaul')"
            },
            {
                "User": "Can you show me all the maintenance records we have so far?",
                "Answer": "SELECT * FROM maintenance_record"
            },
            {
                "User": "I think we should track the hours flown by each aircraft. Can we add a column to the aircraft table for this?",
                "Answer": "ALTER TABLE aircraft ADD Hours_Flown number"
            },
            {
                "User": "Please update the hours flown for aircraft ID 1 to 1500 hours.",
                "Answer": "UPDATE aircraft SET Hours_Flown = 1500 WHERE Aircraft_ID = 1"
            },
            {
                "User": "How many hours has aircraft ID 1 flown?",
                "Answer": "SELECT Hours_Flown FROM aircraft WHERE Aircraft_ID = 1"
            },
            {
                "User": "We need to decommission aircraft with ID 3. How do I remove it from the aircraft table?",
                "Answer": "DELETE FROM aircraft WHERE Aircraft_ID = 3"
            }
        ]
    },
    {
        "idx": 622,
        "db": "customers_card_transactions",
        "interaction": [
            {
                "User": "Can you add a loyalty points column to the Customers table?",
                "Answer": "ALTER TABLE Customers ADD COLUMN loyalty_points number"
            },
            {
                "User": "Great, now set the initial loyalty points to 100 for all existing customers.",
                "Answer": "UPDATE Customers SET loyalty_points = 100"
            },
            {
                "User": "How many loyalty points does customer id 2 have?",
                "Answer": "SELECT loyalty_points FROM Customers WHERE customer_id = 2"
            },
            {
                "User": "I want to insert a new customer with the following details: customer_id 16, first name John, last name Doe, address 123 Main St, phone 555-1234, email john.doe@example.com.",
                "Answer": "INSERT INTO Customers (customer_id, customer_first_name, customer_last_name, customer_address, customer_phone, customer_email, loyalty_points) VALUES (16, 'John', 'Doe', '123 Main St', '555-1234', 'john.doe@example.com', 100)"
            },
            {
                "User": "What is the total number of loyalty points across all customers?",
                "Answer": "SELECT SUM(loyalty_points) AS total_loyalty_points FROM Customers"
            },
            {
                "User": "Can you create a new table for customer feedback with columns feedback_id, customer_id, and feedback_text?",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text)"
            },
            {
                "User": "Insert a feedback record for customer id 1 with feedback_id 101 and feedback_text 'Very satisfied with the service'.",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, feedback_text) VALUES (101, 1, 'Very satisfied with the service')"
            },
            {
                "User": "Show me the names of customers who have provided feedback.",
                "Answer": "SELECT c.customer_first_name, c.customer_last_name FROM Customers c JOIN Customer_Feedback f ON c.customer_id = f.customer_id"
            },
            {
                "User": "Can we add a new card for customer id 3 with card_id 16, type 'Debit', card_number '1234567890123456', valid from '2023-01-01', valid to '2026-01-01'?",
                "Answer": "INSERT INTO Customers_Cards (card_id, customer_id, card_type_code, card_number, date_valid_from, date_valid_to) VALUES (16, 3, 'Debit', '1234567890123456', '2023-01-01', '2026-01-01')"
            },
            {
                "User": "Update the phone number for customer id 2 to '555-6789'.",
                "Answer": "UPDATE Customers SET customer_phone = '555-6789' WHERE customer_id = 2"
            },
            {
                "User": "How many customers have a 'VIP' account?",
                "Answer": "SELECT COUNT(*) FROM Accounts WHERE account_name = 'VIP'"
            },
            {
                "User": "Add a new account for customer id 16 with account_id 16, account_name 'Regular', and other details 'New Account'.",
                "Answer": "INSERT INTO Accounts (account_id, customer_id, account_name, other_account_details) VALUES (16, 16, 'Regular', 'New Account')"
            },
            {
                "User": "What is the average transaction amount for 'Payment' transactions?",
                "Answer": "SELECT AVG(transaction_amount) FROM Financial_Transactions WHERE transaction_type = 'Payment'"
            }
        ]
    },
    {
        "idx": 623,
        "db": "insurance_and_eClaims",
        "interaction": [
            {
                "User": "Can we add a contact number for the customers in the database?",
                "Answer": "ALTER TABLE Customers ADD COLUMN Contact_Number text;"
            },
            {
                "User": "Now add a contact number '555-1234' for the customer with ID 252.",
                "Answer": "UPDATE Customers SET Contact_Number = '555-1234' WHERE Customer_ID = 252;"
            },
            {
                "User": "What is the contact number for America Jaskolski?",
                "Answer": "SELECT Contact_Number FROM Customers WHERE Customer_ID = 252;"
            },
            {
                "User": "Please create a new table for policy renewals.",
                "Answer": "CREATE TABLE Policy_Renewals (Renewal_ID number PRIMARY KEY, Policy_ID number, Renewal_Date time, Renewal_Note text);"
            },
            {
                "User": "Add a renewal record for policy 125 with the note 'Renewed for another year'.",
                "Answer": "INSERT INTO Policy_Renewals (Renewal_ID, Policy_ID, Renewal_Date, Renewal_Note) VALUES (1, 125, CURRENT_DATE, 'Renewed for another year');"
            },
            {
                "User": "Show me all policies that have been renewed.",
                "Answer": "SELECT p.Policy_ID, pr.Renewal_Date, pr.Renewal_Note FROM Policies p INNER JOIN Policy_Renewals pr ON p.Policy_ID = pr.Policy_ID;"
            },
            {
                "User": "I want to record the email addresses of our staff. Can we add a new column for that?",
                "Answer": "ALTER TABLE Staff ADD COLUMN Email_Address text;"
            },
            {
                "User": "Update the email address for staff member with ID 406 to 'clifton@example.com'.",
                "Answer": "UPDATE Staff SET Email_Address = 'clifton@example.com' WHERE Staff_ID = 406;"
            },
            {
                "User": "List all staff members with their email addresses.",
                "Answer": "SELECT Staff_ID, Staff_Details, Email_Address FROM Staff;"
            },
            {
                "User": "How many claims have been settled?",
                "Answer": "SELECT COUNT(*) FROM Claim_Headers WHERE Claim_Status_Code = 'Settled';"
            },
            {
                "User": "Create a table to log customer interactions.",
                "Answer": "CREATE TABLE Customer_Interactions (Interaction_ID number PRIMARY KEY, Customer_ID number, Interaction_Date time, Interaction_Note text);"
            },
            {
                "User": "Log a new interaction for customer 334 noting 'Discussed policy updates'.",
                "Answer": "INSERT INTO Customer_Interactions (Interaction_ID, Customer_ID, Interaction_Date, Interaction_Note) VALUES (1, 334, CURRENT_DATE, 'Discussed policy updates');"
            },
            {
                "User": "Can you show me the latest interactions with our customers?",
                "Answer": "SELECT ci.Customer_ID, c.Customer_Details, ci.Interaction_Date, ci.Interaction_Note FROM Customer_Interactions ci INNER JOIN Customers c ON ci.Customer_ID = c.Customer_ID ORDER BY ci.Interaction_Date DESC;"
            },
            {
                "User": "I need to update the amount claimed for Claim_Header_ID 15 to 400.00.",
                "Answer": "UPDATE Claim_Headers SET Amount_Claimed = 400.00 WHERE Claim_Header_ID = 15;"
            }
        ]
    },
    {
        "idx": 624,
        "db": "voter_2",
        "interaction": [
            {
                "User": "Can we add a new student record to the database?",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Brown', 'James', 20, 'M', 610, 1122, 'NYC')"
            },
            {
                "User": "How many students are now in the database after the insertion?",
                "Answer": "SELECT COUNT(*) FROM Student"
            },
            {
                "User": "Can you update the major of student James Brown to 620?",
                "Answer": "UPDATE Student SET Major = 620 WHERE Fname = 'James' AND LName = 'Brown'"
            },
            {
                "User": "I would like to create a new table to track student club memberships. Can you do that?",
                "Answer": "CREATE TABLE Student_Clubs (StuID number, Club_Name text, Role text, Join_Date text);"
            },
            {
                "User": "Now add James Brown to the 'Chess Club' as a 'Member' who joined on '01/15/2023'.",
                "Answer": "INSERT INTO Student_Clubs (StuID, Club_Name, Role, Join_Date) VALUES (1004, 'Chess Club', 'Member', '01/15/2023')"
            },
            {
                "User": "Can we get a list of all clubs along with the number of members in each?",
                "Answer": "SELECT Club_Name, COUNT(*) AS Member_Count FROM Student_Clubs GROUP BY Club_Name"
            },
            {
                "User": "I noticed we don't have an email field for students, can we add one?",
                "Answer": "ALTER TABLE Student ADD COLUMN Email text"
            },
            {
                "User": "Please update the email address for student Tracy Kim to 'tkim@example.com'.",
                "Answer": "UPDATE Student SET Email = 'tkim@example.com' WHERE Fname = 'Tracy' AND LName = 'Kim'"
            },
            {
                "User": "Can you show me the updated record for Tracy Kim including the new email field?",
                "Answer": "SELECT * FROM Student WHERE Fname = 'Tracy' AND LName = 'Kim'"
            },
            {
                "User": "Let's add a new voting record for James Brown for the 'Fall' election cycle.",
                "Answer": "INSERT INTO Voting_record (StuID, Registration_Date, Election_Cycle, President_Vote, Vice_President_Vote, Secretary_Vote, Treasurer_Vote, Class_President_Vote, Class_Senator_Vote) VALUES (1004, '08/30/2023', 'Fall', 1015, 1018, 1021, 1024, 1027, 1030)"
            },
            {
                "User": "Can you provide the total number of votes each candidate for President received in the 'Spring' election cycle?",
                "Answer": "SELECT President_Vote, COUNT(*) AS Vote_Count FROM Voting_record WHERE Election_Cycle = 'Spring' GROUP BY President_Vote"
            },
            {
                "User": "I would like to know the average age of students who voted in the 'Spring' election cycle.",
                "Answer": "SELECT AVG(T1.Age) AS Average_Age FROM Student T1 JOIN Voting_record T2 ON T1.StuID = T2.StuID WHERE T2.Election_Cycle = 'Spring'"
            }
        ]
    },
    {
        "idx": 625,
        "db": "election",
        "interaction": [
            {
                "User": "Can we track the total votes for each county in the elections?",
                "Answer": "CREATE TABLE county_votes (County_Id number, Total_votes number, Election_ID number, FOREIGN KEY (County_Id) REFERENCES county(County_Id), FOREIGN KEY (Election_ID) REFERENCES election(Election_ID), PRIMARY KEY (County_Id, Election_ID))"
            },
            {
                "User": "Let's record the total votes for Howard county in the last election as 15000.",
                "Answer": "INSERT INTO county_votes (County_Id, Total_votes, Election_ID) VALUES (1, 15000, (SELECT Election_ID FROM election ORDER BY Election_ID DESC LIMIT 1))"
            },
            {
                "User": "Update the total votes for Baltimore County to 20000 for the same election.",
                "Answer": "UPDATE county_votes SET Total_votes = 20000 WHERE County_Id = 2 AND Election_ID = (SELECT Election_ID FROM election ORDER BY Election_ID DESC LIMIT 1)"
            },
            {
                "User": "Which county had more votes in the last election, Howard or Baltimore County?",
                "Answer": "SELECT County_name FROM county WHERE County_Id = (SELECT County_Id FROM county_votes WHERE Election_ID = (SELECT Election_ID FROM election ORDER BY Election_ID DESC LIMIT 1) ORDER BY Total_votes DESC LIMIT 1)"
            },
            {
                "User": "Add a new column to track the area of each county in square miles.",
                "Answer": "ALTER TABLE county ADD COLUMN Area_sq_mi number"
            },
            {
                "User": "The area of Howard county is 253 square miles. Please update the record.",
                "Answer": "UPDATE county SET Area_sq_mi = 253 WHERE County_Id = 1"
            },
            {
                "User": "What is the total population and area of all counties combined?",
                "Answer": "SELECT SUM(Population) AS Total_Population, SUM(Area_sq_mi) AS Total_Area FROM county"
            },
            {
                "User": "Can you show me a list of all parties that participated in the 1998 elections?",
                "Answer": "SELECT Party FROM party WHERE Year = 1998"
            },
            {
                "User": "Let's add a new party to the database for the year 2023.",
                "Answer": "INSERT INTO party (Party_ID, Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate) VALUES ((SELECT MAX(Party_ID) + 1 FROM party), 2023, 'New Party', 'John Doe', 'Jane Smith', 'Mike Ross', 'Sarah Connor', 'Bruce Wayne')"
            },
            {
                "User": "I need to correct the governor name for the new party to 'John Smith'.",
                "Answer": "UPDATE party SET Governor = 'John Smith' WHERE Party = 'New Party' AND Year = 2023"
            },
            {
                "User": "Create a new table to track individual donations to parties.",
                "Answer": "CREATE TABLE donations (Donation_ID number PRIMARY KEY, Party_ID number, Donor_name text, Amount number, Donation_date date, FOREIGN KEY (Party_ID) REFERENCES party(Party_ID))"
            },
            {
                "User": "Add a record of a $500 donation to the New Party on March 15, 2023, by donor Alice Johnson.",
                "Answer": "INSERT INTO donations (Donation_ID, Party_ID, Donor_name, Amount, Donation_date) VALUES ((SELECT MAX(Donation_ID) + 1 FROM donations), (SELECT Party_ID FROM party WHERE Party = 'New Party' AND Year = 2023), 'Alice Johnson', 500, '2023-03-15')"
            }
        ]
    },
    {
        "idx": 626,
        "db": "college_3",
        "interaction": [
            {
                "User": "Can we add a new faculty member?",
                "Answer": "INSERT INTO Faculty (FacID, Lname, Fname, Rank, Sex, Phone, Room, Building) VALUES (1150, 'Brown', 'Susan', 'Assistant Professor', 'F', 5551234, '101A', 'NEB')"
            },
            {
                "User": "What is the new faculty member's phone number?",
                "Answer": "SELECT Phone FROM Faculty WHERE Fname = 'Susan' AND Lname = 'Brown'"
            },
            {
                "User": "Can we update Professor Goodrich's phone number to 3599?",
                "Answer": "UPDATE Faculty SET Phone = 3599 WHERE FacID = 1121"
            },
            {
                "User": "I want to enroll a new student into the database. His name is John Doe, a 20-year-old male, majoring in Biology with an advisor ID 7712, and he lives in New York.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 20, 7712, 'NYC')"
            },
            {
                "User": "Can we add a new course called 'Data Science Fundamentals' with 4 credits offered by the Computer Science department?",
                "Answer": "INSERT INTO Course (CID, CName, Credits, Instructor, Days, Hours, DNO) VALUES ('600.400', 'Data Science Fundamentals', 4, 6112, 'TTh', '10', 600)"
            },
            {
                "User": "Let's create a new table to track the extracurricular activities of students.",
                "Answer": "CREATE TABLE Extracurricular_Activities (StuID number, ActivityName text, Position text, HoursPerWeek number, PRIMARY KEY (StuID, ActivityName))"
            },
            {
                "User": "Add John Doe as a member of the 'Chess Club' where he is the 'President' and dedicates 2 hours per week.",
                "Answer": "INSERT INTO Extracurricular_Activities (StuID, ActivityName, Position, HoursPerWeek) VALUES (1005, 'Chess Club', 'President', 2)"
            },
            {
                "User": "How many students are in the 'Chess Club'?",
                "Answer": "SELECT COUNT(*) FROM Extracurricular_Activities WHERE ActivityName = 'Chess Club'"
            },
            {
                "User": "Can we add a new column 'Email' to the Faculty table to store their email addresses?",
                "Answer": "ALTER TABLE Faculty ADD COLUMN Email text"
            },
            {
                "User": "Update Professor Goodrich's email to 'mgoodrich@college.edu'.",
                "Answer": "UPDATE Faculty SET Email = 'mgoodrich@college.edu' WHERE FacID = 1121"
            },
            {
                "User": "What is the average age of students who are majoring in Biology?",
                "Answer": "SELECT AVG(Age) FROM Student WHERE Major = 20"
            },
            {
                "User": "Can you list all courses with their corresponding department names?",
                "Answer": "SELECT C.CID, C.CName, D.DName FROM Course C JOIN Department D ON C.DNO = D.DNO"
            }
        ]
    },
    {
        "idx": 627,
        "db": "scientist_1",
        "interaction": [
            {
                "User": "Can we start tracking the email addresses of scientists?",
                "Answer": "ALTER TABLE Scientists ADD COLUMN Email text;"
            },
            {
                "User": "Add the email address 'm.rogers@datasci.org' for Michael Rogers.",
                "Answer": "UPDATE Scientists SET Email = 'm.rogers@datasci.org' WHERE Name = 'Michael Rogers';"
            },
            {
                "User": "What is the email address of the scientist named Carol Smith?",
                "Answer": "SELECT Email FROM Scientists WHERE Name = 'Carol Smith';"
            },
            {
                "User": "Please add a new project with code 'Bio12' and name 'Genetics Breakthroughs' that took 300 hours.",
                "Answer": "INSERT INTO Projects (Code, Name, Hours) VALUES ('Bio12', 'Genetics Breakthroughs', 300);"
            },
            {
                "User": "Which project has the second highest number of hours?",
                "Answer": "SELECT Name FROM Projects ORDER BY Hours DESC LIMIT 1 OFFSET 1;"
            },
            {
                "User": "Assign Carol Smith to the new Genetics Breakthroughs project.",
                "Answer": "INSERT INTO AssignedTo (Scientist, Project) VALUES ((SELECT SSN FROM Scientists WHERE Name = 'Carol Smith'), 'Bio12');"
            },
            {
                "User": "Create a new table to track project budgets with columns for project code, budget amount, and currency.",
                "Answer": "CREATE TABLE ProjectBudgets (ProjectCode text PRIMARY KEY, BudgetAmount number, Currency text);"
            },
            {
                "User": "Add budget information for project AeH1 with a budget of 5000 dollars.",
                "Answer": "INSERT INTO ProjectBudgets (ProjectCode, BudgetAmount, Currency) VALUES ('AeH1', 5000, 'USD');"
            },
            {
                "User": "What is the budget amount for the project with code 'AeH1'?",
                "Answer": "SELECT BudgetAmount FROM ProjectBudgets WHERE ProjectCode = 'AeH1';"
            },
            {
                "User": "Update the budget of the Aerodynamics and Bridge Design project to 7500 dollars.",
                "Answer": "UPDATE ProjectBudgets SET BudgetAmount = 7500 WHERE ProjectCode = (SELECT Code FROM Projects WHERE Name = 'Aerodynamics and Bridge Design');"
            },
            {
                "User": "List all projects with their budget amounts and currency.",
                "Answer": "SELECT Projects.Name, ProjectBudgets.BudgetAmount, ProjectBudgets.Currency FROM Projects JOIN ProjectBudgets ON Projects.Code = ProjectBudgets.ProjectCode;"
            },
            {
                "User": "Who is assigned to the project with the highest budget?",
                "Answer": "SELECT Scientists.Name FROM Scientists JOIN AssignedTo ON Scientists.SSN = AssignedTo.Scientist WHERE AssignedTo.Project = (SELECT ProjectCode FROM ProjectBudgets ORDER BY BudgetAmount DESC LIMIT 1);"
            },
            {
                "User": "Increase the hours spent on the Genetics Breakthroughs project by 50.",
                "Answer": "UPDATE Projects SET Hours = Hours + 50 WHERE Code = 'Bio12';"
            }
        ]
    },
    {
        "idx": 628,
        "db": "soccer_1",
        "interaction": [
            {
                "User": "Can we add a new player with the name John Doe, born on 1990-01-01, with a height of 180 cm and a weight of 75 kg?",
                "Answer": "INSERT INTO Player (player_name, birthday, height, weight) VALUES ('John Doe', '1990-01-01', 180, 75)"
            },
            {
                "User": "Now, I need to update John Doe's height to 185 cm. Can you do that?",
                "Answer": "UPDATE Player SET height = 185 WHERE player_name = 'John Doe'"
            },
            {
                "User": "What is the updated weight and height for John Doe?",
                "Answer": "SELECT weight, height FROM Player WHERE player_name = 'John Doe'"
            },
            {
                "User": "Can you create a new table to track the teams' sponsors with the sponsor's name and the amount they're contributing?",
                "Answer": "CREATE TABLE Team_Sponsors (id INTEGER PRIMARY KEY, team_id INTEGER, sponsor_name TEXT, contribution_amount NUMBER)"
            },
            {
                "User": "Let's add a sponsor for the team KRC Genk. The sponsor is 'Acme Corp' contributing 500000.",
                "Answer": "INSERT INTO Team_Sponsors (team_id, sponsor_name, contribution_amount) VALUES ((SELECT id FROM Team WHERE team_long_name = 'KRC Genk'), 'Acme Corp', 500000)"
            },
            {
                "User": "Can you show me all teams with their sponsors and the amount contributed?",
                "Answer": "SELECT T.team_long_name, S.sponsor_name, S.contribution_amount FROM Team AS T LEFT JOIN Team_Sponsors AS S ON T.id = S.team_id"
            },
            {
                "User": "I'd like to track the players' agents as well. Can we add a column for the agent's name in the Player table?",
                "Answer": "ALTER TABLE Player ADD COLUMN agent_name TEXT"
            },
            {
                "User": "Let's set John Doe's agent to 'Jane Smith'.",
                "Answer": "UPDATE Player SET agent_name = 'Jane Smith' WHERE player_name = 'John Doe'"
            },
            {
                "User": "Who is John Doe's agent now?",
                "Answer": "SELECT agent_name FROM Player WHERE player_name = 'John Doe'"
            },
            {
                "User": "Can we see the top 3 players with the highest overall rating and their agents?",
                "Answer": "SELECT P.player_name, P.agent_name, PA.overall_rating FROM Player AS P JOIN Player_Attributes AS PA ON P.player_api_id = PA.player_api_id ORDER BY PA.overall_rating DESC LIMIT 3"
            },
            {
                "User": "I want to record the date when a player joins a team. Should we add a 'join_date' column to the Player table?",
                "Answer": "ALTER TABLE Player ADD COLUMN join_date TEXT"
            },
            {
                "User": "Let's set John Doe's join date to the current date.",
                "Answer": "UPDATE Player SET join_date = CURRENT_DATE WHERE player_name = 'John Doe'"
            },
            {
                "User": "What is John Doe's join date?",
                "Answer": "SELECT join_date FROM Player WHERE player_name = 'John Doe'"
            },
            {
                "User": "Can you update the team attributes for 'KRC Genk' by setting their 'buildUpPlaySpeed' to 70?",
                "Answer": "UPDATE Team_Attributes SET buildUpPlaySpeed = 70 WHERE team_api_id = (SELECT team_api_id FROM Team WHERE team_long_name = 'KRC Genk')"
            }
        ]
    },
    {
        "idx": 629,
        "db": "dorm_1",
        "interaction": [
            {
                "User": "Can we add a new dorm to the database?",
                "Answer": "INSERT INTO dorm (dormid, dorm_name, student_capacity, gender) VALUES (150, 'New Horizon Hall', 200, 'X')"
            },
            {
                "User": "What is the dorm ID of the new dorm we just added?",
                "Answer": "SELECT dormid FROM dorm WHERE dorm_name = 'New Horizon Hall'"
            },
            {
                "User": "I want to update the student capacity of 'Smith Hall' to 90. What is the SQL statement for that?",
                "Answer": "UPDATE dorm SET student_capacity = 90 WHERE dorm_name = 'Smith Hall'"
            },
            {
                "User": "Can we add a new amenity called 'Gaming Room'?",
                "Answer": "INSERT INTO dorm_amenity (amenid, amenity_name) VALUES (903, 'Gaming Room')"
            },
            {
                "User": "Which dorms have a 'Study Room' amenity?",
                "Answer": "SELECT D.dorm_name FROM dorm_amenity AS A JOIN has_amenity AS H ON A.amenid = H.amenid JOIN dorm AS D ON H.dormid = D.dormid WHERE A.amenity_name = 'Study Room'"
            },
            {
                "User": "Let's assign the 'Gaming Room' amenity to 'New Horizon Hall'.",
                "Answer": "INSERT INTO has_amenity (dormid, amenid) SELECT dormid, 903 FROM dorm WHERE dorm_name = 'New Horizon Hall'"
            },
            {
                "User": "I want to add a new student named 'John Doe', aged 20, male, majoring in 601, advised by 1121, from 'NYC'. What's the SQL for this insertion?",
                "Answer": "INSERT INTO student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 601, 1121, 'NYC')"
            },
            {
                "User": "Which dorm has the most amenities?",
                "Answer": "SELECT D.dormid, D.dorm_name, COUNT(H.amenid) AS amenity_count FROM dorm AS D JOIN has_amenity AS H ON D.dormid = H.dormid GROUP BY D.dormid, D.dorm_name ORDER BY amenity_count DESC LIMIT 1"
            },
            {
                "User": "Can we create a table to track dorm maintenance requests?",
                "Answer": "CREATE TABLE dorm_maintenance (maint_id number PRIMARY KEY, dormid number, issue_description text, request_date date, status text)"
            },
            {
                "User": "Let's log a maintenance request for 'New Horizon Hall' for a broken window.",
                "Answer": "INSERT INTO dorm_maintenance (maint_id, dormid, issue_description, request_date, status) SELECT 1, dormid, 'Broken window', CURRENT_DATE, 'Pending' FROM dorm WHERE dorm_name = 'New Horizon Hall'"
            },
            {
                "User": "How many students are from 'NYC' and live in 'Smith Hall'?",
                "Answer": "SELECT COUNT(*) FROM student AS S JOIN lives_in AS L ON S.StuID = L.stuid JOIN dorm AS D ON L.dormid = D.dormid WHERE S.city_code = 'NYC' AND D.dorm_name = 'Smith Hall'"
            },
            {
                "User": "Can we add a column to track the enrollment year for students?",
                "Answer": "ALTER TABLE student ADD COLUMN enrollment_year number"
            },
            {
                "User": "Update the enrollment year for 'John Doe' to 2023.",
                "Answer": "UPDATE student SET enrollment_year = 2023 WHERE Fname = 'John' AND LName = 'Doe'"
            }
        ]
    },
    {
        "idx": 630,
        "db": "assets_maintenance",
        "interaction": [
            {
                "User": "Can we add a new maintenance company called 'TechSolutions' with an address in 'Silicon Valley'?",
                "Answer": "INSERT INTO Third_Party_Companies (company_id, company_type, company_name, company_address) VALUES (16, 'Maintenance Contractor', 'TechSolutions', 'Silicon Valley')"
            },
            {
                "User": "I noticed we don't track the email addresses of our third-party companies. Can we add that?",
                "Answer": "ALTER TABLE Third_Party_Companies ADD COLUMN company_email text"
            },
            {
                "User": "Please update the email address for 'TechSolutions' to 'contact@techsolutions.com'.",
                "Answer": "UPDATE Third_Party_Companies SET company_email = 'contact@techsolutions.com' WHERE company_name = 'TechSolutions'"
            },
            {
                "User": "Can you tell me which assets are maintained by 'TechSolutions'?",
                "Answer": "SELECT A.asset_id, A.asset_details FROM Assets AS A JOIN Maintenance_Contracts AS M ON A.maintenance_contract_id = M.maintenance_contract_id JOIN Third_Party_Companies AS T ON M.maintenance_contract_company_id = T.company_id WHERE T.company_name = 'TechSolutions'"
            },
            {
                "User": "We need to record when assets are last serviced. Can we add a 'last_serviced_date' column to the Assets table?",
                "Answer": "ALTER TABLE Assets ADD COLUMN last_serviced_date time"
            },
            {
                "User": "Let's log that asset ID 2 was serviced today.",
                "Answer": "UPDATE Assets SET last_serviced_date = CURRENT_DATE WHERE asset_id = 2"
            },
            {
                "User": "I want to create a new table to track staff certifications, including the certification name and expiry date.",
                "Answer": "CREATE TABLE Staff_Certifications (staff_id number, certification_name text, expiry_date time, FOREIGN KEY (staff_id) REFERENCES Staff(staff_id))"
            },
            {
                "User": "Which engineers have electrical skills?",
                "Answer": "SELECT E.first_name, E.last_name FROM Maintenance_Engineers AS E JOIN Engineer_Skills AS S ON E.engineer_id = S.engineer_id JOIN Skills AS K ON S.skill_id = K.skill_id WHERE K.skill_code = 'ELEC'"
            },
            {
                "User": "Let's record a new fault for asset ID 3 with the description 'battery not charging'.",
                "Answer": "INSERT INTO Fault_Log (fault_log_entry_id, asset_id, recorded_by_staff_id, fault_log_entry_datetime, fault_description) VALUES (16, 3, 1, CURRENT_TIMESTAMP, 'battery not charging')"
            }
        ]
    },
    {
        "idx": 631,
        "db": "csu_1",
        "interaction": [
            {
                "User": "Can you add a new campus called 'California State University-Discovery Bay' located in 'Discovery Bay', 'Contra Costa', founded in 2023?",
                "Answer": "INSERT INTO Campuses (Campus, Location, County, Year) VALUES ('California State University-Discovery Bay', 'Discovery Bay', 'Contra Costa', 2023)"
            },
            {
                "User": "What is the total number of campuses now?",
                "Answer": "SELECT COUNT(*) FROM Campuses"
            },
            {
                "User": "Please update the CampusFee for 'California State University-Bakersfield' to $2500 for the year 2023.",
                "Answer": "UPDATE csu_fees SET CampusFee = 2500 WHERE Campus = (SELECT Id FROM Campuses WHERE Campus = 'California State University-Bakersfield') AND Year = 2023"
            },
            {
                "User": "Can we see the fees for all campuses for the year 2023?",
                "Answer": "SELECT t1.Campus, t2.CampusFee FROM Campuses AS t1 JOIN csu_fees AS t2 ON t1.Id = t2.Campus WHERE t2.Year = 2023"
            },
            {
                "User": "I'd like to add a new table for campus events. Can you create it?",
                "Answer": "CREATE TABLE campus_events (Id number PRIMARY KEY, Campus number, EventName text, EventDate date, Description text, FOREIGN KEY (Campus) REFERENCES Campuses(Id))"
            },
            {
                "User": "Let's add an event called 'Spring Symposium' for 'California State University-Discovery Bay' on April 15, 2023.",
                "Answer": "INSERT INTO campus_events (Campus, EventName, EventDate, Description) VALUES ((SELECT Id FROM Campuses WHERE Campus = 'California State University-Discovery Bay'), 'Spring Symposium', '2023-04-15', 'Annual academic symposium')"
            },
            {
                "User": "I realized the 'Spring Symposium' event is on April 20, not April 15. Can you update it?",
                "Answer": "UPDATE campus_events SET EventDate = '2023-04-20' WHERE EventName = 'Spring Symposium' AND Campus = (SELECT Id FROM Campuses WHERE Campus = 'California State University-Discovery Bay')"
            },
            {
                "User": "Can you show me the updated list of events for 'California State University-Discovery Bay'?",
                "Answer": "SELECT EventName, EventDate, Description FROM campus_events WHERE Campus = (SELECT Id FROM Campuses WHERE Campus = 'California State University-Discovery Bay')"
            }
        ]
    },
    {
        "idx": 632,
        "db": "products_for_hire",
        "interaction": [
            {
                "User": "Could you add a new column 'email' to the Customers table to store their email addresses?",
                "Answer": "ALTER TABLE Customers ADD email text;"
            },
            {
                "User": "Great, now please update the email for customer with ID 1 to 'geovany.homenick@example.com'.",
                "Answer": "UPDATE Customers SET email = 'geovany.homenick@example.com' WHERE customer_id = 1;"
            },
            {
                "User": "I need to insert a new discount coupon that was issued today with an amount of 750. What would be the new coupon ID?",
                "Answer": "INSERT INTO Discount_Coupons (date_issued, coupon_amount) VALUES (CURRENT_TIMESTAMP, 750);"
            },
            {
                "User": "Can you list all products for hire that have a daily hire cost more than 30?",
                "Answer": "SELECT * FROM Products_for_Hire WHERE daily_hire_cost > 30;"
            },
            {
                "User": "We have a new product to add to the Products_for_Hire. It's a 'Furniture' item named 'Vintage Sofa' with a daily hire cost of 45.75 and the description 'Classic vintage sofa in mint condition'.",
                "Answer": "INSERT INTO Products_for_Hire (product_type_code, daily_hire_cost, product_name, product_description) VALUES ('Furniture', 45.75, 'Vintage Sofa', 'Classic vintage sofa in mint condition');"
            },
            {
                "User": "I'd like to know which customers have an outstanding amount greater than 100 in their bookings.",
                "Answer": "SELECT T1.customer_id, T1.first_name, T1.last_name, T2.amount_outstanding FROM Customers T1 JOIN Bookings T2 ON T1.customer_id = T2.customer_id WHERE T2.amount_outstanding > 100;"
            },
            {
                "User": "Let's create a new table to track customer feedback with columns 'feedback_id', 'customer_id', 'feedback_text', and 'feedback_date'.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text, feedback_date time);"
            },
            {
                "User": "Insert a feedback record for the customer with ID 2. The feedback is 'Very satisfied with the service' and it was given today.",
                "Answer": "INSERT INTO Customer_Feedback (customer_id, feedback_text, feedback_date) VALUES (2, 'Very satisfied with the service', CURRENT_TIMESTAMP);"
            },
            {
                "User": "Can we update the booking status to 'Completed' for all bookings where 'returned_damaged_yn' is '0' and 'amount_outstanding' is 0?",
                "Answer": "UPDATE Bookings SET booking_status_code = 'Completed' WHERE returned_damaged_yn = '0' AND amount_outstanding = 0;"
            }
        ]
    },
    {
        "idx": 633,
        "db": "network_2",
        "interaction": [
            {
                "User": "Can you add a new person named 'Eve' who is 28 years old, lives in 'seattle', is 'female', and works as a 'designer'?",
                "Answer": "INSERT INTO person (name, age, city, gender, job) VALUES ('Eve', 28, 'seattle', 'female', 'designer')"
            },
            {
                "User": "How many people do we have from 'seattle'?",
                "Answer": "SELECT COUNT(*) FROM person WHERE city = 'seattle'"
            },
            {
                "User": "I want to update Bob's job to 'senior engineer'.",
                "Answer": "UPDATE person SET job = 'senior engineer' WHERE name = 'Bob'"
            },
            {
                "User": "What is the average age of our users?",
                "Answer": "SELECT AVG(age) FROM person"
            },
            {
                "User": "Can you create a table to track the hobbies of each person?",
                "Answer": "CREATE TABLE PersonHobbies (name TEXT, hobby TEXT, PRIMARY KEY (name, hobby))"
            },
            {
                "User": "Let's add 'reading' as a hobby for Alice.",
                "Answer": "INSERT INTO PersonHobbies (name, hobby) VALUES ('Alice', 'reading')"
            },
            {
                "User": "Can we also add 'hiking' as a hobby for Zach?",
                "Answer": "INSERT INTO PersonHobbies (name, hobby) VALUES ('Zach', 'hiking')"
            },
            {
                "User": "Show me all the hobbies for people under the age of 40.",
                "Answer": "SELECT p.name, ph.hobby FROM person p INNER JOIN PersonHobbies ph ON p.name = ph.name WHERE p.age < 40"
            },
            {
                "User": "Add a new column 'relationship_status' to the 'Person' table.",
                "Answer": "ALTER TABLE person ADD COLUMN relationship_status TEXT"
            },
            {
                "User": "Set the relationship status of Alice to 'single'.",
                "Answer": "UPDATE person SET relationship_status = 'single' WHERE name = 'Alice'"
            },
            {
                "User": "How many people in the database are single?",
                "Answer": "SELECT COUNT(*) FROM person WHERE relationship_status = 'single'"
            },
            {
                "User": "Who became friends most recently?",
                "Answer": "SELECT name, friend FROM PersonFriend ORDER BY year DESC LIMIT 1"
            }
        ]
    },
    {
        "idx": 634,
        "db": "train_station",
        "interaction": [
            {
                "User": "Can you add a new station called 'Green Park' with an ID of 13?",
                "Answer": "INSERT INTO station (Station_ID, Name) VALUES (13, 'Green Park')"
            },
            {
                "User": "Also, set the annual entry and exit for 'Green Park' to 50,000 and its location to 'London'.",
                "Answer": "UPDATE station SET Annual_entry_exit = 50000, Location = 'London' WHERE Name = 'Green Park'"
            },
            {
                "User": "What is the total number of passengers for all stations now?",
                "Answer": "SELECT SUM(Total_Passengers) FROM station"
            },
            {
                "User": "Can you update the total passengers for 'Green Park' to be the sum of its annual entry and exit?",
                "Answer": "UPDATE station SET Total_Passengers = Annual_entry_exit WHERE Name = 'Green Park'"
            },
            {
                "User": "Create a new table for staff members with an ID, name, and station they work at.",
                "Answer": "CREATE TABLE staff (Staff_ID number PRIMARY KEY, Name text, Station_ID number)"
            },
            {
                "User": "Add a staff member with ID 1, name 'Alice Johnson', who works at station ID 13.",
                "Answer": "INSERT INTO staff (Staff_ID, Name, Station_ID) VALUES (1, 'Alice Johnson', 13)"
            },
            {
                "User": "How many staff members are there at 'Green Park' station?",
                "Answer": "SELECT COUNT(*) FROM staff WHERE Station_ID = (SELECT Station_ID FROM station WHERE Name = 'Green Park')"
            },
            {
                "User": "Can you add a column for the number of restrooms to the station table?",
                "Answer": "ALTER TABLE station ADD COLUMN Number_of_Restrooms number"
            },
            {
                "User": "Set the number of restrooms for 'London Waterloo' to 5.",
                "Answer": "UPDATE station SET Number_of_Restrooms = 5 WHERE Name = 'London Waterloo'"
            },
            {
                "User": "Which station has the most platforms and how many?",
                "Answer": "SELECT Name, Number_of_Platforms FROM station ORDER BY Number_of_Platforms DESC LIMIT 1"
            },
            {
                "User": "Link the 'Ananthapuri Express' train to 'Green Park' station.",
                "Answer": "INSERT INTO train_station (Train_ID, Station_ID) VALUES ((SELECT Train_ID FROM train WHERE Name = 'Ananthapuri Express'), 13)"
            },
            {
                "User": "List all trains that stop at 'Green Park'.",
                "Answer": "SELECT T.Name FROM train AS T JOIN train_station AS TS ON T.Train_ID = TS.Train_ID WHERE TS.Station_ID = 13"
            },
            {
                "User": "How many stations are there in London?",
                "Answer": "SELECT COUNT(*) FROM station WHERE Location = 'London'"
            },
            {
                "User": "Update the annual interchanges for 'London Bridge' to be 10% higher.",
                "Answer": "UPDATE station SET Annual_interchanges = Annual_interchanges * 1.1 WHERE Name = 'London Bridge'"
            }
        ]
    },
    {
        "idx": 635,
        "db": "company_employee",
        "interaction": [
            {
                "User": "Can you add a new employee named John Doe, aged 30, from the United States, who graduated from MIT?",
                "Answer": "INSERT INTO people (People_ID, Age, Name, Nationality, Graduation_College) VALUES (8, 30, 'John Doe', 'United States', 'MIT')"
            },
            {
                "User": "Please list all the employees now.",
                "Answer": "SELECT * FROM people"
            },
            {
                "User": "Can we record the department for each employee? We need to add a new column 'Department' to the people table.",
                "Answer": "ALTER TABLE people ADD Department text"
            },
            {
                "User": "Now, set John Doe's department to 'Research and Development'.",
                "Answer": "UPDATE people SET Department = 'Research and Development' WHERE Name = 'John Doe'"
            },
            {
                "User": "Create a new table to track employee salaries with columns for People_ID, Salary, and Tax_Rate.",
                "Answer": "CREATE TABLE salaries (People_ID number PRIMARY KEY, Salary number, Tax_Rate number)"
            },
            {
                "User": "Insert salary information for John Doe with a salary of 120000 and a tax rate of 30%.",
                "Answer": "INSERT INTO salaries (People_ID, Salary, Tax_Rate) VALUES (8, 120000, 30)"
            },
            {
                "User": "How many employees are in the 'Research and Development' department?",
                "Answer": "SELECT COUNT(*) FROM people WHERE Department = 'Research and Development'"
            },
            {
                "User": "Show me the total assets and market value for companies in the 'Oil and gas' industry.",
                "Answer": "SELECT SUM(Assets_in_Billion) AS Total_Assets, SUM(Market_Value_in_Billion) AS Market_Value FROM company WHERE Industry = 'Oil and gas'"
            },
            {
                "User": "Update the sales in billion for ExxonMobil to 450.0.",
                "Answer": "UPDATE company SET Sales_in_Billion = 450.0 WHERE Name = 'ExxonMobil'"
            }
        ]
    },
    {
        "idx": 636,
        "db": "twitter_1",
        "interaction": [
            {
                "User": "Can you add a new user profile for Peter Parker? The uid, name, email, partitionid, followers are 8, 'Peter Parker', 'pp@dailybugle.com', 3, 0",
                "Answer": "INSERT INTO user_profiles (uid, name, email, partitionid, followers) VALUES (8, 'Peter Parker', 'pp@dailybugle.com', 3, 0)"
            },
            {
                "User": "I'd like to know Peter Parker's email.",
                "Answer": "SELECT email FROM user_profiles WHERE name = 'Peter Parker'"
            },
            {
                "User": "Please update the number of followers for Black Widow to 40000000.",
                "Answer": "UPDATE user_profiles SET followers = 40000000 WHERE name = 'Black Widow'"
            },
            {
                "User": "Now, show me the top 3 users with the most followers.",
                "Answer": "SELECT name, followers FROM user_profiles ORDER BY followers DESC LIMIT 3"
            },
            {
                "User": "Can we track the location of the tweets? We need to add a new column for that.",
                "Answer": "ALTER TABLE tweets ADD COLUMN location text"
            },
            {
                "User": "Create a new table to log user activities, with columns for user ID, activity type, and timestamp.",
                "Answer": "CREATE TABLE user_activities (uid number, activity_type text, timestamp time, PRIMARY KEY (uid, timestamp))"
            },
            {
                "User": "Log a new activity for user Mary, indicating she posted a new tweet just now.",
                "Answer": "INSERT INTO user_activities (uid, activity_type, timestamp) VALUES (2, 'Posted Tweet', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Show me all the activities of Mary.",
                "Answer": "SELECT * FROM user_activities WHERE uid = (SELECT uid FROM user_profiles WHERE name = 'Mary')"
            },
            {
                "User": "Can you show me who Iron Man follows?",
                "Answer": "SELECT T2.name FROM follows AS T1 JOIN user_profiles AS T2 ON T1.f2 = T2.uid WHERE T1.f1 = (SELECT uid FROM user_profiles WHERE name = 'Iron Man')"
            },
            {
                "User": "Let's make a connection between Mary and Peter Parker. Insert a follow record for this.",
                "Answer": "INSERT INTO follows (f1, f2) VALUES ((SELECT uid FROM user_profiles WHERE name = 'Mary'), (SELECT uid FROM user_profiles WHERE name = 'Peter Parker'))"
            },
            {
                "User": "How many people is each user following?",
                "Answer": "SELECT T1.name, COUNT(*) as following_count FROM user_profiles as T1 JOIN follows as T2 ON T1.uid = T2.f1 GROUP BY T1.uid"
            },
            {
                "User": "Add a new column to user_profiles to store the date when the user joined.",
                "Answer": "ALTER TABLE user_profiles ADD COLUMN join_date date"
            },
            {
                "User": "Set the join date for all current users to January 1st, 2018.",
                "Answer": "UPDATE user_profiles SET join_date = '2018-01-01'"
            }
        ]
    },
    {
        "idx": 637,
        "db": "farm",
        "interaction": [
            {
                "User": "Can you add a new table to track the number of tractors on each farm?",
                "Answer": "CREATE TABLE farm_tractors (Farm_ID number PRIMARY KEY, Tractors number)"
            },
            {
                "User": "Please insert the tractor data for farm ID 1, they have 15 tractors.",
                "Answer": "INSERT INTO farm_tractors (Farm_ID, Tractors) VALUES (1, 15)"
            },
            {
                "User": "Farm ID 2 has acquired 10 tractors recently. Record this information as well.",
                "Answer": "INSERT INTO farm_tractors (Farm_ID, Tractors) VALUES (2, 10)"
            },
            {
                "User": "How many tractors are there in total across all farms?",
                "Answer": "SELECT SUM(Tractors) FROM farm_tractors"
            },
            {
                "User": "The population of 'Grand Falls/Grand-Sault' has grown to 6000. Update the record.",
                "Answer": "UPDATE city SET Population = 6000 WHERE Official_Name = 'Grand Falls/Grand-Sault'"
            },
            {
                "User": "I'd like to know which city has the highest population.",
                "Answer": "SELECT Official_Name FROM city ORDER BY Population DESC LIMIT 1"
            },
            {
                "User": "Add a new column to track the number of chickens on each farm.",
                "Answer": "ALTER TABLE farm ADD COLUMN Chickens number"
            },
            {
                "User": "Farm ID 3 has 3000 chickens, let's update this information.",
                "Answer": "UPDATE farm SET Chickens = 3000 WHERE Farm_ID = 3"
            },
            {
                "User": "Which farm has the highest number of animals in total, considering horses, cattle, pigs, sheep, goats, and now chickens?",
                "Answer": "SELECT Farm_ID FROM farm ORDER BY (Total_Horses + Total_Cattle + Pigs + Sheep_and_Goats + Chickens) DESC LIMIT 1"
            },
            {
                "User": "We need to track the participation of farms in competitions. Add a column for 'Participation_Count' to the farm table.",
                "Answer": "ALTER TABLE farm ADD COLUMN Participation_Count number"
            },
            {
                "User": "Calculate the participation count for each farm based on the competition records.",
                "Answer": "UPDATE farm SET Participation_Count = (SELECT COUNT(*) FROM competition_record WHERE competition_record.Farm_ID = farm.Farm_ID)"
            },
            {
                "User": "Which farm has participated in the most competitions?",
                "Answer": "SELECT Farm_ID FROM farm ORDER BY Participation_Count DESC LIMIT 1"
            },
            {
                "User": "Create a new table to log the yearly revenue for each farm.",
                "Answer": "CREATE TABLE farm_revenue (Farm_ID number, Year number, Revenue number, PRIMARY KEY (Farm_ID, Year))"
            },
            {
                "User": "Log the revenue for farm ID 1 for the year 2022 as $150000.",
                "Answer": "INSERT INTO farm_revenue (Farm_ID, Year, Revenue) VALUES (1, 2022, 150000)"
            },
            {
                "User": "Farm ID 2 has reported a revenue of $120000 for the year 2022. Add this data.",
                "Answer": "INSERT INTO farm_revenue (Farm_ID, Year, Revenue) VALUES (2, 2022, 120000)"
            }
        ]
    },
    {
        "idx": 638,
        "db": "restaurant_1",
        "interaction": [
            {
                "User": "Can we add a new student named John Doe with StuID 1036, age 20, male, major 601, advisor 1121, and city code 'NYC'?",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 601, 1121, 'NYC')"
            },
            {
                "User": "I'd like to update the address of Subway to '3333 St Paul St, Baltimore, MD 21218'.",
                "Answer": "UPDATE Restaurant SET Address = '3333 St Paul St, Baltimore, MD 21218' WHERE ResName = 'Subway'"
            },
            {
                "User": "Can we create a new table for student contact details?",
                "Answer": "CREATE TABLE Student_Contact (StuID number, Email text, PhoneNumber text, PRIMARY KEY (StuID))"
            },
            {
                "User": "Please add John Doe's contact details with email 'john.doe@example.com' and phone number '123-456-7890'.",
                "Answer": "INSERT INTO Student_Contact (StuID, Email, PhoneNumber) VALUES (1004, 'john.doe@example.com', '123-456-7890')"
            },
            {
                "User": "Could we add a column for student GPA to the Student table?",
                "Answer": "ALTER TABLE Student ADD COLUMN GPA number"
            },
            {
                "User": "Set the GPA for student with StuID 1004 to 3.5.",
                "Answer": "UPDATE Student SET GPA = 3.5 WHERE StuID = 1004"
            },
            {
                "User": "I want to know John Doe's email address.",
                "Answer": "SELECT Email FROM Student_Contact WHERE StuID = 1004"
            },
            {
                "User": "Can we add a new restaurant type called 'Fast Food' with description 'Quick and convenient.'?",
                "Answer": "INSERT INTO Restaurant_Type (ResTypeID, ResTypeName, ResTypeDescription) VALUES (3, 'Fast Food', 'Quick and convenient.')"
            },
            {
                "User": "Let's link the restaurant 'Subway' with the new 'Fast Food' type.",
                "Answer": "INSERT INTO Type_Of_Restaurant (ResID, ResTypeID) VALUES (1, 3)"
            },
            {
                "User": "How many students have visited 'Honeygrow'?",
                "Answer": "SELECT COUNT(*) FROM Visits_Restaurant WHERE ResID = 2"
            },
            {
                "User": "Who is the advisor for students majoring in 601?",
                "Answer": "SELECT DISTINCT Advisor FROM Student WHERE Major = 601"
            },
            {
                "User": "Show me the average GPA of students in each major.",
                "Answer": "SELECT Major, AVG(GPA) FROM Student GROUP BY Major"
            },
            {
                "User": "What is the highest amount spent at 'Subway' according to the records?",
                "Answer": "SELECT MAX(Spent) FROM Visits_Restaurant WHERE ResID = (SELECT ResID FROM Restaurant WHERE ResName = 'Subway')"
            },
            {
                "User": "Can we record the last visit date for each student in the Student table?",
                "Answer": "ALTER TABLE Student ADD COLUMN LastVisitDate date"
            }
        ]
    },
    {
        "idx": 639,
        "db": "gas_company",
        "interaction": [
            {
                "User": "Can you add a new company to the database with the following details: ID 11, Rank 7, Company Name 'Neptune Energy', Headquarters 'UK', Main Industry 'Oil and Gas', Sales 25.3 billion, Profits 5.1 billion, Assets 45.2 billion, and Market Value 50.0 billion?",
                "Answer": "INSERT INTO company (Company_ID, Rank, Company, Headquarters, Main_Industry, Sales_billion, Profits_billion, Assets_billion, Market_Value) VALUES (11, 7, 'Neptune Energy', 'UK', 'Oil and Gas', 25.3, 5.1, 45.2, 50.0)"
            },
            {
                "User": "Please update the sales figure for 'General Electric' to 155.4 billion.",
                "Answer": "UPDATE company SET Sales_billion = 155.4 WHERE Company = 'General Electric'"
            },
            {
                "User": "Could you create a new table to track the annual revenue of each gas station?",
                "Answer": "CREATE TABLE station_revenue (Station_ID number, Year number, Revenue_billion number, PRIMARY KEY (Station_ID, Year))"
            },
            {
                "User": "Add a record for station 2 in the year 2021 with a revenue of 1.2 billion to the station_revenue table.",
                "Answer": "INSERT INTO station_revenue (Station_ID, Year, Revenue_billion) VALUES (2, 2021, 1.2)"
            },
            {
                "User": "Can we add a column to track the number of employees in each gas station?",
                "Answer": "ALTER TABLE gas_station ADD COLUMN Employees_count number"
            },
            {
                "User": "Set the number of employees for station 1 as 12, for station 2 as 15, and for station 3 as 10.",
                "Answer": [
                    "UPDATE gas_station SET Employees_count = 12 WHERE Station_ID = 1;",
                    "UPDATE gas_station SET Employees_count = 15 WHERE Station_ID = 2;",
                    "UPDATE gas_station SET Employees_count = 10 WHERE Station_ID = 3"
                ]
            },
            {
                "User": "Show me the average profits of oil and gas companies.",
                "Answer": "SELECT AVG(Profits_billion) FROM company WHERE Main_Industry = 'Oil and Gas'"
            },
            {
                "User": "Can you provide a list of gas stations that opened after the year 2000 and their respective managers?",
                "Answer": "SELECT Station_ID, Manager_Name FROM gas_station WHERE Open_Year > 2000"
            },
            {
                "User": "I'd like to see the top 3 companies by market value in the database after adding Neptune Energy.",
                "Answer": "SELECT Company FROM company ORDER BY Market_Value DESC LIMIT 3"
            },
            {
                "User": "We need to track the main contact number for each gas station. Please add a 'Contact_Number' column to the gas_station table.",
                "Answer": "ALTER TABLE gas_station ADD COLUMN Contact_Number text"
            }
        ]
    },
    {
        "idx": 640,
        "db": "railway",
        "interaction": [
            {
                "User": "Can we add a new train that starts from 'York' and arrives at 'Newcastle'?",
                "Answer": "INSERT INTO train (Train_ID, Train_Num, Name, `From`, Arrival, Railway_ID) VALUES (10, '12345', 'York-Newcastle Express', 'York', '10:30', 1)"
            },
            {
                "User": "Now, how many trains originate from 'York'?",
                "Answer": "SELECT COUNT(*) FROM train WHERE `From` = 'York'"
            },
            {
                "User": "Please update the arrival time of the 'York-Newcastle Express' to 11:00.",
                "Answer": "UPDATE train SET Arrival = '11:00' WHERE Name = 'York-Newcastle Express'"
            },
            {
                "User": "I want to keep track of passenger capacity for each train. Can we add a 'Capacity' column?",
                "Answer": "ALTER TABLE train ADD Capacity number"
            },
            {
                "User": "Great, set the capacity of 'York-Newcastle Express' to 200.",
                "Answer": "UPDATE train SET Capacity = 200 WHERE Name = 'York-Newcastle Express'"
            },
            {
                "User": "Can you show me all trains with their capacity now?",
                "Answer": "SELECT Train_Num, Name, Capacity FROM train"
            },
            {
                "User": "I'd like to create a new table for train maintenance records. Could you do that?",
                "Answer": "CREATE TABLE maintenance (Maintenance_ID number PRIMARY KEY, Train_ID number, Date text, Description text, FOREIGN KEY (Train_ID) REFERENCES train (Train_ID))"
            },
            {
                "User": "Add a maintenance record for the 'York-Newcastle Express' for today with the description 'Routine check-up'.",
                "Answer": "INSERT INTO maintenance (Maintenance_ID, Train_ID, Date, Description) VALUES (1, 10, '2023-04-01', 'Routine check-up')"
            },
            {
                "User": "Which trains have had maintenance done this year?",
                "Answer": "SELECT t.Name FROM train t JOIN maintenance m ON t.Train_ID = m.Train_ID WHERE m.Date >= '2023-01-01'"
            },
            {
                "User": "Can you show me the maintenance records for the 'York-Newcastle Express'?",
                "Answer": "SELECT Date, Description FROM maintenance WHERE Train_ID = (SELECT Train_ID FROM train WHERE Name = 'York-Newcastle Express')"
            },
            {
                "User": "Let's add a new manager named 'Emily Clark' from 'Canada' who started in 2021.",
                "Answer": "INSERT INTO manager (Manager_ID, Name, Country, Working_year_starts, Age, Level) VALUES (8, 'Emily Clark', 'Canada', '2021', 38, 4)"
            },
            {
                "User": "Assign 'Emily Clark' as the manager of the railway with ID 1 starting from this year.",
                "Answer": "INSERT INTO railway_manage (Railway_ID, Manager_ID, From_Year) VALUES (1, 8, '2023')"
            },
            {
                "User": "Who is managing the railway with ID 1 now?",
                "Answer": "SELECT m.Name FROM manager m JOIN railway_manage rm ON m.Manager_ID = rm.Manager_ID WHERE rm.Railway_ID = 1 AND rm.From_Year = '2023'"
            },
            {
                "User": "Can we track the salary of each manager? We need to add a 'Salary' column to the manager table.",
                "Answer": "ALTER TABLE manager ADD Salary number"
            },
            {
                "User": "Update 'Emily Clark's salary to 75000.",
                "Answer": "UPDATE manager SET Salary = 75000 WHERE Name = 'Emily Clark'"
            }
        ]
    },
    {
        "idx": 641,
        "db": "protein_institute",
        "interaction": [
            {
                "User": "Can we track the number of publications for each institution?",
                "Answer": "ALTER TABLE Institution ADD COLUMN Publications INT;"
            },
            {
                "User": "Please add that Dakota State University has 150 publications.",
                "Answer": "UPDATE Institution SET Publications = 150 WHERE Institution_id = '1';"
            },
            {
                "User": "How many publications does Dakota State University have now?",
                "Answer": "SELECT Publications FROM Institution WHERE Institution = 'Dakota State University';"
            },
            {
                "User": "I would like to add a new institution with id 11. Please add 'Genetic Research Institute' located in 'Genetica, New State', founded in 2020, private type, with an enrollment of 200, team name 'Genes', primary conference 'BioTech', and building ID '4'.",
                "Answer": "INSERT INTO Institution (Institution_id, Institution, Location, Founded, Type, Enrollment, Team, Primary_Conference, building_id) VALUES ('11', 'Genetic Research Institute', 'Genetica, New State', 2020, 'Private', 200, 'Genes', 'BioTech', '4');"
            },
            {
                "User": "Show me all institutions along with their building names and the number of floors in those buildings.",
                "Answer": "SELECT I.Institution, B.Name, B.Floors FROM Institution AS I JOIN building AS B ON I.building_id = B.building_id;"
            },
            {
                "User": "What is the average sequence length of proteins studied in institutions located in Florida?",
                "Answer": "SELECT AVG(P.sequence_length) FROM protein AS P JOIN institution AS I ON P.Institution_id = I.Institution_id WHERE I.Location LIKE '%Florida%';"
            },
            {
                "User": "Create a new table to track protein classifications with columns 'classification_id', 'classification_name', and 'description'.",
                "Answer": "CREATE TABLE protein_classification (classification_id TEXT PRIMARY KEY, classification_name TEXT, description TEXT);"
            },
            {
                "User": "Insert three new classifications: ('c1', 'enzyme', 'catalyze chemical reactions'), ('c2', 'hormone', 'regulate body processes'), ('c3', 'structural', 'provide support and shape to cells').",
                "Answer": "INSERT INTO protein_classification (classification_id, classification_name, description) VALUES ('c1', 'enzyme', 'catalyze chemical reactions'), ('c2', 'hormone', 'regulate body processes'), ('c3', 'structural', 'provide support and shape to cells');"
            },
            {
                "User": "Can you show me the names and descriptions of all protein classifications we have?",
                "Answer": "SELECT classification_name, description FROM protein_classification;"
            },
            {
                "User": "Let's add a column for classification_id in the protein table to reference the protein classifications.",
                "Answer": "ALTER TABLE protein ADD COLUMN classification_id TEXT REFERENCES protein_classification(classification_id);"
            },
            {
                "User": "Update the protein 'uncharacterized protein C20orf117-like' to have the classification 'c1'.",
                "Answer": "UPDATE protein SET classification_id = 'c1' WHERE common_name = 'Tropical Clawed Frog';"
            }
        ]
    },
    {
        "idx": 642,
        "db": "perpetrator",
        "interaction": [
            {
                "User": "Can we add details about the weapons used by each perpetrator?",
                "Answer": "ALTER TABLE perpetrator ADD COLUMN Weapon_Type text"
            },
            {
                "User": "Sure, now please record that the perpetrator with ID 1 used a firearm.",
                "Answer": "UPDATE perpetrator SET Weapon_Type = 'Firearm' WHERE Perpetrator_ID = 1"
            },
            {
                "User": "What weapon was used by the perpetrator in Japan?",
                "Answer": "SELECT Weapon_Type FROM perpetrator WHERE Country = 'Japan'"
            },
            {
                "User": "Let's add a new perpetrator from Canada who injured 5 people.",
                "Answer": "INSERT INTO perpetrator (Perpetrator_ID, People_ID, Date, Year, Location, Country, Killed, Injured, Weapon_Type) VALUES (6, 11, '01.01 Jan. 1', 2021, 'Toronto', 'Canada', 0, 5, 'Unknown')"
            },
            {
                "User": "Now, how many perpetrators do we have on record?",
                "Answer": "SELECT COUNT(*) FROM perpetrator"
            },
            {
                "User": "Could you give me the average weight of the people from California?",
                "Answer": "SELECT AVG(Weight) FROM people WHERE \"Home Town\" LIKE '%CA'"
            },
            {
                "User": "I want to know the height of Tyrone Brayan.",
                "Answer": "SELECT Height FROM people WHERE Name = 'Tyrone Brayan'"
            },
            {
                "User": "Please create a new table for victims with ID, Name, and Status columns.",
                "Answer": "CREATE TABLE victims (Victim_ID number PRIMARY KEY, Name text, Status text)"
            },
            {
                "User": "Add a record for a victim named Emily Clark who was injured.",
                "Answer": "INSERT INTO victims (Victim_ID, Name, Status) VALUES (1, 'Emily Clark', 'Injured')"
            },
            {
                "User": "Can we compare the number of people killed in South Korea to those injured in China?",
                "Answer": "SELECT (SELECT SUM(Killed) FROM perpetrator WHERE Country = 'South Korea') AS Killed_SK, (SELECT SUM(Injured) FROM perpetrator WHERE Country = 'China') AS Injured_C"
            },
            {
                "User": "I need to update the record for perpetrator ID 2 to reflect 35 injuries instead of 16.",
                "Answer": "UPDATE perpetrator SET Injured = 35 WHERE Perpetrator_ID = 2"
            },
            {
                "User": "Let's add a 'Description' column to the people table to add more details about them.",
                "Answer": "ALTER TABLE people ADD COLUMN Description text"
            },
            {
                "User": "Update Ron Baxter's description to 'Suspect in multiple cases'.",
                "Answer": "UPDATE people SET Description = 'Suspect in multiple cases' WHERE People_ID = 1"
            }
        ]
    },
    {
        "idx": 643,
        "db": "network_2",
        "interaction": [
            {
                "User": "Can we add a new person named Emma who is 28 years old, lives in Seattle, is female, and works as a designer?",
                "Answer": "INSERT INTO Person (name, age, city, gender, job) VALUES ('Emma', 28, 'Seattle', 'female', 'designer')"
            },
            {
                "User": "Now, how many designers do we have in the database?",
                "Answer": "SELECT COUNT(*) FROM Person WHERE job = 'designer'"
            },
            {
                "User": "I'd like to update Bob's job title to 'senior engineer'.",
                "Answer": "UPDATE Person SET job = 'senior engineer' WHERE name = 'Bob'"
            },
            {
                "User": "List all friends of Bob after the update.",
                "Answer": "SELECT friend FROM PersonFriend WHERE name = 'Bob'"
            },
            {
                "User": "Can we add a column 'birthday' to the Person table to store their birthdays?",
                "Answer": "ALTER TABLE Person ADD COLUMN birthday DATE"
            },
            {
                "User": "Please set Alice's birthday to 1995-04-15.",
                "Answer": "UPDATE Person SET birthday = '1995-04-15' WHERE name = 'Alice'"
            },
            {
                "User": "How many people in the database have a known birthday now?",
                "Answer": "SELECT COUNT(*) FROM Person WHERE birthday IS NOT NULL"
            },
            {
                "User": "Yes, please create a table for hobbies with columns for name and hobby.",
                "Answer": "CREATE TABLE PersonHobbies (name TEXT, hobby TEXT)"
            },
            {
                "User": "Add a hobby 'coding' for Bob in the new table.",
                "Answer": "INSERT INTO PersonHobbies (name, hobby) VALUES ('Bob', 'coding')"
            },
            {
                "User": "Can you show me all the hobbies we have recorded so far?",
                "Answer": "SELECT * FROM PersonHobbies"
            },
            {
                "User": "Who in the database is from Seattle?",
                "Answer": "SELECT name FROM Person WHERE city = 'Seattle'"
            },
            {
                "User": "Let's record that Emma is friends with Alice since 2021.",
                "Answer": "INSERT INTO PersonFriend (name, friend, year) VALUES ('Emma', 'Alice', 2021)"
            },
            {
                "User": "Now, how many friends does Alice have?",
                "Answer": "SELECT COUNT(*) FROM PersonFriend WHERE name = 'Alice' OR friend = 'Alice'"
            },
            {
                "User": "I think we should also track the duration of each friendship. Can we add that to the PersonFriend table?",
                "Answer": "ALTER TABLE PersonFriend ADD COLUMN duration_years NUMBER"
            },
            {
                "User": "Set the duration of Alice and Bob's friendship to 10 years.",
                "Answer": "UPDATE PersonFriend SET duration_years = 10 WHERE name = 'Alice' AND friend = 'Bob'"
            }
        ]
    },
    {
        "idx": 644,
        "db": "musical",
        "interaction": [
            {
                "User": "Can you add a record for a new musical that was nominated for a Tony Award in 2021?",
                "Answer": "INSERT INTO musical (Musical_ID, Name, Year, Award, Category, Nominee, Result) VALUES (8, 'Hamilton', 2021, 'Tony Award', 'Best Musical', 'Lin-Manuel Miranda', 'Nominated')"
            },
            {
                "User": "Who was nominated for the Best Musical in 2021?",
                "Answer": "SELECT Nominee FROM musical WHERE Year = 2021 AND Category = 'Best Musical'"
            },
            {
                "User": "What are the names of the musicals that were nominated in 1986?",
                "Answer": "SELECT Name FROM musical WHERE Year = 1986 AND Result = 'Nominated'"
            },
            {
                "User": "I realized we don't have a column for the number of performances. Can you add that to the musicals table?",
                "Answer": "ALTER TABLE musical ADD COLUMN Performances number"
            },
            {
                "User": "Now, can you update the number of performances for 'The Phantom of the Opera' to 13000?",
                "Answer": "UPDATE musical SET Performances = 13000 WHERE Name = 'The Phantom of the Opera'"
            },
            {
                "User": "Which musical has the most performances?",
                "Answer": "SELECT Name FROM musical ORDER BY Performances DESC LIMIT 1"
            },
            {
                "User": "Can you tell me the average age of actors in 'Les Misérables'?",
                "Answer": "SELECT AVG(age) FROM actor WHERE Musical_ID = (SELECT Musical_ID FROM musical WHERE Name = 'Les Misérables')"
            },
            {
                "User": "I'd like to know the character played by the youngest actor in 'Wicked'.",
                "Answer": "SELECT Character FROM actor WHERE Musical_ID = (SELECT Musical_ID FROM musical WHERE Name = 'Wicked') ORDER BY age ASC LIMIT 1"
            },
            {
                "User": "Let's create a new table for directors. Can you do that?",
                "Answer": "CREATE TABLE director (Director_ID number PRIMARY KEY, Name text, Musical_ID number, Award text)"
            },
            {
                "User": "Add a record for the director of 'Hamilton' who won a Tony Award.",
                "Answer": "INSERT INTO director (Director_ID, Name, Musical_ID, Award) VALUES (1, 'Thomas Kail', 8, 'Tony Award')"
            },
            {
                "User": "Who are the directors who have won a Tony Award?",
                "Answer": "SELECT Name FROM director WHERE Award = 'Tony Award'"
            },
            {
                "User": "Can you link the actor table with the musical table to find the names of actors and the musicals they performed in?",
                "Answer": "SELECT actor.Name, musical.Name FROM actor INNER JOIN musical ON actor.Musical_ID = musical.Musical_ID"
            },
            {
                "User": "Let's update the duration of Ray Meagher's role to '1988—2023'.",
                "Answer": "UPDATE actor SET Duration = '1988—2023' WHERE Name = 'Ray Meagher'"
            },
            {
                "User": "Now, who has been performing for the longest duration?",
                "Answer": "SELECT Name FROM actor ORDER BY Duration DESC LIMIT 1"
            },
            {
                "User": "Can we add a new column to track the debut year of each actor?",
                "Answer": "ALTER TABLE actor ADD COLUMN Debut_Year number"
            },
            {
                "User": "Let's set the debut year for Lynne McGranger to 1993.",
                "Answer": "UPDATE actor SET Debut_Year = 1993 WHERE Name = 'Lynne McGranger'"
            }
        ]
    },
    {
        "idx": 645,
        "db": "hr_1",
        "interaction": [
            {
                "User": "create a table with a column for department id and a column for department name",
                "Answer": "CREATE TABLE new_departments (DEPARTMENT_ID number PRIMARY KEY, DEPARTMENT_NAME text);"
            },
            {
                "User": "Insert new department records into the new_departments table",
                "Answer": "INSERT INTO new_departments (DEPARTMENT_ID, DEPARTMENT_NAME) VALUES (280, 'Digital Marketing'), (290, 'Data Analysis');"
            },
            {
                "User": "Update the department name for department id 280 to 'Online Marketing'",
                "Answer": "UPDATE new_departments SET DEPARTMENT_NAME = 'Online Marketing' WHERE DEPARTMENT_ID = 280;"
            },
            {
                "User": "Show the total number of employee ids for each department id",
                "Answer": "SELECT T1.DEPARTMENT_ID, COUNT(*) FROM departments AS T1 JOIN employees AS T2 ON T1.DEPARTMENT_ID = T2.DEPARTMENT_ID GROUP BY T1.DEPARTMENT_ID;"
            },
            {
                "User": "Add a column for department budget to the departments table",
                "Answer": "ALTER TABLE departments ADD COLUMN DEPARTMENT_BUDGET number;"
            },
            {
                "User": "Set the budget for the Marketing department to 50000",
                "Answer": "UPDATE departments SET DEPARTMENT_BUDGET = 50000 WHERE DEPARTMENT_NAME = 'Marketing';"
            },
            {
                "User": "Show the department names and their budgets",
                "Answer": "SELECT DEPARTMENT_NAME, DEPARTMENT_BUDGET FROM departments WHERE DEPARTMENT_BUDGET IS NOT NULL;"
            },
            {
                "User": "Create a new table to track department location changes",
                "Answer": "CREATE TABLE department_locations_history (DEPARTMENT_ID number, OLD_LOCATION_ID number, NEW_LOCATION_ID number, CHANGE_DATE time);"
            },
            {
                "User": "Record a location change for department 30 from location 1700 to 1800",
                "Answer": "INSERT INTO department_locations_history (DEPARTMENT_ID, OLD_LOCATION_ID, NEW_LOCATION_ID, CHANGE_DATE) VALUES (30, 1700, 1800, CURRENT_DATE);"
            },
            {
                "User": "Show all location changes for department 30",
                "Answer": "SELECT * FROM department_locations_history WHERE DEPARTMENT_ID = 30;"
            },
            {
                "User": "Add a new employee to the employees table",
                "Answer": "INSERT INTO employees (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, JOB_ID, SALARY, COMMISSION_PCT, MANAGER_ID, DEPARTMENT_ID) VALUES (210, 'Jamie', 'Smith', 'JSMITH', '515.123.4567', '2023-04-01', 'IT_PROG', 7500, 0, 102, 60);"
            },
            {
                "User": "Update the salary of all employees in the IT department by 10%",
                "Answer": "UPDATE employees SET SALARY = SALARY * 1.1 WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM departments WHERE DEPARTMENT_NAME = 'IT');"
            }
        ]
    },
    {
        "idx": 646,
        "db": "theme_gallery",
        "interaction": [
            {
                "User": "How many artists have joined since 2000?",
                "Answer": "SELECT COUNT(*) FROM artist WHERE Year_Join >= 2000"
            },
            {
                "User": "Can you add a new artist named 'Emily Carter' from Canada who joined in 2021 and is 30 years old?",
                "Answer": "INSERT INTO artist (Name, Country, Year_Join, Age) VALUES ('Emily Carter', 'Canada', 2021, 30)"
            },
            {
                "User": "What's the new count of artists after adding Emily?",
                "Answer": "SELECT COUNT(*) FROM artist"
            },
            {
                "User": "Can we update the ticket price for the 'Santa Claus' theme in 2004 to $25.99?",
                "Answer": "UPDATE exhibition SET Ticket_Price = 25.99 WHERE Theme = 'Santa Claus' AND Year = 2004"
            },
            {
                "User": "Show the updated average ticket price for exhibitions for all years before 2009?",
                "Answer": "SELECT avg(Ticket_Price) FROM exhibition WHERE Year < 2009"
            },
            {
                "User": "I want to record the sales of souvenirs for each exhibition. Can we add a new table for that?",
                "Answer": "CREATE TABLE souvenir_sales (Exhibition_ID number, Date text, Souvenir_Revenue number, PRIMARY KEY (Exhibition_ID, Date))"
            },
            {
                "User": "Record the souvenir sales for exhibition ID 1 on December 2 as $500.",
                "Answer": "INSERT INTO souvenir_sales (Exhibition_ID, Date, Souvenir_Revenue) VALUES (1, 'December 2', 500)"
            },
            {
                "User": "Show the total revenue from ticket and souvenir sales for exhibition ID 1 on December 2.",
                "Answer": "SELECT (e.Ticket_Price * er.Attendance + ss.Souvenir_Revenue) AS Total_Revenue FROM exhibition e INNER JOIN exhibition_record er ON e.Exhibition_ID = er.Exhibition_ID INNER JOIN souvenir_sales ss ON e.Exhibition_ID = ss.Exhibition_ID WHERE e.Exhibition_ID = 1 AND er.Date = 'December 2' AND ss.Date = 'December 2'"
            },
            {
                "User": "Can you add a column for 'Email' to the artist table to keep track of their contact information?",
                "Answer": "ALTER TABLE artist ADD Email text"
            },
            {
                "User": "Update the email address for artist 'Vijay Singh' to 'vijay@example.com'.",
                "Answer": "UPDATE artist SET Email = 'vijay@example.com' WHERE Name = 'Vijay Singh'"
            },
            {
                "User": "How many exhibitions have more than 1000 attendees on any given day?",
                "Answer": "SELECT COUNT(DISTINCT Exhibition_ID) FROM exhibition_record WHERE Attendance > 1000"
            },
            {
                "User": "Create a new exhibition for the year 2021 with the theme 'Modern Art', artist ID 3, and a ticket price of $30.",
                "Answer": "INSERT INTO exhibition (Year, Theme, Artist_ID, Ticket_Price) VALUES (2021, 'Modern Art', 3, 30)"
            },
            {
                "User": "What is the average age of artists who joined after the year 2000?",
                "Answer": "SELECT AVG(Age) FROM artist WHERE Year_Join > 2000"
            }
        ]
    },
    {
        "idx": 647,
        "db": "college_1",
        "interaction": [
            {
                "User": "Can we add a new course to the database?",
                "Answer": "INSERT INTO COURSE (CRS_CODE, DEPT_CODE, CRS_DESCRIPTION, CRS_CREDIT) VALUES ('CIS-310', 'CIS', 'Advanced Computing Concepts', 4)"
            },
            {
                "User": "I'd like to update the credit hours for Accounting II to 4.",
                "Answer": "UPDATE COURSE SET CRS_CREDIT = 4 WHERE CRS_CODE = 'ACCT-212'"
            },
            {
                "User": "Can we see the updated credit hours for all accounting courses?",
                "Answer": "SELECT CRS_CODE, CRS_DESCRIPTION, CRS_CREDIT FROM COURSE WHERE DEPT_CODE = 'ACCT'"
            },
            {
                "User": "Is it possible to track the room capacity for each class?",
                "Answer": "ALTER TABLE CLASS ADD COLUMN ROOM_CAPACITY number"
            },
            {
                "User": "Please set the room capacity for BUS311 to 30 students.",
                "Answer": "UPDATE CLASS SET ROOM_CAPACITY = 30 WHERE CLASS_ROOM = 'BUS311'"
            },
            {
                "User": "Now, I need a list of all classes with their room capacity and class time.",
                "Answer": "SELECT CLASS_CODE, CLASS_ROOM, ROOM_CAPACITY, CLASS_TIME FROM CLASS"
            },
            {
                "User": "Let's create a new table to track student attendance for each class.",
                "Answer": "CREATE TABLE ATTENDANCE (ATTENDANCE_ID number primary key, CLASS_CODE text, STU_NUM number, ATTENDANCE_DATE time, ATTENDANCE_STATUS text)"
            },
            {
                "User": "Add a record for student 321452 attending class 10014 on March 1st, 2023.",
                "Answer": "INSERT INTO ATTENDANCE (ATTENDANCE_ID, CLASS_CODE, STU_NUM, ATTENDANCE_DATE, ATTENDANCE_STATUS) VALUES (1, '10014', 321452, '2023-03-01', 'Present')"
            },
            {
                "User": "Show me the attendance for class 10014.",
                "Answer": "SELECT * FROM ATTENDANCE WHERE CLASS_CODE = '10014'"
            },
            {
                "User": "We need to add an email field to the student table for communication.",
                "Answer": "ALTER TABLE STUDENT ADD COLUMN STU_EMAIL text"
            },
            {
                "User": "Update the email for William Bowser to wbowser@college.edu.",
                "Answer": "UPDATE STUDENT SET STU_EMAIL = 'wbowser@college.edu' WHERE STU_NUM = 321452"
            }
        ]
    },
    {
        "idx": 648,
        "db": "local_govt_mdm",
        "interaction": [
            {
                "User": "Could you add a new table to track property inspections with columns for inspection_id, council_tax_id, and inspection_date?",
                "Answer": "CREATE TABLE Property_Inspections (inspection_id number PRIMARY KEY, council_tax_id number, inspection_date date)"
            },
            {
                "User": "Please insert a record into the new Property_Inspections table for a recent inspection. The inspection_id is 101, council_tax_id is 2, and the inspection_date is '2023-03-15'.",
                "Answer": "INSERT INTO Property_Inspections (inspection_id, council_tax_id, inspection_date) VALUES (101, 2, '2023-03-15')"
            },
            {
                "User": "I need to correct the inspection_date for the inspection_id 101. The correct date should be '2023-03-20'.",
                "Answer": "UPDATE Property_Inspections SET inspection_date = '2023-03-20' WHERE inspection_id = 101"
            },
            {
                "User": "Can we add a new column 'inspector_name' to the Property_Inspections table to track who conducted the inspection?",
                "Answer": "ALTER TABLE Property_Inspections ADD inspector_name text"
            },
            {
                "User": "Now, please update the inspection record with inspection_id 101 to include the inspector's name 'John Doe'.",
                "Answer": "UPDATE Property_Inspections SET inspector_name = 'John Doe' WHERE inspection_id = 101"
            },
            {
                "User": "Can you provide a list of all inspections that occurred after '2023-03-01' including the inspector's name?",
                "Answer": "SELECT inspection_id, council_tax_id, inspection_date, inspector_name FROM Property_Inspections WHERE inspection_date > '2023-03-01'"
            },
            {
                "User": "I'd like to see a combined list of customer details and any overpayments they have made. Could you join the Customer_Master_Index and Benefits_Overpayments tables for this?",
                "Answer": "SELECT T1.master_customer_id, T1.cmi_details, T2.council_tax_id FROM Customer_Master_Index AS T1 JOIN Benefits_Overpayments AS T2 ON T1.master_customer_id = T2.cmi_cross_ref_id"
            },
            {
                "User": "It seems we have a new customer to add to our database. Their name is 'Johnson & Johnson' with a master_customer_id of 10.",
                "Answer": "INSERT INTO Customer_Master_Index (master_customer_id, cmi_details) VALUES (10, 'Johnson & Johnson')"
            },
            {
                "User": "The customer 'Volkman, Mills and Ferry' has changed their name to 'Volkman & Associates'. Can you update their record in the database?",
                "Answer": "UPDATE Customer_Master_Index SET cmi_details = 'Volkman & Associates' WHERE master_customer_id = 2"
            },
            {
                "User": "I need to add a record for a new parking fine. The council_tax_id is 11, and the cmi_cross_ref_id is 10. Could you insert this data?",
                "Answer": "INSERT INTO Parking_Fines (council_tax_id, cmi_cross_ref_id) VALUES (11, 10)"
            },
            {
                "User": "Can we see a list of all customers who are registered to vote and have a parking fine?",
                "Answer": "SELECT T1.master_customer_id, T1.cmi_details FROM Customer_Master_Index AS T1 JOIN Electoral_Register AS T2 ON T1.master_customer_id = T2.cmi_cross_ref_id JOIN Parking_Fines AS T3 ON T1.master_customer_id = T3.cmi_cross_ref_id"
            },
            {
                "User": "We need to track email addresses for our customers. Could you add an 'email' column to the Customer_Master_Index table?",
                "Answer": "ALTER TABLE Customer_Master_Index ADD email text"
            },
            {
                "User": "Please update the email address for 'Johnson & Johnson' to 'contact@johnson.com'.",
                "Answer": "UPDATE Customer_Master_Index SET email = 'contact@johnson.com' WHERE master_customer_id = 10"
            }
        ]
    },
    {
        "idx": 649,
        "db": "phone_1",
        "interaction": [
            {
                "User": "Can you list the models launched after 2002 with more than 32 MiB of RAM?",
                "Answer": "SELECT Model_name FROM chip_model WHERE Launch_year > 2002 AND RAM_MiB > 32"
            },
            {
                "User": "I'd like to add a new chip model called 'Z8 Pro' launched in 2023 with 128 MiB of RAM, 256 MiB of ROM, 2 CFII slots, WiFi and Bluetooth capabilities. Can you insert this record?",
                "Answer": "INSERT INTO chip_model (Model_name, Launch_year, RAM_MiB, ROM_MiB, Slots, WiFi, Bluetooth) VALUES ('Z8 Pro', 2023, 128, 256, '2CFII', 'Yes', 'Yes')"
            },
            {
                "User": "Update the Bluetooth capability of the 'X5 high end' model to 'Yes'.",
                "Answer": "UPDATE chip_model SET Bluetooth = 'Yes' WHERE Model_name = 'X5 high end'"
            },
            {
                "User": "Create a new table called 'user_feedback' with columns 'Feedback_ID' as primary key, 'User_Name', 'Model_name', and 'Rating' out of 5.",
                "Answer": "CREATE TABLE user_feedback (Feedback_ID number PRIMARY KEY, User_Name text, Model_name text, Rating number)"
            },
            {
                "User": "Insert a user feedback with ID 1 for the user 'John Doe' on model 'X5' with a rating of 4.",
                "Answer": "INSERT INTO user_feedback (Feedback_ID, User_Name, Model_name, Rating) VALUES (1, 'John Doe', 'X5', 4)"
            },
            {
                "User": "What's the average rating for the chip model 'X5'?",
                "Answer": "SELECT AVG(Rating) FROM user_feedback WHERE Model_name = 'X5'"
            },
            {
                "User": "Can you add a 'Screen_Size' column to the 'screen_mode' table to record screen sizes in inches?",
                "Answer": "ALTER TABLE screen_mode ADD Screen_Size text"
            },
            {
                "User": "For the screen mode with 640 × 256 pixels, set the screen size to '4.5 inches'.",
                "Answer": "UPDATE screen_mode SET Screen_Size = '4.5 inches' WHERE Pixels = '640 × 256'"
            },
            {
                "User": "How many phones use the 'X5' chip model?",
                "Answer": "SELECT count ( * ) FROM phone WHERE chip_model = 'X5'"
            }
        ]
    },
    {
        "idx": 650,
        "db": "cre_Docs_and_Epenses",
        "interaction": [
            {
                "User": "How many projects are currently in the database?",
                "Answer": "SELECT count(*) FROM Projects"
            },
            {
                "User": "Can you add a new project about 'Artificial Intelligence' to the projects list?",
                "Answer": "INSERT INTO Projects (Project_ID, Project_Details) VALUES (106, 'Artificial Intelligence project')"
            },
            {
                "User": "I want to update the budget type description for 'Self founded' to 'Self-funded'.",
                "Answer": "UPDATE Ref_Budget_Codes SET Budget_Type_Description = 'Self-funded' WHERE Budget_Type_Code = 'SF'"
            },
            {
                "User": "Now, what are the descriptions for all budget types?",
                "Answer": "SELECT Budget_Type_Code, Budget_Type_Description FROM Ref_Budget_Codes"
            },
            {
                "User": "I need to track the expenses for each document type. Can we add a new column to track the total expenses?",
                "Answer": "ALTER TABLE Ref_Document_Types ADD COLUMN Total_Expenses number"
            },
            {
                "User": "Let's calculate the total expenses for 'Book' document type. Assume each book document has an expense of 150.",
                "Answer": "UPDATE Ref_Document_Types SET Total_Expenses = (SELECT count(*) FROM Documents WHERE Document_Type_Code = 'BK') * 150 WHERE Document_Type_Code = 'BK'"
            },
            {
                "User": "Create a new table to track employee assignments to projects.",
                "Answer": "CREATE TABLE Project_Assignments (Assignment_ID number PRIMARY KEY, Employee_ID number, Project_ID number, Assignment_Details text)"
            },
            {
                "User": "Assign employee with ID 12 to the 'Artificial Intelligence project'.",
                "Answer": "INSERT INTO Project_Assignments (Assignment_ID, Employee_ID, Project_ID, Assignment_Details) VALUES (1, 12, 106, 'Lead AI Researcher')"
            },
            {
                "User": "What is the total number of documents associated with the 'Internet of Things project'?",
                "Answer": "SELECT count(*) FROM Documents WHERE Project_ID = (SELECT Project_ID FROM Projects WHERE Project_Details LIKE '%Internet of Things%')"
            },
            {
                "User": "Can you show me the most recent document for each project?",
                "Answer": "SELECT Project_ID, MAX(Document_Date) as Most_Recent_Date FROM Documents GROUP BY Project_ID"
            },
            {
                "User": "Let's add a new document type for 'Email' correspondence with a description 'Email communication'.",
                "Answer": "INSERT INTO Ref_Document_Types (Document_Type_Code, Document_Type_Name, Document_Type_Description) VALUES ('EM', 'Email', 'Email communication')"
            },
            {
                "User": "Give me a list of all projects without any documents.",
                "Answer": "SELECT P.Project_ID, P.Project_Details FROM Projects P LEFT JOIN Documents D ON P.Project_ID = D.Project_ID WHERE D.Document_ID IS NULL"
            },
            {
                "User": "Update the 'Open Project' statement details to 'Publicly accessible project'.",
                "Answer": "UPDATE Statements SET Statement_Details = 'Publicly accessible project' WHERE Statement_Details = 'Open Project'"
            },
            {
                "User": "How many documents are there per document type?",
                "Answer": "SELECT Document_Type_Code, count(*) as NumberOfDocuments FROM Documents GROUP BY Document_Type_Code"
            },
            {
                "User": "I realized we need to track the creation date for projects. Can you add a 'Creation_Date' column to the Projects table?",
                "Answer": "ALTER TABLE Projects ADD COLUMN Creation_Date time"
            }
        ]
    },
    {
        "idx": 651,
        "db": "medicine_enzyme_interaction",
        "interaction": [
            {
                "User": "What is the trade name for the medicine with id 2?",
                "Answer": "SELECT Trade_Name FROM medicine WHERE id = 2"
            },
            {
                "User": "Can you add a new medicine called 'Clozapine' with the trade name 'Clozaril' that is FDA approved?",
                "Answer": "INSERT INTO medicine (name, Trade_Name, FDA_approved) VALUES ('Clozapine', 'Clozaril', 'Yes')"
            },
            {
                "User": "Now, how many medicines are FDA approved?",
                "Answer": "SELECT COUNT(*) FROM medicine WHERE FDA_approved = 'Yes'"
            },
            {
                "User": "Let's create a new table to track medicine side effects, with columns for medicine_id, side_effect, and severity.",
                "Answer": "CREATE TABLE medicine_side_effects (medicine_id number, side_effect text, severity text, FOREIGN KEY (medicine_id) REFERENCES medicine(id))"
            },
            {
                "User": "Add a severe side effect 'Agranulocytosis' for the medicine 'Clozaril'.",
                "Answer": "INSERT INTO medicine_side_effects (medicine_id, side_effect, severity) VALUES ((SELECT id FROM medicine WHERE name = 'Clozapine'), 'Agranulocytosis', 'Severe')"
            },
            {
                "User": "Show me all the side effects for the medicine 'Clozaril'.",
                "Answer": "SELECT side_effect, severity FROM medicine_side_effects WHERE medicine_id = (SELECT id FROM medicine WHERE name = 'Clozapine')"
            },
            {
                "User": "Update the location of 'ALA dehydratase' to 'Mitochondrion'.",
                "Answer": "UPDATE enzyme SET Location = 'Mitochondrion' WHERE name = 'ALA dehydratase'"
            },
            {
                "User": "Now, list all enzymes located in the 'Cytosol'.",
                "Answer": "SELECT name FROM enzyme WHERE Location = 'Cytosol'"
            },
            {
                "User": "I noticed a mistake; 'ALA dehydratase' should be in 'Cytosol'. Please correct it.",
                "Answer": "UPDATE enzyme SET Location = 'Cytosol' WHERE name = 'ALA dehydratase'"
            },
            {
                "User": "Add a 'Description' column to the enzyme table to provide more details.",
                "Answer": "ALTER TABLE enzyme ADD COLUMN Description text"
            },
            {
                "User": "Provide a description for 'ALA synthase' as 'Catalyzes the synthesis of ALA'.",
                "Answer": "UPDATE enzyme SET Description = 'Catalyzes the synthesis of ALA' WHERE name = 'ALA synthase'"
            },
            {
                "User": "Show me all enzymes with their description and location.",
                "Answer": "SELECT name, Description, Location FROM enzyme"
            },
            {
                "User": "What interactions exist for the medicine named 'Saphris'?",
                "Answer": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id WHERE T2.name = 'Asenapine'"
            }
        ]
    },
    {
        "idx": 652,
        "db": "e_government",
        "interaction": [
            {
                "User": "How many organizations were formed in 2016?",
                "Answer": "SELECT COUNT(*) FROM organizations WHERE date_formed >= '2016-01-01' AND date_formed < '2017-01-01'"
            },
            {
                "User": "Can you add a new organization named 'Green Initiative' that was formed on March 1, 2021, with VAT number '9876'?",
                "Answer": "INSERT INTO organizations (organization_id, date_formed, organization_name, uk_vat_number) VALUES ((SELECT MAX(organization_id) + 1 FROM organizations), '2021-03-01 00:00:00', 'Green Initiative', '9876')"
            },
            {
                "User": "I need to update the phone number for the individual named Oscar Maggio.",
                "Answer": "UPDATE individuals SET inidividual_phone = '1-999-999-9999' WHERE individual_first_name = 'Oscar' AND individual_last_name = 'Maggio'"
            },
            {
                "User": "Can you create a new table to track the services used by individuals?",
                "Answer": "CREATE TABLE individual_services (individual_id number, service_id number, usage_date time, PRIMARY KEY (individual_id, service_id))"
            },
            {
                "User": "Please add a record to the new table indicating that Oscar Maggio used service with ID 1 today.",
                "Answer": "INSERT INTO individual_services (individual_id, service_id, usage_date) VALUES ((SELECT individual_id FROM individuals WHERE individual_first_name = 'Oscar' AND individual_last_name = 'Maggio'), 1, CURRENT_DATE)"
            },
            {
                "User": "I would like to see a list of all individuals who have used the 'Education' service.",
                "Answer": "SELECT i.individual_first_name, i.individual_last_name FROM individuals i JOIN individual_services ins ON i.individual_id = ins.individual_id JOIN services s ON ins.service_id = s.service_id WHERE s.service_type_code = 'Education'"
            },
            {
                "User": "Let's add a new column 'individual_dob' to the Individuals table to store their date of birth.",
                "Answer": "ALTER TABLE individuals ADD individual_dob time"
            },
            {
                "User": "Update the date of birth for Geovanny Kerluke to January 1st, 1990.",
                "Answer": "UPDATE individuals SET individual_dob = '1990-01-01' WHERE individual_first_name = 'Geovanny' AND individual_last_name = 'Kerluke'"
            },
            {
                "User": "Could you show me all the individuals who live in Colorado?",
                "Answer": "SELECT i.individual_first_name, i.individual_last_name FROM individuals i JOIN addresses a ON i.individual_address = a.line_1_number_building WHERE a.state_province_county = 'Colorado'"
            },
            {
                "User": "I need to correct the VAT number for the organization named 'Labour Party'. The correct number is '9999'.",
                "Answer": "UPDATE organizations SET uk_vat_number = '9999' WHERE organization_name = 'Labour Party'"
            },
            {
                "User": "Give me the list of all services with their descriptions.",
                "Answer": "SELECT service_name, service_descriptio FROM services"
            },
            {
                "User": "Can you tell me how many forms are marked as 'Completed'?",
                "Answer": "SELECT COUNT(*) FROM party_forms WHERE form_status_code = 'Completed'"
            },
            {
                "User": "Add a new form type called 'Renewal' for service ID 2 with form number '5555' and name it 'License Renewal'.",
                "Answer": "INSERT INTO forms (form_id, form_type_code, service_id, form_number, form_name, form_description) VALUES ((SELECT MAX(form_id) + 1 FROM forms), 'Renewal', 2, '5555', 'License Renewal', 'Form for License Renewal')"
            },
            {
                "User": "How many parties have used a credit card as their payment method?",
                "Answer": "SELECT COUNT(*) FROM parties WHERE payment_method_code = 'Credit Card'"
            }
        ]
    },
    {
        "idx": 653,
        "db": "device",
        "interaction": [
            {
                "User": "Can you add a new device to the inventory?",
                "Answer": "INSERT INTO device (Device_ID, Device, Carrier, Package_Version, Applications, Software_Platform) VALUES (7, 'Samsung Galaxy S21', 'Sprint', '11.0.0', '11.0.0', 'Android')"
            },
            {
                "User": "I've added a new device, Samsung Galaxy S21 with Sprint as the carrier. Can you confirm it's been added?",
                "Answer": "SELECT * FROM device WHERE Device = 'Samsung Galaxy S21' AND Carrier = 'Sprint'"
            },
            {
                "User": "We just opened a new shop called 'Tech Haven' in 'Midtown'. Can we add it to the database?",
                "Answer": "INSERT INTO shop (Shop_ID, Shop_Name, Location, Open_Date, Open_Year) VALUES (13, 'Tech Haven', 'Midtown', '15 March', 2023)"
            },
            {
                "User": "What are the shops that opened after 2010?",
                "Answer": "SELECT Shop_Name FROM shop WHERE Open_Year > 2010"
            },
            {
                "User": "Can we update the stock quantity for BlackBerry Storm 9530 at Dinas Device to 120?",
                "Answer": "UPDATE stock SET Quantity = 120 WHERE Shop_ID = (SELECT Shop_ID FROM shop WHERE Shop_Name = 'Dinas Device') AND Device_ID = (SELECT Device_ID FROM device WHERE Device = 'BlackBerry Storm 9530')"
            },
            {
                "User": "Did the update reflect the new quantity for BlackBerry Storm 9530 at Dinas Device?",
                "Answer": "SELECT Quantity FROM stock WHERE Shop_ID = (SELECT Shop_ID FROM shop WHERE Shop_Name = 'Dinas Device') AND Device_ID = (SELECT Device_ID FROM device WHERE Device = 'BlackBerry Storm 9530')"
            },
            {
                "User": "I'd like to add a column 'Manager' to the shop table to keep track of the shop managers. Can you do that?",
                "Answer": "ALTER TABLE shop ADD Manager text"
            },
            {
                "User": "Who is the manager of the shop Best Buy?",
                "Answer": "SELECT Manager FROM shop WHERE Shop_Name = 'Best Buy'"
            },
            {
                "User": "Let's assign 'John Doe' as the manager of the shop 'Tech Haven'.",
                "Answer": "UPDATE shop SET Manager = 'John Doe' WHERE Shop_Name = 'Tech Haven'"
            },
            {
                "User": "Can we create a new table to track the sales of each shop?",
                "Answer": "CREATE TABLE sales (Sales_ID number PRIMARY KEY, Shop_ID number, Total_Sales number, Sale_Date text)"
            },
            {
                "User": "Add the first sale record for Tech Haven with a total of 5000.",
                "Answer": "INSERT INTO sales (Sales_ID, Shop_ID, Total_Sales, Sale_Date) VALUES (1, (SELECT Shop_ID FROM shop WHERE Shop_Name = 'Tech Haven'), 5000, '15 March 2023')"
            }
        ]
    },
    {
        "idx": 654,
        "db": "entrepreneur",
        "interaction": [
            {
                "User": "Can you create a new table to track the investments made by each investor?",
                "Answer": "CREATE TABLE investments (Investment_ID number PRIMARY KEY, Investor text, Amount_Invested number, Company text, Date_Of_Investment text)"
            },
            {
                "User": "Please add a record for an investment made by Doug Richard for 250000 in a company called 'Innovate Ltd' on the 1st of January 2021.",
                "Answer": "INSERT INTO investments (Investment_ID, Investor, Amount_Invested, Company, Date_Of_Investment) VALUES (1, 'Doug Richard', 250000, 'Innovate Ltd', '2021-01-01')"
            },
            {
                "User": "I realized we should also track the Entrepreneur_ID in the investments table. Can you add that column?",
                "Answer": "ALTER TABLE investments ADD COLUMN Entrepreneur_ID number"
            },
            {
                "User": "Now, let's update the record for 'Innovate Ltd' to include the Entrepreneur_ID. It should be 2.",
                "Answer": "UPDATE investments SET Entrepreneur_ID = 2 WHERE Company = 'Innovate Ltd'"
            },
            {
                "User": "Let's see a list of all companies that have received an investment greater than 100000.",
                "Answer": "SELECT Company FROM investments WHERE Amount_Invested > 100000"
            },
            {
                "User": "Can you show me the average investment amount made by each investor?",
                "Answer": "SELECT Investor, AVG(Amount_Invested) as Average_Investment FROM investments GROUP BY Investor"
            },
            {
                "User": "Is there a way to find out which investor has invested the most amount of money in total?",
                "Answer": "SELECT Investor FROM investments GROUP BY Investor ORDER BY SUM(Amount_Invested) DESC LIMIT 1"
            },
            {
                "User": "Can you tell me how many different investors have invested in 'Umbrolly'?",
                "Answer": "SELECT COUNT(DISTINCT Investor) FROM investments WHERE Company = 'Umbrolly'"
            },
            {
                "User": "I want to add a new entrepreneur to the people table. Their name is 'Alex Smith', height is 1.75m, weight is 65kg, and date of birth is '1990-06-15'.",
                "Answer": "INSERT INTO people (People_ID, Name, Height, Weight, Date_of_Birth) VALUES (9, 'Alex Smith', 1.75, 65.0, '1990-06-15')"
            },
            {
                "User": "Now, let's add a corresponding entrepreneur record for 'Alex Smith' who is requesting 200000 for their company 'Smart Innovations', and the investor is 'Peter Jones'.",
                "Answer": "INSERT INTO entrepreneur (Entrepreneur_ID, People_ID, Company, Money_Requested, Investor) VALUES (7, 4, 'Smart Innovations', 200000.0, 'Peter Jones')"
            },
            {
                "User": "Update the entrepreneur record for 'Smart Innovations' to show that 'Peter Jones' has decided to invest.",
                "Answer": "UPDATE entrepreneur SET Investor = 'Peter Jones' WHERE Company = 'Smart Innovations'"
            },
            {
                "User": "Let's add a new investment record for 'Peter Jones' who invested 200000 in 'Smart Innovations' on '2021-07-20'.",
                "Answer": "INSERT INTO investments (Investment_ID, Investor, Amount_Invested, Company, Date_Of_Investment, Entrepreneur_ID) VALUES (2, 'Peter Jones', 200000, 'Smart Innovations', '2021-07-20', 4)"
            }
        ]
    },
    {
        "idx": 655,
        "db": "student_1",
        "interaction": [
            {
                "User": "Can we add a new student named 'Smith, John' with grade 5 to classroom 101?",
                "Answer": "INSERT INTO list (LastName, FirstName, Grade, Classroom) VALUES ('Smith', 'John', 5, 101)"
            },
            {
                "User": "Can you confirm if the student 'Smith, John' has been added to classroom 101?",
                "Answer": "SELECT * FROM list WHERE LastName = 'Smith' AND FirstName = 'John' AND Classroom = 101"
            },
            {
                "User": "Can you update the grade for 'Smith, John' to 6?",
                "Answer": "UPDATE list SET Grade = 6 WHERE LastName = 'Smith' AND FirstName = 'John'"
            },
            {
                "User": "What are the names of all students in grade 6?",
                "Answer": "SELECT FirstName, LastName FROM list WHERE Grade = 6"
            },
            {
                "User": "We need to track students' email addresses. Can you add an 'Email' column to the 'list' table?",
                "Answer": "ALTER TABLE list ADD Email text"
            },
            {
                "User": "Can you set the email for 'Smith, John' to 'john.smith@email.com'?",
                "Answer": "UPDATE list SET Email = 'john.smith@email.com' WHERE LastName = 'Smith' AND FirstName = 'John'"
            },
            {
                "User": "Can you show me all the information for the students in classroom 101?",
                "Answer": "SELECT * FROM list WHERE Classroom = 101"
            },
            {
                "User": "I think we should also have a table for student hobbies. Can you create that?",
                "Answer": "CREATE TABLE student_hobbies (LastName text, FirstName text, Hobby text, PRIMARY KEY (LastName, FirstName))"
            },
            {
                "User": "Let's add a hobby 'Chess' for 'Smith, John'.",
                "Answer": "INSERT INTO student_hobbies (LastName, FirstName, Hobby) VALUES ('Smith', 'John', 'Chess')"
            },
            {
                "User": "Can you list all students with their hobbies?",
                "Answer": "SELECT T1.FirstName, T1.LastName, T2.Hobby FROM list AS T1 LEFT JOIN student_hobbies AS T2 ON T1.FirstName = T2.FirstName AND T1.LastName = T2.LastName"
            },
            {
                "User": "I need to see the full list of teachers along with the classroom they are assigned to.",
                "Answer": "SELECT FirstName, LastName, Classroom FROM teachers"
            },
            {
                "User": "Can you add a new teacher named 'Doe, Jane' to classroom 104?",
                "Answer": "INSERT INTO teachers (LastName, FirstName, Classroom) VALUES ('Doe', 'Jane', 104)"
            },
            {
                "User": "Show me the updated list of teachers including the new teacher 'Doe, Jane'.",
                "Answer": "SELECT * FROM teachers"
            }
        ]
    },
    {
        "idx": 656,
        "db": "architecture",
        "interaction": [
            {
                "User": "Can you add a new architect named 'Norman Foster' with British nationality and male gender?",
                "Answer": "INSERT INTO architect (name, nationality, gender) VALUES ('Norman Foster', 'British', 'male')"
            },
            {
                "User": "Now, what is the nationality of Norman Foster?",
                "Answer": "SELECT nationality FROM architect WHERE name = 'Norman Foster'"
            },
            {
                "User": "I would like to update the nationality of Frank Gehry to American-Canadian.",
                "Answer": "UPDATE architect SET nationality = 'American-Canadian' WHERE name = 'Frank Gehry'"
            },
            {
                "User": "Can we get a list of all architects with their updated nationalities?",
                "Answer": "SELECT name, nationality FROM architect"
            },
            {
                "User": "Let's create a new table for bridge renovations with columns for bridge_id, renovation_date, and description.",
                "Answer": "CREATE TABLE bridge_renovations (bridge_id number, renovation_date text, description text, PRIMARY KEY (bridge_id))"
            },
            {
                "User": "Add a renovation record for the bridge with id 2, renovated on 2022-05-15, with a description of 'Structural reinforcement'.",
                "Answer": "INSERT INTO bridge_renovations (bridge_id, renovation_date, description) VALUES (2, '2022-05-15', 'Structural reinforcement')"
            },
            {
                "User": "Which bridges have been renovated? Show me their names and renovation descriptions.",
                "Answer": "SELECT b.name, br.description FROM bridge b JOIN bridge_renovations br ON b.id = br.bridge_id"
            },
            {
                "User": "Can you add a column for the architect's birth year in the architect table?",
                "Answer": "ALTER TABLE architect ADD COLUMN birth_year number"
            },
            {
                "User": "Update the birth year of Zaha Hadid to 1950.",
                "Answer": "UPDATE architect SET birth_year = 1950 WHERE name = 'Zaha Hadid'"
            },
            {
                "User": "What is the name and birth year of all architects we have information on?",
                "Answer": "SELECT name, birth_year FROM architect WHERE birth_year IS NOT NULL"
            },
            {
                "User": "Let's add a new mill called 'Windview' in 'Amsterdam' with type 'Tower' built in 2021 by architect id 3, and note as 'Modern design'.",
                "Answer": "INSERT INTO mill (architect_id, location, name, type, built_year, notes) VALUES (3, 'Amsterdam', 'Windview', 'Tower', 2021, 'Modern design')"
            },
            {
                "User": "Which mills were built in the 21st century?",
                "Answer": "SELECT name, location FROM mill WHERE built_year >= 2000"
            },
            {
                "User": "I need to correct the length in meters of the Fairy Bridge to 123. Can you update it?",
                "Answer": "UPDATE bridge SET length_meters = 123 WHERE name = 'Xian Ren Qiao (Fairy Bridge)'"
            }
        ]
    },
    {
        "idx": 657,
        "db": "machine_repair",
        "interaction": [
            {
                "User": "Add a new technician named Alex Smith to the team 'NYY' who started in 2021 and is 29 years old.",
                "Answer": "INSERT INTO technician (technician_id, Name, Team, Starting_Year, Age) VALUES (11, 'Alex Smith', 'NYY', 2021, 29)"
            },
            {
                "User": "How many technicians do we have in each team?",
                "Answer": "SELECT Team, COUNT(*) as Number_of_Technicians FROM technician GROUP BY Team"
            },
            {
                "User": "Can we add a column 'Expertise' to the technician table to track their specialization?",
                "Answer": "ALTER TABLE technician ADD Expertise text"
            },
            {
                "User": "Set the expertise of technician Alex Smith to 'Electrical Systems'.",
                "Answer": "UPDATE technician SET Expertise = 'Electrical Systems' WHERE Name = 'Alex Smith'"
            },
            {
                "User": "Create a new table to track the maintenance schedule with columns 'Schedule_ID', 'Machine_ID', 'Technician_ID', 'Scheduled_Date', and 'Maintenance_Type'.",
                "Answer": "CREATE TABLE maintenance_schedule (Schedule_ID number PRIMARY KEY, Machine_ID number, Technician_ID number, Scheduled_Date text, Maintenance_Type text)"
            },
            {
                "User": "Schedule a maintenance for the machine with the lowest quality rank on April 15, 2023. The maintenance type should be 'Full Checkup'.",
                "Answer": "INSERT INTO maintenance_schedule (Schedule_ID, Machine_ID, Technician_ID, Scheduled_Date, Maintenance_Type) SELECT 1, Machine_ID, (SELECT technician_id FROM technician ORDER BY Age DESC LIMIT 1), '15 Apr 2023', 'Full Checkup' FROM machine ORDER BY quality_rank LIMIT 1"
            },
            {
                "User": "Who is scheduled for maintenance on '15 Apr 2023'?",
                "Answer": "SELECT T.Name FROM maintenance_schedule MS JOIN technician T ON MS.Technician_ID = T.technician_id WHERE MS.Scheduled_Date = '15 Apr 2023'"
            },
            {
                "User": "Update the value points of the 'Hero Sports TS- Honda' team by adding 20 points due to recent achievements.",
                "Answer": "UPDATE machine SET value_points = value_points + 20 WHERE Team = 'Hero Sports TS- Honda'"
            },
            {
                "User": "Which machine series has the highest value points now?",
                "Answer": "SELECT Machine_series FROM machine ORDER BY value_points DESC LIMIT 1"
            },
            {
                "User": "Can you show me a list of all machines that were made after 1995?",
                "Answer": "SELECT * FROM machine WHERE Making_Year > 1995"
            },
            {
                "User": "I want to track the repair success rate. Can we add a column 'Success' to the 'repair' table as a boolean?",
                "Answer": "ALTER TABLE repair ADD Success boolean"
            },
            {
                "User": "Mark the first repair as successful in our records.",
                "Answer": "UPDATE repair SET Success = TRUE WHERE repair_ID = 1"
            },
            {
                "User": "What percentage of repairs have been successful?",
                "Answer": "SELECT ROUND((SUM(CASE WHEN Success THEN 1 ELSE 0 END) * 100.0 / COUNT(*)), 2) AS Success_Rate FROM repair"
            }
        ]
    },
    {
        "idx": 658,
        "db": "sports_competition",
        "interaction": [
            {
                "User": "Can you add a new table to track player injuries?",
                "Answer": "CREATE TABLE player_injury (Injury_ID number PRIMARY KEY, Player_ID number, Injury_type text, Recovery_time text, FOREIGN KEY (Player_ID) REFERENCES player(Player_ID))"
            },
            {
                "User": "Insert a record of a player injury for Michael Platt with a knee injury expected to recover in 8 weeks.",
                "Answer": "INSERT INTO player_injury (Injury_ID, Player_ID, Injury_type, Recovery_time) VALUES (1, 1, 'Knee Injury', '8 weeks')"
            },
            {
                "User": "How many players are currently injured?",
                "Answer": "SELECT COUNT(*) FROM player_injury"
            },
            {
                "User": "Update the recovery time for Michael Platt to 6 weeks.",
                "Answer": "UPDATE player_injury SET Recovery_time = '6 weeks' WHERE Player_ID = (SELECT Player_ID FROM player WHERE name = 'Michael Platt')"
            },
            {
                "User": "Can you give me a list of players who have scored more than 10 tries?",
                "Answer": "SELECT name FROM player WHERE Tries > 10"
            },
            {
                "User": "Add a new column to track the number of assists made by each player.",
                "Answer": "ALTER TABLE player ADD COLUMN Assists number"
            },
            {
                "User": "Update the player table to set the number of assists for Michael Platt to 3.",
                "Answer": "UPDATE player SET Assists = 3 WHERE name = 'Michael Platt'"
            },
            {
                "User": "Which player has the highest number of assists?",
                "Answer": "SELECT name FROM player WHERE Assists = (SELECT MAX(Assists) FROM player)"
            },
            {
                "User": "Create a new table to record club sponsors with sponsor name and the amount they contribute.",
                "Answer": "CREATE TABLE club_sponsor (Sponsor_ID number PRIMARY KEY, Club_ID number, Sponsor_name text, Contribution_amount number, FOREIGN KEY (Club_ID) REFERENCES club(Club_ID))"
            },
            {
                "User": "Insert a new sponsor for the club 'AIB' with the sponsor name 'SportX' contributing 50000.",
                "Answer": "INSERT INTO club_sponsor (Sponsor_ID, Club_ID, Sponsor_name, Contribution_amount) VALUES (1, 1, 'SportX', 50000)"
            },
            {
                "User": "Which club has the highest total contribution from sponsors?",
                "Answer": "SELECT c.name FROM club c JOIN club_sponsor cs ON c.Club_ID = cs.Club_ID GROUP BY c.name ORDER BY SUM(cs.Contribution_amount) DESC LIMIT 1"
            }
        ]
    },
    {
        "idx": 659,
        "db": "apartment_rentals",
        "interaction": [
            {
                "User": "Can we add a new building to the database?",
                "Answer": "INSERT INTO Apartment_Buildings (building_id, building_short_name, building_full_name, building_description, building_address, building_manager, building_phone) VALUES (192, 'Liberty Towers', 'Liberty Towers', 'Luxury High-rise', '123 Freedom Way\nLiberty City, LC 12345', 'John Doe', '555-123-4567')"
            },
            {
                "User": "I've just added a new building. Now, how many buildings do we have in total?",
                "Answer": "SELECT count(*) FROM Apartment_Buildings"
            },
            {
                "User": "Could you update the manager's name for 'The Eugene' to 'Jessica Smith'?",
                "Answer": "UPDATE Apartment_Buildings SET building_manager = 'Jessica Smith' WHERE building_full_name = 'The Eugene'"
            },
            {
                "User": "I realized we don't have a column for the number of floors in each building. Can we add that?",
                "Answer": "ALTER TABLE Apartment_Buildings ADD COLUMN building_floors number"
            },
            {
                "User": "Now that we have a floors column, set 'Liberty Towers' to have 30 floors.",
                "Answer": "UPDATE Apartment_Buildings SET building_floors = 30 WHERE building_full_name = 'Liberty Towers'"
            },
            {
                "User": "Can we create a new table to track maintenance requests?",
                "Answer": "CREATE TABLE Maintenance_Requests (request_id number PRIMARY KEY, apt_id number, request_date time, description text, status text)"
            },
            {
                "User": "Great, can you log a maintenance request for apartment 2 for a leaking faucet?",
                "Answer": "INSERT INTO Maintenance_Requests (request_id, apt_id, request_date, description, status) VALUES (1, 2, CURRENT_TIMESTAMP, 'Leaking faucet', 'Pending')"
            },
            {
                "User": "Can you show me all pending maintenance requests?",
                "Answer": "SELECT * FROM Maintenance_Requests WHERE status = 'Pending'"
            },
            {
                "User": "I want to track which apartments are pet-friendly. Can we add a column for this?",
                "Answer": "ALTER TABLE Apartments ADD COLUMN pet_friendly BOOLEAN"
            },
            {
                "User": "Let's mark apartment 1 as pet-friendly.",
                "Answer": "UPDATE Apartments SET pet_friendly = TRUE WHERE apt_id = 1"
            },
            {
                "User": "Can you give me a list of all pet-friendly apartments?",
                "Answer": "SELECT * FROM Apartments WHERE pet_friendly = TRUE"
            },
            {
                "User": "How many apartments are currently available?",
                "Answer": "SELECT count(*) FROM View_Unit_Status WHERE available_yn = 1"
            },
            {
                "User": "Can you provide the average number of bedrooms across all apartments?",
                "Answer": "SELECT AVG(bedroom_count) FROM Apartments"
            },
            {
                "User": "I need to know the total number of maintenance requests made this year.",
                "Answer": "SELECT count(*) FROM Maintenance_Requests WHERE strftime('%Y', request_date) = strftime('%Y', 'now')"
            }
        ]
    },
    {
        "idx": 660,
        "db": "bike_1",
        "interaction": [
            {
                "User": "How many bikes are available at the San Jose Civic Center station right now?",
                "Answer": "SELECT bikes_available FROM status WHERE station_id = (SELECT id FROM station WHERE name = 'San Jose Civic Center') ORDER BY time DESC LIMIT 1"
            },
            {
                "User": "Can you add a new station with id 85, name 'New Park Blvd', latitude 37.342, longitude -121.905, dock count 25, city 'San Jose', and installation date '3/15/2023'?",
                "Answer": "INSERT INTO station (id, name, lat, long, dock_count, city, installation_date) VALUES (85, 'New Park Blvd', 37.342, -121.905, 25, 'San Jose', '3/15/2023')"
            },
            {
                "User": "What's the latest status for the new station we just added?",
                "Answer": "SELECT * FROM status WHERE station_id = 71 ORDER BY time DESC LIMIT 1"
            },
            {
                "User": "Please update the dock count for station id 4 to 15.",
                "Answer": "UPDATE station SET dock_count = 15 WHERE id = 4"
            },
            {
                "User": "What are the names of the stations that were installed after '8/1/2013' and have more than 20 docks?",
                "Answer": "SELECT name FROM station WHERE installation_date > '8/1/2013' AND dock_count > 20"
            },
            {
                "User": "I would like to record a new trip with id 9960, duration 360, start date '3/16/2023 12:00', start station name 'New Park Blvd', start station id 71, end date '3/16/2023 12:06', end station name 'San Jose Civic Center', end station id 3, bike id 480, subscription type 'Subscriber', zip code 94040.",
                "Answer": "INSERT INTO trip (id, duration, start_date, start_station_name, start_station_id, end_date, end_station_name, end_station_id, bike_id, subscription_type, zip_code) VALUES (9960, 360, '3/16/2023 12:00', 'New Park Blvd', 71, '3/16/2023 12:06', 'San Jose Civic Center', 3, 480, 'Subscriber', 94040)"
            },
            {
                "User": "Could you add a new column 'status' to the 'station' table to indicate if the station is active or not?",
                "Answer": "ALTER TABLE station ADD COLUMN status text"
            },
            {
                "User": "Set the status of all stations to 'Active'.",
                "Answer": "UPDATE station SET status = 'Active'"
            },
            {
                "User": "What is the average number of bikes available at stations in 'San Jose'?",
                "Answer": "SELECT AVG(bikes_available) FROM status WHERE station_id IN (SELECT id FROM station WHERE city = 'San Jose')"
            },
            {
                "User": "Create a new table 'maintenance' with columns 'maintenance_id' as number and primary key, 'station_id' as number, 'start_date' as text, 'end_date' as text, and 'description' as text.",
                "Answer": "CREATE TABLE maintenance (maintenance_id number PRIMARY KEY, station_id number, start_date text, end_date text, description text)"
            }
        ]
    },
    {
        "idx": 661,
        "db": "flight_company",
        "interaction": [
            {
                "User": "Can you add a new airport to the list?",
                "Answer": "INSERT INTO airport (City, Country, IATA, ICAO, name) VALUES ('New York', 'United States', 'JFK', 'KJFK', 'John F. Kennedy International Airport')"
            },
            {
                "User": "What's the IATA code for the airport we just added?",
                "Answer": "SELECT IATA FROM airport WHERE name = 'John F. Kennedy International Airport'"
            },
            {
                "User": "Can we update the Principal_activities for 'Air China Cargo' to include 'Passenger services'?",
                "Answer": "UPDATE operate_company SET Principal_activities = 'Cargo airline, Passenger services' WHERE name = 'Air China Cargo'"
            },
            {
                "User": "List all the companies that now have 'Passenger services' in their principal activities.",
                "Answer": "SELECT name FROM operate_company WHERE Principal_activities LIKE '%Passenger services%'"
            },
            {
                "User": "I would like to see the flights from 'John F. Kennedy International Airport'.",
                "Answer": "SELECT f.Vehicle_Flight_number FROM flight f JOIN airport a ON f.airport_id = a.id WHERE a.name = 'John F. Kennedy International Airport'"
            },
            {
                "User": "Create a new table for tracking flight delays, including flight_id, scheduled_departure, and actual_departure.",
                "Answer": "CREATE TABLE flight_delays (flight_id number, scheduled_departure text, actual_departure text, PRIMARY KEY (flight_id))"
            },
            {
                "User": "Add a delay record for flight id 2, which was scheduled to depart at 10:00 but actually left at 11:30.",
                "Answer": "INSERT INTO flight_delays (flight_id, scheduled_departure, actual_departure) VALUES (2, '10:00', '11:30')"
            },
            {
                "User": "Which flight had the longest delay today?",
                "Answer": "SELECT fd.flight_id, (julianday(fd.actual_departure) - julianday(fd.scheduled_departure)) * 24 * 60 AS delay_minutes FROM flight_delays fd ORDER BY delay_minutes DESC LIMIT 1"
            },
            {
                "User": "Add a 'status' column to the flight_delays table to indicate if a flight is 'On Time', 'Delayed', or 'Cancelled'.",
                "Answer": "ALTER TABLE flight_delays ADD COLUMN status text"
            },
            {
                "User": "Update the status of all flights that have a delay of more than 15 minutes to 'Delayed'.",
                "Answer": "UPDATE flight_delays SET status = 'Delayed' WHERE (julianday(actual_departure) - julianday(scheduled_departure)) * 24 * 60 > 15"
            },
            {
                "User": "Show me all delayed flights with their new status.",
                "Answer": "SELECT flight_id, status FROM flight_delays WHERE status = 'Delayed'"
            },
            {
                "User": "Can we have a list of flights from 'Schiphol Airport' that are operated by 'Air China'?",
                "Answer": "SELECT f.Vehicle_Flight_number FROM flight f JOIN airport a ON f.airport_id = a.id JOIN operate_company oc ON f.company_id = oc.id WHERE a.name = 'Schiphol Airport' AND oc.name = 'Air China'"
            }
        ]
    },
    {
        "idx": 662,
        "db": "body_builder",
        "interaction": [
            {
                "User": "Can you add a new bodybuilder named Alex Smith with a snatch of 130, clean and jerk of 160, and a total of 290?",
                "Answer": [
                    "INSERT INTO body_builder (Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total) VALUES (6, 7, 130, 160, 290);",
                    "INSERT INTO people (People_ID, Name, Height, Weight, Birth_Date, Birth_Place) VALUES (7, 'Alex Smith', NULL, NULL, NULL, NULL)"
                ]
            },
            {
                "User": "What's the total weight lifted by bodybuilders who are over 190 cm tall?",
                "Answer": "SELECT SUM(bb.Total) FROM body_builder bb JOIN people p ON bb.People_ID = p.People_ID WHERE p.Height > 190"
            },
            {
                "User": "Can you update the weight of Jack Campbell to 85 kg?",
                "Answer": "UPDATE people SET Weight = 85 WHERE Name = 'Jack Campbell'"
            },
            {
                "User": "What is the average weight of all bodybuilders from Anchorage, Alaska?",
                "Answer": "SELECT AVG(p.Weight) FROM people p WHERE p.Birth_Place = 'Anchorage, Alaska'"
            },
            {
                "User": "Please add a new column 'Country' to the people table.",
                "Answer": "ALTER TABLE people ADD Country text"
            },
            {
                "User": "Set the country for all current bodybuilders to 'USA'.",
                "Answer": "UPDATE people SET Country = 'USA'"
            },
            {
                "User": "Who is the youngest bodybuilder in our database?",
                "Answer": "SELECT Name FROM people WHERE Birth_Date = (SELECT MAX(Birth_Date) FROM people)"
            },
            {
                "User": "Can we create a new table to track the diet plans of bodybuilders?",
                "Answer": "CREATE TABLE diet_plans (Diet_Plan_ID number PRIMARY KEY, Body_Builder_ID number, Diet_Details text, FOREIGN KEY (Body_Builder_ID) REFERENCES body_builder(Body_Builder_ID))"
            },
            {
                "User": "Insert a diet plan for Body Builder ID 2 with details 'High Protein, Low Carb'.",
                "Answer": "INSERT INTO diet_plans (Diet_Plan_ID, Body_Builder_ID, Diet_Details) VALUES (1, 2, 'High Protein, Low Carb')"
            },
            {
                "User": "How many bodybuilders have a total lift greater than 300?",
                "Answer": "SELECT COUNT(*) FROM body_builder WHERE Total > 300"
            },
            {
                "User": "Who has the highest total lift and what is their snatch and clean jerk values?",
                "Answer": "SELECT p.Name, bb.Snatch, bb.Clean_Jerk FROM body_builder bb JOIN people p ON bb.People_ID = p.People_ID WHERE bb.Total = (SELECT MAX(Total) FROM body_builder)"
            },
            {
                "User": "Can you update Alex Smith's height to 185 cm and weight to 88 kg?",
                "Answer": "UPDATE people SET Height = 185, Weight = 88 WHERE Name = 'Alex Smith'"
            },
            {
                "User": "List all bodybuilders along with their diet plans.",
                "Answer": "SELECT p.Name, dp.Diet_Details FROM people p JOIN body_builder bb ON p.People_ID = bb.People_ID LEFT JOIN diet_plans dp ON bb.Body_Builder_ID = dp.Body_Builder_ID"
            },
            {
                "User": "Can you add a new record for a bodybuilder named 'Emily White' with a snatch of 90, clean and jerk of 110, and a total of 200?",
                "Answer": [
                    "INSERT INTO body_builder (Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total) VALUES (7, 8, 90, 110, 200);",
                    "INSERT INTO people (People_ID, Name, Height, Weight, Birth_Date, Birth_Place) VALUES (8, 'Emily White', NULL, NULL, NULL, NULL)"
                ]
            }
        ]
    },
    {
        "idx": 663,
        "db": "body_builder",
        "interaction": [
            {
                "User": "Can you add a new body builder to the database? The values of Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total are 6, 4, 130.0, 160.0, 290.0",
                "Answer": "INSERT INTO body_builder (Body_Builder_ID, People_ID, Snatch, Clean_Jerk, Total) VALUES (6, 4, 130.0, 160.0, 290.0)"
            },
            {
                "User": "The new builder's name is Alex Smith and he was born on July 20, 1990 in Denver, Colorado. His people_id is 7 with height 188.0 and weight 85.0",
                "Answer": "INSERT INTO people (People_ID, Name, Height, Weight, Birth_Date, Birth_Place) VALUES (7, 'Alex Smith', 188.0, 85.0, 'July 20, 1990', 'Denver, Colorado')"
            },
            {
                "User": "I realized we don't have columns for height and weight in the body_builder table. Can you add those?",
                "Answer": [
                    "ALTER TABLE body_builder ADD COLUMN Height number;",
                    "ALTER TABLE body_builder ADD COLUMN Weight number"
                ]
            },
            {
                "User": "Now update the new columns with the height and weight of all body builders from the people table.",
                "Answer": "UPDATE body_builder SET Height = (SELECT Height FROM people WHERE people.People_ID = body_builder.People_ID), Weight = (SELECT Weight FROM people WHERE people.People_ID = body_builder.People_ID)"
            },
            {
                "User": "Who is the tallest body builder?",
                "Answer": "SELECT Name FROM people WHERE People_ID = (SELECT People_ID FROM body_builder ORDER BY Height DESC LIMIT 1)"
            },
            {
                "User": "Can you create a table to track the diet plans of each body builder?",
                "Answer": "CREATE TABLE diet_plans (Diet_Plan_ID number PRIMARY KEY, Body_Builder_ID number, Diet_Details text)"
            },
            {
                "User": "Add a diet plan for Alex Smith that includes 'High Protein, Low Carb, No Sugar'.",
                "Answer": "INSERT INTO diet_plans (Diet_Plan_ID, Body_Builder_ID, Diet_Details) VALUES (1, 4, 'High Protein, Low Carb, No Sugar')"
            },
            {
                "User": "Jack Campbell has improved his snatch to 145. Can you update the record?",
                "Answer": "UPDATE body_builder SET Snatch = 145 WHERE People_ID = (SELECT People_ID FROM people WHERE Name = 'Jack Campbell')"
            },
            {
                "User": "Now that Jack's snatch has improved, what is his new total?",
                "Answer": "SELECT (Snatch + Clean_Jerk) AS New_Total FROM body_builder WHERE People_ID = (SELECT People_ID FROM people WHERE Name = 'Jack Campbell')"
            }
        ]
    },
    {
        "idx": 664,
        "db": "inn_1",
        "interaction": [
            {
                "User": "Can we add a column to track the cleaning status of the rooms?",
                "Answer": "ALTER TABLE Rooms ADD COLUMN cleaningStatus TEXT DEFAULT 'Dirty'"
            },
            {
                "User": "Mark room 'RND' as clean.",
                "Answer": "UPDATE Rooms SET cleaningStatus = 'Clean' WHERE RoomId = 'RND'"
            },
            {
                "User": "Which rooms are currently clean?",
                "Answer": "SELECT RoomId, roomName FROM Rooms WHERE cleaningStatus = 'Clean'"
            },
            {
                "User": "I'd like to create a new table for staff members. Can you do that?",
                "Answer": "CREATE TABLE Staff (StaffId TEXT PRIMARY KEY, FirstName TEXT, LastName TEXT, Role TEXT, Salary NUMBER)"
            },
            {
                "User": "Insert a new staff member with ID 'STF01', name 'John Doe', role 'Housekeeper', and salary 30000.",
                "Answer": "INSERT INTO Staff (StaffId, FirstName, LastName, Role, Salary) VALUES ('STF01', 'John', 'Doe', 'Housekeeper', 30000)"
            },
            {
                "User": "Show me all the housekeepers we have.",
                "Answer": "SELECT * FROM Staff WHERE Role = 'Housekeeper'"
            },
            {
                "User": "Create a reservation for 'NELSON KLESS' in room 'IBS' from '10-APR-23' to '15-APR-23' at a rate of 200.",
                "Answer": "INSERT INTO Reservations (Code, Room, CheckIn, CheckOut, Rate, LastName, FirstName, Adults, Kids) VALUES (10450, 'IBS', '10-APR-23', '15-APR-23', 200, 'KLESS', 'NELSON', 1, 0)"
            },
            {
                "User": "How many reservations are there for '23-OCT-10'?",
                "Answer": "SELECT COUNT(*) FROM Reservations WHERE CheckIn <= '23-OCT-10' AND CheckOut > '23-OCT-10'"
            },
            {
                "User": "Increase the base price of all rooms with 'traditional' decor by 20.",
                "Answer": "UPDATE Rooms SET basePrice = basePrice + 20 WHERE decor = 'traditional'"
            },
            {
                "User": "Show me the new prices of the 'traditional' decor rooms.",
                "Answer": "SELECT RoomId, roomName, basePrice FROM Rooms WHERE decor = 'traditional'"
            },
            {
                "User": "Add a new room 'ZEN' with 2 beds of type 'Queen', max occupancy 3, base price 180, and decor 'minimalist'.",
                "Answer": "INSERT INTO Rooms (RoomId, roomName, beds, bedType, maxOccupancy, basePrice, decor) VALUES ('ZEN', 'Zen Retreat', 2, 'Queen', 3, 180, 'minimalist')"
            },
            {
                "User": "Can you show me the list of all rooms sorted by their maximum occupancy?",
                "Answer": "SELECT * FROM Rooms ORDER BY maxOccupancy DESC"
            },
            {
                "User": "We need to track which staff member cleaned which room. Can we add a 'LastCleanedBy' column to the Rooms table?",
                "Answer": "ALTER TABLE Rooms ADD COLUMN LastCleanedBy TEXT"
            },
            {
                "User": "Update the 'LastCleanedBy' for room 'RND' to staff member 'STF01'.",
                "Answer": "UPDATE Rooms SET LastCleanedBy = 'STF01' WHERE RoomId = 'RND'"
            }
        ]
    },
    {
        "idx": 665,
        "db": "store_product",
        "interaction": [
            {
                "User": "Can you create a table to track the inventory levels of products in each store?",
                "Answer": "CREATE TABLE store_inventory (Store_ID number, Product_ID number, Inventory_Level number, PRIMARY KEY (Store_ID, Product_ID))"
            },
            {
                "User": "Please add a new column to the store table to record the number of employees.",
                "Answer": "ALTER TABLE store ADD COLUMN Number_of_employees number"
            },
            {
                "User": "How many products does the Miramichi store carry?",
                "Answer": "SELECT COUNT(*) FROM store_product WHERE Store_ID = (SELECT Store_ID FROM store WHERE Store_Name = 'Miramichi')"
            },
            {
                "User": "Add the Plustek MobileOffice D28 Corporate scanner to the Neguac store's inventory with 15 units.",
                "Answer": "INSERT INTO store_inventory (Store_ID, Product_ID, Inventory_Level) VALUES ((SELECT Store_ID FROM store WHERE Store_Name = 'Neguac'), 2, 15)"
            },
            {
                "User": "The Fujitsu fi-6130 scanner has been discontinued. Update the inventory for all stores to reflect zero units.",
                "Answer": "UPDATE store_inventory SET Inventory_Level = 0 WHERE Product_ID = 1"
            },
            {
                "User": "What is the average inventory level for all products across all stores?",
                "Answer": "SELECT AVG(Inventory_Level) FROM store_inventory"
            },
            {
                "User": "Can we track the date when we last updated the inventory for each product in each store?",
                "Answer": "ALTER TABLE store_inventory ADD COLUMN Last_Updated date"
            },
            {
                "User": "Set today's date as the last updated date for all inventory records.",
                "Answer": "UPDATE store_inventory SET Last_Updated = CURRENT_DATE"
            },
            {
                "User": "How many employees does the Miramichi store have?",
                "Answer": "SELECT Number_of_employees FROM store WHERE Store_Name = 'Miramichi'"
            },
            {
                "User": "Update the number of employees for the Miramichi store to 40.",
                "Answer": "UPDATE store SET Number_of_employees = 40 WHERE Store_Name = 'Miramichi'"
            },
            {
                "User": "What is the total number of employees across all stores?",
                "Answer": "SELECT SUM(Number_of_employees) FROM store"
            },
            {
                "User": "Create a new table to store sales transactions.",
                "Answer": "CREATE TABLE sales_transactions (Transaction_ID number PRIMARY KEY, Store_ID number, Product_ID number, Quantity_Sold number, Sale_Date date)"
            },
            {
                "User": "Record a sale of 3 Xerox Travel Scanner 100 units at the Miramichi store.",
                "Answer": "INSERT INTO sales_transactions (Transaction_ID, Store_ID, Product_ID, Quantity_Sold, Sale_Date) VALUES (1, (SELECT Store_ID FROM store WHERE Store_Name = 'Miramichi'), 3, 3, CURRENT_DATE)"
            },
            {
                "User": "Can you show me the total sales for each product?",
                "Answer": "SELECT Product_ID, SUM(Quantity_Sold) FROM sales_transactions GROUP BY Product_ID"
            }
        ]
    },
    {
        "idx": 666,
        "db": "customer_complaints",
        "interaction": [
            {
                "User": "Add a new customer with the name John Doe, living at 1234 Elm Street, Apt. 101, Springfield, Illinois. His email is johndoe@example.com and his phone number is 555-1234. The customer_id is 121 and the customer_type_code is 'New Customer'",
                "Answer": "INSERT INTO Customers (customer_id, customer_type_code, address_line_1, address_line_2, town_city, state, email_address, phone_number) VALUES (121, 'New Customer', '1234 Elm Street', 'Apt. 101', 'Springfield', 'Illinois', 'johndoe@example.com', '555-1234')"
            },
            {
                "User": "Update the product price of 'Chocolate' to $3.50.",
                "Answer": "UPDATE Products SET product_price = 3.50 WHERE product_name = 'Chocolate'"
            },
            {
                "User": "What is the new price of the 'Chocolate' product?",
                "Answer": "SELECT product_price FROM Products WHERE product_name = 'Chocolate'"
            },
            {
                "User": "Create a new table to track the staff work schedules with columns for staff_id, day_of_week, start_time, and end_time.",
                "Answer": "CREATE TABLE StaffSchedule (staff_id number, day_of_week text, start_time time, end_time time, PRIMARY KEY (staff_id, day_of_week))"
            },
            {
                "User": "Add a work schedule for staff member with ID 114 for Mondays from 9 AM to 5 PM.",
                "Answer": "INSERT INTO StaffSchedule (staff_id, day_of_week, start_time, end_time) VALUES (114, 'Monday', '09:00:00', '17:00:00')"
            },
            {
                "User": "The customer with the email 'vida86@example.com' has changed their phone number to 555-6789. Update their record.",
                "Answer": "UPDATE Customers SET phone_number = '555-6789' WHERE email_address = 'vida86@example.com'"
            },
            {
                "User": "Add a column named 'loyalty_points' to the Customers table to track customer rewards.",
                "Answer": "ALTER TABLE Customers ADD COLUMN loyalty_points number"
            },
            {
                "User": "Award 100 loyalty points to the customer John Doe.",
                "Answer": "UPDATE Customers SET loyalty_points = 100 WHERE email_address = 'johndoe@example.com'"
            },
            {
                "User": "How many loyalty points does John Doe have now?",
                "Answer": "SELECT loyalty_points FROM Customers WHERE email_address = 'johndoe@example.com'"
            },
            {
                "User": "Create a new complaint record for the product with ID 117 by the customer John Doe, with a complaint type of 'Late Delivery'.",
                "Answer": "INSERT INTO Complaints (complaint_id, product_id, customer_id, complaint_outcome_code, complaint_status_code, complaint_type_code, date_complaint_raised, date_complaint_closed, staff_id) VALUES (13, 117, 116, 'Pending', 'Open', 'Late Delivery', CURRENT_TIMESTAMP, NULL, 115)"
            },
            {
                "User": "What is the status of the most recent complaint filed by John Doe?",
                "Answer": "SELECT complaint_status_code FROM Complaints JOIN Customers ON Complaints.customer_id = Customers.customer_id WHERE Customers.email_address = 'johndoe@example.com' ORDER BY date_complaint_raised DESC LIMIT 1"
            }
        ]
    },
    {
        "idx": 667,
        "db": "scientist_1",
        "interaction": [
            {
                "User": "Can we add a new project called 'Quantum Computing Fundamentals' with 300 hours allocated to it?",
                "Answer": "INSERT INTO Projects (Code, Name, Hours) VALUES ('QCF1', 'Quantum Computing Fundamentals', 300)"
            },
            {
                "User": "I would like to assign the scientist Carol Smith to the new 'Quantum Computing Fundamentals' project.",
                "Answer": "INSERT INTO AssignedTo (Scientist, Project) VALUES ((SELECT SSN FROM Scientists WHERE Name = 'Carol Smith'), 'QCF1')"
            },
            {
                "User": "How many hours in total have been allocated to projects that Carol Smith is working on?",
                "Answer": "SELECT SUM(T2.Hours) FROM AssignedTo AS T1 JOIN Projects AS T2 ON T1.Project = T2.Code WHERE T1.Scientist = (SELECT SSN FROM Scientists WHERE Name = 'Carol Smith')"
            },
            {
                "User": "We need to add a new column 'Budget' to the Projects table to track the budget of each project. Can we add that?",
                "Answer": "ALTER TABLE Projects ADD Budget number"
            },
            {
                "User": "Please set the budget for the 'Quantum Computing Fundamentals' project to $50000.",
                "Answer": "UPDATE Projects SET Budget = 50000 WHERE Name = 'Quantum Computing Fundamentals'"
            },
            {
                "User": "Can you create a new table to store publications with columns for ID, Title, and Year?",
                "Answer": "CREATE TABLE Publications (ID text PRIMARY KEY, Title text, Year number)"
            },
            {
                "User": "Let's add a new publication titled 'Quantum Mechanics and Computing' published in 2023.",
                "Answer": "INSERT INTO Publications (ID, Title, Year) VALUES ('QM001', 'Quantum Mechanics and Computing', 2023)"
            },
            {
                "User": "Could you update the name of the scientist with SSN 152934485 to 'Anand K. Manikutty'?",
                "Answer": "UPDATE Scientists SET Name = 'Anand K. Manikutty' WHERE SSN = 152934485"
            },
            {
                "User": "Can we also track the department for each scientist? We should add a 'Department' column to the Scientists table.",
                "Answer": "ALTER TABLE Scientists ADD Department text"
            },
            {
                "User": "Assign the 'Physics' department to Carol Smith in the Scientists table.",
                "Answer": "UPDATE Scientists SET Department = 'Physics' WHERE Name = 'Carol Smith'"
            },
            {
                "User": "Show me all the scientists in the 'Physics' department.",
                "Answer": "SELECT Name FROM Scientists WHERE Department = 'Physics'"
            },
            {
                "User": "I want to record the participation of scientists in publications. Can we create a new table for this with scientist SSN and publication ID?",
                "Answer": "CREATE TABLE ScientistPublications (Scientist number, Publication text, FOREIGN KEY (Scientist) REFERENCES Scientists(SSN), FOREIGN KEY (Publication) REFERENCES Publications(ID))"
            },
            {
                "User": "Link Carol Smith to the publication 'Quantum Mechanics and Computing'.",
                "Answer": "INSERT INTO ScientistPublications (Scientist, Publication) VALUES ((SELECT SSN FROM Scientists WHERE Name = 'Carol Smith'), 'QM001')"
            }
        ]
    },
    {
        "idx": 668,
        "db": "news_report",
        "interaction": [
            {
                "User": "I want to add a new event that happened today at the Central Park with 200 attendees. The event is called 'Charity Run'.",
                "Answer": "INSERT INTO event (Date, Venue, Name, Event_Attendance) VALUES ('2023-04-01', 'Central Park', 'Charity Run', 200)"
            },
            {
                "User": "Can you confirm the new event has been added?",
                "Answer": "SELECT * FROM event WHERE Name = 'Charity Run'"
            },
            {
                "User": "I'd like to update the attendance for the 'Charity Run' event to 250 because more people showed up.",
                "Answer": "UPDATE event SET Event_Attendance = 250 WHERE Name = 'Charity Run'"
            },
            {
                "User": "Can you show me the updated record for the 'Charity Run' event?",
                "Answer": "SELECT * FROM event WHERE Name = 'Charity Run'"
            },
            {
                "User": "Let's add a new journalist named 'Alex Reed', from Canada, who is 32 years old and has been working for 4 years.",
                "Answer": "INSERT INTO journalist (Name, Nationality, Age, Years_working) VALUES ('Alex Reed', 'Canada', '32', 4)"
            },
            {
                "User": "I realized we don't have a column for the journalist's email. Can we add that?",
                "Answer": "ALTER TABLE journalist ADD COLUMN Email text"
            },
            {
                "User": "Now, set the email for 'Alex Reed' to 'alex.reed@email.com'.",
                "Answer": "UPDATE journalist SET Email = 'alex.reed@email.com' WHERE Name = 'Alex Reed'"
            },
            {
                "User": "Show me all journalists with their emails.",
                "Answer": "SELECT Name, Email FROM journalist"
            },
            {
                "User": "I need to create a report for the 'Charity Run' by journalist 'Alex Reed'. The work type is 'Article'.",
                "Answer": "INSERT INTO news_report (journalist_ID, Event_ID, Work_Type) SELECT j.journalist_ID, e.Event_ID, 'Article' FROM journalist j, event e WHERE j.Name = 'Alex Reed' AND e.Name = 'Charity Run'"
            },
            {
                "User": "Can you show me all reports on 'Charity Run'?",
                "Answer": "SELECT nr.* FROM news_report nr JOIN event e ON nr.Event_ID = e.Event_ID WHERE e.Name = 'Charity Run'"
            },
            {
                "User": "I want to see a list of all events that have more than 1000 attendees.",
                "Answer": "SELECT * FROM event WHERE Event_Attendance > 1000"
            },
            {
                "User": "Can you create a view that shows the total number of reports each journalist has made?",
                "Answer": "CREATE VIEW journalist_report_count AS SELECT journalist_ID, COUNT(*) AS Report_Count FROM news_report GROUP BY journalist_ID"
            }
        ]
    },
    {
        "idx": 669,
        "db": "tracking_grants_for_research",
        "interaction": [
            {
                "User": "Can we track the email address of the staff members?",
                "Answer": "ALTER TABLE Research_Staff ADD COLUMN email_address text;"
            },
            {
                "User": "Please add an email address for staff member with ID 1.",
                "Answer": "UPDATE Research_Staff SET email_address = 'staff1@example.com' WHERE staff_id = 1;"
            },
            {
                "User": "Show me the details of staff member 1 including their new email address.",
                "Answer": "SELECT staff_id, staff_details, email_address FROM Research_Staff WHERE staff_id = 1;"
            },
            {
                "User": "I want to insert a new project outcome with details. Project ID is 10, outcome code is 'Thesis', and details are 'Ph.D. Thesis submitted'.",
                "Answer": "INSERT INTO Project_Outcomes (project_id, outcome_code, outcome_details) VALUES (10, 'Thesis', 'Ph.D. Thesis submitted');"
            },
            {
                "User": "What is the total grant amount for organisation ID 10?",
                "Answer": "SELECT SUM(grant_amount) FROM Grants WHERE organisation_id = 10;"
            },
            {
                "User": "Let's create a new table to track project updates. It should have an update ID, project ID, update details, and a timestamp.",
                "Answer": "CREATE TABLE Project_Updates (update_id number PRIMARY KEY, project_id number, update_details text, update_timestamp time);"
            },
            {
                "User": "Add a new update for project ID 2 stating 'Project phase 1 completed' with the current timestamp.",
                "Answer": "INSERT INTO Project_Updates (update_id, project_id, update_details, update_timestamp) VALUES (1, 2, 'Project phase 1 completed', CURRENT_TIMESTAMP);"
            },
            {
                "User": "What are the latest details for project ID 2 including updates?",
                "Answer": "SELECT P.project_details, U.update_details FROM Projects P LEFT JOIN Project_Updates U ON P.project_id = U.project_id WHERE P.project_id = 2 ORDER BY U.update_timestamp DESC LIMIT 1;"
            },
            {
                "User": "Let's add a new document type for 'Final Report' submissions.",
                "Answer": "INSERT INTO Document_Types (document_type_code, document_description) VALUES ('FIN', 'Final Report');"
            },
            {
                "User": "Show me all the project outcomes for project ID 10.",
                "Answer": "SELECT * FROM Project_Outcomes WHERE project_id = 10;"
            },
            {
                "User": "Let's update the outcome details for project ID 10, outcome code 'Thesis' to indicate the thesis was approved.",
                "Answer": "UPDATE Project_Outcomes SET outcome_details = 'Ph.D. Thesis approved' WHERE project_id = 10 AND outcome_code = 'Thesis';"
            }
        ]
    },
    {
        "idx": 670,
        "db": "wine_1",
        "interaction": [
            {
                "User": "I'd like to add a new wine to the database. Please add a 2010 Chardonnay from 'Sonoma-Cutrer' in 'Russian River Valley' with a price of $30, a score of 92, 1000 cases, and a drink window of 'now'.",
                "Answer": "INSERT INTO wine (Grape, Winery, Appelation, State, Name, Year, Price, Score, Cases, Drink) VALUES ('Chardonnay', 'Sonoma-Cutrer', 'Russian River Valley', 'California', 'Chardonnay', 2010, 30, 92, 1000, 'now')"
            },
            {
                "User": "Can you show me the latest entry we just added?",
                "Answer": "SELECT * FROM wine ORDER BY No DESC LIMIT 1"
            },
            {
                "User": "I noticed we don't have a column for wine type (e.g., table wine, sparkling, dessert wine). Can we add that?",
                "Answer": "ALTER TABLE wine ADD COLUMN Type text"
            },
            {
                "User": "Now let's update the wine type for the Chardonnay we just added to 'table wine'.",
                "Answer": "UPDATE wine SET Type = 'table wine' WHERE Name = 'Chardonnay' AND Year = 2010 AND Winery = 'Sonoma-Cutrer'"
            },
            {
                "User": "Can we get a list of all table wines with a score above 90?",
                "Answer": "SELECT * FROM wine WHERE Type = 'table wine' AND Score > 90"
            },
            {
                "User": "I'm curious, what's the average price of sparkling wines in our database?",
                "Answer": "SELECT AVG(Price) FROM wine WHERE Type = 'sparkling'"
            },
            {
                "User": "We should also track the grape variety for each wine. Can we create a new table to associate wines with their grape varieties?",
                "Answer": "CREATE TABLE wine_grape_variety (WineNo number, GrapeID number, PRIMARY KEY (WineNo, GrapeID), FOREIGN KEY (WineNo) REFERENCES wine(No), FOREIGN KEY (GrapeID) REFERENCES grapes(ID))"
            },
            {
                "User": "Now, let's associate the Chardonnay we added with its grape variety.",
                "Answer": "INSERT INTO wine_grape_variety (WineNo, GrapeID) SELECT No, (SELECT ID FROM grapes WHERE Grape = 'Chardonnay') FROM wine WHERE Name = 'Chardonnay' AND Year = 2010 AND Winery = 'Sonoma-Cutrer'"
            },
            {
                "User": "How many different grape varieties do we have for our table wines?",
                "Answer": "SELECT COUNT(DISTINCT GrapeID) FROM wine_grape_variety JOIN wine ON wine_grape_variety.WineNo = wine.No WHERE wine.Type = 'table wine'"
            },
            {
                "User": "Can you show me the average score and average price for each grape variety used in table wines?",
                "Answer": "SELECT grapes.Grape, AVG(wine.Score) AS AvgScore, AVG(wine.Price) AS AvgPrice FROM wine JOIN wine_grape_variety ON wine.No = wine_grape_variety.WineNo JOIN grapes ON wine_grape_variety.GrapeID = grapes.ID WHERE wine.Type = 'table wine' GROUP BY grapes.Grape"
            },
            {
                "User": "Let's update the drink window for all wines made with 'Cabernet Sauvignon' to '2025'.",
                "Answer": "UPDATE wine SET Drink = '2025' WHERE Grape = 'Cabernet Sauvignon'"
            }
        ]
    },
    {
        "idx": 671,
        "db": "race_track",
        "interaction": [
            {
                "User": "Can we add a new race event to the schedule?",
                "Answer": "INSERT INTO race (Race_ID, Name, Class, Date, Track_ID) VALUES (8, 'Summer Sprint', 'DP/GT', 'July 15', '5')"
            },
            {
                "User": "What is the new race event that was just added?",
                "Answer": "SELECT * FROM race WHERE Race_ID = 8"
            },
            {
                "User": "I'd like to update the seating capacity of the Darlington Raceway to 65000.",
                "Answer": "UPDATE track SET Seating = 65000 WHERE Name = 'Darlington Raceway'"
            },
            {
                "User": "Can you show me the updated seating capacity for Darlington Raceway?",
                "Answer": "SELECT Name, Seating FROM track WHERE Name = 'Darlington Raceway'"
            },
            {
                "User": "Do we have a column for the number of pit stops in the race table? If not, can we add it?",
                "Answer": "ALTER TABLE race ADD COLUMN Pit_Stops number"
            },
            {
                "User": "How many pit stops are planned for the Summer Sprint race?",
                "Answer": "SELECT Name, Pit_Stops FROM race WHERE Name = 'Summer Sprint'"
            },
            {
                "User": "Set the number of pit stops for the Summer Sprint to 5.",
                "Answer": "UPDATE race SET Pit_Stops = 5 WHERE Name = 'Summer Sprint'"
            },
            {
                "User": "What are the details of tracks where the seating capacity is more than 80000?",
                "Answer": "SELECT * FROM track WHERE Seating > 80000"
            },
            {
                "User": "Let's create a new table to log race winners. What should be the structure?",
                "Answer": "CREATE TABLE race_winners (Winner_ID number PRIMARY KEY, Race_ID number, Racer_Name text, Team text, Finish_Time text)"
            },
            {
                "User": "Add the winner of the last Rolex 24 At Daytona with Racer Name 'Alex Rossi', Team 'Team Penske', and Finish Time '24:01:15'.",
                "Answer": "INSERT INTO race_winners (Winner_ID, Race_ID, Racer_Name, Team, Finish_Time) VALUES (1, 1, 'Alex Rossi', 'Team Penske', '24:01:15')"
            },
            {
                "User": "Can you show me all the winners from the race_winners table?",
                "Answer": "SELECT * FROM race_winners"
            },
            {
                "User": "I realized we need to track the nationality of the race winners. Can we add a column for that?",
                "Answer": "ALTER TABLE race_winners ADD COLUMN Nationality text"
            },
            {
                "User": "Update the nationality of Alex Rossi to 'USA'.",
                "Answer": "UPDATE race_winners SET Nationality = 'USA' WHERE Racer_Name = 'Alex Rossi'"
            }
        ]
    },
    {
        "idx": 672,
        "db": "entertainment_awards",
        "interaction": [
            {
                "User": "Can we track the host for each festival?",
                "Answer": "ALTER TABLE festival_detail ADD COLUMN Host_Name text"
            },
            {
                "User": "Please add Ellen DeGeneres as the host for the Panasonic Awards.",
                "Answer": "UPDATE festival_detail SET Host_Name = 'Ellen DeGeneres' WHERE Festival_Name = 'Panasonic Awards'"
            },
            {
                "User": "What is the name of the host for the Panasonic Awards now?",
                "Answer": "SELECT Host_Name FROM festival_detail WHERE Festival_Name = 'Panasonic Awards'"
            },
            {
                "User": "I'd like to know the festivals where the audience count was more than 150.",
                "Answer": "SELECT Festival_Name FROM festival_detail WHERE Num_of_Audience > 150"
            },
            {
                "User": "Can you show me the details of all artwork nominated for the Flower Awards?",
                "Answer": "SELECT artwork.Artwork_ID, artwork.Type, artwork.Name FROM artwork INNER JOIN nomination ON artwork.Artwork_ID = nomination.Artwork_ID WHERE nomination.Festival_ID = (SELECT Festival_ID FROM festival_detail WHERE Festival_Name = 'Flower Awards')"
            },
            {
                "User": "Let's add a new category for Short Films in the artwork table.",
                "Answer": "INSERT INTO artwork (Artwork_ID, Type, Name) VALUES (10, 'Short Film', 'A Brief Encounter')"
            },
            {
                "User": "Can you update the result of 'Indonesian Idol' in the Flower Awards to 'Won'?",
                "Answer": "UPDATE nomination SET Result = 'Won' WHERE Artwork_ID = (SELECT Artwork_ID FROM artwork WHERE Name = 'Indonesian Idol') AND Festival_ID = (SELECT Festival_ID FROM festival_detail WHERE Festival_Name = 'Flower Awards')"
            },
            {
                "User": "I want to add a new festival called 'Global Music Awards' happening in 2021 with 200 attendees.",
                "Answer": "INSERT INTO festival_detail (Festival_ID, Festival_Name, Chair_Name, Location, Year, Num_of_Audience) VALUES (6, 'Global Music Awards', 'Tina Fey', 'United Kingdom', 2021, 200)"
            },
            {
                "User": "Which festivals had more than 150 attendees and were held in the United States?",
                "Answer": "SELECT Festival_Name FROM festival_detail WHERE Num_of_Audience > 150 AND Location = 'United States'"
            },
            {
                "User": "Let's create a new table to track festival sponsors.",
                "Answer": "CREATE TABLE festival_sponsors (Sponsor_ID number PRIMARY KEY, Festival_ID number, Sponsor_Name text, Contribution_Amount number)"
            },
            {
                "User": "Add 'Coca-Cola' as a sponsor for the 'Global Music Awards' with a contribution of 50000.",
                "Answer": "INSERT INTO festival_sponsors (Sponsor_ID, Festival_ID, Sponsor_Name, Contribution_Amount) VALUES (1, (SELECT Festival_ID FROM festival_detail WHERE Festival_Name = 'Global Music Awards'), 'Coca-Cola', 50000)"
            },
            {
                "User": "Who are the sponsors for the Global Music Awards?",
                "Answer": "SELECT Sponsor_Name FROM festival_sponsors WHERE Festival_ID = (SELECT Festival_ID FROM festival_detail WHERE Festival_Name = 'Global Music Awards')"
            }
        ]
    },
    {
        "idx": 673,
        "db": "company_office",
        "interaction": [
            {
                "User": "Can you create a table to track the number of employees in each company?",
                "Answer": "CREATE TABLE CompanyEmployees (company_id number, employee_count number, PRIMARY KEY (company_id))"
            },
            {
                "User": "Please add the employee count for JPMorgan Chase, they have 255,000 employees.",
                "Answer": "INSERT INTO CompanyEmployees (company_id, employee_count) VALUES (1, 255000)"
            },
            {
                "User": "Insert HSBC's employee count as well, which is 235,000.",
                "Answer": "INSERT INTO CompanyEmployees (company_id, employee_count) VALUES (2, 235000)"
            },
            {
                "User": "What about General Electric's employee count?",
                "Answer": "INSERT INTO CompanyEmployees (company_id, employee_count) VALUES (3, 305000)"
            },
            {
                "User": "Which company has the most employees?",
                "Answer": "SELECT Companies.name FROM Companies INNER JOIN CompanyEmployees ON Companies.id = CompanyEmployees.company_id ORDER BY CompanyEmployees.employee_count DESC LIMIT 1"
            },
            {
                "User": "Can you update the headquarters of General Electric to Boston?",
                "Answer": "UPDATE Companies SET Headquarters = 'Boston' WHERE name = 'General Electric'"
            },
            {
                "User": "How many companies are headquartered in the USA?",
                "Answer": "SELECT COUNT(*) FROM Companies WHERE Headquarters = 'USA'"
            },
            {
                "User": "Add a new building called 'Sky Tower' in New York with 70 stories and a height of 250 meters.",
                "Answer": "INSERT INTO buildings (id, name, City, Height, Stories, Status) VALUES (13, 'Sky Tower', 'New York', 250, 70, 'completed')"
            },
            {
                "User": "Can you list all completed buildings in New York?",
                "Answer": "SELECT name FROM buildings WHERE City = 'New York' AND Status = 'completed'"
            },
            {
                "User": "Let's add a column for the year the buildings were completed to the buildings table.",
                "Answer": "ALTER TABLE buildings ADD COLUMN completion_year number"
            },
            {
                "User": "Update the completion year of 'Sky Tower' to 2023.",
                "Answer": "UPDATE buildings SET completion_year = 2023 WHERE name = 'Sky Tower'"
            },
            {
                "User": "How many buildings were completed after 2020?",
                "Answer": "SELECT COUNT(*) FROM buildings WHERE completion_year > 2020"
            },
            {
                "User": "I need to know the industry of the company in the tallest building.",
                "Answer": "SELECT Companies.Industry FROM Companies INNER JOIN Office_locations ON Companies.id = Office_locations.company_id INNER JOIN buildings ON Office_locations.building_id = buildings.id ORDER BY buildings.Height DESC LIMIT 1"
            },
            {
                "User": "Create a new table to track the rental costs for each company's office location.",
                "Answer": "CREATE TABLE OfficeRentals (office_location_id number, company_id number, monthly_rent number, PRIMARY KEY (office_location_id))"
            },
            {
                "User": "Set the monthly rent for JPMorgan Chase's office to $120,000.",
                "Answer": "INSERT INTO OfficeRentals (office_location_id, company_id, monthly_rent) VALUES (1, 1, 120000)"
            }
        ]
    },
    {
        "idx": 674,
        "db": "local_govt_in_alabama",
        "interaction": [
            {
                "User": "I'd like to add a new service type called 'Pet Registration'.",
                "Answer": "INSERT INTO Services (Service_ID, Service_Type_Code) VALUES (7, 'Pet Registration')"
            },
            {
                "User": "Great, can you show me all the services we now offer?",
                "Answer": "SELECT * FROM Services"
            },
            {
                "User": "Can we update the event details for Event ID 13 to 'Success'?",
                "Answer": "UPDATE Events SET Event_Details = 'Success' WHERE Event_ID = 13"
            },
            {
                "User": "Now, I want to see a list of all successful events.",
                "Answer": "SELECT * FROM Events WHERE Event_Details = 'Success'"
            },
            {
                "User": "Can we add a new column to track the location of each event?",
                "Answer": "ALTER TABLE Events ADD COLUMN Event_Location text"
            },
            {
                "User": "Please set the location of Event ID 3 to 'City Hall'.",
                "Answer": "UPDATE Events SET Event_Location = 'City Hall' WHERE Event_ID = 3"
            },
            {
                "User": "How many events are located at 'City Hall'?",
                "Answer": "SELECT COUNT(*) FROM Events WHERE Event_Location = 'City Hall'"
            },
            {
                "User": "I'd like to create a new table for feedback with columns for feedback ID, event ID, participant ID, and comments.",
                "Answer": "CREATE TABLE Feedback (Feedback_ID number PRIMARY KEY, Event_ID number, Participant_ID number, Comments text)"
            },
            {
                "User": "Let's record some feedback for Event ID 3. Participant ID 26 found it 'Very informative and well-organized'.",
                "Answer": "INSERT INTO Feedback (Feedback_ID, Event_ID, Participant_ID, Comments) VALUES (1, 3, 26, 'Very informative and well-organized')"
            },
            {
                "User": "Can we get a list of all feedback for events held at 'City Hall'?",
                "Answer": "SELECT F.* FROM Feedback AS F JOIN Events AS E ON F.Event_ID = E.Event_ID WHERE E.Event_Location = 'City Hall'"
            },
            {
                "User": "We need to record the date for each event. Can you add a date column to the Events table?",
                "Answer": "ALTER TABLE Events ADD COLUMN Event_Date date"
            },
            {
                "User": "Set the date of Event ID 3 to April 15th, 2023.",
                "Answer": "UPDATE Events SET Event_Date = '2023-04-15' WHERE Event_ID = 3"
            }
        ]
    },
    {
        "idx": 675,
        "db": "county_public_safety",
        "interaction": [
            {
                "User": "Add a new county with the following details: County_ID 7, Name 'Oakridge', Population 50000, Police_officers 75, Residents_per_officer 666, Case_burden 90, Crime_rate 150.0, Police_force 'Oakridge Police Department', Location 'North'",
                "Answer": "INSERT INTO county_public_safety (County_ID, Name, Population, Police_officers, Residents_per_officer, Case_burden, Crime_rate, Police_force, Location) VALUES (7, 'Oakridge', 50000, 75, 666, 90, 150.0, 'Oakridge Police Department', 'North')"
            },
            {
                "User": "Update the population of Burnaby to 210000 and recalculate the Residents_per_officer ratio.",
                "Answer": "UPDATE county_public_safety SET Population = 210000, Residents_per_officer = Population / Police_officers WHERE Name = 'Burnaby'"
            },
            {
                "User": "Which county has more than 100,000 residents but less than 200 police officers?",
                "Answer": "SELECT Name FROM county_public_safety WHERE Population > 100000 AND Police_officers < 200"
            },
            {
                "User": "Create a new table to log police department budgets with the following columns: Department_ID (number), County_ID (number), Budget (number), and Year (number).",
                "Answer": "CREATE TABLE police_budgets (Department_ID number, County_ID number, Budget number, Year number)"
            },
            {
                "User": "Add a new column to the city table to track the population under 18 years old. Call it 'Under_18' and make it a number type.",
                "Answer": "ALTER TABLE city ADD COLUMN Under_18 number"
            },
            {
                "User": "Insert the following record into the police_budgets table: Department_ID 1, County_ID 1, Budget 7500000, Year 2023.",
                "Answer": "INSERT INTO police_budgets (Department_ID, County_ID, Budget, Year) VALUES (1, 1, 7500000, 2023)"
            },
            {
                "User": "How does the budget of the Abbotsford Police Department for 2023 compare to the population of Abbotsford?",
                "Answer": "SELECT b.Budget, c.Population FROM police_budgets b JOIN county_public_safety c ON b.County_ID = c.County_ID WHERE c.Name = 'Abbotsford' AND b.Year = 2023"
            },
            {
                "User": "Can you list all cities within the 'East' location and their corresponding Hispanic population percentage?",
                "Answer": "SELECT c.Name, c.Hispanic FROM city c JOIN county_public_safety cps ON c.County_ID = cps.County_ID WHERE cps.Location = 'East'"
            },
            {
                "User": "Add a record to the city table: City_ID 18, County_ID 4, Name 'Oakridge South', White 60.0, Black 20.0, Amerindian 1.0, Asian 15.0, Multiracial 3.0, Hispanic 50.0, Under_18 12000.",
                "Answer": "INSERT INTO city (City_ID, County_ID, Name, White, Black, Amerindian, Asian, Multiracial, Hispanic, Under_18) VALUES (18, 4, 'Oakridge South', 60.0, 20.0, 1.0, 15.0, 3.0, 50.0, 12000)"
            },
            {
                "User": "Which county has the highest number of police officers per resident?",
                "Answer": "SELECT Name FROM county_public_safety ORDER BY Residents_per_officer ASC LIMIT 1"
            },
            {
                "User": "Can we get the average crime rate across all counties?",
                "Answer": "SELECT AVG(Crime_rate) FROM county_public_safety"
            }
        ]
    },
    {
        "idx": 676,
        "db": "sakila_1",
        "interaction": [
            {
                "User": "What name is popular for actors? | did you mean the most popular? | yes",
                "Answer": "SELECT first_name, last_name FROM actor GROUP BY first_name, last_name ORDER BY count(*) DESC LIMIT 1"
            },
            {
                "User": "Can we add a middle name for the actors? I want to keep track of their full names.",
                "Answer": "ALTER TABLE actor ADD COLUMN middle_name TEXT AFTER first_name"
            },
            {
                "User": "Okay, let's update the record for Penelope Guiness to include her middle name 'Sarah'.",
                "Answer": "UPDATE actor SET middle_name = 'Sarah' WHERE first_name = 'PENELOPE' AND last_name = 'GUINESS'"
            },
            {
                "User": "Now, can you show me the full name of all actors including middle names where available?",
                "Answer": "SELECT first_name, middle_name, last_name FROM actor"
            },
            {
                "User": "I'd like to create a new table to track the social media handles of our actors. It should include Twitter and Instagram usernames.",
                "Answer": "CREATE TABLE actor_social_media (actor_id NUMBER PRIMARY KEY, twitter_handle TEXT, instagram_handle TEXT, last_update TIME)"
            },
            {
                "User": "Let's add social media info for Nick Wahlberg. His Twitter is '@nick_w' and Instagram is '@wahlberg_nick'.",
                "Answer": "INSERT INTO actor_social_media (actor_id, twitter_handle, instagram_handle, last_update) VALUES (2, '@nick_w', '@wahlberg_nick', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Can we see which actors have a Twitter account listed?",
                "Answer": "SELECT a.first_name, a.last_name, asm.twitter_handle FROM actor a JOIN actor_social_media asm ON a.actor_id = asm.actor_id WHERE asm.twitter_handle IS NOT NULL"
            },
            {
                "User": "I'd like to update the email address for customer Linda Williams to 'linda.williams@example.com'.",
                "Answer": "UPDATE customer SET email = 'linda.williams@example.com' WHERE first_name = 'LINDA' AND last_name = 'WILLIAMS'"
            },
            {
                "User": "Can you show me the most recent rental for each customer?",
                "Answer": "SELECT c.first_name, c.last_name, MAX(r.rental_date) as recent_rental FROM customer c JOIN rental r ON c.customer_id = r.customer_id GROUP BY c.customer_id"
            },
            {
                "User": "Let's add a loyalty points column to the customer table to reward frequent renters.",
                "Answer": "ALTER TABLE customer ADD COLUMN loyalty_points NUMBER DEFAULT 0"
            },
            {
                "User": "For every rental, let's give the customer 10 loyalty points. Start by updating the existing records.",
                "Answer": "UPDATE customer SET loyalty_points = (SELECT COUNT(r.rental_id) * 10 FROM rental r join customer c WHERE r.customer_id = c.customer_id)"
            }
        ]
    },
    {
        "idx": 677,
        "db": "gymnast",
        "interaction": [
            {
                "User": "Can we add a new gymnast to the database?",
                "Answer": "INSERT INTO gymnast (Gymnast_ID, Floor_Exercise_Points, Pommel_Horse_Points, Rings_Points, Vault_Points, Parallel_Bars_Points, Horizontal_Bar_Points, Total_Points) VALUES (5, 9.8, 9.7, 9.6, 9.9, 9.8, 9.7, 58.5)"
            },
            {
                "User": "What is the new total points for the gymnast we just added?",
                "Answer": "SELECT Total_Points FROM gymnast WHERE Gymnast_ID = 5"
            },
            {
                "User": "Can we update the age of 'Paul Hamm' to 25?",
                "Answer": "UPDATE people SET Age = 25 WHERE Name = 'Paul Hamm'"
            },
            {
                "User": "I want to know the updated age of 'Paul Hamm'.",
                "Answer": "SELECT Age FROM people WHERE Name = 'Paul Hamm'"
            },
            {
                "User": "Let's add a new column 'Country' to the 'people' table.",
                "Answer": "ALTER TABLE people ADD COLUMN Country text"
            },
            {
                "User": "Now, set the country for 'Paul Hamm' to 'USA'.",
                "Answer": "UPDATE people SET Country = 'USA' WHERE Name = 'Paul Hamm'"
            },
            {
                "User": "Can we create a new table to track the coaches of each gymnast?",
                "Answer": "CREATE TABLE coaches (Coach_ID number PRIMARY KEY, Name text, Gymnast_ID number, FOREIGN KEY (Gymnast_ID) REFERENCES gymnast(Gymnast_ID))"
            },
            {
                "User": "Add a coach named 'John Smith' for the gymnast with ID 5.",
                "Answer": "INSERT INTO coaches (Coach_ID, Name, Gymnast_ID) VALUES (1, 'John Smith', 5)"
            },
            {
                "User": "Who is the coach for the gymnast with the highest total points?",
                "Answer": "SELECT c.Name FROM coaches c JOIN gymnast g ON c.Gymnast_ID = g.Gymnast_ID ORDER BY g.Total_Points DESC LIMIT 1"
            },
            {
                "User": "Update the hometown of 'Lorraine Súarez Carmona' to 'La Vega'.",
                "Answer": "UPDATE people SET Hometown = 'La Vega' WHERE Name = 'Lorraine Súarez Carmona'"
            },
            {
                "User": "What is the new hometown of 'Lorraine Súarez Carmona'?",
                "Answer": "SELECT Hometown FROM people WHERE Name = 'Lorraine Súarez Carmona'"
            }
        ]
    },
    {
        "idx": 678,
        "db": "city_record",
        "interaction": [
            {
                "User": "Can you add a new match record for a game that happened on 25th December 1995 in Beijing with a score of 2-1 and a result of 3-2 for a friendly match?",
                "Answer": "INSERT INTO match (Date, Venue, Score, Result, Competition) VALUES ('25 December 1995', 'Beijing National Stadium, Beijing, China', '2-1', '3-2', 'Friendly match')"
            },
            {
                "User": "I forgot to ask, can you also provide the Match ID for the game we just added?",
                "Answer": "SELECT Match_ID FROM match WHERE Date = '25 December 1995' AND Venue = 'Beijing National Stadium, Beijing, China'"
            },
            {
                "User": "Let's update the GDP of Shanghai to 2100. Can you do that?",
                "Answer": "UPDATE city SET GDP = 2100 WHERE City = 'Shanghai'"
            },
            {
                "User": "I realized we don't have a column for average annual temperature in the city table. Can we add that?",
                "Answer": "ALTER TABLE city ADD COLUMN Avg_Annual_Temperature number"
            },
            {
                "User": "Now that we have the average annual temperature column, can you calculate and update it for each city using the temperature table?",
                "Answer": "UPDATE city SET Avg_Annual_Temperature = (SELECT (Jan + Feb + Mar + Apr + Jun + Jul + Aug + Sep + Oct + Nov + Dec)/11 FROM temperature WHERE city.City_ID = temperature.City_ID)"
            },
            {
                "User": "Can you create a new table to track the city mayors with their names, terms, and city they govern?",
                "Answer": "CREATE TABLE mayors (Mayor_ID number PRIMARY KEY, Name text, Term_Start text, Term_End text, City_ID number, FOREIGN KEY (City_ID) REFERENCES city(City_ID))"
            },
            {
                "User": "Let's add a record for the mayor of Nanjing. The mayor's name is Li Wei, who started his term in 2018 and is currently serving.",
                "Answer": "INSERT INTO mayors (Name, Term_Start, City_ID) VALUES ('Li Wei', '2018', (SELECT City_ID FROM city WHERE City = 'Nanjing ( Jiangsu )'))"
            },
            {
                "User": "What is the average annual temperature of cities that have hosted more than one match?",
                "Answer": "SELECT t1.City, t1.Avg_Annual_Temperature FROM city AS t1 JOIN hosting_city AS t2 ON t1.City_ID = t2.Host_City GROUP BY t2.Host_City HAVING COUNT(*) > 1"
            },
            {
                "User": "Can you show me the mayors who are currently serving and the cities they govern?",
                "Answer": "SELECT m.Name, c.City FROM mayors AS m JOIN city AS c ON m.City_ID = c.City_ID WHERE m.Term_End IS NULL OR m.Term_End > CURRENT_DATE"
            },
            {
                "User": "I need to correct the score for the match that took place on 19 July 1992. The correct score is 4-0. Please update it.",
                "Answer": "UPDATE match SET Score = '4-0' WHERE Date = '19 July 1992'"
            },
            {
                "User": "It seems we don't have a way to track which city has the best living conditions. Can we create a new table for city rankings?",
                "Answer": "CREATE TABLE city_rankings (Ranking_ID number PRIMARY KEY, City_ID number, Ranking_Type text, Ranking_Value number, Year number, FOREIGN KEY (City_ID) REFERENCES city(City_ID))"
            }
        ]
    },
    {
        "idx": 679,
        "db": "coffee_shop",
        "interaction": [
            {
                "User": "Can you add a new column to track the email addresses of our members?",
                "Answer": "ALTER TABLE member ADD COLUMN Email text;"
            },
            {
                "User": "Great, now please add my email 'ashby.l@example.com' to my member record.",
                "Answer": "UPDATE member SET Email = 'ashby.l@example.com' WHERE Member_ID = 1;"
            },
            {
                "User": "What are the details of the shop with the highest number of staff?",
                "Answer": "SELECT * FROM shop ORDER BY num_of_staff DESC LIMIT 1;"
            },
            {
                "User": "Can we have a list of members who are over 50 years old?",
                "Answer": "SELECT * FROM member WHERE Age > 50;"
            },
            {
                "User": "I'd like to introduce a new membership level. Can you create a table to define membership levels?",
                "Answer": "CREATE TABLE membership_levels (Level_ID number PRIMARY KEY, Level_Name text, Discount_rate number);"
            },
            {
                "User": "Please insert three membership levels: Bronze, Silver, and Gold with discount rates 5, 10, and 15 respectively.",
                "Answer": "INSERT INTO membership_levels (Level_ID, Level_Name, Discount_rate) VALUES (1, 'Bronze', 5), (2, 'Silver', 10), (3, 'Gold', 15);"
            },
            {
                "User": "I'd like to sign up a new member named 'John Doe', age 30, from 'New Haven' with a Silver card. What would be his member ID?",
                "Answer": [
                    "INSERT INTO member (Member_ID, Name, Membership_card, Age, Time_of_purchase, Level_of_membership, Address) VALUES (11, 'John Doe', 'Silver', 30, 0, 2, 'New Haven');",
                    "SELECT Member_ID FROM member WHERE Name = 'John Doe';"
                ]
            },
            {
                "User": "How many members do we have in Hartford?",
                "Answer": "SELECT COUNT(*) FROM member WHERE Address = 'Hartford';"
            },
            {
                "User": "Can you update the total amount spent by member 3 during the happy hour in June to $30?",
                "Answer": "UPDATE happy_hour_member SET Total_amount = 30 WHERE Member_ID = 3 AND HH_ID IN (SELECT HH_ID FROM happy_hour WHERE Month = 'June');"
            },
            {
                "User": "Which member has the highest level of membership?",
                "Answer": "SELECT * FROM member ORDER BY Level_of_membership DESC LIMIT 1;"
            },
            {
                "User": "Can we add a new shop located at '1400 Elm Street' with 25 staff, a score of 39, and opened in 2021?",
                "Answer": "INSERT INTO shop (Shop_ID, Address, Num_of_staff, Score, Open_Year) VALUES (11, '1400 Elm Street', '25', 39, '2021');"
            },
            {
                "User": "Can you show me all the shops that opened after 2010?",
                "Answer": "SELECT * FROM shop WHERE Open_Year > '2010';"
            },
            {
                "User": "Let's track the favorite drink for each member. Please add a 'Favorite_Drink' column to the member table.",
                "Answer": "ALTER TABLE member ADD COLUMN Favorite_Drink text;"
            },
            {
                "User": "I want to record that member 2's favorite drink is 'Cappuccino'.",
                "Answer": "UPDATE member SET Favorite_Drink = 'Cappuccino' WHERE Member_ID = 2;"
            }
        ]
    },
    {
        "idx": 680,
        "db": "phone_market",
        "interaction": [
            {
                "User": "How many phones do we have in stock for each carrier?",
                "Answer": "SELECT Carrier, SUM(Num_of_stock) as Total_Stock FROM phone AS P JOIN phone_market AS PM ON P.Phone_ID = PM.Phone_ID GROUP BY Carrier"
            },
            {
                "User": "Can you add a column to track the color of each phone model?",
                "Answer": "ALTER TABLE phone ADD COLUMN Color text"
            },
            {
                "User": "Now, insert the color 'Black' for the iPhone 5s, 'White' for iPhone 6, and 'Rose Gold' for iPhone 6s.",
                "Answer": [
                    "UPDATE phone SET Color = 'Black' WHERE Name = 'IPhone 5s';",
                    "UPDATE phone SET Color = 'White' WHERE Name = 'IPhone 6';",
                    "UPDATE phone SET Color = 'Rose Gold' WHERE Name = 'IPhone 6s'"
                ]
            },
            {
                "User": "Which phones are available in 'Alberta' market?",
                "Answer": "SELECT P.Name FROM phone AS P JOIN phone_market AS PM ON P.Phone_ID = PM.Phone_ID WHERE PM.Market_ID = (SELECT Market_ID FROM market WHERE District = 'Alberta')"
            },
            {
                "User": "Can you show me the details of phones with more than 64GB memory?",
                "Answer": "SELECT * FROM phone WHERE Memory_in_G > 64"
            },
            {
                "User": "I'd like to add a new market in 'Ontario' with 25 employees and 10 shops. It should be ranked 15.",
                "Answer": "INSERT INTO market (District, Num_of_employees, Num_of_shops, Ranking) VALUES ('Ontario', 25, 10, 15)"
            },
            {
                "User": "Let's create a new table for customer feedback with columns for feedback ID, phone ID, market ID, rating out of 5, and comments.",
                "Answer": "CREATE TABLE customer_feedback (Feedback_ID number PRIMARY KEY, Phone_ID number, Market_ID number, Rating number, Comments text)"
            },
            {
                "User": "Add feedback entries: Feedback ID 1 for Phone ID 5 at Market ID 2 with a rating of 4 and comment 'Good quality'; Feedback ID 2 for Phone ID 2 at Market ID 1 with a rating of 5 and comment 'Excellent camera'.",
                "Answer": "INSERT INTO customer_feedback (Feedback_ID, Phone_ID, Market_ID, Rating, Comments) VALUES (1, 5, 2, 4, 'Good quality'), (2, 2, 1, 5, 'Excellent camera')"
            },
            {
                "User": "What is the average rating of phones in the 'Alberta' market?",
                "Answer": "SELECT AVG(Rating) as Average_Rating FROM customer_feedback WHERE Market_ID = (SELECT Market_ID FROM market WHERE District = 'Alberta')"
            },
            {
                "User": "Update the stock for Phone ID 1 in Market ID 1 to reflect 10 additional units.",
                "Answer": "UPDATE phone_market SET Num_of_stock = Num_of_stock + 10 WHERE Phone_ID = '1' AND Market_ID = 1"
            },
            {
                "User": "Show me all the phones in the database with their color and price.",
                "Answer": "SELECT Name, Color, Price FROM phone"
            }
        ]
    },
    {
        "idx": 681,
        "db": "station_weather",
        "interaction": [
            {
                "User": "Can you tell me on which days the high temperature at station 1 exceeded 65 degrees last week?",
                "Answer": "SELECT day_of_week FROM weekly_weather WHERE station_id = 1 AND high_temperature > 65"
            },
            {
                "User": "Oops, I made a mistake. The low temperature should have been 52, not 50. Can you update that record?",
                "Answer": "UPDATE weekly_weather SET low_temperature = 52 WHERE station_id = 1 AND day_of_week = 'Friday' AND high_temperature = 68"
            },
            {
                "User": "In that case, can we add a humidity column to our weekly weather table?",
                "Answer": "ALTER TABLE weekly_weather ADD COLUMN humidity integer"
            },
            {
                "User": "Now, can you insert the humidity data for station 1 on Monday? Let's say it was 75%.",
                "Answer": "UPDATE weekly_weather SET humidity = 75 WHERE station_id = 1 AND day_of_week = 'Monday'"
            },
            {
                "User": "Could you create a new table to track the maintenance schedules for each train?",
                "Answer": "CREATE TABLE maintenance_schedule (id number PRIMARY KEY, train_id number, maintenance_date text, description text)"
            },
            {
                "User": "Please schedule a maintenance for train number 16724 on the upcoming Monday.",
                "Answer": "INSERT INTO maintenance_schedule (id, train_id, maintenance_date, description) VALUES (1, 16724, 'Upcoming Monday', 'Routine check-up')"
            },
            {
                "User": "Can you show me a combined list of trains and their next maintenance dates?",
                "Answer": "SELECT t.name, ms.maintenance_date FROM train t LEFT JOIN maintenance_schedule ms ON t.id = ms.train_id"
            },
            {
                "User": "Let's add a new station called 'Newtown'. It's part of the 'NewNetwork' network and falls under the 'NewCity' local authority. It offers 'NewLine' services.",
                "Answer": "INSERT INTO station (id, network_name, services, local_authority) VALUES (12, 'NewNetwork', 'NewLine', 'NewCity')"
            },
            {
                "User": "I realized we need to track the capacity of each train. Can we add a 'capacity' column to the train table?",
                "Answer": "ALTER TABLE train ADD COLUMN capacity number"
            },
            {
                "User": "Please set the capacity for the Ananthapuri Express to 1200 passengers.",
                "Answer": "UPDATE train SET capacity = 1200 WHERE name = 'Ananthapuri Express'"
            }
        ]
    },
    {
        "idx": 682,
        "db": "candidate_poll",
        "interaction": [
            {
                "User": "I want to know the lowest oppose rate among the candidates.",
                "Answer": "SELECT oppose_rate FROM candidate ORDER BY oppose_rate LIMIT 1"
            },
            {
                "User": "Which candidate got this lowest oppose rate?",
                "Answer": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1"
            },
            {
                "User": "Hmm, which poll source did this candidate belong to?",
                "Answer": "SELECT Poll_Source FROM candidate ORDER BY oppose_rate LIMIT 1"
            },
            {
                "User": "Can we track the changes in support rate over time? Add a column to record the previous support rate.",
                "Answer": "ALTER TABLE candidate ADD COLUMN Previous_Support_rate number"
            },
            {
                "User": "Update the previous support rate for candidate with ID 1 to 0.23.",
                "Answer": "UPDATE candidate SET Previous_Support_rate = 0.23 WHERE Candidate_ID = 1"
            },
            {
                "User": "Show me the current and previous support rates for all candidates.",
                "Answer": "SELECT Candidate_ID, Support_rate, Previous_Support_rate FROM candidate"
            },
            {
                "User": "I would like to add a new candidate to the poll, with ID 7, People_ID 2, from 'New Insights Poll', date 'Mar 10, 2007', with support rate 0.29, consider rate 0.35, oppose rate 0.31, and unsure rate 0.05.",
                "Answer": "INSERT INTO candidate (Candidate_ID, People_ID, Poll_Source, Date, Support_rate, Consider_rate, Oppose_rate, Unsure_rate) VALUES (7, 2, 'New Insights Poll', 'Mar 10, 2007', 0.29, 0.35, 0.31, 0.05)"
            },
            {
                "User": "What is the average height of the people in the database?",
                "Answer": "SELECT AVG(Height) FROM people"
            },
            {
                "User": "Let's create a table to log interactions with the poll. It should record the user ID, candidate ID, interaction type, and timestamp.",
                "Answer": "CREATE TABLE interaction_log (User_ID number, Candidate_ID number, Interaction_Type text, Timestamp text)"
            },
            {
                "User": "Log a new interaction for user 101 with candidate 3, interaction type 'view', and current timestamp.",
                "Answer": "INSERT INTO interaction_log (User_ID, Candidate_ID, Interaction_Type, Timestamp) VALUES (101, 3, 'view', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Can we see a list of all interactions for candidate 3?",
                "Answer": "SELECT * FROM interaction_log WHERE Candidate_ID = 3"
            },
            {
                "User": "I realized we need to record the name of the user in the interaction log. Please add a column for the user's name.",
                "Answer": "ALTER TABLE interaction_log ADD COLUMN User_Name text"
            },
            {
                "User": "Update the interaction log to include the name 'Alex Smith' for the interaction with user ID 101.",
                "Answer": "UPDATE interaction_log SET User_Name = 'Alex Smith' WHERE User_ID = 101"
            }
        ]
    },
    {
        "idx": 683,
        "db": "icfp_1",
        "interaction": [
            {
                "User": "Can we track the number of citations for each paper?",
                "Answer": "ALTER TABLE Papers ADD COLUMN citations INT DEFAULT 0;"
            },
            {
                "User": "Add citation counts for the paper with ID 200, 201, and 202 as 150, 75, and 25 respectively.",
                "Answer": [
                    "UPDATE Papers SET citations = 150 WHERE paperID = 200;",
                    "UPDATE Papers SET citations = 75 WHERE paperID = 201;",
                    "UPDATE Papers SET citations = 25 WHERE paperID = 202;"
                ]
            },
            {
                "User": "Which paper has the highest number of citations?",
                "Answer": "SELECT title FROM Papers ORDER BY citations DESC LIMIT 1;"
            },
            {
                "User": "Can you create a new table to store conference information?",
                "Answer": "CREATE TABLE Conferences(confID INT PRIMARY KEY, confName TEXT, year INT);"
            },
            {
                "User": "Insert records for three conferences held in 2021, 2022, and 2023 with IDs 3000, 3001, and 3002.",
                "Answer": "INSERT INTO Conferences(confID, confName, year) VALUES (3000, 'ICFP 2021', 2021), (3001, 'ICFP 2022', 2022), (3002, 'ICFP 2023', 2023);"
            },
            {
                "User": "Link each paper to a conference. Assign paper ID 200 to ICFP 2021, and paper IDs 201 and 202 to ICFP 2022.",
                "Answer": [
                    "ALTER TABLE Papers ADD COLUMN confID INT;",
                    "UPDATE Papers SET confID = 3000 WHERE paperID = 200;",
                    "UPDATE Papers SET confID = 3001 WHERE paperID IN (201, 202);"
                ]
            },
            {
                "User": "Show me the titles of papers presented at 'ICFP 2022'.",
                "Answer": "SELECT title FROM Papers WHERE confID = (SELECT confID FROM Conferences WHERE confName = 'ICFP 2022');"
            },
            {
                "User": "I'd like to add email addresses for authors. Can we add a new column for that?",
                "Answer": "ALTER TABLE Authors ADD COLUMN email TEXT;"
            },
            {
                "User": "Update the email address for 'Ralf Hinze' to 'ralf.hinze@oxford.ac.uk'.",
                "Answer": "UPDATE Authors SET email = 'ralf.hinze@oxford.ac.uk' WHERE fname = 'Ralf' AND lname = 'Hinze';"
            },
            {
                "User": "What is the email address of the author who has written the most papers?",
                "Answer": "SELECT t1.email FROM Authors AS t1 JOIN authorship AS t2 ON t1.authID = t2.authID GROUP BY t1.authID ORDER BY COUNT(*) DESC LIMIT 1;"
            },
            {
                "User": "Let's track the attendance for each conference. Can we add a column for attendance numbers?",
                "Answer": "ALTER TABLE Conferences ADD COLUMN attendance INT;"
            },
            {
                "User": "Set the attendance for the ICFP 2021, 2022, and 2023 conferences to 500, 600, and 700 respectively.",
                "Answer": [
                    "UPDATE Conferences SET attendance = 500 WHERE year = 2021;",
                    "UPDATE Conferences SET attendance = 600 WHERE year = 2022;",
                    "UPDATE Conferences SET attendance = 700 WHERE year = 2023;"
                ]
            }
        ]
    },
    {
        "idx": 684,
        "db": "cre_Docs_and_Epenses",
        "interaction": [
            {
                "User": "What types of documents do we have in the database?",
                "Answer": "SELECT Document_Type_Code, Document_Type_Name FROM Ref_Document_Types"
            },
            {
                "User": "I would like to add a new document type for emails with the code 'EM'.",
                "Answer": "INSERT INTO Ref_Document_Types (Document_Type_Code, Document_Type_Name, Document_Type_Description) VALUES ('EM', 'Email', 'Electronic mails')"
            },
            {
                "User": "Can you confirm if the new document type 'Email' has been added?",
                "Answer": "SELECT * FROM Ref_Document_Types WHERE Document_Type_Code = 'EM'"
            },
            {
                "User": "I realized we need to categorize documents by their confidentiality. Can we add a 'Confidentiality_Level' column to the Documents table?",
                "Answer": "ALTER TABLE Documents ADD Confidentiality_Level text"
            },
            {
                "User": "Please set the confidentiality level of document ID 29 to 'High'.",
                "Answer": "UPDATE Documents SET Confidentiality_Level = 'High' WHERE Document_ID = 29"
            },
            {
                "User": "How many documents are there in the 'Graph Database project'?",
                "Answer": "SELECT COUNT(*) FROM Documents WHERE Project_ID = (SELECT Project_ID FROM Projects WHERE Project_Details = 'Graph Database project')"
            },
            {
                "User": "We need to track the expenses for each document. Can you create a new table for this purpose?",
                "Answer": "CREATE TABLE Document_Expenses (Expense_ID number PRIMARY KEY, Document_ID number, Expense_Amount number, Expense_Description text, FOREIGN KEY (Document_ID) REFERENCES Documents(Document_ID))"
            },
            {
                "User": "Add an expense entry for document ID 42 with an amount of 150.75 for printing costs.",
                "Answer": "INSERT INTO Document_Expenses (Expense_ID, Document_ID, Expense_Amount, Expense_Description) VALUES (1, 42, 150.75, 'Printing costs')"
            },
            {
                "User": "Now that we have expenses tracked, can you show me the total expenses for the 'Graph Database project'?",
                "Answer": "SELECT SUM(Expense_Amount) FROM Document_Expenses WHERE Document_ID IN (SELECT Document_ID FROM Documents WHERE Project_ID = (SELECT Project_ID FROM Projects WHERE Project_Details = 'Graph Database project'))"
            },
            {
                "User": "It seems we need a budget type for internal funding. Can we add a new budget code 'INT' for this?",
                "Answer": "INSERT INTO Ref_Budget_Codes (Budget_Type_Code, Budget_Type_Description) VALUES ('INT', 'Internal funding')"
            },
            {
                "User": "Update the budget type for document ID 57 to the new internal funding code.",
                "Answer": "UPDATE Documents_with_Expenses SET Budget_Type_Code = 'INT' WHERE Document_ID = 57"
            }
        ]
    },
    {
        "idx": 685,
        "db": "mountain_photos",
        "interaction": [
            {
                "User": "Can you add a new mountain called 'Mount Fictional' with a height of 3500 meters, a prominence of 1500 meters, in the 'Imaginary Range', located in 'Utopia'?",
                "Answer": "INSERT INTO mountain (name, Height, Prominence, Range, Country) VALUES ('Mount Fictional', 3500, 1500, 'Imaginary Range', 'Utopia')"
            },
            {
                "User": "Now, can you tell me the total number of mountains in the database including the new one?",
                "Answer": "SELECT COUNT(*) FROM mountain"
            },
            {
                "User": "I just realized I made a mistake. Can you update the height of 'Mount Fictional' to 3600 meters?",
                "Answer": "UPDATE mountain SET Height = 3600 WHERE name = 'Mount Fictional'"
            },
            {
                "User": "Let's add a new camera lens to our collection, a 'Canon' brand 'Canon EF 50mm f/1.2L', with a focal length of 50mm and a max aperture of 1.2.",
                "Answer": "INSERT INTO camera_lens (brand, name, focal_length_mm, max_aperture) VALUES ('Canon', 'Canon EF 50mm f/1.2L', 50, 1.2)"
            },
            {
                "User": "I've taken a new photo with the 'Canon EF 50mm f/1.2L' lens of 'Mount Fictional'. The photo is in color and I've named it 'Sunrise Glory'. Can you add this to the photos table?",
                "Answer": "INSERT INTO photos (camera_lens_id, mountain_id, color, name) VALUES ((SELECT id FROM camera_lens WHERE name = 'Canon EF 50mm f/1.2L'), (SELECT id FROM mountain WHERE name = 'Mount Fictional'), 'Color', 'Sunrise Glory')"
            },
            {
                "User": "I would like to see all photos taken with the 'Canon EF 50mm f/1.2L' lens. Can you show me the names of these photos?",
                "Answer": "SELECT T1.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id WHERE T2.name = 'Canon EF 50mm f/1.2L'"
            },
            {
                "User": "I'm interested in comparing the highest mountains in Ethiopia and Utopia. Can we create a view for this?",
                "Answer": "CREATE VIEW highest_mountains_comparison AS SELECT name, Height, Country FROM mountain WHERE Country IN ('Ethiopia', 'Utopia') ORDER BY Height DESC"
            },
            {
                "User": "Can we see the top 3 highest mountains from the view we just created?",
                "Answer": "SELECT * FROM highest_mountains_comparison LIMIT 3"
            },
            {
                "User": "I think we should also track the date when the photo was taken. Can you add a 'date_taken' column to the 'photos' table?",
                "Answer": "ALTER TABLE photos ADD COLUMN date_taken date"
            },
            {
                "User": "For the photo 'Sunrise Glory', the date taken was April 1st, 2023. Can you update that record with the new date?",
                "Answer": "UPDATE photos SET date_taken = '2023-04-01' WHERE name = 'Sunrise Glory'"
            }
        ]
    },
    {
        "idx": 686,
        "db": "dorm_1",
        "interaction": [
            {
                "User": "Could you tell me how many amenities are available in 'Smith Hall'?",
                "Answer": "SELECT COUNT(*) FROM Has_amenity JOIN Dorm ON Has_amenity.dormid = Dorm.dormid WHERE Dorm.dorm_name = 'Smith Hall'"
            },
            {
                "User": "I would like to add a new amenity called 'Gym' to our amenities list.",
                "Answer": "INSERT INTO Dorm_amenity (amenid, amenity_name) VALUES (903, 'Gym')"
            },
            {
                "User": "Now, please add the 'Gym' amenity to 'Smith Hall'.",
                "Answer": "INSERT INTO Has_amenity (dormid, amenid) SELECT dormid, 903 FROM Dorm WHERE dorm_name = 'Smith Hall'"
            },
            {
                "User": "Can you update the student capacity of 'Fawlty Towers' to 360?",
                "Answer": "UPDATE Dorm SET student_capacity = 360 WHERE dorm_name = 'Fawlty Towers'"
            },
            {
                "User": "I need to record the email addresses of students. Can we add an 'Email' column to the Student table?",
                "Answer": "ALTER TABLE Student ADD Email text"
            },
            {
                "User": "Please insert my details into the Student table. My ID is 1038, last name is 'Doe', first name 'John', age 20, sex 'M', major is 601, advisor is 1122, city code is 'NYC', and my email is 'john.doe@example.com'.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code, Email) VALUES (1038, 'Doe', 'John', 20, 'M', 601, 1122, 'NYC', 'john.doe@example.com')"
            },
            {
                "User": "Let's create a new table to track the maintenance requests for each dorm. It should include a request ID, dorm ID, description of the request, and the date of the request.",
                "Answer": "CREATE TABLE Maintenance_requests (request_id number PRIMARY KEY, dormid number, description text, request_date date)"
            },
            {
                "User": "I'd like to log a maintenance request for 'Bud Jones Hall' for a broken window. Today is April 15th, 2023.",
                "Answer": "INSERT INTO Maintenance_requests (request_id, dormid, description, request_date) SELECT 1001, dormid, 'Broken window', '2023-04-15' FROM Dorm WHERE dorm_name = 'Bud Jones Hall'"
            },
            {
                "User": "Can you show me all the maintenance requests along with the dorm names?",
                "Answer": "SELECT Maintenance_requests.*, Dorm.dorm_name FROM Maintenance_requests JOIN Dorm ON Maintenance_requests.dormid = Dorm.dormid"
            }
        ]
    },
    {
        "idx": 687,
        "db": "formula_1",
        "interaction": [
            {
                "User": "What are the names of the circuits located in Australia?",
                "Answer": "SELECT name FROM circuits WHERE country = 'Australia'"
            },
            {
                "User": "Can you add a new record for a circuit located in Sydney, Australia?",
                "Answer": "INSERT INTO circuits (circuitId, circuitRef, name, location, country, lat, lng, alt, url) VALUES (74, 'sydney_circuit', 'Sydney Motorsport Park', 'Sydney', 'Australia', -33.8069, 150.8665, '90', 'http://en.wikipedia.org/wiki/Sydney_Motorsport_Park')"
            },
            {
                "User": "I would like to know the total number of races each year. Can we add a column to store this information?",
                "Answer": "ALTER TABLE seasons ADD COLUMN total_races number"
            },
            {
                "User": "Now, update the total number of races for the year 2009.",
                "Answer": "UPDATE seasons SET total_races = (SELECT COUNT(*) FROM races WHERE year = 2009) WHERE year = 2009"
            },
            {
                "User": "How many races were there in total in 2009, after the update?",
                "Answer": "SELECT total_races FROM seasons WHERE year = 2009"
            },
            {
                "User": "Let's create a new table to track the driver of the day for each race.",
                "Answer": "CREATE TABLE driver_of_the_day (raceId number, driverId number, reason text)"
            },
            {
                "User": "Who was the driver of the day for the first race in 2009?",
                "Answer": "INSERT INTO driver_of_the_day (raceId, driverId, reason) VALUES (1, 1, 'Outstanding performance')"
            },
            {
                "User": "Can we see the driver details and the reason they were chosen as driver of the day for the first race?",
                "Answer": "SELECT D.forename, D.surname, DOTD.reason FROM drivers D INNER JOIN driver_of_the_day DOTD ON D.driverId = DOTD.driverId WHERE DOTD.raceId = 1"
            },
            {
                "User": "I realized we made a mistake. The driver of the day for the first race was actually the second driver. Can we update that record?",
                "Answer": "UPDATE driver_of_the_day SET driverId = 2 WHERE raceId = 1"
            },
            {
                "User": "Let's confirm the update. Please show the updated driver of the day details for the first race.",
                "Answer": "SELECT D.forename, D.surname, DOTD.reason FROM drivers D INNER JOIN driver_of_the_day DOTD ON D.driverId = DOTD.driverId WHERE DOTD.raceId = 1"
            },
            {
                "User": "We should also track the team for which the driver of the day was racing. Can we add a column for the constructorId in the driver_of_the_day table?",
                "Answer": "ALTER TABLE driver_of_the_day ADD COLUMN constructorId number"
            },
            {
                "User": "Update the constructorId for the driver of the day of the first race to the team with constructorId 1.",
                "Answer": "UPDATE driver_of_the_day SET constructorId = 1 WHERE raceId = 1"
            }
        ]
    },
    {
        "idx": 688,
        "db": "performance_attendance",
        "interaction": [
            {
                "User": "Can we add a new member to the database?",
                "Answer": "INSERT INTO member (Member_ID, Name, Nationality, Role) VALUES ('12', 'Elena Torres', 'Spain', 'Cello')"
            },
            {
                "User": "I'd like to update the attendance for the performance at Madison Square Garden to 2000.",
                "Answer": "UPDATE performance SET Attendance = 2000 WHERE Location = 'Madison Square Garden'"
            },
            {
                "User": "Who attended the most performances?",
                "Answer": "SELECT Member_ID, COUNT(Performance_ID) as AttendanceCount FROM member_attendance GROUP BY Member_ID ORDER BY AttendanceCount DESC LIMIT 1"
            },
            {
                "User": "Can we track the members' birth dates as well?",
                "Answer": "ALTER TABLE member ADD COLUMN Birth_Date text"
            },
            {
                "User": "Please add the birth date '1985-06-15' for member id 4.",
                "Answer": "UPDATE member SET Birth_Date = '1985-06-15' WHERE Member_ID = '4'"
            },
            {
                "User": "Create a new table to log member contact details.",
                "Answer": "CREATE TABLE member_contact (Member_ID number, Email text, Phone text, PRIMARY KEY (Member_ID))"
            },
            {
                "User": "Add contact details for member id 1, email 'wilfredo@example.com' and phone '+598 123 4567'.",
                "Answer": "INSERT INTO member_contact (Member_ID, Email, Phone) VALUES (1, 'wilfredo@example.com', '+598 123 4567')"
            },
            {
                "User": "How many different roles are there in the members' list?",
                "Answer": "SELECT COUNT(DISTINCT Role) FROM member"
            },
            {
                "User": "What's the average number of pieces performed by members in each role?",
                "Answer": "SELECT m.Role, AVG(ma.Num_of_Pieces) as AveragePieces FROM member m JOIN member_attendance ma ON m.Member_ID = ma.Member_ID GROUP BY m.Role"
            },
            {
                "User": "Can we see a list of performances with more than 1700 attendees?",
                "Answer": "SELECT * FROM performance WHERE Attendance > 1700"
            },
            {
                "User": "Insert a new performance on 'March 10' hosted by 'Chicago Symphony' at 'Symphony Center' with an initial attendance of 0.",
                "Answer": "INSERT INTO performance (Performance_ID, Date, Host, Location, Attendance) VALUES (7, 'March 10', 'Chicago Symphony', 'Symphony Center', 0)"
            },
            {
                "User": "Can you show me the member names and their corresponding number of pieces performed for the latest performance?",
                "Answer": "SELECT m.Name, ma.Num_of_Pieces FROM member m JOIN member_attendance ma ON m.Member_ID = ma.Member_ID WHERE ma.Performance_ID = (SELECT MAX(Performance_ID) FROM performance)"
            },
            {
                "User": "Let's add a new column 'Instrument_Type' to the member table to specify the type of instrument.",
                "Answer": "ALTER TABLE member ADD COLUMN Instrument_Type text"
            },
            {
                "User": "Update the 'Instrument_Type' for 'Wilfredo Ruiz' to 'String'.",
                "Answer": "UPDATE member SET Instrument_Type = 'String' WHERE Name = 'Wilfredo Ruiz'"
            }
        ]
    },
    {
        "idx": 689,
        "db": "customers_and_products_contacts",
        "interaction": [
            {
                "User": "Can you add a new table to track the loyalty points for each customer?",
                "Answer": "CREATE TABLE Customer_Loyalty_Points (customer_id number, loyalty_points number, PRIMARY KEY (customer_id))"
            },
            {
                "User": "I'd like to insert loyalty points for customer with ID 1. Let's start them with 100 points.",
                "Answer": "INSERT INTO Customer_Loyalty_Points (customer_id, loyalty_points) VALUES (1, 100)"
            },
            {
                "User": "Please add a column to the Customers table to store their preferred contact method.",
                "Answer": "ALTER TABLE Customers ADD COLUMN preferred_contact_method text"
            },
            {
                "User": "Update the preferred contact method for customer with ID 2 to 'Email'.",
                "Answer": "UPDATE Customers SET preferred_contact_method = 'Email' WHERE customer_id = 2"
            },
            {
                "User": "Let's create a new table to log customer interactions, including the interaction type and timestamp.",
                "Answer": "CREATE TABLE Customer_Interactions (interaction_id number, customer_id number, interaction_type text, interaction_timestamp time, PRIMARY KEY (interaction_id))"
            },
            {
                "User": "Insert a log for customer ID 3. They made a phone call today.",
                "Answer": "INSERT INTO Customer_Interactions (interaction_id, customer_id, interaction_type, interaction_timestamp) VALUES (1, 3, 'Phone Call', CURRENT_TIMESTAMP)"
            },
            {
                "User": "I need to know the total loyalty points we've issued. Can you calculate that?",
                "Answer": "SELECT SUM(loyalty_points) AS total_loyalty_points FROM Customer_Loyalty_Points"
            },
            {
                "User": "Can we see which customers have over 50 loyalty points?",
                "Answer": "SELECT customer_id FROM Customer_Loyalty_Points WHERE loyalty_points > 50"
            },
            {
                "User": "A customer with ID 1 has just redeemed 20 points. Update their loyalty points.",
                "Answer": "UPDATE Customer_Loyalty_Points SET loyalty_points = loyalty_points - 20 WHERE customer_id = 1"
            },
            {
                "User": "Let's add a new product to the Products table. It's a 'Gadget' named 'Gizmo' priced at $19.99.",
                "Answer": "INSERT INTO Products (product_id, product_type_code, product_name, product_price) VALUES ((SELECT MAX(product_id) + 1 FROM Products), 'Gadget', 'Gizmo', 19.99)"
            },
            {
                "User": "If a customer's preferred contact method is 'Email', can you list their email addresses?",
                "Answer": "SELECT customer_email FROM Customers WHERE preferred_contact_method = 'Email'"
            },
            {
                "User": "I need to update the address for customer ID 2. They've moved to '1234 New Road, Newcity, NC, 12345, USA'.",
                "Answer": "UPDATE Addresses SET line_1_number_building = '1234 New Road', city = 'Newcity', zip_postcode = '12345', state_province_county = 'NC', country = 'USA' WHERE address_id = (SELECT customer_address FROM Customers WHERE customer_id = 2)"
            },
            {
                "User": "How many customer interactions of each type have we had?",
                "Answer": "SELECT interaction_type, COUNT(*) AS total_interactions FROM Customer_Interactions GROUP BY interaction_type"
            },
            {
                "User": "Can you create a view that shows customers with their total loyalty points and their last interaction timestamp?",
                "Answer": "CREATE VIEW Customer_Summary AS SELECT c.customer_id, clp.loyalty_points, MAX(ci.interaction_timestamp) AS last_interaction FROM Customers c LEFT JOIN Customer_Loyalty_Points clp ON c.customer_id = clp.customer_id LEFT JOIN Customer_Interactions ci ON c.customer_id = ci.customer_id GROUP BY c.customer_id, clp.loyalty_points"
            }
        ]
    },
    {
        "idx": 690,
        "db": "party_people",
        "interaction": [
            {
                "User": "Can you add a new region called 'Australia' with the ID 6, labeled as 'Capitol', in CD format, under the 'EMI' catalogue, dated '1st January 2003'?",
                "Answer": "INSERT INTO region (Region_ID, Region_name, Date, Label, Format, Catalogue) VALUES (6, 'Australia', '1st January 2003', 'Capitol', 'CD', 'EMI')"
            },
            {
                "User": "Can you show me all the regions that have a format of 'CD'?",
                "Answer": "SELECT * FROM region WHERE Format = 'CD'"
            },
            {
                "User": "Let's create a new table called 'party_finances' with columns for 'Finance_ID' as a primary key, 'Party_ID' as a number, 'Budget' as a number, and 'Year' as text.",
                "Answer": "CREATE TABLE party_finances (Finance_ID number PRIMARY KEY, Party_ID number, Budget number, Year text)"
            },
            {
                "User": "Insert financial records for Party_ID 1 with a budget of 50000 for the year 2021.",
                "Answer": "INSERT INTO party_finances (Finance_ID, Party_ID, Budget, Year) VALUES (1, 1, 50000, '2021')"
            },
            {
                "User": "Can you update the party name for Party_ID 3 to 'National Unity Party'?",
                "Answer": "UPDATE party SET Party_name = 'National Unity Party' WHERE Party_ID = 3"
            },
            {
                "User": "How much budget did Party_ID 1 have for the year 2021?",
                "Answer": "SELECT Budget FROM party_finances WHERE Party_ID = 1 AND Year = '2021'"
            },
            {
                "User": "Please add a new column 'Attendance' of type number to the 'party_events' table to track the number of attendees.",
                "Answer": "ALTER TABLE party_events ADD Attendance number"
            },
            {
                "User": "Set the attendance for Event_ID 1 to 150 attendees.",
                "Answer": "UPDATE party_events SET Attendance = 150 WHERE Event_ID = 1"
            },
            {
                "User": "Can we have a list of all events with more than 100 attendees?",
                "Answer": "SELECT * FROM party_events WHERE Attendance > 100"
            },
            {
                "User": "I'd like to add a new member to the 'member' table with Member_ID 16, named 'John Doe', belonging to Party_ID 2, in office since '2022'.",
                "Answer": "INSERT INTO member (Member_ID, Member_Name, Party_ID, In_office) VALUES (16, 'John Doe', '2', '2022')"
            },
            {
                "User": "Who is the member in charge of the event with Event_ID 2?",
                "Answer": "SELECT Member_Name FROM member WHERE Member_ID = (SELECT Member_in_charge_ID FROM party_events WHERE Event_ID = 2)"
            },
            {
                "User": "Can you create a view that lists all parties along with their total number of events and total budget for the year 2021?",
                "Answer": "CREATE VIEW party_summary AS SELECT T1.Party_name, COUNT(T2.Event_ID) AS Total_Events, SUM(T3.Budget) AS Total_Budget FROM party T1 LEFT JOIN party_events T2 ON T1.Party_ID = T2.Party_ID LEFT JOIN party_finances T3 ON T1.Party_ID = T3.Party_ID AND T3.Year = '2021' GROUP BY T1.Party_name"
            }
        ]
    },
    {
        "idx": 691,
        "db": "browser_web",
        "interaction": [
            {
                "User": "Can you add a column to track the release year for each web client accelerator?",
                "Answer": "ALTER TABLE Web_client_accelerator ADD COLUMN release_year number"
            },
            {
                "User": "Now, set the release year for CACHEbox to 2003.",
                "Answer": "UPDATE Web_client_accelerator SET release_year = 2003 WHERE name = 'CACHEbox'"
            },
            {
                "User": "What is the release year of CACHEbox?",
                "Answer": "SELECT release_year FROM Web_client_accelerator WHERE name = 'CACHEbox'"
            },
            {
                "User": "Can you create a new table to log user feedback with columns for ID, accelerator name, user ID, feedback text, and feedback date?",
                "Answer": "CREATE TABLE user_feedback (id number PRIMARY KEY, accelerator_name text, user_id number, feedback_text text, feedback_date date)"
            },
            {
                "User": "Please insert a feedback record for the user with ID 10 about CProxy with the feedback 'Very efficient on slow connections' on today's date.",
                "Answer": "INSERT INTO user_feedback (id, accelerator_name, user_id, feedback_text, feedback_date) VALUES (1, 'CProxy', 10, 'Very efficient on slow connections', CURRENT_DATE)"
            },
            {
                "User": "Show me the latest feedback for CProxy.",
                "Answer": "SELECT feedback_text FROM user_feedback WHERE accelerator_name = 'CProxy' ORDER BY feedback_date DESC LIMIT 1"
            },
            {
                "User": "How many browsers are compatible with the accelerator Fasterfox?",
                "Answer": "SELECT COUNT(*) FROM accelerator_compatible_browser WHERE accelerator_id = (SELECT id FROM Web_client_accelerator WHERE name = 'Fasterfox')"
            },
            {
                "User": "What's the market share of browsers that are compatible with CACHEbox since 1995?",
                "Answer": "SELECT SUM(b.market_share) FROM browser b INNER JOIN accelerator_compatible_browser acb ON b.id = acb.browser_id WHERE acb.accelerator_id = (SELECT id FROM Web_client_accelerator WHERE name = 'CACHEbox') AND acb.compatible_since_year >= 1995"
            },
            {
                "User": "I'd like to update the market share of Firefox to 20.5%. Can you do that?",
                "Answer": "UPDATE browser SET market_share = 20.5 WHERE name = 'Firefox'"
            },
            {
                "User": "Can you show me the browser with the highest market share?",
                "Answer": "SELECT name FROM browser ORDER BY market_share DESC LIMIT 1"
            },
            {
                "User": "Add a new accelerator called 'SpeedBoost' for Windows users, suitable for Fiber connections.",
                "Answer": "INSERT INTO Web_client_accelerator (id, name, Operating_system, Client, Connection) VALUES ((SELECT MAX(id) + 1 FROM Web_client_accelerator), 'SpeedBoost', 'Windows', 'user', 'Fiber')"
            },
            {
                "User": "List all accelerators that have been compatible with Internet Explorer since before 2000.",
                "Answer": "SELECT wca.name FROM Web_client_accelerator wca INNER JOIN accelerator_compatible_browser acb ON wca.id = acb.accelerator_id WHERE acb.browser_id = (SELECT id FROM browser WHERE name = 'Internet Explorer') AND acb.compatible_since_year < 2000"
            }
        ]
    },
    {
        "idx": 692,
        "db": "journal_committee",
        "interaction": [
            {
                "User": "Can we add a column to track the email addresses of the editors?",
                "Answer": "ALTER TABLE editor ADD COLUMN Email text"
            },
            {
                "User": "Please add the email address 'kporczyk@example.com' for Kamila Porczyk.",
                "Answer": "UPDATE editor SET Email = 'kporczyk@example.com' WHERE Name = 'Kamila Porczyk'"
            },
            {
                "User": "What is the email address of the youngest editor?",
                "Answer": "SELECT Email FROM editor ORDER BY Age ASC LIMIT 1"
            },
            {
                "User": "I'd like to add a new editor named 'John Doe', age 29, with email 'johndoe@example.com'.",
                "Answer": "INSERT INTO editor (Name, Age, Email) VALUES ('John Doe', 29, 'johndoe@example.com')"
            },
            {
                "User": "Can we see a list of editors who are younger than 30?",
                "Answer": "SELECT Name, Age, Email FROM editor WHERE Age < 30"
            },
            {
                "User": "Let's create a new table for storing information about subscribers. It should have subscriber ID, name, and subscription date.",
                "Answer": "CREATE TABLE subscribers (Subscriber_ID number PRIMARY KEY, Name text, Subscription_Date text)"
            },
            {
                "User": "Add a subscriber named 'Alice Smith' who subscribed today.",
                "Answer": "INSERT INTO subscribers (Name, Subscription_Date) VALUES ('Alice Smith', CURRENT_DATE)"
            },
            {
                "User": "Is there a journal entry for the theme 'Miami Dolphins'?",
                "Answer": "SELECT * FROM journal WHERE Theme = 'Miami Dolphins'"
            },
            {
                "User": "Update the sales number to 850 for the journal with the theme 'Miami Dolphins'.",
                "Answer": "UPDATE journal SET Sales = 850 WHERE Theme = 'Miami Dolphins'"
            },
            {
                "User": "Can you show me the top 3 journals by sales?",
                "Answer": "SELECT * FROM journal ORDER BY Sales DESC LIMIT 3"
            },
            {
                "User": "Let's add a new journal entry for the theme 'New York Giants' with sales of 500.",
                "Answer": "INSERT INTO journal (Date, Theme, Sales) VALUES (CURRENT_DATE, 'New York Giants', 500)"
            },
            {
                "User": "What are the themes of the journals that sold more than 900 copies?",
                "Answer": "SELECT Theme FROM journal WHERE Sales > 900"
            },
            {
                "User": "For the journal entry with theme 'at Jacksonville Jaguars', increase the sales by 10%.",
                "Answer": "UPDATE journal SET Sales = Sales * 1.10 WHERE Theme = 'at Jacksonville Jaguars'"
            }
        ]
    },
    {
        "idx": 693,
        "db": "railway",
        "interaction": [
            {
                "User": "Can you add a new manager named 'John Doe' from Canada who started in 2021, is 40 years old, and has a level 4? The Id is 8",
                "Answer": "INSERT INTO manager (Manager_ID, Name, Country, Working_year_starts, Age, Level) VALUES (8, 'John Doe', 'Canada', '2021', 40, 4)"
            },
            {
                "User": "Now, update the level of all managers from the United States to level 6.",
                "Answer": "UPDATE manager SET Level = 6 WHERE Country = 'United States'"
            },
            {
                "User": "I need to track the maintenance records for the railways. Can you create a new table for maintenance?",
                "Answer": "CREATE TABLE maintenance (Maintenance_ID number PRIMARY KEY, Railway_ID number, Date text, Description text, Cost number)"
            },
            {
                "User": "Add a maintenance record for Railway_ID 2 with the description 'Annual overhaul' and a cost of 5000 on the date '2023-04-01'.",
                "Answer": "INSERT INTO maintenance (Maintenance_ID, Railway_ID, Date, Description, Cost) VALUES (1, 2, '2023-04-01', 'Annual overhaul', 5000)"
            },
            {
                "User": "What is the total cost of maintenance for all railways so far?",
                "Answer": "SELECT SUM(Cost) AS Total_Cost FROM maintenance"
            },
            {
                "User": "Can you show me the details of trains that arrive at 'Mumbai CST'?",
                "Answer": "SELECT * FROM train WHERE Arrival = 'Mumbai CST'"
            },
            {
                "User": "Now, let's add a column to track the number of carriages for each train. Can you do that?",
                "Answer": "ALTER TABLE train ADD Carriages number"
            },
            {
                "User": "Update the train with Train_Num '12139' to have 15 carriages.",
                "Answer": "UPDATE train SET Carriages = 15 WHERE Train_Num = '12139'"
            },
            {
                "User": "Please list all the trains with the number of carriages they have.",
                "Answer": "SELECT Train_Num, Name, Carriages FROM train"
            },
            {
                "User": "Can you show me the average age of managers for each country?",
                "Answer": "SELECT Country, AVG(Age) AS Average_Age FROM manager GROUP BY Country"
            },
            {
                "User": "Let's add a new railway called 'Transcontinental' built by 'TCR Workshop' in 2023 with 6-6-0 wheels located in 'Vancouver' with ObjectNumber '1983-TC01'.",
                "Answer": "INSERT INTO railway (Railway_ID, Railway, Builder, Built, Wheels, Location, ObjectNumber) VALUES (11, 'Transcontinental', 'TCR Workshop', '2023', '6-6-0', 'Vancouver', '1983-TC01')"
            },
            {
                "User": "Link the new railway 'Transcontinental' with manager 'John Doe'.",
                "Answer": "INSERT INTO railway_manage (Railway_ID, Manager_ID, From_Year) VALUES (11, 8, '2023')"
            },
            {
                "User": "Which railway has the most trains associated with it?",
                "Answer": "SELECT r.Railway, COUNT(t.Train_ID) AS Train_Count FROM railway r LEFT JOIN train t ON r.Railway_ID = t.Railway_ID GROUP BY r.Railway ORDER BY Train_Count DESC LIMIT 1"
            }
        ]
    },
    {
        "idx": 694,
        "db": "climbing",
        "interaction": [
            {
                "User": "Can we track the number of climbs each mountain has had?",
                "Answer": "ALTER TABLE mountain ADD COLUMN Climbs_Count number"
            },
            {
                "User": "Please update the climb count for Kibo (Uhuru Pk) to 5.",
                "Answer": "UPDATE mountain SET Climbs_Count = 5 WHERE Name = 'Kibo (Uhuru Pk)'"
            },
            {
                "User": "Set the climb count for Mount Kenya (Batian) to 3.",
                "Answer": "UPDATE mountain SET Climbs_Count = 3 WHERE Name = 'Mount Kenya (Batian)'"
            },
            {
                "User": "Set the climb count for Mawenzi (Hans Meyer Pk) to 2.",
                "Answer": "UPDATE mountain SET Climbs_Count = 2 WHERE Name = 'Mawenzi (Hans Meyer Pk)'"
            },
            {
                "User": "Which mountain has been climbed the most?",
                "Answer": "SELECT Name FROM mountain ORDER BY Climbs_Count DESC LIMIT 1"
            },
            {
                "User": "I'd like to add a new climber to the database. The climber's name is Alex Honnold, from USA, with a time of '00:58.07' and 20 points on Mountain_ID 1.",
                "Answer": "INSERT INTO climber (Name, Country, Time, Points, Mountain_ID) VALUES ('Alex Honnold', 'USA', '00:58.07', 20, 1)"
            },
            {
                "User": "Can we see the top 3 climbers by points?",
                "Answer": "SELECT Name FROM climber ORDER BY Points DESC LIMIT 3"
            },
            {
                "User": "Create a new table to log the dates when the climbs were made, with columns for the climb ID, climber ID, mountain ID, and climb date.",
                "Answer": "CREATE TABLE climb_log (Climb_ID number PRIMARY KEY, Climber_ID number, Mountain_ID number, Climb_Date text)"
            },
            {
                "User": "Log the first climb for Alex Honnold on today's date.",
                "Answer": "INSERT INTO climb_log (Climber_ID, Mountain_ID, Climb_Date) VALUES ((SELECT Climber_ID FROM climber WHERE Name = 'Alex Honnold'), 1, '2023-04-01')"
            },
            {
                "User": "Show the climb history for Kibo (Uhuru Pk).",
                "Answer": "SELECT cl.Name, lg.Climb_Date FROM climber cl INNER JOIN climb_log lg ON cl.Climber_ID = lg.Climber_ID WHERE lg.Mountain_ID = 1"
            },
            {
                "User": "Can we have a view that shows the climber's name, mountain name, and climb date?",
                "Answer": "CREATE VIEW climb_details AS SELECT cl.Name AS Climber_Name, mt.Name AS Mountain_Name, lg.Climb_Date FROM climber cl INNER JOIN climb_log lg ON cl.Climber_ID = lg.Climber_ID INNER JOIN mountain mt ON lg.Mountain_ID = mt.Mountain_ID"
            },
            {
                "User": "Show me the details from the climb_details view for all climbs on Kibo (Uhuru Pk).",
                "Answer": "SELECT * FROM climb_details WHERE Mountain_Name = 'Kibo (Uhuru Pk)'"
            },
            {
                "User": "I'd like to correct Alex Honnold's points to 25 for his climb.",
                "Answer": "UPDATE climber SET Points = 25 WHERE Name = 'Alex Honnold'"
            },
            {
                "User": "What is the average number of climbs per mountain?",
                "Answer": "SELECT AVG(Climbs_Count) FROM mountain"
            }
        ]
    },
    {
        "idx": 695,
        "db": "flight_company",
        "interaction": [
            {
                "User": "Can you add a new airport called 'Newtown Airport' located in Newtown, USA with IATA code 'NTW' and ICAO code 'KNTW'?",
                "Answer": "INSERT INTO airport (City, Country, IATA, ICAO, name) VALUES ('Newtown', 'United States', 'NTW', 'KNTW', 'Newtown Airport')"
            },
            {
                "User": "What is the IATA code for the airport in Newtown?",
                "Answer": "SELECT IATA FROM airport WHERE City = 'Newtown'"
            },
            {
                "User": "Please update the Group Equity Shareholding for 'Air China' to 20.5.",
                "Answer": "UPDATE operate_company SET Group_Equity_Shareholding = 20.5 WHERE name = 'Air China'"
            },
            {
                "User": "What are the details of the airport with IATA code 'NTW'?",
                "Answer": "SELECT * FROM airport WHERE IATA = 'NTW'"
            },
            {
                "User": "I need to record the number of flights per airport. Can we create a table for this?",
                "Answer": "CREATE TABLE airport_flight_count (airport_id number, flight_count number, PRIMARY KEY (airport_id))"
            },
            {
                "User": "Now, let's count the number of flights for each airport and insert those into the new table.",
                "Answer": "INSERT INTO airport_flight_count (airport_id, flight_count) SELECT airport_id, COUNT(*) FROM flight GROUP BY airport_id"
            },
            {
                "User": "Which airport has the highest number of flights?",
                "Answer": "SELECT airport_id FROM airport_flight_count ORDER BY flight_count DESC LIMIT 1"
            },
            {
                "User": "Can we add a column to track the total number of passengers for each flight?",
                "Answer": "ALTER TABLE flight ADD COLUMN Total_Passengers number"
            },
            {
                "User": "Let's record 150 passengers for the first flight in our records.",
                "Answer": "UPDATE flight SET Total_Passengers = 150 WHERE id = (SELECT id FROM flight ORDER BY Date LIMIT 1)"
            },
            {
                "User": "What is the current average number of passengers per flight?",
                "Answer": "SELECT AVG(Total_Passengers) FROM flight WHERE Total_Passengers IS NOT NULL"
            },
            {
                "User": "Create a new table to log maintenance records for each flight.",
                "Answer": "CREATE TABLE maintenance_log (id number, flight_id number, maintenance_date text, description text, PRIMARY KEY (id), FOREIGN KEY (flight_id) REFERENCES flight(id))"
            },
            {
                "User": "Log a maintenance record for the first flight with the description 'Routine check-up' on today's date.",
                "Answer": "INSERT INTO maintenance_log (flight_id, maintenance_date, description) VALUES ((SELECT id FROM flight ORDER BY Date LIMIT 1), CURRENT_DATE, 'Routine check-up')"
            }
        ]
    },
    {
        "idx": 696,
        "db": "music_1",
        "interaction": [
            {
                "User": "What's the rating for the genre 'folk'?",
                "Answer": "SELECT rating FROM genre WHERE g_name = 'folk'"
            },
            {
                "User": "Please add a new genre called 'rock' with a rating of 7 that's most popular in 'USA'.",
                "Answer": "INSERT INTO genre (g_name, rating, most_popular_in) VALUES ('rock', '7', 'USA')"
            },
            {
                "User": "Can I get a list of all artists who prefer the 'rock' genre?",
                "Answer": "SELECT artist_name FROM artist WHERE preferred_genre = 'rock'"
            },
            {
                "User": "I'd like to update the file size of f_id 3 to 5.25 MB.",
                "Answer": "UPDATE files SET file_size = '5.25 MB' WHERE f_id = 3"
            },
            {
                "User": "Could you tell me the new file size for the song 'Ami opar hoye'?",
                "Answer": "SELECT file_size FROM files INNER JOIN song ON files.f_id = song.f_id WHERE song_name = 'Ami opar hoye'"
            },
            {
                "User": "Let's create a new table for album information with columns for album name, release date, and genre.",
                "Answer": "CREATE TABLE album (album_name text PRIMARY KEY, releasedate time, genre_is text)"
            },
            {
                "User": "Add a new album called 'Eternal Rocks' released on '15-MAR-2020' under the 'rock' genre.",
                "Answer": "INSERT INTO album (album_name, releasedate, genre_is) VALUES ('Eternal Rocks', '15-MAR-2020', 'rock')"
            },
            {
                "User": "How many songs are there in the 'rock' genre after adding the album?",
                "Answer": "SELECT COUNT(*) FROM song WHERE genre_is = 'rock'"
            },
            {
                "User": "Please add a 'lyrics' column to the song table to store lyrics text.",
                "Answer": "ALTER TABLE song ADD COLUMN lyrics text"
            },
            {
                "User": "Insert lyrics for the song 'Tumi robe nirobe'.",
                "Answer": "UPDATE song SET lyrics = 'Lyrics of Tumi robe nirobe' WHERE song_name = 'Tumi robe nirobe'"
            },
            {
                "User": "Can we get the artist name and lyrics for the song 'Tumi robe nirobe'?",
                "Answer": "SELECT artist_name, lyrics FROM song WHERE song_name = 'Tumi robe nirobe'"
            },
            {
                "User": "Update the rating of the 'rock' genre to 8.",
                "Answer": "UPDATE genre SET rating = '8' WHERE g_name = 'rock'"
            },
            {
                "User": "Show me all genres with a rating of 8 or above.",
                "Answer": "SELECT * FROM genre WHERE rating >= '8'"
            },
            {
                "User": "Can you list all the formats available for songs sung by 'Prity'?",
                "Answer": "SELECT DISTINCT formats FROM files INNER JOIN artist ON files.artist_name = artist.artist_name WHERE artist.artist_name = 'Prity'"
            }
        ]
    },
    {
        "idx": 697,
        "db": "manufactory_1",
        "interaction": [
            {
                "User": "Can you add a new manufacturer called 'Techtronics' based in 'New York' with 'Eli' as the founder and a revenue of 80?",
                "Answer": "INSERT INTO Manufacturers (Name, Headquarter, Founder, Revenue) VALUES ('Techtronics', 'New York', 'Eli', 80)"
            },
            {
                "User": "Now, list all manufacturers including the new one.",
                "Answer": "SELECT * FROM Manufacturers"
            },
            {
                "User": "I'd like to update the revenue of 'Creative Labs' to 110. Can you do that?",
                "Answer": "UPDATE Manufacturers SET Revenue = 110 WHERE Name = 'Creative Labs'"
            },
            {
                "User": "Let's add a new product called 'SSD' with a price of 300 for 'Techtronics'. What would be the manufacturer code for 'Techtronics'?",
                "Answer": "SELECT Code FROM Manufacturers WHERE Name = 'Techtronics'"
            },
            {
                "User": "Using the manufacturer code for 'Techtronics', insert the new 'SSD' product.",
                "Answer": "INSERT INTO Products (Name, Price, Manufacturer) VALUES ('SSD', 300, (SELECT Code FROM Manufacturers WHERE Name = 'Techtronics'))"
            },
            {
                "User": "Show me the updated list of products.",
                "Answer": "SELECT * FROM Products"
            },
            {
                "User": "What is the average price of the products offered by each manufacturer now?",
                "Answer": "SELECT T2.Name, AVG(T1.Price) AS AveragePrice FROM Products AS T1 JOIN Manufacturers AS T2 ON T1.Manufacturer = T2.Code GROUP BY T2.Name"
            },
            {
                "User": "Can we add a 'Category' column to the products table to classify products?",
                "Answer": "ALTER TABLE Products ADD Category text"
            },
            {
                "User": "Please classify 'Hard drive' and 'SSD' as 'Storage' and 'Memory' as 'RAM'.",
                "Answer": [
                    "UPDATE Products SET Category = 'Storage' WHERE Name IN ('Hard drive', 'SSD');",
                    "UPDATE Products SET Category = 'RAM' WHERE Name = 'Memory'"
                ]
            },
            {
                "User": "Can you show me the products with their categories now?",
                "Answer": "SELECT Name, Category FROM Products"
            },
            {
                "User": "I want to create a new table to track the inventory of products. It should have 'ProductCode', 'Quantity' and 'WarehouseLocation'.",
                "Answer": "CREATE TABLE Inventory (ProductCode number, Quantity number, WarehouseLocation text, PRIMARY KEY (ProductCode))"
            },
            {
                "User": "Let's add inventory records. Assume we have 50 'Hard drives' in 'Warehouse A', 30 'Memory' units in 'Warehouse B', and 20 'SSD' units in 'Warehouse C'.",
                "Answer": "INSERT INTO Inventory (ProductCode, Quantity, WarehouseLocation) VALUES ((SELECT Code FROM Products WHERE Name = 'Hard drive'), 50, 'Warehouse A'), ((SELECT Code FROM Products WHERE Name = 'Memory'), 30, 'Warehouse B'), ((SELECT Code FROM Products WHERE Name = 'SSD'), 20, 'Warehouse C')"
            }
        ]
    },
    {
        "idx": 698,
        "db": "restaurant_1",
        "interaction": [
            {
                "User": "Can you add a new column 'Email' to the Student table to store their email addresses?",
                "Answer": "ALTER TABLE Student ADD COLUMN Email text"
            },
            {
                "User": "Please insert a new student record with the following details: ID 1038, Last Name 'Brown', First Name 'Kevin', Age 20, Sex 'M', Major 700, Advisor 2211, city_code 'NYC', and email 'kevin.brown@example.com'.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code, Email) VALUES (1038, 'Brown', 'Kevin', 20, 'M', 700, 2211, 'NYC', 'kevin.brown@example.com')"
            },
            {
                "User": "What is the email address of student Kevin Brown?",
                "Answer": "SELECT Email FROM Student WHERE Fname = 'Kevin' AND LName = 'Brown'"
            },
            {
                "User": "I realized Kevin's email address was entered incorrectly. It should be 'kev.brown@example.com'. Can you update this record?",
                "Answer": "UPDATE Student SET Email = 'kev.brown@example.com' WHERE Fname = 'Kevin' AND LName = 'Brown'"
            },
            {
                "User": "Could you create a new table to keep track of the favorite restaurant for each student?",
                "Answer": "CREATE TABLE Favorite_Restaurant (StuID number, ResID number, PRIMARY KEY (StuID))"
            },
            {
                "User": "Insert the favorite restaurant for student Linda Smith. She prefers the restaurant with ResID 2.",
                "Answer": "INSERT INTO Favorite_Restaurant (StuID, ResID) VALUES (1001, 2)"
            },
            {
                "User": "What is the name of the favorite restaurant for student Linda Smith?",
                "Answer": "SELECT ResName FROM Restaurant INNER JOIN Favorite_Restaurant ON Restaurant.ResID = Favorite_Restaurant.ResID WHERE Favorite_Restaurant.StuID = 1001"
            },
            {
                "User": "Can we add a new restaurant to the database? The details are as follows: ResID 3, Name 'Grano Pasta Bar', Address '1031 W 36th St, Baltimore, MD 21211', Rating 4.5.",
                "Answer": "INSERT INTO Restaurant (ResID, ResName, Address, Rating) VALUES (3, 'Grano Pasta Bar', '1031 W 36th St, Baltimore, MD 21211', 4.5)"
            },
            {
                "User": "Now that we have a new restaurant, can you assign it a type? Let's say it's a 'Pasta' place with a description 'Italian homemade pasta.'",
                "Answer": "INSERT INTO Restaurant_Type (ResTypeID, ResTypeName, ResTypeDescription) VALUES (3, 'Pasta', 'Italian homemade pasta')"
            },
            {
                "User": "Link the 'Grano Pasta Bar' with its type in the Type_Of_Restaurant table.",
                "Answer": "INSERT INTO Type_Of_Restaurant (ResID, ResTypeID) VALUES (3, 3)"
            },
            {
                "User": "How many students have visited 'Honeygrow'?",
                "Answer": "SELECT COUNT(*) FROM Visits_Restaurant WHERE ResID = 2"
            },
            {
                "User": "Update the address for 'Subway' restaurant to '3400 N Charles St, Baltimore, MD 21218'.",
                "Answer": "UPDATE Restaurant SET Address = '3400 N Charles St, Baltimore, MD 21218' WHERE ResName = 'Subway'"
            }
        ]
    },
    {
        "idx": 699,
        "db": "music_4",
        "interaction": [
            {
                "User": "Can you add a new artist to the database?",
                "Answer": "INSERT INTO artist (Artist_ID, Artist, Age, Famous_Title, Famous_Release_date) VALUES (8, 'New Artist', 27, 'New Hit', 'March 2023')"
            },
            {
                "User": "I'd like to update the age of Ophiolatry to 36, please.",
                "Answer": "UPDATE artist SET Age = 36 WHERE Artist = 'Ophiolatry'"
            },
            {
                "User": "What's the average age of all artists in the database now?",
                "Answer": "SELECT AVG(Age) FROM artist"
            },
            {
                "User": "Can we add a new column for the artist's country of origin?",
                "Answer": "ALTER TABLE artist ADD COLUMN Country_of_Origin text"
            },
            {
                "User": "Please set the country of origin for Gorgoroth to Norway.",
                "Answer": "UPDATE artist SET Country_of_Origin = 'Norway' WHERE Artist = 'Gorgoroth'"
            },
            {
                "User": "Can you tell me which artists are from Norway?",
                "Answer": "SELECT Artist FROM artist WHERE Country_of_Origin = 'Norway'"
            },
            {
                "User": "Let's create a new table for concert tours with columns for tour ID, artist ID, tour name, and start date.",
                "Answer": "CREATE TABLE concert_tour (Tour_ID number PRIMARY KEY, Artist_ID number, Tour_Name text, Start_Date text)"
            },
            {
                "User": "Insert a new record into the concert tour table for Gorgoroth's upcoming tour 'Northern Fire' starting on May 10th, 2023.",
                "Answer": "INSERT INTO concert_tour (Tour_ID, Artist_ID, Tour_Name, Start_Date) VALUES (1, 1, 'Northern Fire', 'May 10, 2023')"
            },
            {
                "User": "I need to correct the tour name to 'Northern Flames'. Please update the tour record.",
                "Answer": "UPDATE concert_tour SET Tour_Name = 'Northern Flames' WHERE Tour_ID = 1"
            },
            {
                "User": "Which artist has the most recent famous release date?",
                "Answer": "SELECT Artist FROM artist ORDER BY Famous_Release_date DESC LIMIT 1"
            },
            {
                "User": "Can you list all the tours and their corresponding artist names?",
                "Answer": "SELECT ct.Tour_Name, a.Artist FROM concert_tour ct JOIN artist a ON ct.Artist_ID = a.Artist_ID"
            },
            {
                "User": "Let's add a new volume that lasted 4 weeks on top, called 'Rising Star', by the new artist we just added.",
                "Answer": "INSERT INTO volume (Volume_ID, Volume_Issue, Issue_Date, Weeks_on_Top, Song, Artist_ID) VALUES (11, 'Rising Star', 'April 2023', 4, 'New Hit', 8)"
            }
        ]
    },
    {
        "idx": 700,
        "db": "roller_coaster",
        "interaction": [
            {
                "User": "how many roller coasters are operating?",
                "Answer": "SELECT count(*) FROM roller_coaster WHERE status = 'Operating'"
            },
            {
                "User": "list all roller coasters with height more than 100",
                "Answer": "SELECT name FROM roller_coaster WHERE height > 100"
            },
            {
                "User": "add a new roller coaster with ID 7 called 'Sky Scream' in 'Holiday Park', Germany, with a length of 863, height of 150, speed of '62', opened in 'April 12, 2014', and currently operating",
                "Answer": "INSERT INTO roller_coaster (Roller_Coaster_ID, Name, Park, Country_ID, Length, Height, Speed, Opened, Status) VALUES (7, 'Sky Scream', 'Holiday Park', (SELECT Country_ID FROM country WHERE Name = 'Germany'), 863, 150, '62', 'April 12, 2014', 'Operating')"
            },
            {
                "User": "update the speed of 'Hades 360' to 72",
                "Answer": "UPDATE roller_coaster SET speed = '72' WHERE name = 'Hades 360'"
            },
            {
                "User": "Germany is not in the country table, please add it with Country_ID 4, a population of 83000000, an area of 357022, and the language German",
                "Answer": "INSERT INTO country (Country_ID, Name, Population, Area, Languages) VALUES (4, 'Germany', 83000000, 357022, 'German')"
            },
            {
                "User": "create a new table for roller coaster types with columns Type_ID, Type_Name, and Description",
                "Answer": "CREATE TABLE roller_coaster_types (Type_ID number PRIMARY KEY, Type_Name text, Description text)"
            },
            {
                "User": "add a new roller coaster type with ID 1 called 'Wooden' with a description 'Classic wooden roller coasters'",
                "Answer": "INSERT INTO roller_coaster_types (Type_ID, Type_Name, Description) VALUES (1, 'Wooden', 'Classic wooden roller coasters')"
            },
            {
                "User": "add a column for roller coaster type in the roller_coaster table",
                "Answer": "ALTER TABLE roller_coaster ADD COLUMN Type_ID number"
            },
            {
                "User": "set the type of 'Boardwalk Bullet' to Wooden",
                "Answer": "UPDATE roller_coaster SET Type_ID = (SELECT Type_ID FROM roller_coaster_types WHERE Type_Name = 'Wooden') WHERE name = 'Boardwalk Bullet'"
            },
            {
                "User": "what is the average length of roller coasters in the park 'Holiday Park'?",
                "Answer": "SELECT AVG(length) FROM roller_coaster WHERE park = 'Holiday Park'"
            },
            {
                "User": "show the details of all roller coasters in Austria",
                "Answer": "SELECT * FROM roller_coaster WHERE Country_ID = (SELECT Country_ID FROM country WHERE Name = 'Austria')"
            },
            {
                "User": "add a new roller coaster type with ID 2 called 'Steel' with a description 'Smooth and fast steel roller coasters'",
                "Answer": "INSERT INTO roller_coaster_types (Type_ID, Type_Name, Description) VALUES (2, 'Steel', 'Smooth and fast steel roller coasters')"
            },
            {
                "User": "update the roller coaster 'Sky Scream' to be of type 'Steel'",
                "Answer": "UPDATE roller_coaster SET Type_ID = (SELECT Type_ID FROM roller_coaster_types WHERE Type_Name = 'Steel') WHERE name = 'Sky Scream'"
            },
            {
                "User": "delete the roller coaster with the lowest height",
                "Answer": "DELETE FROM roller_coaster WHERE height = (SELECT MIN(height) FROM roller_coaster)"
            }
        ]
    },
    {
        "idx": 701,
        "db": "farm",
        "interaction": [
            {
                "User": "How many total cattle are on Farm 2?",
                "Answer": "SELECT Total_Cattle FROM farm WHERE Farm_ID = 2"
            },
            {
                "User": "Can you add a new column to track the number of chickens on each farm?",
                "Answer": "ALTER TABLE farm ADD COLUMN Chickens number"
            },
            {
                "User": "Now, how many chickens does Farm 1 have?",
                "Answer": "SELECT Chickens FROM farm WHERE Farm_ID = 1"
            },
            {
                "User": "Update the number of chickens for Farm 1 to 150.",
                "Answer": "UPDATE farm SET Chickens = 150 WHERE Farm_ID = 1"
            },
            {
                "User": "Create a new table to record farm produce with columns for Farm_ID, Produce_Type, and Quantity.",
                "Answer": "CREATE TABLE farm_produce (Farm_ID number, Produce_Type text, Quantity number)"
            },
            {
                "User": "Insert a record for Farm 1 producing 500 kg of potatoes.",
                "Answer": "INSERT INTO farm_produce (Farm_ID, Produce_Type, Quantity) VALUES (1, 'Potatoes', 500)"
            },
            {
                "User": "What is the total number of animals on Farm 3, including the new chicken data?",
                "Answer": "SELECT (Total_Horses + Total_Cattle + Oxen + Bulls + Cows + Pigs + Sheep_and_Goats + IFNULL(Chickens, 0)) AS Total_Animals FROM farm WHERE Farm_ID = 3"
            },
            {
                "User": "Can we track the yearly revenue for each farm? Add a new table for this.",
                "Answer": "CREATE TABLE farm_revenue (Farm_ID number, Year number, Revenue number)"
            },
            {
                "User": "Insert a revenue record for Farm 2 in the year 2021 with $20000.",
                "Answer": "INSERT INTO farm_revenue (Farm_ID, Year, Revenue) VALUES (2, 2021, 20000)"
            },
            {
                "User": "Show me the total revenue and total number of animals for Farm 2.",
                "Answer": "SELECT F.Revenue, (FR.Total_Horses + FR.Total_Cattle + FR.Oxen + FR.Bulls + FR.Cows + FR.Pigs + FR.Sheep_and_Goats + IFNULL(FR.Chickens, 0)) AS Total_Animals FROM farm_revenue AS F JOIN farm AS FR ON F.Farm_ID = FR.Farm_ID WHERE F.Farm_ID = 2"
            },
            {
                "User": "List all the produce types available from Farm 1.",
                "Answer": "SELECT Produce_Type FROM farm_produce WHERE Farm_ID = 1"
            },
            {
                "User": "Update the quantity of potatoes for Farm 1 to 600 kg.",
                "Answer": "UPDATE farm_produce SET Quantity = 600 WHERE Farm_ID = 1 AND Produce_Type = 'Potatoes'"
            },
            {
                "User": "How many competitions were hosted by cities with a population greater than 5000?",
                "Answer": "SELECT COUNT(*) FROM farm_competition AS FC JOIN city AS C ON FC.Host_city_ID = C.City_ID WHERE C.Population > 5000"
            },
            {
                "User": "Add a new competition record for Farm 3 with a rank of 2 in the most recent competition.",
                "Answer": "INSERT INTO competition_record (Competition_ID, Farm_ID, Rank) VALUES ((SELECT MAX(Competition_ID) FROM farm_competition), 3, 2)"
            }
        ]
    },
    {
        "idx": 702,
        "db": "election",
        "interaction": [
            {
                "User": "Can we track the number of votes each party received in the last election?",
                "Answer": "ALTER TABLE party ADD COLUMN Votes_Received number;"
            },
            {
                "User": "Please add the vote count for the Democratic party in the last election as 50000.",
                "Answer": "UPDATE party SET Votes_Received = 50000 WHERE Party = 'Democratic' AND Year = (SELECT max(Year) FROM party);"
            },
            {
                "User": "How many votes did the Democratic party receive in the last election?",
                "Answer": "SELECT Votes_Received FROM party WHERE Party = 'Democratic' AND Year = (SELECT max(Year) FROM party);"
            },
            {
                "User": "Let's add a new party called 'Progressive' for the upcoming year with the following details: Governor - 'Alex Johnson', Lieutenant Governor - 'Sam Taylor', Comptroller - 'Rita Patel', Attorney General - 'Nina Gupta', US Senate - 'Oliver Smith'.",
                "Answer": "INSERT INTO party (Year, Party, Governor, Lieutenant_Governor, Comptroller, Attorney_General, US_Senate) VALUES ((SELECT max(Year) FROM party) + 4, 'Progressive', 'Alex Johnson', 'Sam Taylor', 'Rita Patel', 'Nina Gupta', 'Oliver Smith');"
            },
            {
                "User": "I'd like to see all the parties and their corresponding governors.",
                "Answer": "SELECT Party, Governor FROM party;"
            },
            {
                "User": "Can we add a new column to track the population growth percentage for each county?",
                "Answer": "ALTER TABLE county ADD COLUMN Growth_Percentage number;"
            },
            {
                "User": "Update the growth percentage for 'Howard' county to 3.5.",
                "Answer": "UPDATE county SET Growth_Percentage = 3.5 WHERE County_name = 'Howard';"
            },
            {
                "User": "Which county has the highest population growth percentage?",
                "Answer": "SELECT County_name, Growth_Percentage FROM county ORDER BY Growth_Percentage DESC LIMIT 1;"
            },
            {
                "User": "Create a new table to log election results with columns for election ID, party ID, votes received, and whether they won.",
                "Answer": "CREATE TABLE election_results (Election_ID number, Party_ID number, Votes_Received number, Won text, PRIMARY KEY (Election_ID, Party_ID));"
            },
            {
                "User": "Log the election result for election ID 1, party ID 1 with 25000 votes and status 'won'.",
                "Answer": "INSERT INTO election_results (Election_ID, Party_ID, Votes_Received, Won) VALUES (1, 1, 25000, 'won');"
            },
            {
                "User": "Can you show me the election results where the party won?",
                "Answer": "SELECT * FROM election_results WHERE Won = 'won';"
            },
            {
                "User": "What is the total population of all counties combined?",
                "Answer": "SELECT SUM(Population) FROM county;"
            },
            {
                "User": "Can you tell me the average population of the counties?",
                "Answer": "SELECT AVG(Population) FROM county;"
            },
            {
                "User": "I need to correct the lieutenant governor's name for the Liberal party in 1998 to 'Jane Smith'.",
                "Answer": "UPDATE party SET Lieutenant_Governor = 'Jane Smith' WHERE Party = 'Liberal' AND Year = 1998;"
            }
        ]
    },
    {
        "idx": 703,
        "db": "department_management",
        "interaction": [
            {
                "User": "Can you add a new department called 'Cybersecurity' with a budget of 3.5 billion and 15000 employees?",
                "Answer": "INSERT INTO department (Name, Budget_in_Billions, Num_Employees) VALUES ('Cybersecurity', 3.5, 15000)"
            },
            {
                "User": "Please update the ranking of the 'Defense' department to 2 and the 'Treasury' department to 3.",
                "Answer": [
                    "UPDATE department SET Ranking = 2 WHERE Name = 'Defense';",
                    "UPDATE department SET Ranking = 3 WHERE Name = 'Treasury'"
                ]
            },
            {
                "User": "Can you create a table for projects with columns for project ID, department ID, project name, start date, and end date?",
                "Answer": "CREATE TABLE projects (project_ID number PRIMARY KEY, department_ID number, name text, start_date text, end_date text)"
            },
            {
                "User": "I'd like to insert a new project for the 'Cybersecurity' department called 'SecureNet' starting on 2023-01-01 with no end date yet.",
                "Answer": "INSERT INTO projects (department_ID, name, start_date) SELECT Department_ID, 'SecureNet', '2023-01-01' FROM department WHERE Name = 'Cybersecurity'"
            },
            {
                "User": "How many departments have a budget of over 10 billion?",
                "Answer": "SELECT COUNT(*) FROM department WHERE Budget_in_Billions > 10"
            },
            {
                "User": "Can you show me the total number of employees across all departments?",
                "Answer": "SELECT SUM(Num_Employees) FROM department"
            },
            {
                "User": "Please add a new column 'Location' to the department table to store the city where the department is headquartered.",
                "Answer": "ALTER TABLE department ADD COLUMN Location text"
            },
            {
                "User": "Set the location of the 'Cybersecurity' department to 'Washington DC'.",
                "Answer": "UPDATE department SET Location = 'Washington DC' WHERE Name = 'Cybersecurity'"
            },
            {
                "User": "What is the average age of the heads in departments with more than 50,000 employees?",
                "Answer": "SELECT AVG(T2.age) FROM department AS T1 JOIN head AS T2 ON T1.Department_ID = T2.head_ID WHERE T1.Num_Employees > 50000"
            },
            {
                "User": "Can you assign a new head to the 'Cybersecurity' department? The head's name is 'Alicia Keys', born in 'New York', age 45.",
                "Answer": [
                    "INSERT INTO head (name, born_state, age) VALUES ('Alicia Keys', 'New York', 45);",
                    "UPDATE management SET head_ID = (SELECT head_ID FROM head WHERE name = 'Alicia Keys') WHERE department_ID = (SELECT Department_ID FROM department WHERE Name = 'Cybersecurity')"
                ]
            },
            {
                "User": "Which department has the highest budget?",
                "Answer": "SELECT Name FROM department ORDER BY Budget_in_Billions DESC LIMIT 1"
            }
        ]
    },
    {
        "idx": 704,
        "db": "cre_Theme_park",
        "interaction": [
            {
                "User": "Can we add a new hotel to our database?",
                "Answer": "INSERT INTO Hotels (hotel_id, star_rating_code, pets_allowed_yn, price_range, other_hotel_details) VALUES (173, '3', 'Y', 75000, 'Newly opened hotel with pet-friendly services.')"
            },
            {
                "User": "I'd like to add a feature to the 'Astro Orbiter' tourist attraction.",
                "Answer": "INSERT INTO Tourist_Attraction_Features (Tourist_Attraction_ID, Feature_ID) VALUES (333, 543)"
            },
            {
                "User": "Update the opening hours of the 'American Adventure' attraction to '9 AM to 9 PM'.",
                "Answer": "UPDATE Tourist_Attractions SET Opening_Hours = '9 AM to 9 PM' WHERE Name = 'American Adventure'"
            },
            {
                "User": "What are the new opening hours for the 'American Adventure' attraction?",
                "Answer": "SELECT Opening_Hours FROM Tourist_Attractions WHERE Name = 'American Adventure'"
            },
            {
                "User": "Let's create a new table for restaurant information within the theme parks.",
                "Answer": "CREATE TABLE Theme_Park_Restaurants (Restaurant_ID number PRIMARY KEY, Theme_Park_ID number, Name text, Cuisine_Type text, Menu_Details text, Price_Range text)"
            },
            {
                "User": "Add a new restaurant called 'Galactic Grill' with Italian cuisine in the 'Sea World' theme park.",
                "Answer": "INSERT INTO Theme_Park_Restaurants (Restaurant_ID, Theme_Park_ID, Name, Cuisine_Type, Menu_Details, Price_Range) VALUES (1001, 6476, 'Galactic Grill', 'Italian', 'Full Italian menu with vegetarian options', '$$')"
            },
            {
                "User": "We need to track the staff members' roles in the database. Can we add a column for that?",
                "Answer": "ALTER TABLE Staff ADD COLUMN Role text"
            },
            {
                "User": "Assign Whitney the role of 'Manager' and Kaela the role of 'Supervisor'.",
                "Answer": [
                    "UPDATE Staff SET Role = 'Manager' WHERE Name = 'Whitney';",
                    "UPDATE Staff SET Role = 'Supervisor' WHERE Name = 'Kaela'"
                ]
            },
            {
                "User": "Show me all managers working in 'Sea World'.",
                "Answer": "SELECT Name FROM Staff WHERE Role = 'Manager' AND Tourist_Attraction_ID = (SELECT Theme_Park_ID FROM Theme_Parks WHERE Theme_Park_Details = 'Sea World')"
            },
            {
                "User": "Do we have any shops that sell souvenirs?",
                "Answer": "SELECT Shop_Details FROM Shops WHERE Shop_Details LIKE '%souvenir%'"
            },
            {
                "User": "Let's add a souvenir shop to our database.",
                "Answer": "INSERT INTO Shops (Shop_ID, Shop_Details) VALUES (8700, 'Souvenir shop with a variety of gifts and memorabilia')"
            },
            {
                "User": "I want to update the price range for the newly opened hotel to a more affordable rate.",
                "Answer": "UPDATE Hotels SET price_range = 50000 WHERE hotel_id = 173"
            },
            {
                "User": "How many tourist attractions do we have that are parks?",
                "Answer": "SELECT COUNT(*) FROM Tourist_Attractions WHERE Attraction_Type_Code = (SELECT Attraction_Type_Code FROM Ref_Attraction_Types WHERE Attraction_Type_Description = 'park')"
            }
        ]
    },
    {
        "idx": 705,
        "db": "news_report",
        "interaction": [
            {
                "User": "What are the latest three events?",
                "Answer": "SELECT * FROM event ORDER BY Date DESC LIMIT 3"
            },
            {
                "User": "I want to add a new event that occurred on 15 April 2021 at 'Liberty Stadium' named 'Annual Tech Conference' with 1200 attendees.",
                "Answer": "INSERT INTO event (Date, Venue, Name, Event_Attendance) VALUES ('15 April 2021', 'Liberty Stadium', 'Annual Tech Conference', 1200)"
            },
            {
                "User": "Can you update the attendance of the 'Olympia Games Opening' event to 7000?",
                "Answer": "UPDATE event SET Event_Attendance = 7000 WHERE Name = 'Olympia Games Openning'"
            },
            {
                "User": "Add a column to store the duration of events in hours.",
                "Answer": "ALTER TABLE event ADD COLUMN Duration_Hours number"
            },
            {
                "User": "Set the duration of the 'Olympia Games Opening' to 4 hours.",
                "Answer": "UPDATE event SET Duration_Hours = 4 WHERE Name = 'Olympia Games Openning'"
            },
            {
                "User": "Show me the names of journalists who have been working for more than 5 years.",
                "Answer": "SELECT Name FROM journalist WHERE Years_working > 5"
            },
            {
                "User": "Create a new table for event reviews with columns for review_id, event_id, journalist_id, and review_text.",
                "Answer": "CREATE TABLE event_reviews (review_id number PRIMARY KEY, event_id number, journalist_id number, review_text text)"
            },
            {
                "User": "Insert a review for the 'Olympia Games Opening' by journalist Herbert Swindells.",
                "Answer": "INSERT INTO event_reviews (event_id, journalist_id, review_text) VALUES (1, 1, 'It was a spectacular opening to the games.')"
            },
            {
                "User": "Can we get a list of events along with their reviews?",
                "Answer": "SELECT T1.Name, T2.review_text FROM event AS T1 JOIN event_reviews AS T2 ON T1.Event_ID = T2.event_id"
            },
            {
                "User": "I'd like to see all events that have 'Games' in their name.",
                "Answer": "SELECT * FROM event WHERE Name LIKE '%Games%'"
            },
            {
                "User": "Update the 'Annual Tech Conference' to have a duration of 3 hours.",
                "Answer": "UPDATE event SET Duration_Hours = 3 WHERE Name = 'Annual Tech Conference'"
            }
        ]
    },
    {
        "idx": 706,
        "db": "perpetrator",
        "interaction": [
            {
                "User": "HOW MANY PEOPLE HAS KILLED AT SOUTH KOREA?",
                "Answer": "SELECT SUM(killed) FROM perpetrator WHERE Country = 'South Korea'"
            },
            {
                "User": "WHAT IS THE NAME OF THE PERPETRATOR WITH THE BIGGEST WEIGHT?",
                "Answer": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Weight DESC LIMIT 1"
            },
            {
                "User": "WHERE IS THE LOCATION OF EVENTS IN JAPAN?",
                "Answer": "SELECT Location FROM perpetrator WHERE Country = 'Japan'"
            },
            {
                "User": "ADD A NEW COLUMN 'Alias' TO THE PEOPLE TABLE TO STORE KNOWN ALIASES.",
                "Answer": "ALTER TABLE people ADD COLUMN Alias text"
            },
            {
                "User": "UPDATE THE ALIAS OF RON BAXTER TO 'THE GHOST'.",
                "Answer": "UPDATE people SET Alias = 'The Ghost' WHERE Name = 'Ron Baxter'"
            },
            {
                "User": "CREATE A NEW TABLE TO RECORD WITNESS STATEMENTS WITH ID, PEOPLE_ID, PERPETRATOR_ID, AND STATEMENT.",
                "Answer": "CREATE TABLE witness_statements (ID number PRIMARY KEY, People_ID number, Perpetrator_ID number, Statement text)"
            },
            {
                "User": "INSERT A NEW WITNESS STATEMENT FOR THE FIRST EVENT IN SOUTH KOREA.",
                "Answer": "INSERT INTO witness_statements (ID, People_ID, Perpetrator_ID, Statement) VALUES (1, 1, 1, 'I saw the perpetrator fleeing the scene.')"
            },
            {
                "User": "WHO HAS AN ALIAS IN THE PEOPLE TABLE?",
                "Answer": "SELECT Name FROM people WHERE Alias IS NOT NULL"
            },
            {
                "User": "UPDATE THE INJURED COUNT FOR THE EVENT IN ZHAODONG, CHINA TO 20.",
                "Answer": "UPDATE perpetrator SET Injured = 20 WHERE Location = 'Zhaodong' AND Country = 'China'"
            },
            {
                "User": "LIST ALL EVENTS THAT OCCURRED AFTER THE YEAR 1990.",
                "Answer": "SELECT * FROM perpetrator WHERE Year > 1990"
            },
            {
                "User": "INSERT A RECORD FOR A NEW PERPETRATOR IN 'New York, USA' ON '06.15 June 15' OF 2001 WITH 5 KILLED AND 12 INJURED.",
                "Answer": "INSERT INTO perpetrator (Perpetrator_ID, People_ID, Date, Year, Location, Country, Killed, Injured) VALUES (6, 2, '06.15 June 15', 2001, 'New York', 'USA', 5, 12)"
            },
            {
                "User": "CREATE A NEW TABLE TO TRACK THE VICTIMS WITH ID, PEOPLE_ID, EVENT_DATE, AND INJURY_TYPE.",
                "Answer": "CREATE TABLE victims (ID number PRIMARY KEY, People_ID number, Event_Date text, Injury_Type text)"
            }
        ]
    },
    {
        "idx": 707,
        "db": "movie_1",
        "interaction": [
            {
                "User": "I'm curious, do we have a way to track which reviewers have rated which movies?",
                "Answer": "CREATE TABLE ReviewerMovieLink (rID number, mID number, PRIMARY KEY (rID, mID))"
            },
            {
                "User": "Great, now can you link the reviewers to the movies they've rated?",
                "Answer": "INSERT INTO ReviewerMovieLink (rID, mID) SELECT DISTINCT rID, mID FROM Rating"
            },
            {
                "User": "Could you show me the list of movies along with the names of the reviewers who have rated them?",
                "Answer": "SELECT M.title, R.name FROM Movie M INNER JOIN ReviewerMovieLink RML ON M.mID = RML.mID INNER JOIN Reviewer R ON RML.rID = R.rID"
            },
            {
                "User": "I noticed we don't have a genre for the movies. Can we add that?",
                "Answer": "ALTER TABLE Movie ADD COLUMN genre text"
            },
            {
                "User": "Now, let's categorize 'Star Wars' as 'Sci-Fi' and 'The Sound of Music' as 'Musical'.",
                "Answer": [
                    "UPDATE Movie SET genre = 'Sci-Fi' WHERE title = 'Star Wars';",
                    "UPDATE Movie SET genre = 'Musical' WHERE title = 'The Sound of Music'"
                ]
            },
            {
                "User": "Can you show me all movies released after 1970, along with their genres?",
                "Answer": "SELECT title, year, genre FROM Movie WHERE year > 1970"
            },
            {
                "User": "Let's create a new table to track the awards that movies have won. Can you do that?",
                "Answer": "CREATE TABLE Awards (aID number, mID number, awardName text, year number, PRIMARY KEY (aID), FOREIGN KEY (mID) REFERENCES Movie(mID))"
            },
            {
                "User": "I'd like to insert a record for 'Star Wars' winning 'Best Picture' in 1977.",
                "Answer": "INSERT INTO Awards (aID, mID, awardName, year) VALUES (301, 102, 'Best Picture', 1977)"
            },
            {
                "User": "Could you give me a list of all movies that have won an award?",
                "Answer": "SELECT M.title, A.awardName FROM Movie M INNER JOIN Awards A ON M.mID = A.mID"
            },
            {
                "User": "Now that we have genres, can you update the list of directors to include the genres they've directed in?",
                "Answer": "SELECT DISTINCT M.director, M.genre FROM Movie M WHERE M.genre IS NOT NULL"
            }
        ]
    },
    {
        "idx": 708,
        "db": "theme_gallery",
        "interaction": [
            {
                "User": "What was the average attendance for the 'Santa Claus' themed exhibitions?",
                "Answer": "SELECT AVG(T1.attendance) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.theme = 'Santa Claus'"
            },
            {
                "User": "Can you add a new exhibition record for the 'Santa Claus' themed exhibition that took place on December 9 with an attendance of 1500?",
                "Answer": "INSERT INTO exhibition_record (Exhibition_ID, Date, Attendance) VALUES ((SELECT Exhibition_ID FROM exhibition WHERE Theme = 'Santa Claus'), 'December 9', 1500)"
            },
            {
                "User": "Update the ticket price for the 'Christmas stocking' themed exhibition to $24.95.",
                "Answer": "UPDATE exhibition SET Ticket_Price = 24.95 WHERE Theme = 'Christmas stocking'"
            },
            {
                "User": "How many artists have joined after the year 2000?",
                "Answer": "SELECT COUNT(*) FROM artist WHERE Year_Join > 2000"
            },
            {
                "User": "Add a new column to the artist table to record their email addresses.",
                "Answer": "ALTER TABLE artist ADD COLUMN Email text"
            },
            {
                "User": "Insert a new artist named 'Emily Carter' from 'Canada' who joined in 2021, is 30 years old, and has the email 'emily.carter@example.com'.",
                "Answer": "INSERT INTO artist (Name, Country, Year_Join, Age, Email) VALUES ('Emily Carter', 'Canada', 2021, 30, 'emily.carter@example.com')"
            },
            {
                "User": "Create a new table to track artwork details with columns for artwork ID, title, artist ID, year created, and price.",
                "Answer": "CREATE TABLE artwork (Artwork_ID number PRIMARY KEY, Title text, Artist_ID number, Year_Created number, Price number)"
            },
            {
                "User": "Add three records to the new artwork table with titles 'Morning Glory', 'Evening Calm', and 'Night's Whisper' by artist ID 1, created in 2005, 2007, and 2010, priced at $500, $750, and $600 respectively.",
                "Answer": "INSERT INTO artwork (Title, Artist_ID, Year_Created, Price) VALUES ('Morning Glory', 1, 2005, 500), ('Evening Calm', 1, 2007, 750), ('Night''s Whisper', 1, 2010, 600)"
            },
            {
                "User": "Show me all the artwork titles created by 'Vijay Singh'.",
                "Answer": "SELECT Title FROM artwork WHERE Artist_ID = (SELECT Artist_ID FROM artist WHERE Name = 'Vijay Singh')"
            },
            {
                "User": "I would like to update the year created for 'Night's Whisper' to 2011.",
                "Answer": "UPDATE artwork SET Year_Created = 2011 WHERE Title = 'Night''s Whisper'"
            }
        ]
    },
    {
        "idx": 709,
        "db": "ship_mission",
        "interaction": [
            {
                "User": "Can we track the captains for each ship?",
                "Answer": "ALTER TABLE ship ADD COLUMN Captain_Name text;"
            },
            {
                "User": "Add Captain John Smith to the Corbridge.",
                "Answer": "UPDATE ship SET Captain_Name = 'John Smith' WHERE Name = 'Corbridge';"
            },
            {
                "User": "Who is the captain of the Corbridge?",
                "Answer": "SELECT Captain_Name FROM ship WHERE Name = 'Corbridge';"
            },
            {
                "User": "Create a new table for ship maintenance records.",
                "Answer": "CREATE TABLE maintenance(Record_ID number PRIMARY KEY, Ship_ID number, Maintenance_Date date, Description text, Cost number);"
            },
            {
                "User": "Log a maintenance record for the ship with ID 2, with a description 'Engine Overhaul' and cost of 5000 on March 15, 2022.",
                "Answer": "INSERT INTO maintenance(Record_ID, Ship_ID, Maintenance_Date, Description, Cost) VALUES (1, 2, '2022-03-15', 'Engine Overhaul', 5000);"
            },
            {
                "User": "Show all maintenance records for the ship named Farringford.",
                "Answer": "SELECT m.* FROM maintenance m JOIN ship s ON m.Ship_ID = s.Ship_ID WHERE s.Name = 'Farringford';"
            },
            {
                "User": "What's the total cost spent on maintenance for the Farringford?",
                "Answer": "SELECT SUM(Cost) as Total_Cost FROM maintenance m JOIN ship s ON m.Ship_ID = s.Ship_ID WHERE s.Name = 'Farringford';"
            },
            {
                "User": "Update the location of mission VMV-2 to 'Atlantic Ocean'.",
                "Answer": "UPDATE mission SET Location = 'Atlantic Ocean' WHERE Code = 'VMV-2';"
            },
            {
                "User": "Show the updated location of mission VMV-2.",
                "Answer": "SELECT Location FROM mission WHERE Code = 'VMV-2';"
            },
            {
                "User": "How many ships have been decommissioned?",
                "Answer": "SELECT COUNT(*) FROM mission WHERE Fate LIKE '%Decommissioned%';"
            },
            {
                "User": "Add a new ship with ID 9, named 'Voyager', type 'Exploration', nationality 'Canada', and tonnage 7400.",
                "Answer": "INSERT INTO ship(Ship_ID, Name, Type, Nationality, Tonnage) VALUES (9, 'Voyager', 'Exploration', 'Canada', 7400);"
            },
            {
                "User": "List all exploration type ships.",
                "Answer": "SELECT Name FROM ship WHERE Type = 'Exploration';"
            },
            {
                "User": "Increase the tonnage of the Dromonby by 200.",
                "Answer": "UPDATE ship SET Tonnage = Tonnage + 200 WHERE Name = 'Dromonby';"
            },
            {
                "User": "What is the new tonnage of the Dromonby?",
                "Answer": "SELECT Tonnage FROM ship WHERE Name = 'Dromonby';"
            },
            {
                "User": "Create a new mission for the Voyager with mission code 'VMV-10', launched in the year 2023, location 'Arctic Ocean', speed 18 knots, and fate 'Active'.",
                "Answer": "INSERT INTO mission(Mission_ID, Ship_ID, Code, Launched_Year, Location, Speed_knots, Fate) VALUES (8, 9, 'VMV-10', 2023, 'Arctic Ocean', 18, 'Active');"
            }
        ]
    },
    {
        "idx": 710,
        "db": "wrestler",
        "interaction": [
            {
                "User": "Can we track the titles each wrestler has won over their career?",
                "Answer": "CREATE TABLE Titles (Title_ID number PRIMARY KEY, Wrestler_ID number, Title_Name text, Date_Won text, Date_Lost text)"
            },
            {
                "User": "I'd like to add a new title record for Rey Misterio Sr. He won the 'Heavyweight Champion' title on 2005-05-27 and lost it on 2006-06-02.",
                "Answer": "INSERT INTO Titles (Title_ID, Wrestler_ID, Title_Name, Date_Won, Date_Lost) VALUES (1, 1, 'Heavyweight Champion', '2005-05-27', '2006-06-02')"
            },
            {
                "User": "Can you show me all titles won by Rey Misterio Sr.?",
                "Answer": "SELECT Title_Name, Date_Won, Date_Lost FROM Titles WHERE Wrestler_ID = 1"
            },
            {
                "User": "Let's update the record for Fishman. He just won the 'Intercontinental Champion' title today. The Title_ID, Wrestler_ID are 2,2 respectively",
                "Answer": "INSERT INTO Titles (Title_ID, Wrestler_ID, Title_Name, Date_Won) VALUES (2, 2, 'Intercontinental Champion', date('now'))"
            },
            {
                "User": "How many titles have been recorded so far?",
                "Answer": "SELECT COUNT(*) FROM Titles"
            },
            {
                "User": "Can we add a column to track the location where each title was won?",
                "Answer": "ALTER TABLE Titles ADD COLUMN Location_Won text"
            },
            {
                "User": "Please record that Rey Misterio Sr. won the 'Heavyweight Champion' title in San Diego, California.",
                "Answer": "UPDATE Titles SET Location_Won = 'San Diego, California' WHERE Wrestler_ID = 1 AND Title_Name = 'Heavyweight Champion'"
            },
            {
                "User": "I need a list of all wrestlers and the titles they've won, including the location.",
                "Answer": "SELECT w.Name, t.Title_Name, t.Location_Won FROM Titles t JOIN wrestler w ON t.Wrestler_ID = w.Wrestler_ID"
            },
            {
                "User": "Who has held a title for the longest period?",
                "Answer": "SELECT w.Name, t.Title_Name, t.Date_Won, t.Date_Lost, \n       julianday(t.Date_Lost) - julianday(t.Date_Won) AS Days_Held\nFROM Titles t \nJOIN Wrestler w ON t.Wrestler_ID = w.Wrestler_ID \nORDER BY julianday(t.Date_Lost) - julianday(t.Date_Won) DESC \nLIMIT 1;"
            },
            {
                "User": "Let's add a new wrestler to the database. The wrestler's name is 'El Hijo del Santo', with ID 11.",
                "Answer": "INSERT INTO wrestler (Wrestler_ID, Name) VALUES (11, 'El Hijo del Santo')"
            },
            {
                "User": "Can you show me the most recent title win for each wrestler?",
                "Answer": "SELECT w.Name, t.Title_Name, MAX(t.Date_Won) as Most_Recent_Win FROM Titles t JOIN wrestler w ON t.Wrestler_ID = w.Wrestler_ID GROUP BY t.Wrestler_ID"
            },
            {
                "User": "I think we should also track the event where the title was won. Can we add that?",
                "Answer": "ALTER TABLE Titles ADD COLUMN Event_Won text"
            },
            {
                "User": "Update the 'Heavyweight Champion' title record for Rey Misterio Sr. to include the event 'Summer Slam'.",
                "Answer": "UPDATE Titles SET Event_Won = 'Summer Slam' WHERE Wrestler_ID = 1 AND Title_Name = 'Heavyweight Champion'"
            }
        ]
    },
    {
        "idx": 711,
        "db": "driving_school",
        "interaction": [
            {
                "User": "Can you add a new column 'email_verified' to the Customers table to track if their email has been verified?",
                "Answer": "ALTER TABLE Customers ADD COLUMN email_verified BOOLEAN DEFAULT FALSE"
            },
            {
                "User": "Please mark the customer with email address 'everette.goyette@example.org' as having a verified email.",
                "Answer": "UPDATE Customers SET email_verified = TRUE WHERE email_address = 'everette.goyette@example.org'"
            },
            {
                "User": "Which customers have verified their email?",
                "Answer": "SELECT customer_id, first_name, last_name, email_address FROM Customers WHERE email_verified = TRUE"
            },
            {
                "User": "I need to insert a new staff member named 'John Doe' who lives at address id 3, with a nickname 'johnd', joined today, and has no date of leaving yet.",
                "Answer": "INSERT INTO Staff (staff_address_id, nickname, first_name, last_name, date_joined_staff) VALUES (3, 'johnd', 'John', 'Doe', CURRENT_DATE)"
            },
            {
                "User": "What are the details of the new staff member we just added?",
                "Answer": "SELECT * FROM Staff WHERE nickname = 'johnd'"
            },
            {
                "User": "I'd like to record a new payment of $500.00 made by customer id 1 via Credit Card on today's date.",
                "Answer": "INSERT INTO Customer_Payments (customer_id, datetime_payment, payment_method_code, amount_payment) VALUES (1, CURRENT_TIMESTAMP, 'Credit Card', 500.00)"
            },
            {
                "User": "Show me the total amount paid by customer id 1.",
                "Answer": "SELECT SUM(amount_payment) AS total_paid FROM Customer_Payments WHERE customer_id = 1"
            },
            {
                "User": "Create a new table 'Vehicle_Maintenance' to track maintenance records with columns 'maintenance_id', 'vehicle_id', 'maintenance_date', 'description', and 'cost'.",
                "Answer": "CREATE TABLE Vehicle_Maintenance (maintenance_id NUMBER PRIMARY KEY, vehicle_id NUMBER, maintenance_date TIME, description TEXT, cost NUMBER)"
            },
            {
                "User": "Insert a maintenance record for vehicle id 2 that occurred today with a cost of $150 for an oil change.",
                "Answer": "INSERT INTO Vehicle_Maintenance (vehicle_id, maintenance_date, description, cost) VALUES (2, CURRENT_DATE, 'Oil Change', 150)"
            },
            {
                "User": "How much has been spent on maintenance for vehicle id 2?",
                "Answer": "SELECT SUM(cost) AS total_maintenance_cost FROM Vehicle_Maintenance WHERE vehicle_id = 2"
            },
            {
                "User": "Can we get a list of all customers who became customers in 2016 and have an outstanding amount greater than $1000?",
                "Answer": "SELECT customer_id, first_name, last_name FROM Customers WHERE date_became_customer BETWEEN '2016-01-01' AND '2016-12-31' AND amount_outstanding > 1000"
            },
            {
                "User": "Update the vehicle details for vehicle id 3 to 'Sedan'.",
                "Answer": "UPDATE Vehicles SET vehicle_details = 'Sedan' WHERE vehicle_id = 3"
            }
        ]
    },
    {
        "idx": 712,
        "db": "flight_1",
        "interaction": [
            {
                "User": "Can we track the number of flights each aircraft has completed?",
                "Answer": "ALTER TABLE aircraft ADD COLUMN flights_completed number;"
            },
            {
                "User": "Please update the flights completed for aircraft with aid 1 to 25.",
                "Answer": "UPDATE aircraft SET flights_completed = 25 WHERE aid = 1;"
            },
            {
                "User": "Now set the flights completed for aircraft with aid 2 to 40.",
                "Answer": "UPDATE aircraft SET flights_completed = 40 WHERE aid = 2;"
            },
            {
                "User": "How many flights have been completed by the aircraft named 'Boeing 737-800'?",
                "Answer": "SELECT flights_completed FROM aircraft WHERE name = 'Boeing 737-800';"
            },
            {
                "User": "Can you add a column to track the hours flown by each aircraft?",
                "Answer": "ALTER TABLE aircraft ADD COLUMN hours_flown number;"
            },
            {
                "User": "Set the hours flown for the 'Airbus A340-300' to 1500 hours.",
                "Answer": "UPDATE aircraft SET hours_flown = 1500 WHERE name = 'Airbus A340-300';"
            },
            {
                "User": "Which aircraft has flown the most hours?",
                "Answer": "SELECT name FROM aircraft ORDER BY hours_flown DESC LIMIT 1;"
            },
            {
                "User": "I'd like to add a new flight. Can you insert a flight from 'New York' to 'London' with flight number 400?",
                "Answer": "INSERT INTO flight (flno, origin, destination, distance, departure_date, arrival_date, price, aid) VALUES (400, 'New York', 'London', 3450, '04/15/2005 18:00', '04/16/2005 06:00', 420, 2);"
            },
            {
                "User": "How many flights are there from 'Los Angeles' to 'Dallas'?",
                "Answer": "SELECT count(*) FROM flight WHERE origin = 'Los Angeles' AND destination = 'Dallas';"
            },
            {
                "User": "Can you show me the most recent flight added to the database?",
                "Answer": "SELECT * FROM flight ORDER BY departure_date DESC LIMIT 1;"
            },
            {
                "User": "Let's create a new table to track the maintenance records for aircraft. Can you do that?",
                "Answer": "CREATE TABLE maintenance (mid number, aid number, maintenance_date time, description text, PRIMARY KEY (mid), FOREIGN KEY (aid) REFERENCES aircraft(aid));"
            },
            {
                "User": "Insert a maintenance record for aircraft with aid 3, with a description of 'Engine Overhaul'.",
                "Answer": "INSERT INTO maintenance (mid, aid, maintenance_date, description) VALUES (1, 3, '04/17/2005 09:00', 'Engine Overhaul');"
            },
            {
                "User": "Show all maintenance records for the 'Boeing 747-400'.",
                "Answer": "SELECT m.* FROM maintenance m JOIN aircraft a ON m.aid = a.aid WHERE a.name = 'Boeing 747-400';"
            },
            {
                "User": "What is the total distance covered by all flights for the aircraft with aid 1?",
                "Answer": "SELECT sum(distance) FROM flight WHERE aid = 1;"
            },
            {
                "User": "Can we also track the last maintenance date for each aircraft in the aircraft table?",
                "Answer": "ALTER TABLE aircraft ADD COLUMN last_maintenance_date time;"
            },
            {
                "User": "Update the last maintenance date for aircraft with aid 2 to '04/15/2005'.",
                "Answer": "UPDATE aircraft SET last_maintenance_date = '04/15/2005 00:00' WHERE aid = 2;"
            }
        ]
    },
    {
        "idx": 713,
        "db": "college_2",
        "interaction": [
            {
                "User": "I'd like to add a new department. How can I do that?",
                "Answer": "INSERT INTO department (dept_name, building, budget) VALUES ('Computer Science', 'Gates', 500000);"
            },
            {
                "User": "Please list all departments along with their buildings and budgets.",
                "Answer": "SELECT dept_name, building, budget FROM department;"
            },
            {
                "User": "We need to update the budget for the Biology department. It should now be 700000.",
                "Answer": "UPDATE department SET budget = 700000 WHERE dept_name = 'Biology';"
            },
            {
                "User": "Can you show me the updated budget for the Biology department?",
                "Answer": "SELECT budget FROM department WHERE dept_name = 'Biology';"
            },
            {
                "User": "Here it is. The student ID is 99999, name is John Doe, department is Computer Science, and total credit is 0.",
                "Answer": "INSERT INTO student (ID, name, dept_name, tot_cred) VALUES ('99999', 'John Doe', 'Computer Science', 0);"
            },
            {
                "User": "Can you assign an advisor to the new student John Doe?",
                "Answer": "INSERT INTO advisor (s_ID, i_ID) VALUES ('99999', (SELECT ID FROM instructor WHERE dept_name = 'Computer Science' LIMIT 1));"
            },
            {
                "User": "Let's create the table for online courses with the fields you mentioned.",
                "Answer": "CREATE TABLE online_courses (course_id TEXT PRIMARY KEY, title TEXT, dept_name TEXT, credits NUMBER, platform_url TEXT);"
            },
            {
                "User": "Can we add a new online course about Artificial Intelligence in the Computer Science department?",
                "Answer": "INSERT INTO online_courses (course_id, title, dept_name, credits, platform_url) VALUES ('AI101', 'Introduction to Artificial Intelligence', 'Computer Science', 3, 'http://ai.course.com');"
            },
            {
                "User": "How can we link the online courses with the existing courses?",
                "Answer": "ALTER TABLE online_courses ADD COLUMN linked_course_id TEXT REFERENCES course(course_id);"
            },
            {
                "User": "Link the new AI course to its equivalent in the main course catalog.",
                "Answer": "UPDATE online_courses SET linked_course_id = '787' WHERE course_id = 'AI101';"
            },
            {
                "User": "Show me all online courses with their linked courses' titles.",
                "Answer": "SELECT O.course_id, O.title, C.title AS linked_title FROM online_courses O LEFT JOIN course C ON O.linked_course_id = C.course_id;"
            },
            {
                "User": "Can you tell me which classrooms have a capacity of more than 20?",
                "Answer": "SELECT building, room_number FROM classroom WHERE capacity > 20;"
            },
            {
                "User": "We need to add a column for accessibility features in the classroom table. How can we do that?",
                "Answer": "ALTER TABLE classroom ADD COLUMN accessibility_features TEXT;"
            },
            {
                "User": "Update the accessibility features for classroom 134 in Lamberton to include 'wheelchair ramp'.",
                "Answer": "UPDATE classroom SET accessibility_features = 'wheelchair ramp' WHERE building = 'Lamberton' AND room_number = '134';"
            }
        ]
    },
    {
        "idx": 714,
        "db": "loan_1",
        "interaction": [
            {
                "User": "Can you add a new customer named Alice with a checking account, a balance of 5000, no loans, a credit score of 700, and associated with the broadway branch?",
                "Answer": "INSERT INTO customer (cust_ID, cust_name, acc_type, acc_bal, no_of_loans, credit_score, branch_ID, state) VALUES ('4', 'Alice', 'checking', 5000, 0, 700, 3, 'New York')"
            },
            {
                "User": "I just realized we don't have a contact number for our customers. Can we add a phone column to the customer table?",
                "Answer": "ALTER TABLE customer ADD COLUMN phone_number text"
            },
            {
                "User": "Great, now please update Alice's phone number to '555-1234'.",
                "Answer": "UPDATE customer SET phone_number = '555-1234' WHERE cust_name = 'Alice'"
            },
            {
                "User": "Can we also track the date when a customer joined the bank? We need to add a new column for that.",
                "Answer": "ALTER TABLE customer ADD COLUMN join_date date"
            },
            {
                "User": "Please set Alice's join date to January 1st, 2023.",
                "Answer": "UPDATE customer SET join_date = '2023-01-01' WHERE cust_name = 'Alice'"
            },
            {
                "User": "How many customers do we have in New York?",
                "Answer": "SELECT COUNT(*) FROM customer WHERE state = 'New York'"
            },
            {
                "User": "I'd like to give a special offer to customers who joined this year and have a credit score above 650. Can you list their names and phone numbers?",
                "Answer": "SELECT cust_name, phone_number FROM customer WHERE credit_score > 650 AND join_date >= '2023-01-01'"
            },
            {
                "User": "Can you create a new table to track the employees working at each branch?",
                "Answer": "CREATE TABLE employee (emp_ID number PRIMARY KEY, emp_name text, branch_ID number, position text, salary number, FOREIGN KEY (branch_ID) REFERENCES bank(branch_ID))"
            },
            {
                "User": "Please add an employee named Bob who works at the downtown branch as a Manager with a salary of 80000.",
                "Answer": "INSERT INTO employee (emp_ID, emp_name, branch_ID, position, salary) VALUES (1, 'Bob', 2, 'Manager', 80000)"
            },
            {
                "User": "What's the total amount of loans given out by the broadway branch?",
                "Answer": "SELECT SUM(amount) FROM loan WHERE branch_ID = '3'"
            },
            {
                "User": "Can you update the number of customers for the downtown branch to reflect a new total of 130?",
                "Answer": "UPDATE bank SET no_of_customers = 130 WHERE branch_ID = 2"
            },
            {
                "User": "Let's track the loan interest rates. Add a new column for interest rate to the loan table.",
                "Answer": "ALTER TABLE loan ADD COLUMN interest_rate float"
            }
        ]
    },
    {
        "idx": 715,
        "db": "hr_1",
        "interaction": [
            {
                "User": "Can you add a new region called 'Middle East' with an ID of 5?",
                "Answer": "INSERT INTO regions (REGION_ID, REGION_NAME) VALUES (5, 'Middle East')"
            },
            {
                "User": "I need to create a new table for project information, including project ID, name, and department ID.",
                "Answer": "CREATE TABLE projects (PROJECT_ID number PRIMARY KEY, PROJECT_NAME text, DEPARTMENT_ID number)"
            },
            {
                "User": "Let's insert a new project with ID 101, named 'Apollo', in the IT department.",
                "Answer": "INSERT INTO projects (PROJECT_ID, PROJECT_NAME, DEPARTMENT_ID) VALUES (101, 'Apollo', 60)"
            },
            {
                "User": "Can you show me all the regions now after the addition?",
                "Answer": "SELECT * FROM regions"
            },
            {
                "User": "We need to update the salary of employee ID 102 to 18000.",
                "Answer": "UPDATE employees SET SALARY = 18000 WHERE EMPLOYEE_ID = 102"
            },
            {
                "User": "How many employees are now earning more than 15000?",
                "Answer": "SELECT COUNT(*) FROM employees WHERE SALARY > 15000"
            },
            {
                "User": "Add a column 'PROJECT_ID' to the 'job_history' table to track project assignments.",
                "Answer": "ALTER TABLE job_history ADD PROJECT_ID number"
            },
            {
                "User": "Assign employee ID 101 to project ID 101 in their job history starting from today.",
                "Answer": "UPDATE job_history SET PROJECT_ID = 101 WHERE EMPLOYEE_ID = 101 AND END_DATE IS NULL"
            },
            {
                "User": "I'd like to see the updated job history of employee ID 101.",
                "Answer": "SELECT * FROM job_history WHERE EMPLOYEE_ID = 101"
            },
            {
                "User": "Create a new table called 'benefits' with benefit ID, name, and amount.",
                "Answer": "CREATE TABLE benefits (BENEFIT_ID number PRIMARY KEY, BENEFIT_NAME text, BENEFIT_AMOUNT number)"
            },
            {
                "User": "Insert a new benefit for 'Health Insurance' with an ID of 1 and an amount of 300.",
                "Answer": "INSERT INTO benefits (BENEFIT_ID, BENEFIT_NAME, BENEFIT_AMOUNT) VALUES (1, 'Health Insurance', 300)"
            },
            {
                "User": "How many projects do we have in the database now?",
                "Answer": "SELECT COUNT(*) FROM projects"
            },
            {
                "User": "Show me the details of all projects along with their department names.",
                "Answer": "SELECT p.PROJECT_ID, p.PROJECT_NAME, d.DEPARTMENT_NAME FROM projects p JOIN departments d ON p.DEPARTMENT_ID = d.DEPARTMENT_ID"
            },
            {
                "User": "Let's update the 'Middle East' region name to 'West Asia'.",
                "Answer": "UPDATE regions SET REGION_NAME = 'West Asia' WHERE REGION_ID = 5"
            }
        ]
    },
    {
        "idx": 716,
        "db": "debate",
        "interaction": [
            {
                "User": "Can we track the topics debated? I'd like to add a new table for debate topics.",
                "Answer": "CREATE TABLE debate_topics (Topic_ID number PRIMARY KEY, Debate_ID number, Topic text, FOREIGN KEY (Debate_ID) REFERENCES debate(Debate_ID))"
            },
            {
                "User": "Please insert a new topic for the first debate with the title 'Economic Policies'.",
                "Answer": "INSERT INTO debate_topics (Topic_ID, Debate_ID, Topic) VALUES (1, 1, 'Economic Policies')"
            },
            {
                "User": "Add another topic for the second debate called 'Environmental Issues'.",
                "Answer": "INSERT INTO debate_topics (Topic_ID, Debate_ID, Topic) VALUES (2, 2, 'Environmental Issues')"
            },
            {
                "User": "Can you show me all debates and their corresponding topics?",
                "Answer": "SELECT T1.Debate_ID, T1.Date, T1.Venue, T2.Topic FROM debate AS T1 LEFT JOIN debate_topics AS T2 ON T1.Debate_ID = T2.Debate_ID"
            },
            {
                "User": "I want to know which party won the debate on 'Economic Policies'.",
                "Answer": "SELECT T3.Party, T1.If_Affirmative_Win FROM debate_topics AS T2 JOIN debate_people AS T1 ON T2.Debate_ID = T1.Debate_ID JOIN people AS T3 ON (T1.If_Affirmative_Win = 'T' AND T1.Affirmative = T3.People_ID) OR (T1.If_Affirmative_Win = 'F' AND T1.Negative = T3.People_ID) WHERE T2.Topic = 'Economic Policies'"
            },
            {
                "User": "I realized we should also track the moderator of each debate. Can we add a 'Moderator' column to the 'debate' table?",
                "Answer": "ALTER TABLE debate ADD COLUMN Moderator text"
            },
            {
                "User": "Please update the moderator for the first debate to 'Susan Richards'.",
                "Answer": "UPDATE debate SET Moderator = 'Susan Richards' WHERE Debate_ID = 1"
            },
            {
                "User": "Who moderated the debate on 'Environmental Issues'?",
                "Answer": "SELECT T1.Moderator FROM debate AS T1 JOIN debate_topics AS T2 ON T1.Debate_ID = T2.Debate_ID WHERE T2.Topic = 'Environmental Issues'"
            },
            {
                "User": "Insert a new record into the 'people' table for 'Emma Gonzalez', a 29-year-old Independent from 'New York 4'.",
                "Answer": "INSERT INTO people (People_ID, District, Name, Party, Age) VALUES (11, 'New York 4', 'Emma Gonzalez', 'Independent', 29)"
            },
            {
                "User": "Emma Gonzalez will be the negative side in a new debate. Add this record to the 'debate_people' table with Debate_ID 6 and mark it as a win for the negative.",
                "Answer": "INSERT INTO debate_people (Debate_ID, Affirmative, Negative, If_Affirmative_Win) VALUES (6, 3, 11, 'F')"
            }
        ]
    },
    {
        "idx": 717,
        "db": "local_govt_and_lot",
        "interaction": [
            {
                "User": "Can you add a new customer named 'Alex Johnson' with customer_id 92?",
                "Answer": "INSERT INTO Customers (customer_id, customer_details) VALUES (92, 'Alex Johnson')"
            },
            {
                "User": "I need to update the address for property_id 107 to '1234 Maple Street'.",
                "Answer": "UPDATE Properties SET property_address = '1234 Maple Street' WHERE property_id = 107"
            },
            {
                "User": "How many properties do we have now?",
                "Answer": "SELECT COUNT(property_id) FROM Properties"
            },
            {
                "User": "Let's create a new table to track maintenance requests with request_id, property_id, date_requested, and request_details.",
                "Answer": "CREATE TABLE Maintenance_Requests (request_id number PRIMARY KEY, property_id number, date_requested time, request_details text)"
            },
            {
                "User": "Can we add a column 'status' to the Maintenance_Requests table to track the status of each request?",
                "Answer": "ALTER TABLE Maintenance_Requests ADD status text"
            },
            {
                "User": "Insert a new maintenance request for property_id 24 with request_id 1, requested today, with details 'Leaky faucet' and status 'Pending'.",
                "Answer": "INSERT INTO Maintenance_Requests (request_id, property_id, date_requested, request_details, status) VALUES (1, 24, CURRENT_DATE, 'Leaky faucet', 'Pending')"
            },
            {
                "User": "How many maintenance requests are currently pending?",
                "Answer": "SELECT COUNT(request_id) FROM Maintenance_Requests WHERE status = 'Pending'"
            },
            {
                "User": "Update the status of request_id 1 to 'Completed'.",
                "Answer": "UPDATE Maintenance_Requests SET status = 'Completed' WHERE request_id = 1"
            },
            {
                "User": "Do we have any maintenance requests for property_id 108?",
                "Answer": "SELECT * FROM Maintenance_Requests WHERE property_id = 108"
            },
            {
                "User": "We need to track the date of birth for residents. Please add a 'date_of_birth' column to the Residents table.",
                "Answer": "ALTER TABLE Residents ADD date_of_birth date"
            },
            {
                "User": "Set the date of birth for resident_id 31 to '1990-05-21'.",
                "Answer": "UPDATE Residents SET date_of_birth = '1990-05-21' WHERE resident_id = 31"
            }
        ]
    },
    {
        "idx": 718,
        "db": "hospital_1",
        "interaction": [
            {
                "User": "Can we add a new department called 'Cardiology' with Dr. Elliot Reid as its head?",
                "Answer": "insert into Department (Name, Head) values ('Cardiology', (select EmployeeID from Physician where Name = 'Elliot Reid'))"
            },
            {
                "User": "I'd like to know the total cost of procedures undergone by the patient John Smith. Can you calculate that for me?",
                "Answer": "select sum(Procedures.Cost) from Undergoes join Procedures on Undergoes.Procedures = Procedures.Code where Undergoes.Patient = (select SSN from Patient where Name = 'John Smith')"
            },
            {
                "User": "Could you update the phone number of patient Grace Ritchie to '555-9876'?",
                "Answer": "update Patient set Phone = '555-9876' where Name = 'Grace Ritchie'"
            },
            {
                "User": "We need to track the email addresses of our physicians. Can you add a new column for email in the Physician table?",
                "Answer": "alter table Physician add Email text"
            },
            {
                "User": "Please create a new table to keep track of the equipment in each department.",
                "Answer": "create table Equipment (EquipmentID number primary key, Name text, DepartmentID number, Status text)"
            },
            {
                "User": "Insert a new equipment record for an MRI machine in the Radiology department.",
                "Answer": "insert into Equipment (Name, DepartmentID, Status) values ('MRI Machine', (select DepartmentID from Department where Name = 'Radiology'), 'Operational')"
            },
            {
                "User": "How many nurses are registered?",
                "Answer": "select count(*) from Nurse where Registered = 1"
            },
            {
                "User": "Can you list all the patients who have been prescribed Procrastin-X?",
                "Answer": "select Patient.Name from Prescribes join Patient on Prescribes.Patient = Patient.SSN where Prescribes.Medication = (select Code from Medication where Name = 'Procrastin-X')"
            },
            {
                "User": "We need to schedule a new appointment for John Smith with his primary care physician for tomorrow at 10 AM in examination room C. Please add this to the appointments.",
                "Answer": "insert into Appointment (Patient, Physician, Start, End, ExaminationRoom) values ((select SSN from Patient where Name = 'John Smith'), (select PCP from Patient where Name = 'John Smith'), '2023-04-05 10:00', '2023-04-05 11:00', 'C')"
            },
            {
                "User": "The General Medicine department needs to be updated to have Dr. Christopher Turk as its new head. Can you update that information?",
                "Answer": "update Department set Head = (select EmployeeID from Physician where Name = 'Christopher Turk') where Name = 'General Medicine'"
            },
            {
                "User": "Can you show me all the physicians who are not yet trained in 'Reverse Rhinopodoplasty'?",
                "Answer": "select Physician.Name from Physician left join Trained_In on Physician.EmployeeID = Trained_In.Physician where Trained_In.Treatment is null or Trained_In.Treatment != (select Code from Procedures where Name = 'Reverse Rhinopodoplasty')"
            },
            {
                "User": "We have a new nurse named 'Samuel Perez'. He is a registered nurse with SSN 444444444. Please add him to the Nurse table.",
                "Answer": "insert into Nurse (Name, Position, Registered, SSN) values ('Samuel Perez', 'Nurse', 1, 444444444)"
            }
        ]
    },
    {
        "idx": 719,
        "db": "journal_committee",
        "interaction": [
            {
                "User": "Show the names of editors of age either 24 or 25.",
                "Answer": "SELECT Name FROM editor WHERE Age = 24 OR Age = 25"
            },
            {
                "User": "List out the editors' names? | sorry, did you mean you need the Editor ID | How many editor IDs are in the table?",
                "Answer": "SELECT count(Editor_ID) FROM editor"
            },
            {
                "User": "I want to add a new editor named John Doe, aged 29. Could you do that?",
                "Answer": "INSERT INTO editor (Name, Age) VALUES ('John Doe', 29)"
            },
            {
                "User": "Can you show me the total sales of journals for the theme 'Miami Dolphins'?",
                "Answer": "SELECT SUM(Sales) FROM journal WHERE Theme = 'Miami Dolphins'"
            },
            {
                "User": "Please update the age of editor Kamila Porczyk to 35.",
                "Answer": "UPDATE editor SET Age = 35 WHERE Name = 'Kamila Porczyk'"
            },
            {
                "User": "Let's create a new table to track the subscribers with their ID, Name, and Subscription Date.",
                "Answer": "CREATE TABLE subscribers (Subscriber_ID number PRIMARY KEY, Name text, Subscription_Date text)"
            },
            {
                "User": "I'd like to add a new subscriber named Alex Smith with the subscription date as today's date.",
                "Answer": "INSERT INTO subscribers (Name, Subscription_Date) VALUES ('Alex Smith', CURRENT_DATE)"
            },
            {
                "User": "Can we add a column to the journal table to track the number of pages for each journal?",
                "Answer": "ALTER TABLE journal ADD COLUMN Pages number"
            },
            {
                "User": "For journal ID 2, set the number of pages to 120.",
                "Answer": "UPDATE journal SET Pages = 120 WHERE Journal_ID = 2"
            },
            {
                "User": "What's the average age of all editors?",
                "Answer": "SELECT AVG(Age) FROM editor"
            },
            {
                "User": "How many journals have sales over 5000?",
                "Answer": "SELECT COUNT(*) FROM journal WHERE Sales > 5000"
            },
            {
                "User": "Please add a new journal entry for the theme 'Space Exploration' with sales of 1500 and 95 pages.",
                "Answer": "INSERT INTO journal (Date, Theme, Sales, Pages) VALUES (CURRENT_DATE, 'Space Exploration', 1500, 95)"
            },
            {
                "User": "Link editor John Doe to the newly added journal entry on 'Space Exploration' with a work type of 'Review'.",
                "Answer": "INSERT INTO journal_committee (Editor_ID, Journal_ID, Work_Type) VALUES ((SELECT Editor_ID FROM editor WHERE Name = 'John Doe'), (SELECT Journal_ID FROM journal WHERE Theme = 'Space Exploration'), 'Review')"
            },
            {
                "User": "Show me all the journals edited by John Doe.",
                "Answer": "SELECT j.Journal_ID, j.Theme FROM journal j INNER JOIN journal_committee jc ON j.Journal_ID = jc.Journal_ID WHERE jc.Editor_ID = (SELECT Editor_ID FROM editor WHERE Name = 'John Doe')"
            },
            {
                "User": "Can we track the editor's email addresses as well? We need to add a new column for that.",
                "Answer": "ALTER TABLE editor ADD COLUMN Email text"
            },
            {
                "User": "Set the email for John Doe as 'john.doe@example.com'.",
                "Answer": "UPDATE editor SET Email = 'john.doe@example.com' WHERE Name = 'John Doe'"
            }
        ]
    },
    {
        "idx": 720,
        "db": "aircraft",
        "interaction": [
            {
                "User": "Can you list the names of the pilots who are under 25 years old?",
                "Answer": "SELECT Name FROM pilot WHERE Age < 25"
            },
            {
                "User": "Please add a new pilot named 'Amelia Earhart' who is 31 years old. with id is 13",
                "Answer": "INSERT INTO pilot (Pilot_Id, Name, Age) VALUES (13, 'Amelia Earhart', 31)"
            },
            {
                "User": "Now, how many pilots do we have in total?",
                "Answer": "SELECT COUNT(*) FROM pilot"
            },
            {
                "User": "I need to update the total passengers for London Heathrow to 68 million. Can you do that?",
                "Answer": "UPDATE airport SET Total_Passengers = 68000000 WHERE Airport_Name = 'London Heathrow'"
            },
            {
                "User": "Let's add a new column to the aircraft table to track the year of manufacture. Can you do that?",
                "Answer": "ALTER TABLE aircraft ADD COLUMN Year_of_Manufacture text"
            },
            {
                "User": "Please update the year of manufacture for the Robinson R-22 to 2006.",
                "Answer": "UPDATE aircraft SET Year_of_Manufacture = '2006' WHERE Aircraft = 'Robinson R-22'"
            },
            {
                "User": "Can you create a new table to record maintenance schedules for each aircraft?",
                "Answer": "CREATE TABLE maintenance_schedule (Maintenance_ID number PRIMARY KEY, Aircraft_ID number, Maintenance_Date text, Description text)"
            },
            {
                "User": "Add a maintenance record for the aircraft with ID 1 scheduled for May 1, 2023, for an engine check.",
                "Answer": "INSERT INTO maintenance_schedule (Aircraft_ID, Maintenance_Date, Description) VALUES (1, 'May 1, 2023', 'Engine check')"
            },
            {
                "User": "How many aircraft movements were there at airports with more than 60 million total passengers?",
                "Answer": "SELECT SUM(Aircraft_Movements) FROM airport WHERE Total_Passengers > 60000000"
            },
            {
                "User": "Can you show me the aircraft that has the highest max gross weight?",
                "Answer": "SELECT Aircraft, Max_Gross_Weight FROM aircraft ORDER BY Max_Gross_Weight DESC LIMIT 1"
            },
            {
                "User": "Link the newly added pilot 'Amelia Earhart' with the aircraft 'CH-47D Chinook'.",
                "Answer": "INSERT INTO airport_aircraft (Airport_ID, Aircraft_ID) SELECT (SELECT Pilot_Id FROM pilot WHERE Name = 'Amelia Earhart'), (SELECT Aircraft_ID FROM aircraft WHERE Aircraft = 'CH-47D Chinook')"
            },
            {
                "User": "What is the average age of all pilots now?",
                "Answer": "SELECT AVG(Age) FROM pilot"
            },
            {
                "User": "Show me the list of all pilots and the aircraft they are linked to.",
                "Answer": "SELECT p.Name, a.Aircraft FROM pilot p JOIN airport_aircraft aa ON p.Pilot_Id = aa.Airport_ID JOIN aircraft a ON aa.Aircraft_ID = a.Aircraft_ID"
            },
            {
                "User": "I'd like to see the total freight metric tonnes for the top 3 airports by total passengers.",
                "Answer": "SELECT Airport_Name, Freight_Metric_Tonnes FROM airport ORDER BY Total_Passengers DESC LIMIT 3"
            },
            {
                "User": "Can we add a 'Fuel_Capacity' column to the aircraft table?",
                "Answer": "ALTER TABLE aircraft ADD COLUMN Fuel_Capacity text"
            },
            {
                "User": "Update the fuel capacity for the 'Bell 206B3 JetRanger' to '100 gallons'.",
                "Answer": "UPDATE aircraft SET Fuel_Capacity = '100 gallons' WHERE Aircraft = 'Bell 206B3 JetRanger'"
            }
        ]
    },
    {
        "idx": 721,
        "db": "cre_Doc_Tracking_DB",
        "interaction": [
            {
                "User": "Can we add a new document type for emails?",
                "Answer": "ALTER TABLE Ref_Document_Types ADD COLUMN Email_Type_Description text"
            },
            {
                "User": "Please insert the new document type for emails with a code 'EM'.",
                "Answer": "INSERT INTO Ref_Document_Types (Document_Type_Code, Document_Type_Name, Document_Type_Description) VALUES ('EM', 'Email', 'A document type for emails')"
            },
            {
                "User": "What are the different document types now?",
                "Answer": "SELECT Document_Type_Code, Document_Type_Name FROM Ref_Document_Types"
            },
            {
                "User": "Let's update the location description for Edinburgh to 'Capital city of Scotland'.",
                "Answer": "UPDATE Ref_Locations SET Location_Description = 'Capital city of Scotland' WHERE Location_Code = 'e'"
            },
            {
                "User": "I need to add a new employee. His name is John, role code 'MG', gender 'M', and date of birth is '1990-01-01'.",
                "Answer": "INSERT INTO Employees (Employee_ID, Role_Code, Employee_Name, Gender_MFU, Date_of_Birth) VALUES ((SELECT COALESCE(MAX(Employee_ID), 0) + 1 FROM Employees), 'MG', 'John', 'M', '1990-01-01')"
            },
            {
                "User": "How many documents are stored in Canada?",
                "Answer": "SELECT count(*) FROM Document_Locations WHERE Location_Code = 'c'"
            },
            {
                "User": "Create a table to track employee trainings with columns for training ID, employee ID, training date, and training details.",
                "Answer": "CREATE TABLE Employee_Trainings (Training_ID number PRIMARY KEY, Employee_ID number, Training_Date time, Training_Details text)"
            },
            {
                "User": "Add a training record for employee ID 30 with training details 'Leadership Workshop' on '2023-04-01'.",
                "Answer": "INSERT INTO Employee_Trainings (Training_ID, Employee_ID, Training_Date, Training_Details) VALUES ((SELECT COALESCE(MAX(Training_ID), 0) + 1 FROM Employee_Trainings), 30, '2023-04-01', 'Leadership Workshop')"
            },
            {
                "User": "What trainings have been attended by employee ID 30?",
                "Answer": "SELECT Training_Details FROM Employee_Trainings WHERE Employee_ID = 30"
            },
            {
                "User": "Can we track the current location of a document? If not, let's add a field to the All_Documents table.",
                "Answer": "ALTER TABLE All_Documents ADD COLUMN Current_Location_Code text"
            },
            {
                "User": "Update the current location of document ID 7 to 'Brazil'.",
                "Answer": "UPDATE All_Documents SET Current_Location_Code = 'b' WHERE Document_ID = 7"
            },
            {
                "User": "Where is document ID 7 currently located?",
                "Answer": "SELECT Current_Location_Code FROM All_Documents WHERE Document_ID = 7"
            },
            {
                "User": "Change the role description for 'Editor' to 'Responsible for content editing and proofreading.'",
                "Answer": "UPDATE Roles SET Role_Description = 'Responsible for content editing and proofreading.' WHERE Role_Code = 'ED'"
            }
        ]
    },
    {
        "idx": 722,
        "db": "tracking_software_problems",
        "interaction": [
            {
                "User": "Can we add a new problem category for 'Network' issues?",
                "Answer": "ALTER TABLE Problem_Category_Codes ADD Network Text;"
            },
            {
                "User": "What are the current problem categories after adding the 'Network' category?",
                "Answer": "SELECT * FROM Problem_Category_Codes;"
            },
            {
                "User": "What is the status of the problem I just reported?",
                "Answer": "SELECT problem_status_code FROM Problem_Log WHERE problem_id = 16;"
            },
            {
                "User": "Update the status of problem_id 16 to 'Reported'.",
                "Answer": "UPDATE Problem_Log SET problem_status_code = 'Reported' WHERE problem_id = 16;"
            },
            {
                "User": "Create a new table to track the history of problem status changes with columns for problem_id, old_status, new_status, and change_date.",
                "Answer": "CREATE TABLE Problem_Status_History (problem_id number, old_status text, new_status text, change_date time, PRIMARY KEY (problem_id, change_date));"
            },
            {
                "User": "Record the status change for problem_id 16 from 'NULL' to 'Reported'.",
                "Answer": "INSERT INTO Problem_Status_History (problem_id, old_status, new_status, change_date) VALUES (16, NULL, 'Reported', CURRENT_TIMESTAMP);"
            },
            {
                "User": "List all problems that have a 'Network' category and have been reported by staff_id 1.",
                "Answer": "SELECT pl.problem_id FROM Problem_Log AS pl JOIN Problems AS p ON pl.problem_id = p.problem_id JOIN Problem_Category_Codes AS pcc ON pl.problem_category_code = pcc.problem_category_code WHERE pcc.problem_category_description = 'Network' AND p.reported_by_staff_id = 1;"
            },
            {
                "User": "We need to track the department for each staff member. Please add a 'department' column to the Staff table.",
                "Answer": "ALTER TABLE Staff ADD department text;"
            },
            {
                "User": "Set the department for staff_id 1 to 'IT Support'.",
                "Answer": "UPDATE Staff SET department = 'IT Support' WHERE staff_id = 1;"
            },
            {
                "User": "Show me the details of all staff members in the 'IT Support' department.",
                "Answer": "SELECT * FROM Staff WHERE department = 'IT Support';"
            },
            {
                "User": "We need a new table to track product versions. It should have columns for version_id, product_id, version_number, and release_date.",
                "Answer": "CREATE TABLE Product_Versions (version_id number PRIMARY KEY, product_id number, version_number text, release_date time);"
            },
            {
                "User": "Add a new version for product_id 2, version number 'v2.0', with today's date as the release date.",
                "Answer": "INSERT INTO Product_Versions (version_id, product_id, version_number, release_date) VALUES (1, 2, 'v2.0', CURRENT_TIMESTAMP);"
            }
        ]
    },
    {
        "idx": 723,
        "db": "cre_Drama_Workshop_Groups",
        "interaction": [
            {
                "User": "Can we add a new payment method called 'PayPal' with a description 'online payment'?",
                "Answer": "INSERT INTO Ref_Payment_Methods (payment_method_code, payment_method_description) VALUES ('PayPal', 'online payment')"
            },
            {
                "User": "How many payment methods do we now have?",
                "Answer": "SELECT COUNT(*) FROM Ref_Payment_Methods"
            },
            {
                "User": "I want to update the 'Visa' payment method description to 'credit card payment'.",
                "Answer": "UPDATE Ref_Payment_Methods SET payment_method_description = 'credit card payment' WHERE payment_method_code = 'Visa'"
            },
            {
                "User": "Can you show me all the payment methods available?",
                "Answer": "SELECT * FROM Ref_Payment_Methods"
            },
            {
                "User": "Let's create a new table for tracking the attendance of workshops. We need columns for 'Attendance_ID', 'Workshop_Group_ID', 'Customer_ID', and 'Attendance_Date'.",
                "Answer": "CREATE TABLE Workshop_Attendance (Attendance_ID number PRIMARY KEY, Workshop_Group_ID number, Customer_ID text, Attendance_Date time)"
            },
            {
                "User": "Please add a new column 'Attendance_Status' to the Workshop_Attendance table to indicate if the customer attended or not.",
                "Answer": "ALTER TABLE Workshop_Attendance ADD COLUMN Attendance_Status text"
            },
            {
                "User": "Add a record for a customer with ID '240' attending the workshop group '136' on '2023-04-01' with status 'attended'.",
                "Answer": "INSERT INTO Workshop_Attendance (Attendance_ID, Workshop_Group_ID, Customer_ID, Attendance_Date, Attendance_Status) VALUES (1, 136, '240', '2023-04-01', 'attended')"
            },
            {
                "User": "Can I get a list of all customers who attended the workshop on '2023-04-01'?",
                "Answer": "SELECT Customer_ID FROM Workshop_Attendance WHERE Attendance_Date = '2023-04-01' AND Attendance_Status = 'attended'"
            },
            {
                "User": "I need to correct the attendance status for customer '240' to 'absent' for the workshop group '136'.",
                "Answer": "UPDATE Workshop_Attendance SET Attendance_Status = 'absent' WHERE Customer_ID = '240' AND Workshop_Group_ID = 136"
            },
            {
                "User": "Show me the updated attendance record for customer '240'.",
                "Answer": "SELECT * FROM Workshop_Attendance WHERE Customer_ID = '240'"
            },
            {
                "User": "We need to track the marketing region for each workshop. Please add a 'Marketing_Region_Code' column to the 'Workshop_Attendance' table.",
                "Answer": "ALTER TABLE Workshop_Attendance ADD COLUMN Marketing_Region_Code text"
            },
            {
                "User": "Set the marketing region for the workshop group '136' to 'CA' for all attendance records.",
                "Answer": "UPDATE Workshop_Attendance SET Marketing_Region_Code = 'CA' WHERE Workshop_Group_ID = 136"
            }
        ]
    },
    {
        "idx": 724,
        "db": "insurance_fnol",
        "interaction": [
            {
                "User": "Could you add a new customer to the database with the name 'John Doe' and assign him a unique Customer_ID?",
                "Answer": "INSERT INTO Customers (Customer_ID, Customer_name) VALUES (999, 'John Doe')"
            },
            {
                "User": "Great, now could John Doe be interested in Life Insurance? Please add his phone number '+1234567890' and create a policy for him.",
                "Answer": "INSERT INTO Available_Policies (Policy_ID, policy_type_code, Customer_Phone) VALUES (9999, 'Life Insurance', '+1234567890')"
            },
            {
                "User": "Can we also start a policy for John Doe today and link it to the new Life Insurance policy we just created?",
                "Answer": "INSERT INTO Customers_Policies (Customer_ID, Policy_ID, Date_Opened) VALUES (999, 9999, CURRENT_DATE)"
            },
            {
                "User": "I just realized we don't have a field for email addresses in our Customers table. Can we add that?",
                "Answer": "ALTER TABLE Customers ADD COLUMN Customer_email text"
            },
            {
                "User": "Please add John Doe's email address as 'johndoe@example.com'.",
                "Answer": "UPDATE Customers SET Customer_email = 'johndoe@example.com' WHERE Customer_ID = 999"
            },
            {
                "User": "I need to see all customers who have a Life Insurance policy. Can you provide that list?",
                "Answer": "SELECT c.Customer_name FROM Customers c JOIN Customers_Policies cp ON c.Customer_ID = cp.Customer_ID JOIN Available_Policies ap ON cp.Policy_ID = ap.Policy_ID WHERE ap.policy_type_code = 'Life Insurance'"
            },
            {
                "User": "Can we create a new table to track customer feedback with fields for Feedback_ID, Customer_ID, and Feedback_text?",
                "Answer": "CREATE TABLE Customer_Feedback (Feedback_ID number PRIMARY KEY, Customer_ID number, Feedback_text text)"
            },
            {
                "User": "John Doe just sent us feedback saying 'Very satisfied with the service'. Can you record this in the new table?",
                "Answer": "INSERT INTO Customer_Feedback (Feedback_ID, Customer_ID, Feedback_text) VALUES (1, 999, 'Very satisfied with the service')"
            },
            {
                "User": "Can you show me the total settlement amount for claims that were effective after January 1, 2000?",
                "Answer": "SELECT SUM(s.Settlement_Amount) FROM Settlements s JOIN Claims c ON s.Claim_ID = c.Claim_ID WHERE c.Effective_Date > '2000-01-01'"
            }
        ]
    },
    {
        "idx": 725,
        "db": "school_player",
        "interaction": [
            {
                "User": "Can we add a new school to the database?",
                "Answer": "INSERT INTO school (School_ID, School, Location, Enrollment, Founded, Denomination, Boys_or_Girls, Day_or_Boarding, Year_Entered_Competition, School_Colors) VALUES (7, 'New Vision Academy', 'Springfield', 500, 2005, 'Non-Denominational', 'Co-ed', 'Day', 2010, 'Green and Silver')"
            },
            {
                "User": "I need to update the enrollment for St Aloysius' College to 1250.",
                "Answer": "UPDATE school SET Enrollment = 1250 WHERE School_ID = 1"
            },
            {
                "User": "What is the new enrollment for St Aloysius' College?",
                "Answer": "SELECT Enrollment FROM school WHERE School_ID = 1"
            },
            {
                "User": "Can we add a column for the email address of each school?",
                "Answer": "ALTER TABLE school ADD COLUMN Email_Address text"
            },
            {
                "User": "I want to set the email address for Barker College to 'info@barkercollege.edu'.",
                "Answer": "UPDATE school SET Email_Address = 'info@barkercollege.edu' WHERE School = 'Barker College'"
            },
            {
                "User": "How many schools do we have that are for boys only?",
                "Answer": "SELECT COUNT(*) FROM school WHERE Boys_or_Girls = 'Boys'"
            },
            {
                "User": "Please create a new table for school events with columns for event ID, school ID, event name, and date.",
                "Answer": "CREATE TABLE school_events (Event_ID number PRIMARY KEY, School_ID number, Event_Name text, Event_Date text)"
            },
            {
                "User": "Add a new event for St Aloysius' College called 'Spring Fair' on '2023-09-15'.",
                "Answer": "INSERT INTO school_events (Event_ID, School_ID, Event_Name, Event_Date) VALUES (1, 1, 'Spring Fair', '2023-09-15')"
            },
            {
                "User": "Can we see all events planned for St Aloysius' College?",
                "Answer": "SELECT Event_Name, Event_Date FROM school_events WHERE School_ID = 1"
            },
            {
                "User": "I'd like to add a mascot column to the school_details table.",
                "Answer": "ALTER TABLE school_details ADD COLUMN Mascot text"
            },
            {
                "User": "Set the mascot for Cranbrook School to 'Eagles'.",
                "Answer": "UPDATE school_details SET Mascot = 'Eagles' WHERE School_ID = 3"
            },
            {
                "User": "What is the mascot for Cranbrook School now?",
                "Answer": "SELECT Mascot FROM school_details WHERE School_ID = 3"
            },
            {
                "User": "Insert a new player named 'John Smith' who is 17 years old, plays as a 'Goalkeeper' for the 'Springfield Strikers' and belongs to New Vision Academy.",
                "Answer": "INSERT INTO player (Player_ID, Player, Team, Age, Position, School_ID) VALUES (24, 'John Smith', 'Springfield Strikers', 17, 'Goalkeeper', 7)"
            },
            {
                "User": "Which players are over 15 years old?",
                "Answer": "SELECT Player FROM player WHERE Age > 15"
            },
            {
                "User": "Update the league of the 'Tigers' in school_details to 'Premier League'.",
                "Answer": "UPDATE school_details SET League = 'Premier League' WHERE Nickname = 'Tigers'"
            }
        ]
    },
    {
        "idx": 726,
        "db": "csu_1",
        "interaction": [
            {
                "User": "How many students were enrolled at the California State University-Bakersfield in 2004?",
                "Answer": "SELECT TotalEnrollment_AY FROM enrollments WHERE Campus = 1 AND Year = 2004"
            },
            {
                "User": "Please add a new campus with ID 24, named 'California State University-Fresno', located in 'Fresno', in 'Fresno County', established in 1911.",
                "Answer": "INSERT INTO Campuses (Id, Campus, Location, County, Year) VALUES (24, 'California State University-Fresno', 'Fresno', 'Fresno County', 1911)"
            },
            {
                "User": "What is the campus fee for California State University-Fresno in 2021?",
                "Answer": "SELECT CampusFee FROM csu_fees WHERE Campus = 24 AND Year = 2021"
            },
            {
                "User": "Update the faculty count for California State University-Bakersfield in the year 2003 to 400.",
                "Answer": "UPDATE faculty SET Faculty = 400 WHERE Campus = 1 AND Year = 2003"
            },
            {
                "User": "Can you create a new table to track sports achievements with columns for Campus ID, Year, Sport, and Championships won?",
                "Answer": "CREATE TABLE sports_achievements (CampusId number, Year number, Sport text, Championships number, PRIMARY KEY (CampusId, Year, Sport))"
            },
            {
                "User": "Add a record for California State University-Bakersfield with a championship in Basketball in 2005.",
                "Answer": "INSERT INTO sports_achievements (CampusId, Year, Sport, Championships) VALUES (1, 2005, 'Basketball', 1)"
            },
            {
                "User": "What is the total number of undergraduate and graduate enrollments for California State University-Chico in 2004?",
                "Answer": "SELECT Undergraduate + Graduate AS TotalEnrollments FROM discipline_enrollments WHERE Campus = 3 AND Year = 2004"
            },
            {
                "User": "Add a column to track the average GPA for the enrollments table.",
                "Answer": "ALTER TABLE enrollments ADD COLUMN AverageGPA number"
            },
            {
                "User": "Set the average GPA for California State University-Bakersfield in 2004 to 3.2.",
                "Answer": "UPDATE enrollments SET AverageGPA = 3.2 WHERE Campus = 1 AND Year = 2004"
            },
            {
                "User": "Which campus had the highest campus fee in 1996?",
                "Answer": "SELECT T1.Campus FROM csu_fees AS T1 JOIN Campuses AS T2 ON T1.Campus = T2.Id WHERE T1.Year = 1996 ORDER BY T1.CampusFee DESC LIMIT 1"
            },
            {
                "User": "Delete the record of campus fees for California State University-Channel Islands in 2003.",
                "Answer": "DELETE FROM csu_fees WHERE Campus = 2 AND Year = 2003"
            }
        ]
    },
    {
        "idx": 727,
        "db": "wrestler",
        "interaction": [
            {
                "User": "Can we track the championships won by each wrestler? We need a new table for that.",
                "Answer": "CREATE TABLE Championships (Championship_ID number PRIMARY KEY, Wrestler_ID number, Title text, Date_won text, Days_held number)"
            },
            {
                "User": "Add a record for Rey Misterio Sr. winning the Lightweight Championship on 2001-07-25 which he held for 365 days.",
                "Answer": "INSERT INTO Championships (Championship_ID, Wrestler_ID, Title, Date_won, Days_held) VALUES (1, 1, 'Lightweight Championship', '2001-07-25', 365)"
            },
            {
                "User": "Now, how many championships are recorded in the new table?",
                "Answer": "SELECT COUNT(*) FROM Championships"
            },
            {
                "User": "Let's update the 'wrestler' table to include a 'Weight_class' column.",
                "Answer": "ALTER TABLE wrestler ADD Weight_class text"
            },
            {
                "User": "Set the weight class of Rey Misterio Sr. to 'Lightweight'.",
                "Answer": "UPDATE wrestler SET Weight_class = 'Lightweight' WHERE Wrestler_ID = 1"
            },
            {
                "User": "Show me all wrestlers in the Lightweight class.",
                "Answer": "SELECT Name FROM wrestler WHERE Weight_class = 'Lightweight'"
            },
            {
                "User": "Fishman just won the Middleweight Championship, add this to the Championships table.",
                "Answer": "INSERT INTO Championships (Championship_ID, Wrestler_ID, Title, Date_won, Days_held) VALUES (2, 2, 'Middleweight Championship', '2023-04-01', 0)"
            },
            {
                "User": "How many days has Fishman held the Middleweight Championship?",
                "Answer": "SELECT Days_held FROM Championships WHERE Wrestler_ID = 2 AND Title = 'Middleweight Championship'"
            },
            {
                "User": "Oh, it seems we need to update that. Fishman has held the title for 10 days now.",
                "Answer": "UPDATE Championships SET Days_held = 10 WHERE Wrestler_ID = 2 AND Title = 'Middleweight Championship'"
            },
            {
                "User": "Who eliminated Villaño IV?",
                "Answer": "SELECT Eliminated_By FROM Elimination WHERE Wrestler_ID = 3"
            },
            {
                "User": "I would like to see a list of all wrestlers and the titles they have won.",
                "Answer": "SELECT w.Name, c.Title FROM wrestler w JOIN Championships c ON w.Wrestler_ID = c.Wrestler_ID"
            },
            {
                "User": "It looks like we need to track the locations of championship wins. Add a 'Location' column to the Championships table.",
                "Answer": "ALTER TABLE Championships ADD Location text"
            },
            {
                "User": "Update the location of Rey Misterio Sr.'s championship win to 'San Diego, California'.",
                "Answer": "UPDATE Championships SET Location = 'San Diego, California' WHERE Wrestler_ID = 1 AND Title = 'Lightweight Championship'"
            },
            {
                "User": "Where did Fishman win his Middleweight Championship?",
                "Answer": "SELECT Location FROM Championships WHERE Wrestler_ID = 2 AND Title = 'Middleweight Championship'"
            }
        ]
    },
    {
        "idx": 728,
        "db": "book_2",
        "interaction": [
            {
                "User": "Can you add a new book called 'Dawn of the Dragons' by 'Jane Yolen' with 5 issues?",
                "Answer": "INSERT INTO book (Title, Issues, Writer) VALUES ('Dawn of the Dragons', 5, 'Jane Yolen')"
            },
            {
                "User": "Now, I want to publish it with 'HarperCollins' at a price of 7500000.0, publication date is 'January 2021'.",
                "Answer": "INSERT INTO publication (Book_ID, Publisher, Publication_Date, Price) VALUES ((SELECT Book_ID FROM book WHERE Title = 'Dawn of the Dragons'), 'HarperCollins', 'January 2021', 7500000.0)"
            },
            {
                "User": "What's the average price of books published by 'HarperCollins'?",
                "Answer": "SELECT AVG(Price) FROM publication WHERE Publisher = 'HarperCollins'"
            },
            {
                "User": "Let's update the price of 'The Black Lamb' to 20000000.0.",
                "Answer": "UPDATE publication SET Price = 20000000.0 WHERE Book_ID = (SELECT Book_ID FROM book WHERE Title = 'The Black Lamb')"
            },
            {
                "User": "I realized we don't have a genre column for books. Can you add it?",
                "Answer": "ALTER TABLE book ADD COLUMN Genre text"
            },
            {
                "User": "Set the genre of 'The Black Lamb' to 'Fantasy'.",
                "Answer": "UPDATE book SET Genre = 'Fantasy' WHERE Title = 'The Black Lamb'"
            },
            {
                "User": "What genres do we have for the books written by 'Garth Ennis'?",
                "Answer": "SELECT Genre FROM book WHERE Writer = 'Garth Ennis'"
            },
            {
                "User": "Create a table to track the number of copies sold for each book.",
                "Answer": "CREATE TABLE sales (Sales_ID number PRIMARY KEY, Book_ID number, Copies_Sold number, FOREIGN KEY (Book_ID) REFERENCES book (Book_ID))"
            },
            {
                "User": "Insert the sales data: 'The Black Lamb' sold 500 copies.",
                "Answer": "INSERT INTO sales (Book_ID, Copies_Sold) VALUES ((SELECT Book_ID FROM book WHERE Title = 'The Black Lamb'), 500)"
            },
            {
                "User": "Which book has the highest number of issues published?",
                "Answer": "SELECT Title FROM book WHERE Issues = (SELECT MAX(Issues) FROM book)"
            },
            {
                "User": "Can we get a list of publishers that have published more than one book?",
                "Answer": "SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(Book_ID) > 1"
            },
            {
                "User": "How many books have been published since 'January 2010'?",
                "Answer": "SELECT COUNT(*) FROM publication WHERE Publication_Date >= 'January 2010'"
            }
        ]
    },
    {
        "idx": 729,
        "db": "product_catalog",
        "interaction": [
            {
                "User": "Can we add a column to track the weight of products in the Catalog_Contents table?",
                "Answer": "ALTER TABLE Catalog_Contents ADD COLUMN weight_in_kg text;"
            },
            {
                "User": "Please add the weight for the 'Cola' product as '0.5 kg'.",
                "Answer": "UPDATE Catalog_Contents SET weight_in_kg = '0.5' WHERE catalog_entry_name = 'Cola';"
            },
            {
                "User": "Now, I need to insert a new product into the 'Chocolate' catalog. It's 'Milk Chocolate', product number '15 ml', priced at $2.99, €2.49, £2.19, with capacities '2', length '4', height '1', width '3', and weight '0.2 kg'.",
                "Answer": "INSERT INTO Catalog_Contents (catalog_entry_id, catalog_level_number, parent_entry_id, previous_entry_id, next_entry_id, catalog_entry_name, product_stock_number, price_in_dollars, price_in_euros, price_in_pounds, capacity, length, height, width, weight_in_kg) VALUES ((SELECT MAX(catalog_entry_id) + 1 FROM Catalog_Contents), 1, NULL, NULL, NULL, 'Milk Chocolate', '15 ml', 2.99, 2.49, 2.19, '2', '4', '1', '3', '0.2');"
            },
            {
                "User": "What is the average price of products in euros?",
                "Answer": "SELECT AVG(price_in_euros) FROM Catalog_Contents;"
            },
            {
                "User": "Let's create a new table for customer reviews. It should have columns for review_id, catalog_entry_id, customer_name, rating, and comments.",
                "Answer": "CREATE TABLE Customer_Reviews (review_id number PRIMARY KEY, catalog_entry_id number, customer_name text, rating number, comments text);"
            },
            {
                "User": "Add a sample review for the 'Cola' product with a 5-star rating and the comment 'Refreshing!'. Assume the customer's name is 'John Doe'.",
                "Answer": "INSERT INTO Customer_Reviews (review_id, catalog_entry_id, customer_name, rating, comments) VALUES ((SELECT MAX(review_id) + 1 FROM Customer_Reviews), (SELECT catalog_entry_id FROM Catalog_Contents WHERE catalog_entry_name = 'Cola'), 'John Doe', 5, 'Refreshing!');"
            },
            {
                "User": "Can we update the 'Root beer' product to reflect a price increase? The new prices are $7.99, €6.99, and £5.99.",
                "Answer": "UPDATE Catalog_Contents SET price_in_dollars = 7.99, price_in_euros = 6.99, price_in_pounds = 5.99 WHERE catalog_entry_name = 'Root beer';"
            },
            {
                "User": "Show me all products with a weight greater than '0.3 kg'.",
                "Answer": "SELECT catalog_entry_name, weight_in_kg FROM Catalog_Contents WHERE weight_in_kg > '0.3';"
            },
            {
                "User": "I want to create a view that lists all products with their names, prices in dollars, and weight.",
                "Answer": "CREATE VIEW Products_With_Prices_And_Weight AS SELECT catalog_entry_name, price_in_dollars, weight_in_kg FROM Catalog_Contents;"
            },
            {
                "User": "Can you show me the contents of the view we just created?",
                "Answer": "SELECT * FROM Products_With_Prices_And_Weight;"
            },
            {
                "User": "Finally, let's add an attribute called 'Material' to the Attribute_Definitions table.",
                "Answer": "INSERT INTO Attribute_Definitions (attribute_id, attribute_name, attribute_data_type) VALUES ((SELECT MAX(attribute_id) + 1 FROM Attribute_Definitions), 'Material', 'text');"
            }
        ]
    },
    {
        "idx": 730,
        "db": "county_public_safety",
        "interaction": [
            {
                "User": "Can we add information about the annual budget for each police department?",
                "Answer": "ALTER TABLE county_public_safety ADD COLUMN Annual_Budget number;"
            },
            {
                "User": "Update the annual budget for the RCMP in Burnaby to 7500000.",
                "Answer": "UPDATE county_public_safety SET Annual_Budget = 7500000 WHERE Name = 'Burnaby';"
            },
            {
                "User": "How much is the annual budget for the police force in Campbell River?",
                "Answer": "SELECT Annual_Budget FROM county_public_safety WHERE Name = 'Campbell River';"
            },
            {
                "User": "Create a new table to track the equipment inventory for each police department.",
                "Answer": "CREATE TABLE equipment_inventory (Inventory_ID number PRIMARY KEY, County_ID number, Item_name text, Quantity number, Last_updated date);"
            },
            {
                "User": "Insert three records into the equipment inventory for Abbotsford with the following details: 10 cars, 20 radios, 5 computers.",
                "Answer": "INSERT INTO equipment_inventory (County_ID, Item_name, Quantity) VALUES (1, 'Cars', 10), (1, 'Radios', 20), (1, 'Computers', 5);"
            },
            {
                "User": "Add a new column to track the number of solved cases per year in the county_public_safety table.",
                "Answer": "ALTER TABLE county_public_safety ADD COLUMN Solved_Cases number;"
            },
            {
                "User": "Update the number of solved cases for Abbotsford to 300 for this year.",
                "Answer": "UPDATE county_public_safety SET Solved_Cases = 300 WHERE Name = 'Abbotsford';"
            },
            {
                "User": "What is the ratio of solved cases to total cases in Burnaby?",
                "Answer": "SELECT (Solved_Cases / Case_burden) AS Solved_Ratio FROM county_public_safety WHERE Name = 'Burnaby';"
            },
            {
                "User": "How many different types of equipment does the Campbell River police department have?",
                "Answer": "SELECT COUNT(DISTINCT Item_name) FROM equipment_inventory WHERE County_ID = (SELECT County_ID FROM county_public_safety WHERE Name = 'Campbell River');"
            },
            {
                "User": "Show me the equipment quantity for radios in all police departments.",
                "Answer": "SELECT p.Name, e.Quantity FROM equipment_inventory e JOIN county_public_safety p ON e.County_ID = p.County_ID WHERE e.Item_name = 'Radios';"
            }
        ]
    },
    {
        "idx": 731,
        "db": "movie_1",
        "interaction": [
            {
                "User": "Can you add a column for the genre of the movies?",
                "Answer": "ALTER TABLE Movie ADD COLUMN genre text"
            },
            {
                "User": "Now, please categorize 'Gone with the Wind' as 'Drama'.",
                "Answer": "UPDATE Movie SET genre = 'Drama' WHERE title = 'Gone with the Wind'"
            },
            {
                "User": "What genres are currently listed in the movies table?",
                "Answer": "SELECT DISTINCT genre FROM Movie"
            },
            {
                "User": "Can we add a new movie to the database? With mID, title, year, director, genre are 109, 'Inception', 2010, 'Christopher Nolan', 'Action'",
                "Answer": "INSERT INTO Movie (mID, title, year, director, genre) VALUES (109, 'Inception', 2010, 'Christopher Nolan', 'Action')"
            },
            {
                "User": "Who directed 'Inception'?",
                "Answer": "SELECT director FROM Movie WHERE title = 'Inception'"
            },
            {
                "User": "Add a new reviewer named 'Alex Smith' with rID 209.",
                "Answer": "INSERT INTO Reviewer (rID, name) VALUES (209, 'Alex Smith')"
            },
            {
                "User": "I'd like to give 'Inception' a rating of 5 stars today. How can I do that?",
                "Answer": "INSERT INTO Rating (rID, mID, stars, ratingDate) VALUES (204, 104, 5, CURRENT_DATE)"
            },
            {
                "User": "What is the average rating of movies directed by 'Christopher Nolan'?",
                "Answer": "SELECT AVG(stars) FROM Rating JOIN Movie ON Rating.mID = Movie.mID WHERE director = 'Christopher Nolan'"
            },
            {
                "User": "Create a new table to store movie box office earnings.",
                "Answer": "CREATE TABLE BoxOffice (mID number, earnings number, currency text, PRIMARY KEY (mID))"
            },
            {
                "User": "Record that 'Star Wars' has made 775 million dollars in the box office.",
                "Answer": "INSERT INTO BoxOffice (mID, earnings, currency) VALUES (102, 775000000, 'USD')"
            },
            {
                "User": "Which movie made more in the box office, 'Star Wars' or 'Gone with the Wind'?",
                "Answer": "SELECT title FROM Movie JOIN BoxOffice ON Movie.mID = BoxOffice.mID ORDER BY earnings DESC LIMIT 1"
            },
            {
                "User": "Update 'The Sound of Music' with a box office earning of 286 million dollars.",
                "Answer": "INSERT INTO BoxOffice (mID, earnings, currency) VALUES (103, 286000000, 'USD')"
            },
            {
                "User": "How many movies in our database have box office records?",
                "Answer": "SELECT COUNT(*) FROM Movie WHERE mID IN (SELECT mID FROM BoxOffice)"
            }
        ]
    },
    {
        "idx": 732,
        "db": "university_basketball",
        "interaction": [
            {
                "User": "Can you add a new table to track the coaches for each basketball team?",
                "Answer": "CREATE TABLE coaches (Coach_ID number PRIMARY KEY, Team_ID number, Coach_Name text, Years_Active number, Wins number, Losses number, FOREIGN KEY (Team_ID) REFERENCES basketball_match(Team_ID))"
            },
            {
                "User": "Insert data for the coach of North Carolina with 5 years of experience and a record of 130 wins and 20 losses.",
                "Answer": "INSERT INTO coaches (Coach_ID, Team_ID, Coach_Name, Years_Active, Wins, Losses) VALUES (1, 1, 'Roy Williams', 5, 130, 20)"
            },
            {
                "User": "Update the record for North Carolina's coach to reflect an additional year and update the wins and losses to 150 and 25, respectively.",
                "Answer": "UPDATE coaches SET Years_Active = 6, Wins = 150, Losses = 25 WHERE Coach_Name = 'Roy Williams'"
            },
            {
                "User": "How many wins does the coach of North Carolina have?",
                "Answer": "SELECT Wins FROM coaches WHERE Team_ID = (SELECT Team_ID FROM basketball_match WHERE Team_Name = 'North Carolina')"
            },
            {
                "User": "Add a column to the university table to track the number of basketball championships won.",
                "Answer": "ALTER TABLE university ADD COLUMN Basketball_Championships number"
            },
            {
                "User": "Set the number of basketball championships won by University of Delaware to 2.",
                "Answer": "UPDATE university SET Basketball_Championships = 2 WHERE School = 'University of Delaware'"
            },
            {
                "User": "Which schools have won a basketball championship?",
                "Answer": "SELECT School FROM university WHERE Basketball_Championships > 0"
            },
            {
                "User": "Create a view that shows the school, coach name, and total games coached for each team.",
                "Answer": "CREATE VIEW school_coach_games AS SELECT u.School, c.Coach_Name, (c.Wins + c.Losses) AS Total_Games FROM university u JOIN basketball_match bm ON u.School_ID = bm.School_ID JOIN coaches c ON bm.Team_ID = c.Team_ID"
            },
            {
                "User": "Show me the schools and their coaches who have coached more than 100 games.",
                "Answer": "SELECT School, Coach_Name FROM school_coach_games WHERE Total_Games > 100"
            },
            {
                "User": "I need to correct the enrollment number for the University of Rhode Island to 18000.",
                "Answer": "UPDATE university SET Enrollment = 18000 WHERE School = 'University of Rhode Island'"
            },
            {
                "User": "List all schools with their nicknames and the number of basketball championships they've won.",
                "Answer": "SELECT School, Nickname, Basketball_Championships FROM university"
            }
        ]
    },
    {
        "idx": 733,
        "db": "music_1",
        "interaction": [
            {
                "User": "Can you add a new genre called 'jazze' with a rating of 9 that's most popular in the USA?",
                "Answer": "INSERT INTO genre (g_name, rating, most_popular_in) VALUES ('jazze', '9', 'USA')"
            },
            {
                "User": "Now, list all genres with a rating higher than 7.",
                "Answer": "SELECT * FROM genre WHERE CAST(rating AS INTEGER) > 7"
            },
            {
                "User": "Add a new artist named 'John Doe' from the USA who prefers pop.",
                "Answer": "INSERT INTO artist (artist_name, country, gender, preferred_genre) VALUES ('John Doe', 'USA', 'Male', 'pop')"
            },
            {
                "User": "I'd like to update the file size of the song 'Tumi robe nirobe' to '4.00 MB'.",
                "Answer": "UPDATE files SET file_size = '4.00 MB' WHERE f_id = (SELECT f_id FROM song WHERE song_name = 'Tumi robe nirobe')"
            },
            {
                "User": "Could you show me all artists and their preferred genres?",
                "Answer": "SELECT artist_name, preferred_genre FROM artist"
            },
            {
                "User": "Let's create a new table for album information with columns 'album_id', 'album_name', 'release_date', and 'artist_name'.",
                "Answer": "CREATE TABLE album (album_id INTEGER PRIMARY KEY, album_name TEXT, release_date TEXT, artist_name TEXT)"
            },
            {
                "User": "Insert a new album with ID 1, called 'Golden Hits', released today, by 'Shrikanta'.",
                "Answer": "INSERT INTO album (album_id, album_name, release_date, artist_name) VALUES (1, 'Golden Hits', CURRENT_DATE, 'Shrikanta')"
            },
            {
                "User": "Now, can you link the song 'Tumi robe nirobe' to the 'Golden Hits' album?",
                "Answer": [
                    "ALTER TABLE song ADD COLUMN album_id INTEGER;",
                    "UPDATE song SET album_id = 1 WHERE song_name = 'Tumi robe nirobe'"
                ]
            },
            {
                "User": "Show me all songs that are part of an album.",
                "Answer": "SELECT song_name FROM song WHERE album_id IS NOT NULL"
            },
            {
                "User": "Please add a 'total_tracks' column to the 'album' table.",
                "Answer": "ALTER TABLE album ADD COLUMN total_tracks INTEGER"
            },
            {
                "User": "Set the number of total tracks for 'Golden Hits' to 10.",
                "Answer": "UPDATE album SET total_tracks = 10 WHERE album_id = 1"
            },
            {
                "User": "Find all genres that are not yet represented by an artist.",
                "Answer": "SELECT g_name FROM genre WHERE g_name NOT IN (SELECT preferred_genre FROM artist)"
            },
            {
                "User": "Which artists have songs with a rating of 8 or higher?",
                "Answer": "SELECT DISTINCT artist_name FROM song WHERE rating >= 8"
            }
        ]
    },
    {
        "idx": 734,
        "db": "customer_complaints",
        "interaction": [
            {
                "User": "HOW MANY PRODUCTS ARE CURRENTLY AVAILABLE?",
                "Answer": "SELECT COUNT(*) FROM Products WHERE date_product_discontinued IS NULL"
            },
            {
                "User": "ADD A NEW PRODUCT CALLED 'SUPER MOUSE' WITH ID 121, CATEGORY 'HARDWARE', PRICE 29.99 AND AVAILABLE FROM TODAY.",
                "Answer": "INSERT INTO Products (product_id, product_category_code, product_name, product_description, product_price, date_product_first_available) VALUES (121, 'Hardware', 'Super Mouse', 'High precision mouse', 29.99, CURRENT_DATE)"
            },
            {
                "User": "WHAT IS THE AVERAGE PRICE OF ALL PRODUCTS IN THE 'HARDWARE' CATEGORY?",
                "Answer": "SELECT AVG(product_price) FROM Products WHERE product_category_code = 'Hardware'"
            },
            {
                "User": "CAN YOU SHOW ME THE EMAIL AND PHONE NUMBER OF THE CUSTOMER WHO MADE THE MOST RECENT COMPLAINT?",
                "Answer": "SELECT c.email_address, c.phone_number FROM Customers AS c JOIN Complaints AS cp ON c.customer_id = cp.customer_id ORDER BY cp.date_complaint_raised DESC LIMIT 1"
            },
            {
                "User": "I WANT TO RECORD THE TIME WHEN A COMPLAINT IS FIRST VIEWED BY STAFF. PLEASE ADD A COLUMN 'date_complaint_viewed' TO THE COMPLAINTS TABLE.",
                "Answer": "ALTER TABLE Complaints ADD COLUMN date_complaint_viewed time"
            },
            {
                "User": "UPDATE THE FIRST COMPLAINT IN THE SYSTEM WITH THE TIME IT WAS VIEWED AS NOW.",
                "Answer": "UPDATE Complaints SET date_complaint_viewed = CURRENT_TIME WHERE complaint_id = (SELECT complaint_id FROM Complaints ORDER BY date_complaint_raised LIMIT 1)"
            },
            {
                "User": "CREATE A NEW TABLE TO TRACK CUSTOMER FEEDBACK WITH FIELDS: FEEDBACK_ID, CUSTOMER_ID, FEEDBACK_TEXT, AND FEEDBACK_DATE.",
                "Answer": "CREATE TABLE CustomerFeedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text, feedback_date time)"
            },
            {
                "User": "INSERT A NEW FEEDBACK RECORD FOR CUSTOMER WITH ID 113, SAYING 'LOVED THE PRODUCT, THANK YOU!' RECEIVED TODAY.",
                "Answer": "INSERT INTO CustomerFeedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES (1, 113, 'Loved the product, thank you!', CURRENT_DATE)"
            },
            {
                "User": "HOW MANY COMPLAINTS HAVE BEEN RAISED BY CUSTOMERS FROM 'KANSAS'?",
                "Answer": "SELECT COUNT(*) FROM Complaints AS cp JOIN Customers AS c ON cp.customer_id = c.customer_id WHERE c.state = 'Kansas'"
            },
            {
                "User": "THE PRODUCT 'SUPER MOUSE' NEEDS A PRICE UPDATE TO 34.99.",
                "Answer": "UPDATE Products SET product_price = 34.99 WHERE product_name = 'Super Mouse'"
            },
            {
                "User": "CREATE A REPORT OF ALL PRODUCTS THAT WERE DISCONTINUED BEFORE THE YEAR 2000.",
                "Answer": "SELECT * FROM Products WHERE date_product_discontinued < '2000-01-01'"
            },
            {
                "User": "SHOW ME THE LIST OF STAFF MEMBERS WHO HAVE HANDLED MORE THAN 5 COMPLAINTS.",
                "Answer": "SELECT s.staff_id, s.first_name, s.last_name, COUNT(*) AS complaints_handled FROM Staff AS s JOIN Complaints AS cp ON s.staff_id = cp.staff_id GROUP BY s.staff_id HAVING COUNT(*) > 5"
            },
            {
                "User": "I WANT TO ADD A PHONE EXTENSION FIELD FOR STAFF MEMBERS. THE FIELD SHOULD BE CALLED 'phone_extension'.",
                "Answer": "ALTER TABLE Staff ADD COLUMN phone_extension text"
            },
            {
                "User": "UPDATE STAFF MEMBER WITH ID 114 TO HAVE A PHONE EXTENSION '123'.",
                "Answer": "UPDATE Staff SET phone_extension = '123' WHERE staff_id = 114"
            }
        ]
    },
    {
        "idx": 735,
        "db": "department_store",
        "interaction": [
            {
                "User": "Can you add a new supplier to the database with the name 'WholeMart', phone number '555-0199'? With supplier_id is 5 ",
                "Answer": "INSERT INTO Suppliers (supplier_id, supplier_name, supplier_phone) VALUES (5, 'WholeMart', '555-0199')"
            },
            {
                "User": "Now that we have a new supplier, can we assign the address with ID 1 to WholeMart?",
                "Answer": "INSERT INTO Supplier_Addresses (supplier_id, address_id, date_from, date_to) VALUES (4, 1, CURRENT_TIMESTAMP, NULL)"
            },
            {
                "User": "I need to update the phone number of the supplier 'Lidl' to '777-8888'.",
                "Answer": "UPDATE Suppliers SET supplier_phone = '777-8888' WHERE supplier_name = 'Lidl'"
            },
            {
                "User": "How many departments does the department store chain with ID 2 have?",
                "Answer": "SELECT COUNT(*) FROM Departments WHERE dept_store_id IN (SELECT dept_store_id FROM Department_Stores WHERE dept_store_chain_id = 2)"
            },
            {
                "User": "Please create a new table to track inventory levels for products in each department store.",
                "Answer": "CREATE TABLE Inventory (inventory_id number PRIMARY KEY, dept_store_id number, product_id number, quantity_in_stock number)"
            },
            {
                "User": "Add inventory records for the first three products in the first department store with quantities 50, 75, and 100 respectively.",
                "Answer": "INSERT INTO Inventory (inventory_id, dept_store_id, product_id, quantity_in_stock) VALUES (1, 1, 1, 50), (2, 1, 2, 75), (3, 1, 3, 100)"
            },
            {
                "User": "Which products have a stock level below 60 in the first department store?",
                "Answer": "SELECT product_id FROM Inventory WHERE dept_store_id = 1 AND quantity_in_stock < 60"
            },
            {
                "User": "Show me the names of all customers who have an address in 'IA' state.",
                "Answer": "SELECT T1.customer_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address = T2.address_details WHERE T2.address_details LIKE '%IA%'"
            },
            {
                "User": "Can we add a column to track the discount rate for customer orders?",
                "Answer": "ALTER TABLE Customer_Orders ADD discount_rate number"
            },
            {
                "User": "Set a 10% discount for all 'New' orders.",
                "Answer": "UPDATE Customer_Orders SET discount_rate = 10 WHERE order_status_code = 'New'"
            },
            {
                "User": "For the next order, we need to insert an order for customer with ID 2, with a status of 'New' and today's date.",
                "Answer": "INSERT INTO Customer_Orders (order_id, customer_id, order_status_code, order_date) VALUES ((SELECT MAX(order_id) + 1 FROM Customer_Orders), 2, 'New', CURRENT_DATE)"
            },
            {
                "User": "What is the total value purchased from supplier 'Tesco'?",
                "Answer": "SELECT SUM(total_value_purchased) FROM Product_Suppliers WHERE supplier_id = (SELECT supplier_id FROM Suppliers WHERE supplier_name = 'Tesco')"
            }
        ]
    },
    {
        "idx": 736,
        "db": "musical",
        "interaction": [
            {
                "User": "Can you show me all the details of the musical 'The Phantom of the Opera'?",
                "Answer": "SELECT * FROM musical WHERE Name = 'The Phantom of the Opera'"
            },
            {
                "User": "I'd like to add a new musical to the database. It's called 'Hamilton', the year is 2015, it was nominated for a Tony Award for Best Musical, and it won.",
                "Answer": "INSERT INTO musical (Name, Year, Award, Category, Nominee, Result) VALUES ('Hamilton', 2015, 'Tony Award', 'Best Musical', 'Lin-Manuel Miranda', 'Won')"
            },
            {
                "User": "Can you confirm if 'Hamilton' was added to the records?",
                "Answer": "SELECT * FROM musical WHERE Name = 'Hamilton'"
            },
            {
                "User": "I realized we don't have a column for director names in the musical table. Can we add that?",
                "Answer": "ALTER TABLE musical ADD COLUMN Director TEXT"
            },
            {
                "User": "Now that we have a director column, please update 'Hamilton' with the director's name, Thomas Kail.",
                "Answer": "UPDATE musical SET Director = 'Thomas Kail' WHERE Name = 'Hamilton'"
            },
            {
                "User": "How many musicals have been nominated for the 'Best Book of a Musical' category?",
                "Answer": "SELECT COUNT(*) FROM musical WHERE Category = 'Best Book of a Musical' AND Result = 'Nominated'"
            },
            {
                "User": "Please create a new table for theater locations with the following columns: Theater_ID, Name, Capacity, and Address.",
                "Answer": "CREATE TABLE theater (Theater_ID NUMBER PRIMARY KEY, Name TEXT, Capacity NUMBER, Address TEXT)"
            },
            {
                "User": "Add the 'Richard Rodgers Theatre' with a capacity of 1319 located at '226 W 46th St, New York, NY' to the theater table.",
                "Answer": "INSERT INTO theater (Name, Capacity, Address) VALUES ('Richard Rodgers Theatre', 1319, '226 W 46th St, New York, NY')"
            },
            {
                "User": "Can you list all actors who have played in 'The Phantom of the Opera'?",
                "Answer": "SELECT actor.Name FROM actor JOIN musical ON actor.Musical_ID = musical.Musical_ID WHERE musical.Name = 'The Phantom of the Opera'"
            },
            {
                "User": "I want to update the duration of Ray Meagher's performance to '1988—2023'.",
                "Answer": "UPDATE actor SET Duration = '1988—2023' WHERE Name = 'Ray Meagher'"
            },
            {
                "User": "Can you find the average age of actors in the musical 'Les Misérables'?",
                "Answer": "SELECT AVG(age) FROM actor WHERE Musical_ID = (SELECT Musical_ID FROM musical WHERE Name = 'Les Misérables')"
            },
            {
                "User": "We need to add a column for the role type in the actor table, like 'Lead' or 'Supporting'.",
                "Answer": "ALTER TABLE actor ADD COLUMN Role_Type TEXT"
            },
            {
                "User": "Please update Lynne McGranger's role type to 'Supporting'.",
                "Answer": "UPDATE actor SET Role_Type = 'Supporting' WHERE Name = 'Lynne McGranger'"
            }
        ]
    },
    {
        "idx": 737,
        "db": "decoration_competition",
        "interaction": [
            {
                "User": "Can we track the score of each member in the rounds?",
                "Answer": "ALTER TABLE member ADD COLUMN Score number"
            },
            {
                "User": "Add a new member named 'Gary Player' from South Africa to the Saskatchewan School.",
                "Answer": "INSERT INTO member (Member_ID, Name, Country, College_ID) VALUES (11, 'Gary Player', 'South Africa', 1)"
            },
            {
                "User": "What is the current score of member Gary Player?",
                "Answer": "SELECT Score FROM member WHERE Name = 'Gary Player'"
            },
            {
                "User": "Update the score of Gary Player to 85.",
                "Answer": "UPDATE member SET Score = 85 WHERE Name = 'Gary Player'"
            },
            {
                "User": "Create a new table to record the details of the competition rounds.",
                "Answer": "CREATE TABLE competition_details (Detail_ID number PRIMARY KEY, Round_ID number, Member_ID number, Points_Awarded number, Judge_Comments text)"
            },
            {
                "User": "Record the details of the first round for Gary Player with 85 points and comments 'Excellent performance'.",
                "Answer": "INSERT INTO competition_details (Detail_ID, Round_ID, Member_ID, Points_Awarded, Judge_Comments) VALUES (1, 1, 11, 85, 'Excellent performance')"
            },
            {
                "User": "How many members are now registered in the Saskatchewan School?",
                "Answer": "SELECT COUNT(*) FROM member WHERE College_ID = 1"
            },
            {
                "User": "Show me the leaderboard for the 'Walk on the Moon' theme.",
                "Answer": "SELECT m.Name, cd.Points_Awarded FROM member m INNER JOIN competition_details cd ON m.Member_ID = cd.Member_ID INNER JOIN round r ON cd.Round_ID = r.Round_ID WHERE r.Decoration_Theme = 'Walk on the Moon' ORDER BY cd.Points_Awarded DESC"
            },
            {
                "User": "Which members have not been assigned a score yet?",
                "Answer": "SELECT Name FROM member WHERE Score IS NULL"
            },
            {
                "User": "Add a new column for email addresses in the member table.",
                "Answer": "ALTER TABLE member ADD COLUMN Email text"
            },
            {
                "User": "Set the email for Gary Player to 'gary.player@example.com'.",
                "Answer": "UPDATE member SET Email = 'gary.player@example.com' WHERE Name = 'Gary Player'"
            },
            {
                "User": "Retrieve all members' names and their email addresses.",
                "Answer": "SELECT Name, Email FROM member"
            },
            {
                "User": "Can we compare the average score of members from the United States versus Canada?",
                "Answer": "SELECT Country, AVG(Score) AS AverageScore FROM member WHERE Country IN ('United States', 'Canada') GROUP BY Country"
            },
            {
                "User": "I'd like to see the countries represented in the competition along with the number of members and their average score.",
                "Answer": "SELECT Country, COUNT(*) AS NumberOfMembers, AVG(Score) AS AverageScore FROM member GROUP BY Country"
            },
            {
                "User": "Which member from the Saskatchewan School has the highest score?",
                "Answer": "SELECT Name FROM member WHERE College_ID = 1 ORDER BY Score DESC LIMIT 1"
            },
            {
                "User": "Alter the round table to include a column for the number of participants in each round.",
                "Answer": "ALTER TABLE round ADD COLUMN Participants_Count number"
            },
            {
                "User": "Update the number of participants for the first round to 8.",
                "Answer": "UPDATE round SET Participants_Count = 8 WHERE Round_ID = 1"
            }
        ]
    },
    {
        "idx": 738,
        "db": "climbing",
        "interaction": [
            {
                "User": "How many mountains are higher than 5000 meters?",
                "Answer": "SELECT count(*) FROM mountain WHERE Height > 5000"
            },
            {
                "User": "Which mountain has the highest prominence?",
                "Answer": "SELECT Name FROM mountain ORDER BY Prominence DESC LIMIT 1"
            },
            {
                "User": "Can we track the number of climbs for each mountain?",
                "Answer": "ALTER TABLE mountain ADD COLUMN Climbs_Count number"
            },
            {
                "User": "Now that we have a climbs count column, set the initial count to zero for all mountains.",
                "Answer": "UPDATE mountain SET Climbs_Count = 0"
            },
            {
                "User": "Add a new mountain to the database called 'Mount Fictional' with a height of 4500 meters and prominence of 1500 meters, located in 'Neverland'.",
                "Answer": "INSERT INTO mountain (Name, Height, Prominence, Range, Country) VALUES ('Mount Fictional', 4500, 1500, 'Fictional Range', 'Neverland')"
            },
            {
                "User": "Oops, 'Mount Fictional' is actually 4700 meters tall. Can we update this information?",
                "Answer": "UPDATE mountain SET Height = 4700 WHERE Name = 'Mount Fictional'"
            },
            {
                "User": "How many climbers are from 'West Germany'?",
                "Answer": "SELECT count(*) FROM climber WHERE Country = 'West Germany'"
            },
            {
                "User": "Create a new table to record the individual climbs with columns for climb ID, climber ID, mountain ID, and date of climb.",
                "Answer": "CREATE TABLE climb_record (Climb_ID number PRIMARY KEY, Climber_ID number, Mountain_ID number, Date_of_Climb text)"
            },
            {
                "User": "Add a record for a climber with ID 1 climbing mountain with ID 1 on '2023-04-01'.",
                "Answer": "INSERT INTO climb_record (Climber_ID, Mountain_ID, Date_of_Climb) VALUES (1, 1, '2023-04-01')"
            },
            {
                "User": "How many climbs have been recorded so far?",
                "Answer": "SELECT count(*) FROM climb_record"
            },
            {
                "User": "I want to see the names of the climbers along with the mountains they have climbed.",
                "Answer": "SELECT climber.Name, mountain.Name FROM climber INNER JOIN mountain ON climber.Mountain_ID = mountain.Mountain_ID"
            },
            {
                "User": "Can we update the climbs count for 'Kibo (Uhuru Pk)' to reflect the new climb record we just added?",
                "Answer": "UPDATE mountain SET Climbs_Count = Climbs_Count + 1 WHERE Name = 'Kibo (Uhuru Pk)'"
            },
            {
                "User": "Let's add a column for 'Difficulty_Level' to the mountain table to rate the difficulty of climbing them.",
                "Answer": "ALTER TABLE mountain ADD COLUMN Difficulty_Level text"
            },
            {
                "User": "Set the 'Difficulty_Level' for 'Kibo (Uhuru Pk)' to 'High', 'Mount Kenya (Batian)' to 'Medium', and 'Mawenzi (Hans Meyer Pk)' to 'Low'.",
                "Answer": "UPDATE mountain SET Difficulty_Level = CASE WHEN Name = 'Kibo (Uhuru Pk)' THEN 'High' WHEN Name = 'Mount Kenya (Batian)' THEN 'Medium' WHEN Name = 'Mawenzi (Hans Meyer Pk)' THEN 'Low' END"
            },
            {
                "User": "What is the average height of the mountains in the database?",
                "Answer": "SELECT AVG(Height) FROM mountain"
            }
        ]
    },
    {
        "idx": 739,
        "db": "game_1",
        "interaction": [
            {
                "User": "Can we add a new student named John Doe who is 20 years old, male, majoring in 700, advised by 1121, and living in city code 'NYC'?",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 700, 1121, 'NYC')"
            },
            {
                "User": "I need to update Tracy Kim's age to 20. Can you do that?",
                "Answer": "UPDATE Student SET Age = 20 WHERE LName = 'Kim' AND Fname = 'Tracy'"
            },
            {
                "User": "Can you create a new table to track the favorite game genres of students with columns for student ID and genre?",
                "Answer": "CREATE TABLE Favorite_Genres (StuID number, Genre text, PRIMARY KEY (StuID))"
            },
            {
                "User": "Let's insert Linda Smith's favorite game genre as 'Role-playing game'.",
                "Answer": "INSERT INTO Favorite_Genres (StuID, Genre) VALUES (1001, 'Role-playing game')"
            },
            {
                "User": "How many hours has Linda played 'RNG Stone'?",
                "Answer": "SELECT Hours_Played FROM Plays_Games WHERE StuID = (SELECT StuID FROM Student WHERE Fname = 'Linda' AND LName = 'Smith') AND GameID = (SELECT GameID FROM Video_Games WHERE GName = 'RNG Stone')"
            },
            {
                "User": "Can we add a new column to track the email addresses of students?",
                "Answer": "ALTER TABLE Student ADD COLUMN Email text"
            },
            {
                "User": "Please update John Doe's email address to 'john.doe@example.com'.",
                "Answer": "UPDATE Student SET Email = 'john.doe@example.com' WHERE Fname = 'John' AND LName = 'Doe'"
            },
            {
                "User": "What is the favorite game genre of the student with the email 'john.doe@example.com'?",
                "Answer": "SELECT Genre FROM Favorite_Genres WHERE StuID = (SELECT StuID FROM Student WHERE Email = 'john.doe@example.com')"
            },
            {
                "User": "Let's record that Tracy Kim played 'Grand Term Assignment' for 10 hours.",
                "Answer": "INSERT INTO Plays_Games (StuID, GameID, Hours_Played) VALUES ((SELECT StuID FROM Student WHERE LName = 'Kim' AND Fname = 'Tracy'), (SELECT GameID FROM Video_Games WHERE GName = 'Grand Term Assignment'), 10)"
            },
            {
                "User": "I realized we made a mistake. John Doe's advisor should be 7712. Can you correct it?",
                "Answer": "UPDATE Student SET Advisor = 7712 WHERE Fname = 'John' AND LName = 'Doe'"
            },
            {
                "User": "Do we have a student named Sheila Jones playing football and on a scholarship?",
                "Answer": "SELECT EXISTS(SELECT 1 FROM SportsInfo WHERE StuID = (SELECT StuID FROM Student WHERE Fname = 'Sheila' AND LName = 'Jones') AND SportName = 'Football' AND OnScholarship = 'Y')"
            },
            {
                "User": "What is the total number of hours played by all students on 'RNG Stone'?",
                "Answer": "SELECT SUM(Hours_Played) FROM Plays_Games WHERE GameID = (SELECT GameID FROM Video_Games WHERE GName = 'RNG Stone')"
            },
            {
                "User": "Can we create a view to list all students with their favorite game genre and the total hours they've played?",
                "Answer": "CREATE VIEW Student_Game_Info AS SELECT s.StuID, s.Fname, s.LName, fg.Genre, SUM(pg.Hours_Played) as TotalHoursPlayed FROM Student s LEFT JOIN Favorite_Genres fg ON s.StuID = fg.StuID LEFT JOIN Plays_Games pg ON s.StuID = pg.StuID GROUP BY s.StuID, fg.Genre"
            }
        ]
    },
    {
        "idx": 740,
        "db": "tracking_software_problems",
        "interaction": [
            {
                "User": "Can we track the priority level of problems reported?",
                "Answer": "ALTER TABLE Problems ADD COLUMN priority_level text"
            },
            {
                "User": "Please add a high priority to the problem with ID 1.",
                "Answer": "UPDATE Problems SET priority_level = 'High' WHERE problem_id = 1"
            },
            {
                "User": "List all problems with high priority.",
                "Answer": "SELECT * FROM Problems WHERE priority_level = 'High'"
            },
            {
                "User": "I'd like to add a new problem category for 'Network'.",
                "Answer": "INSERT INTO Problem_Category_Codes (problem_category_code, problem_category_description) VALUES ('Network', 'Network related issues')"
            },
            {
                "User": "Show me all categories of problems we have.",
                "Answer": "SELECT * FROM Problem_Category_Codes"
            },
            {
                "User": "We just solved a network issue, can you log it?",
                "Answer": "INSERT INTO Problem_Log (problem_log_id, assigned_to_staff_id, problem_id, problem_category_code, problem_status_code, log_entry_date, log_entry_description, log_entry_fix, other_log_details) VALUES (16, 2, 16, 'Network', 'Solved', '2023-01-01 10:00:00', 'Resolved network connectivity', 'Rebooted router', 'Issue resolved after reboot')"
            },
            {
                "User": "How many problems are currently solved?",
                "Answer": "SELECT count(*) FROM Problem_Log WHERE problem_status_code = 'Solved'"
            },
            {
                "User": "Can you show me the latest problem logged?",
                "Answer": "SELECT * FROM Problem_Log ORDER BY log_entry_date DESC LIMIT 1"
            },
            {
                "User": "Let's keep track of the time taken to solve each problem. Add a 'time_to_solve' column to the Problem_Log table.",
                "Answer": "ALTER TABLE Problem_Log ADD COLUMN time_to_solve interval"
            },
            {
                "User": "For problem log ID 1, set the time to solve as 2 hours.",
                "Answer": "UPDATE Problem_Log SET time_to_solve = '2 hours' WHERE problem_log_id = 1"
            },
            {
                "User": "Show me the average time taken to solve problems.",
                "Answer": "SELECT AVG(time_to_solve) FROM Problem_Log WHERE time_to_solve IS NOT NULL"
            },
            {
                "User": "Create a new table to track customer feedback with columns 'feedback_id', 'problem_id', 'feedback_text', and 'feedback_rating'.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, problem_id number, feedback_text text, feedback_rating number)"
            },
            {
                "User": "Insert a feedback record for problem ID 1 with a rating of 5 and positive feedback.",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, problem_id, feedback_text, feedback_rating) VALUES (1, 1, 'Issue was resolved quickly, great service!', 5)"
            },
            {
                "User": "What's the average feedback rating for the problems we have solved?",
                "Answer": "SELECT AVG(feedback_rating) FROM Customer_Feedback JOIN Problem_Log ON Customer_Feedback.problem_id = Problem_Log.problem_id WHERE Problem_Log.problem_status_code = 'Solved'"
            }
        ]
    },
    {
        "idx": 741,
        "db": "wine_1",
        "interaction": [
            {
                "User": "Can you add a column for the grape's country of origin to the grapes table?",
                "Answer": "ALTER TABLE grapes ADD COLUMN CountryOfOrigin text"
            },
            {
                "User": "Please update the country of origin for the Barbera grape to Italy.",
                "Answer": "UPDATE grapes SET CountryOfOrigin = 'Italy' WHERE Grape = 'Barbera'"
            },
            {
                "User": "Show me a list of grapes with their colors and countries of origin.",
                "Answer": "SELECT Grape, Color, CountryOfOrigin FROM grapes"
            },
            {
                "User": "Create a new table to track wine reviews with reviewer's name, wine number, review date, and rating.",
                "Answer": "CREATE TABLE wine_reviews (ReviewID number PRIMARY KEY, ReviewerName text, WineNo number, ReviewDate date, Rating number)"
            },
            {
                "User": "Add a review for the wine number 1 by the reviewer 'John Doe' with a rating of 95 on March 15, 2023.",
                "Answer": "INSERT INTO wine_reviews (ReviewID, ReviewerName, WineNo, ReviewDate, Rating) VALUES (1, 'John Doe', 1, '2023-03-15', 95)"
            },
            {
                "User": "List all reviews with wine names and ratings.",
                "Answer": "SELECT w.Name, wr.Rating FROM wine_reviews wr JOIN wine w ON wr.WineNo = w.No"
            },
            {
                "User": "I want to track the acidity level for each wine. Can you add a column for acidity to the wine table?",
                "Answer": "ALTER TABLE wine ADD COLUMN Acidity text"
            },
            {
                "User": "Update the acidity level of 'Old Kraft Vineyard' wine to 'Medium'.",
                "Answer": "UPDATE wine SET Acidity = 'Medium' WHERE Name = 'Old Kraft Vineyard'"
            },
            {
                "User": "Show me all wines with their acidity levels and prices.",
                "Answer": "SELECT Name, Acidity, Price FROM wine"
            },
            {
                "User": "Can we add a new table for customers with their name, email, and favorite wine number?",
                "Answer": "CREATE TABLE customers (CustomerID number PRIMARY KEY, Name text, Email text, FavoriteWineNo number)"
            },
            {
                "User": "Add a customer named 'Alice Smith' with the email 'alice@example.com' who favors wine number 2.",
                "Answer": "INSERT INTO customers (CustomerID, Name, Email, FavoriteWineNo) VALUES (1, 'Alice Smith', 'alice@example.com', 2)"
            },
            {
                "User": "List all customers and their favorite wines.",
                "Answer": "SELECT c.Name, c.Email, w.Name AS FavoriteWine FROM customers c JOIN wine w ON c.FavoriteWineNo = w.No"
            },
            {
                "User": "Which wines have a score above 90 and are available to drink now?",
                "Answer": "SELECT * FROM wine WHERE Score > 90 AND Drink = 'now'"
            },
            {
                "User": "Increase the price of all wines from 'Robert Biale' winery by 10%.",
                "Answer": "UPDATE wine SET Price = Price * 1.1 WHERE Winery = 'Robert Biale'"
            }
        ]
    },
    {
        "idx": 742,
        "db": "manufacturer",
        "interaction": [
            {
                "User": "Can we add a new manufacturer named 'Maple Furnishings' that opened in 2005 with 3 factories and 5 shops?",
                "Answer": "INSERT INTO manufacturer (Open_Year, Name, Num_of_Factories, Num_of_Shops) VALUES (2005, 'Maple Furnishings', 3, 5)"
            },
            {
                "User": "What's the ID of 'Maple Furnishings' we just added?",
                "Answer": "SELECT Manufacturer_ID FROM manufacturer WHERE Name = 'Maple Furnishings'"
            },
            {
                "User": "I'd like to update the number of shops for 'Maple Furnishings' to 10.",
                "Answer": "UPDATE manufacturer SET Num_of_Shops = 10 WHERE Name = 'Maple Furnishings'"
            },
            {
                "User": "How many shops does 'Maple Furnishings' have now?",
                "Answer": "SELECT Num_of_Shops FROM manufacturer WHERE Name = 'Maple Furnishings'"
            },
            {
                "User": "Can we track the year each furniture was added to our catalog? We need a new column for that.",
                "Answer": "ALTER TABLE furniture ADD COLUMN Catalog_Year number"
            },
            {
                "User": "Add the year 2021 for the 'Billiard table' in our catalog.",
                "Answer": "UPDATE furniture SET Catalog_Year = 2021 WHERE Name = 'Billiard table'"
            },
            {
                "User": "Show me all furniture added in 2021.",
                "Answer": "SELECT * FROM furniture WHERE Catalog_Year = 2021"
            },
            {
                "User": "Create a new table to track customer feedback with columns for feedback ID, furniture ID, customer name, and rating out of 5.",
                "Answer": "CREATE TABLE customer_feedback (Feedback_ID number PRIMARY KEY, Furniture_ID number, Customer_Name text, Rating number)"
            },
            {
                "User": "Insert a customer feedback for the 'Chabudai' with customer name 'John Doe' and a rating of 4.",
                "Answer": "INSERT INTO customer_feedback (Furniture_ID, Customer_Name, Rating) VALUES ((SELECT Furniture_ID FROM furniture WHERE Name = 'Chabudai'), 'John Doe', 4)"
            },
            {
                "User": "What is the average rating of furniture in our customer feedback?",
                "Answer": "SELECT AVG(Rating) FROM customer_feedback"
            },
            {
                "User": "Let's add a new furniture item named 'Modern Chair' with 5 components and a market rate of 75.5.",
                "Answer": "INSERT INTO furniture (Name, Num_of_Component, Market_Rate) VALUES ('Modern Chair', 5, 75.5)"
            },
            {
                "User": "What is the ID of the 'Modern Chair' we just added?",
                "Answer": "SELECT Furniture_ID FROM furniture WHERE Name = 'Modern Chair'"
            },
            {
                "User": "We need to track the color of each furniture piece. Please add a new column for color in the furniture table.",
                "Answer": "ALTER TABLE furniture ADD COLUMN Color text"
            },
            {
                "User": "Set the color of the 'Modern Chair' to 'Blue'.",
                "Answer": "UPDATE furniture SET Color = 'Blue' WHERE Name = 'Modern Chair'"
            }
        ]
    },
    {
        "idx": 743,
        "db": "insurance_and_eClaims",
        "interaction": [
            {
                "User": "I'd like to add a new customer. The customer's name is 'John Doe'. What would be the next Customer_ID?",
                "Answer": "SELECT MAX(Customer_ID) + 1 AS Next_Customer_ID FROM Customers"
            },
            {
                "User": "Okay, let's insert John Doe into the Customers table with the ID you provided.",
                "Answer": "INSERT INTO Customers (Customer_ID, Customer_Details) VALUES ((SELECT MAX(Customer_ID) + 1 FROM Customers), 'John Doe')"
            },
            {
                "User": "Can you update the policy with Policy_ID 125 to extend the End_Date to '2023-05-10'?",
                "Answer": "UPDATE Policies SET End_Date = '2023-05-10' WHERE Policy_ID = 125"
            },
            {
                "User": "I need to record the contact details for each customer. Can we add a 'Contact_Info' column to the Customers table?",
                "Answer": "ALTER TABLE Customers ADD COLUMN Contact_Info text"
            },
            {
                "User": "For customer with Customer_ID 263, set the Contact_Info as '555-1234'.",
                "Answer": "UPDATE Customers SET Contact_Info = '555-1234' WHERE Customer_ID = 263"
            },
            {
                "User": "How many claims have been settled so far?",
                "Answer": "SELECT COUNT(*) FROM Claim_Headers WHERE Claim_Status_Code = 'Settled'"
            },
            {
                "User": "Let's create a new table to track customer feedback with columns Feedback_ID, Customer_ID, Feedback_Text, and Feedback_Date.",
                "Answer": "CREATE TABLE Customer_Feedback (Feedback_ID number PRIMARY KEY, Customer_ID number, Feedback_Text text, Feedback_Date time)"
            },
            {
                "User": "Insert a feedback record for customer 334, saying 'Very satisfied with the service', dated '2023-04-01'.",
                "Answer": "INSERT INTO Customer_Feedback (Feedback_ID, Customer_ID, Feedback_Text, Feedback_Date) VALUES ((SELECT MAX(Feedback_ID) + 1 FROM Customer_Feedback), 334, 'Very satisfied with the service', '2023-04-01')"
            },
            {
                "User": "Create a report that lists each claim type code and the average amount claimed for that type.",
                "Answer": "SELECT Claim_Type_Code, AVG(Amount_Claimed) AS Avg_Amount_Claimed FROM Claim_Headers GROUP BY Claim_Type_Code"
            },
            {
                "User": "We need to track the processing time for claims. Can you add a 'Processing_Days' column to the Claim_Headers table?",
                "Answer": "ALTER TABLE Claim_Headers ADD COLUMN Processing_Days number"
            },
            {
                "User": "Can we have a list of all staff members who have created more than 5 documents?",
                "Answer": "SELECT Created_by_Staff_ID FROM Claims_Documents GROUP BY Created_by_Staff_ID HAVING COUNT(*) > 5"
            }
        ]
    },
    {
        "idx": 744,
        "db": "game_injury",
        "interaction": [
            {
                "User": "Which stadium has the highest average attendance?",
                "Answer": "SELECT name FROM stadium ORDER BY Average_Attendance DESC LIMIT 1"
            },
            {
                "User": "Can you add a record for a new stadium called 'Liberty Stadium' with a capacity percentage of 75.5?",
                "Answer": "INSERT INTO stadium (name, Home_Games, Average_Attendance, Total_Attendance, Capacity_Percentage) VALUES ('Liberty Stadium', 0, 0, 0, 75.5)"
            },
            {
                "User": "How many games were played in 'Liberty Stadium'?",
                "Answer": "SELECT COUNT(*) FROM game WHERE stadium_id = (SELECT id FROM stadium WHERE name = 'Liberty Stadium')"
            },
            {
                "User": "I want to update the home games and total attendance for 'Liberty Stadium' to 10 and 500000, respectively.",
                "Answer": "UPDATE stadium SET Home_Games = 10, Total_Attendance = 500000 WHERE name = 'Liberty Stadium'"
            },
            {
                "User": "Can we create a new table to track the staff members of each stadium?",
                "Answer": "CREATE TABLE stadium_staff (id number PRIMARY KEY, stadium_id number, staff_name text, role text, FOREIGN KEY (stadium_id) REFERENCES stadium(id))"
            },
            {
                "User": "Let's add a staff member named 'John Doe' as a 'Security Manager' for 'Cowboys Stadium'.",
                "Answer": "INSERT INTO stadium_staff (stadium_id, staff_name, role) VALUES ((SELECT id FROM stadium WHERE name = 'Cowboys Stadium'), 'John Doe', 'Security Manager')"
            },
            {
                "User": "I need to correct the role for 'John Doe', he is actually the 'Facility Manager'.",
                "Answer": "UPDATE stadium_staff SET role = 'Facility Manager' WHERE staff_name = 'John Doe'"
            },
            {
                "User": "Can you show me all the staff members for 'Cowboys Stadium'?",
                "Answer": "SELECT staff_name, role FROM stadium_staff WHERE stadium_id = (SELECT id FROM stadium WHERE name = 'Cowboys Stadium')"
            },
            {
                "User": "We need to track the hire date for stadium staff. Can you add a 'hire_date' column to the 'stadium_staff' table?",
                "Answer": "ALTER TABLE stadium_staff ADD COLUMN hire_date text"
            },
            {
                "User": "Update the 'hire_date' for 'John Doe' to 'January 1, 2020'.",
                "Answer": "UPDATE stadium_staff SET hire_date = 'January 1, 2020' WHERE staff_name = 'John Doe'"
            },
            {
                "User": "Let's create a view to show the total number of injuries per game.",
                "Answer": "CREATE VIEW game_injuries AS SELECT game_id, COUNT(*) AS total_injuries FROM injury_accident GROUP BY game_id"
            },
            {
                "User": "Which game had the highest number of injuries?",
                "Answer": "SELECT game_id FROM game_injuries ORDER BY total_injuries DESC LIMIT 1"
            }
        ]
    },
    {
        "idx": 745,
        "db": "debate",
        "interaction": [
            {
                "User": "Can we track the topics debated in each debate?",
                "Answer": "CREATE TABLE debate_topics (Debate_ID number, Topic text, PRIMARY KEY (Debate_ID, Topic))"
            },
            {
                "User": "Please add 'Economy' as a topic for the first debate.",
                "Answer": "INSERT INTO debate_topics (Debate_ID, Topic) VALUES (1, 'Economy')"
            },
            {
                "User": "Add 'Healthcare' and 'Education' as topics for the second debate.",
                "Answer": "INSERT INTO debate_topics (Debate_ID, Topic) VALUES (2, 'Healthcare'), (2, 'Education')"
            },
            {
                "User": "Who won the debate where 'Economy' was a topic?",
                "Answer": "SELECT If_Affirmative_Win FROM debate_people dp JOIN debate_topics dt ON dp.Debate_ID = dt.Debate_ID WHERE dt.Topic = 'Economy'"
            },
            {
                "User": "Update the number of audience for the second debate to 150.",
                "Answer": "UPDATE debate SET Num_of_Audience = 150 WHERE Debate_ID = 2"
            },
            {
                "User": "How many debates did each person participate in as affirmative?",
                "Answer": "SELECT Affirmative, COUNT(*) as Debates_Participated FROM debate_people GROUP BY Affirmative"
            },
            {
                "User": "What is the average age of Republican members?",
                "Answer": "SELECT AVG(Age) FROM people WHERE Party = 'Republican'"
            },
            {
                "User": "I want to record the result of debates as 'Win', 'Lose', or 'Tie'. Can we alter the table?",
                "Answer": "ALTER TABLE debate_people ADD COLUMN Result text"
            },
            {
                "User": "Set the result of the first debate as 'Win' for the affirmative side.",
                "Answer": "UPDATE debate_people SET Result = 'Win' WHERE Debate_ID = 1 AND If_Affirmative_Win = 'T'"
            },
            {
                "User": "For the debate on 'August 3, 2015', add a new participant from 'New York 3' as negative.",
                "Answer": "INSERT INTO debate_people (Debate_ID, Affirmative, Negative, If_Affirmative_Win) SELECT d.Debate_ID, dp.People_ID, 3, 'F' FROM debate d, people dp WHERE d.Date = 'August 3, 2015' AND dp.District = 'New York 1'"
            },
            {
                "User": "How many audience were there in debates where 'Education' was a topic?",
                "Answer": "SELECT SUM(d.Num_of_Audience) FROM debate d JOIN debate_topics dt ON d.Debate_ID = dt.Debate_ID WHERE dt.Topic = 'Education'"
            },
            {
                "User": "List all topics discussed in debates won by the affirmative side.",
                "Answer": "SELECT dt.Topic FROM debate_topics dt JOIN debate_people dp ON dt.Debate_ID = dp.Debate_ID WHERE dp.Result = 'Win'"
            },
            {
                "User": "Who are the Democratic members in 'New York 2' district?",
                "Answer": "SELECT Name FROM people WHERE District = 'New York 2' AND Party = 'Democratic'"
            },
            {
                "User": "Create a new table to track the debate judges with their names and ratings.",
                "Answer": "CREATE TABLE debate_judges (Judge_ID number PRIMARY KEY, Name text, Rating number)"
            },
            {
                "User": "Insert a judge named 'John Doe' with a rating of 8.5.",
                "Answer": "INSERT INTO debate_judges (Judge_ID, Name, Rating) VALUES (1, 'John Doe', 8.5)"
            },
            {
                "User": "Link judges to the debates they judged. We need a new table for that.",
                "Answer": "CREATE TABLE debate_judge_link (Debate_ID number, Judge_ID number, PRIMARY KEY (Debate_ID, Judge_ID))"
            },
            {
                "User": "Assign judge 'John Doe' to the first debate.",
                "Answer": "INSERT INTO debate_judge_link (Debate_ID, Judge_ID) VALUES (1, 1)"
            }
        ]
    },
    {
        "idx": 746,
        "db": "program_share",
        "interaction": [
            {
                "User": "Can we add a new program to the database?",
                "Answer": "INSERT INTO program (Program_ID, Name, Origin, Launch, Owner) VALUES (6, 'NewShow', 'Internet', 2023, 'WebTV Network')"
            },
            {
                "User": "What is the latest program that was added?",
                "Answer": "SELECT * FROM program ORDER BY Launch DESC LIMIT 1"
            },
            {
                "User": "I'd like to change the owner of 'NewShow' to 'Global Media'.",
                "Answer": "UPDATE program SET Owner = 'Global Media' WHERE Name = 'NewShow'"
            },
            {
                "User": "Now, can you show me all programs owned by 'Global Media'?",
                "Answer": "SELECT * FROM program WHERE Owner = 'Global Media'"
            },
            {
                "User": "Let's create a new table to track viewer feedback. Can you do that?",
                "Answer": "CREATE TABLE viewer_feedback (Feedback_ID number PRIMARY KEY, Program_ID number, Viewer_ID number, Comment text, Rating number)"
            },
            {
                "User": "Can we add feedback for 'NewShow' with a rating of 4.5?",
                "Answer": "INSERT INTO viewer_feedback (Feedback_ID, Program_ID, Viewer_ID, Comment, Rating) VALUES (1, 6, 123, 'Great show!', 4.5)"
            },
            {
                "User": "I realized we need to track the date of the feedback. Can you add that column?",
                "Answer": "ALTER TABLE viewer_feedback ADD COLUMN Date_of_feedback text"
            },
            {
                "User": "Let's update the feedback to include today's date.",
                "Answer": "UPDATE viewer_feedback SET Date_of_feedback = '2023-04-10' WHERE Feedback_ID = 1"
            },
            {
                "User": "Could you show me the average rating for each program?",
                "Answer": "SELECT Program_ID, AVG(Rating) as Average_Rating FROM viewer_feedback GROUP BY Program_ID"
            },
            {
                "User": "Can you create a report that shows program names with their average ratings?",
                "Answer": "SELECT p.Name, AVG(f.Rating) as Average_Rating FROM program p JOIN viewer_feedback f ON p.Program_ID = f.Program_ID GROUP BY p.Name"
            },
            {
                "User": "Is it possible to list all programs that have an average rating above 4.0?",
                "Answer": "SELECT p.Name FROM program p JOIN viewer_feedback f ON p.Program_ID = f.Program_ID GROUP BY p.Name HAVING AVG(f.Rating) > 4.0"
            },
            {
                "User": "We need to track the duration of each broadcast. Can you add a 'Duration' column to the 'broadcast' table?",
                "Answer": "ALTER TABLE broadcast ADD COLUMN Duration number"
            },
            {
                "User": "Let's set the duration of the morning broadcasts to 3 hours.",
                "Answer": "UPDATE broadcast SET Duration = 180 WHERE Time_of_day = 'Morning'"
            }
        ]
    },
    {
        "idx": 747,
        "db": "company_1",
        "interaction": [
            {
                "User": "I see. Could you tell me which department has the most employees?",
                "Answer": "SELECT Dname, count(*) as num_employees FROM employee JOIN department ON employee.Dno = department.Dnumber GROUP BY Dname ORDER BY num_employees DESC LIMIT 1"
            },
            {
                "User": "Now, how many employees are in the Research department after the new addition?",
                "Answer": "SELECT count(*) FROM employee WHERE Dno = 5"
            },
            {
                "User": "Can you update the salary of all employees in the Research department by a 10% increase?",
                "Answer": "UPDATE employee SET Salary = Salary * 1.10 WHERE Dno = 5"
            },
            {
                "User": "What is the new average salary in the Research department after the increase?",
                "Answer": "SELECT AVG(Salary) FROM employee WHERE Dno = 5"
            },
            {
                "User": "Could you create a new table to track employee bonuses?",
                "Answer": "CREATE TABLE employee_bonus (Ssn number PRIMARY KEY, Bonus_amount number)"
            },
            {
                "User": "Let's add a bonus record for an employee. John Smith with Ssn 123456789 gets a bonus of 2000.",
                "Answer": "INSERT INTO employee_bonus (Ssn, Bonus_amount) VALUES (123456789, 2000)"
            },
            {
                "User": "Can you tell me the total amount of bonuses we have given out?",
                "Answer": "SELECT SUM(Bonus_amount) FROM employee_bonus"
            },
            {
                "User": "I realized we don't have an email field for employees. Can we add an email column to the employee table?",
                "Answer": "ALTER TABLE employee ADD COLUMN Email text"
            },
            {
                "User": "Please update John Smith's email to 'john.smith@company1.com'.",
                "Answer": "UPDATE employee SET Email = 'john.smith@company1.com' WHERE Ssn = 123456789"
            },
            {
                "User": "Can we get a list of all employees along with their emails?",
                "Answer": "SELECT Fname, Lname, Email FROM employee"
            },
            {
                "User": "Do we have a table to track the locations of our projects?",
                "Answer": "SELECT * FROM dept_locations"
            }
        ]
    },
    {
        "idx": 748,
        "db": "cre_Doc_Control_Systems",
        "interaction": [
            {
                "User": "Can we add a new document type called 'Digital'?",
                "Answer": "INSERT INTO Ref_Document_Types (document_type_code, document_type_description) VALUES ('Digital', 'Digital Document')"
            },
            {
                "User": "How many document types do we have now?",
                "Answer": "SELECT count(*) FROM Ref_Document_Types"
            },
            {
                "User": "I need to update the address details for address ID 1 to 'USA'.",
                "Answer": "UPDATE Addresses SET address_details = 'USA' WHERE address_id = 1"
            },
            {
                "User": "What are the details of the address with ID 1 now?",
                "Answer": "SELECT address_details FROM Addresses WHERE address_id = 1"
            },
            {
                "User": "Let's create a new table for document reviews with columns for review_id, document_id, employee_id, and review_details.",
                "Answer": "CREATE TABLE Document_Reviews (review_id number PRIMARY KEY, document_id number, employee_id number, review_details text)"
            },
            {
                "User": "Add a new review for document ID 2 by employee ID 1 with the details 'Comprehensive and well-structured'.",
                "Answer": "INSERT INTO Document_Reviews (review_id, document_id, employee_id, review_details) VALUES (1, 2, 1, 'Comprehensive and well-structured')"
            },
            {
                "User": "How many documents have been reviewed by employee ID 1?",
                "Answer": "SELECT count(*) FROM Document_Reviews WHERE employee_id = 1"
            },
            {
                "User": "Can we add a column for review_date to the Document_Reviews table?",
                "Answer": "ALTER TABLE Document_Reviews ADD COLUMN review_date time"
            },
            {
                "User": "Set the review_date for review ID 1 to '2023-01-01 10:00:00'.",
                "Answer": "UPDATE Document_Reviews SET review_date = '2023-01-01 10:00:00' WHERE review_id = 1"
            },
            {
                "User": "Show me all the reviews that have been conducted.",
                "Answer": "SELECT * FROM Document_Reviews"
            },
            {
                "User": "I want to see a list of all documents along with their latest review details if they have been reviewed.",
                "Answer": "SELECT d.document_id, r.review_details FROM Documents d LEFT JOIN Document_Reviews r ON d.document_id = r.document_id ORDER BY r.review_date DESC"
            },
            {
                "User": "What's the average number of draft copies per document?",
                "Answer": "SELECT AVG(draft_count) FROM (SELECT document_id, count(copy_number) as draft_count FROM Draft_Copies GROUP BY document_id) subquery"
            }
        ]
    },
    {
        "idx": 749,
        "db": "workshop_paper",
        "interaction": [
            {
                "User": "How many submissions have been accepted?",
                "Answer": "SELECT COUNT(*) FROM Acceptance WHERE Result = 'Accepted'"
            },
            {
                "User": "Can we add a new workshop to the database?",
                "Answer": "INSERT INTO workshop (Workshop_ID, Date, Venue, Name) VALUES (7, 'September 10, 2023', 'Berlin, Germany', 'Innovate 2023')"
            },
            {
                "User": "Please update the venue for the workshop named 'ABC 2007'.",
                "Answer": "UPDATE workshop SET Venue = 'Paris, France' WHERE Name = 'ABC 2007'"
            },
            {
                "User": "I need to record the topics for each workshop. Can we add a new column for that?",
                "Answer": "ALTER TABLE workshop ADD COLUMN Topics text"
            },
            {
                "User": "Great, now set the topic for 'Innovate 2023' to 'Artificial Intelligence'.",
                "Answer": "UPDATE workshop SET Topics = 'Artificial Intelligence' WHERE Name = 'Innovate 2023'"
            },
            {
                "User": "Can you show me all workshops scheduled after 'August 21, 2007'?",
                "Answer": "SELECT * FROM workshop WHERE Date > 'August 21, 2007'"
            },
            {
                "User": "Let's create a new table to track participant attendance.",
                "Answer": "CREATE TABLE attendance (Participant_ID number, Workshop_ID number, Attended text, PRIMARY KEY (Participant_ID, Workshop_ID))"
            },
            {
                "User": "Add a record indicating that participant 101 attended workshop 7.",
                "Answer": "INSERT INTO attendance (Participant_ID, Workshop_ID, Attended) VALUES (101, 7, 'Yes')"
            },
            {
                "User": "I want to see a list of workshops along with their topics and whether they're in the USA.",
                "Answer": "SELECT Name, Topics, CASE WHEN Venue LIKE '%USA%' THEN 'Yes' ELSE 'No' END AS In_USA FROM workshop"
            },
            {
                "User": "Can we track the number of attendees for each workshop?",
                "Answer": "ALTER TABLE workshop ADD COLUMN Attendee_Count number"
            },
            {
                "User": "Update the attendee count for 'Innovate 2023' to 150.",
                "Answer": "UPDATE workshop SET Attendee_Count = 150 WHERE Name = 'Innovate 2023'"
            },
            {
                "User": "Show me all submissions with scores above 75 that were accepted.",
                "Answer": "SELECT s.Submission_ID, s.Author FROM submission s JOIN Acceptance a ON s.Submission_ID = a.Submission_ID WHERE s.Scores > 75 AND a.Result = 'Accepted'"
            },
            {
                "User": "I need to correct the score for 'Sherman Smith'. It should be 85.",
                "Answer": "UPDATE submission SET Scores = 85 WHERE Author = 'Sherman Smith'"
            },
            {
                "User": "List all workshops with their attendee count.",
                "Answer": "SELECT Name, Attendee_Count FROM workshop"
            }
        ]
    },
    {
        "idx": 750,
        "db": "assets_maintenance",
        "interaction": [
            {
                "User": "Can you add a new maintenance company to the database?",
                "Answer": "INSERT INTO Third_Party_Companies (company_id, company_type, company_name, company_address, other_company_details) VALUES (16, 'Maintenance Contractor', 'NewTech Solutions', '1234 Innovation Drive', 'USA')"
            },
            {
                "User": "Great, now show me all maintenance companies including the one just added.",
                "Answer": "SELECT * FROM Third_Party_Companies"
            },
            {
                "User": "I need to update the address for the company 'McDermott Group'.",
                "Answer": "UPDATE Third_Party_Companies SET company_address = '874 Conrad Creek Apt. 287' WHERE company_name = 'McDermott Group'"
            },
            {
                "User": "Could you create a table for tracking asset maintenance history?",
                "Answer": "CREATE TABLE Asset_Maintenance_History (maintenance_history_id number PRIMARY KEY, asset_id number, maintenance_date time, maintenance_notes text)"
            },
            {
                "User": "Now, I want to log a maintenance event for asset with ID 1 that occurred today.",
                "Answer": "INSERT INTO Asset_Maintenance_History (maintenance_history_id, asset_id, maintenance_date, maintenance_notes) VALUES (1, 1, CURRENT_DATE, 'Routine check-up')"
            },
            {
                "User": "Can you show me the maintenance history for asset ID 1?",
                "Answer": "SELECT * FROM Asset_Maintenance_History WHERE asset_id = 1"
            },
            {
                "User": "Let's add a column to track the engineer's ID for each maintenance event.",
                "Answer": "ALTER TABLE Asset_Maintenance_History ADD COLUMN engineer_id number"
            },
            {
                "User": "Now update the maintenance history to set engineer ID 2 for the event we just added.",
                "Answer": "UPDATE Asset_Maintenance_History SET engineer_id = 2 WHERE maintenance_history_id = 1"
            },
            {
                "User": "I'd like to see all maintenance events handled by engineer ID 2.",
                "Answer": "SELECT * FROM Asset_Maintenance_History WHERE engineer_id = 2"
            },
            {
                "User": "Can we add a new part to the inventory?",
                "Answer": "INSERT INTO Parts (part_id, part_name, chargeable_yn, chargeable_amount, other_part_details) VALUES (4, 'screen', '1', '15', '15 inch LCD screen')"
            },
            {
                "User": "Please link the new part to asset ID 2.",
                "Answer": "INSERT INTO Asset_Parts (asset_id, part_id) VALUES (2, 4)"
            },
            {
                "User": "Show me all parts associated with asset ID 2.",
                "Answer": "SELECT * FROM Asset_Parts WHERE asset_id = 2"
            },
            {
                "User": "I need to record a new fault in the log for asset ID 3.",
                "Answer": "INSERT INTO Fault_Log (fault_log_entry_id, asset_id, recorded_by_staff_id, fault_log_entry_datetime, fault_description, other_fault_details) VALUES (16, 3, 1, CURRENT_TIMESTAMP, 'screen malfunction', 'The screen is not displaying correctly')"
            }
        ]
    },
    {
        "idx": 751,
        "db": "product_catalog",
        "interaction": [
            {
                "User": "What is the average price in euros for products in the 'Chocolate' catalog?",
                "Answer": "SELECT AVG(price_in_euros) FROM catalog_contents INNER JOIN catalogs ON catalog_contents.catalog_level_number = catalogs.catalog_id WHERE catalogs.catalog_name = 'Chocolate'"
            },
            {
                "User": "Please add a new chocolate product named 'Dark Chocolate' with a stock number '88 dc', priced at $250.99, €210.83, and £180.75, and with dimensions of 2x2x0.5 inches.",
                "Answer": "INSERT INTO catalog_contents (catalog_entry_id, catalog_level_number, parent_entry_id, previous_entry_id, next_entry_id, catalog_entry_name, product_stock_number, price_in_dollars, price_in_euros, price_in_pounds, capacity, length, height, width) VALUES (16, 1, NULL, NULL, NULL, 'Dark Chocolate', '88 dc', 250.99, 210.83, 180.75, '1', '2', '0.5', '2')"
            },
            {
                "User": "Can we update the price of 'Cream Soda' to $400.00, €300.00, and £250.00?",
                "Answer": "UPDATE catalog_contents SET price_in_dollars = 400.00, price_in_euros = 300.00, price_in_pounds = 250.00 WHERE catalog_entry_name = 'Cream Soda'"
            },
            {
                "User": "I would like to add a new attribute for products called 'Weight' with data type 'number'.",
                "Answer": "ALTER TABLE catalog_contents ADD COLUMN weight number"
            },
            {
                "User": "Now set the weight of the 'Dark Chocolate' to 120 grams.",
                "Answer": "UPDATE catalog_contents SET weight = 120 WHERE catalog_entry_name = 'Dark Chocolate'"
            },
            {
                "User": "Create a new table for customer reviews with columns for review_id, product_id, customer_name, rating, and comments.",
                "Answer": "CREATE TABLE customer_reviews (review_id number PRIMARY KEY, product_id number, customer_name text, rating number, comments text)"
            },
            {
                "User": "Insert a customer review for the 'Dark Chocolate' product with a 5-star rating and a comment saying 'Best chocolate I've ever tasted!'.",
                "Answer": "INSERT INTO customer_reviews (review_id, product_id, customer_name, rating, comments) VALUES (1, 16, 'John Doe', 5, 'Best chocolate I''ve ever tasted!')"
            },
            {
                "User": "Can you give me a list of all products with their prices in dollars and their weights?",
                "Answer": "SELECT catalog_entry_name, price_in_dollars, weight FROM catalog_contents"
            },
            {
                "User": "Let's add a boolean attribute 'IsOrganic' to the catalog_contents table.",
                "Answer": "ALTER TABLE catalog_contents ADD COLUMN is_organic boolean"
            },
            {
                "User": "Update the 'Dark Chocolate' entry to mark it as organic.",
                "Answer": "UPDATE catalog_contents SET is_organic = TRUE WHERE catalog_entry_name = 'Dark Chocolate'"
            },
            {
                "User": "Show me all organic products in our catalog.",
                "Answer": "SELECT catalog_entry_name FROM catalog_contents WHERE is_organic = TRUE"
            },
            {
                "User": "We need to record the date when each product was added to the catalog. Please add a 'date_added' column to the catalog_contents table.",
                "Answer": "ALTER TABLE catalog_contents ADD COLUMN date_added timestamp"
            }
        ]
    },
    {
        "idx": 752,
        "db": "cre_Theme_park",
        "interaction": [
            {
                "User": "Can we track which hotels tourists prefer based on their visits?",
                "Answer": "ALTER TABLE Visitors ADD COLUMN preferred_hotel_id number"
            },
            {
                "User": "Please add a preferred hotel for tourist ID 164.",
                "Answer": "UPDATE Visitors SET preferred_hotel_id = 123 WHERE Tourist_ID = 164"
            },
            {
                "User": "How many tourists have set a preferred hotel?",
                "Answer": "SELECT count(*) FROM Visitors WHERE preferred_hotel_id IS NOT NULL"
            },
            {
                "User": "Can we get a list of hotels and their star ratings?",
                "Answer": "SELECT H.hotel_id, H.other_hotel_details, R.star_rating_description FROM Hotels H INNER JOIN Ref_Hotel_Star_Ratings R ON H.star_rating_code = R.star_rating_code"
            },
            {
                "User": "Let's add a new feature called 'Wi-Fi' to the features list.",
                "Answer": "INSERT INTO Features (Feature_ID, Feature_Details) VALUES (600, 'Wi-Fi')"
            },
            {
                "User": "Can you show me the updated list of features?",
                "Answer": "SELECT * FROM Features"
            },
            {
                "User": "Create a new table to track the maintenance history of attractions.",
                "Answer": "CREATE TABLE Maintenance_History (Maintenance_ID number PRIMARY KEY, Tourist_Attraction_ID number, Maintenance_Details text, Maintenance_Date time)"
            },
            {
                "User": "Record a maintenance event for the 'Flying Elephant' attraction.",
                "Answer": "INSERT INTO Maintenance_History (Maintenance_ID, Tourist_Attraction_ID, Maintenance_Details, Maintenance_Date) VALUES (1001, 5076, 'Routine checkup', '2023-03-15 10:00:00')"
            },
            {
                "User": "How many attractions have had maintenance this year?",
                "Answer": "SELECT count(DISTINCT Tourist_Attraction_ID) FROM Maintenance_History WHERE Maintenance_Date >= '2023-01-01'"
            },
            {
                "User": "Create a new table to associate staff with the hotels they work at.",
                "Answer": "CREATE TABLE Hotel_Staff (Hotel_Staff_ID number PRIMARY KEY, Staff_ID number, Hotel_ID number)"
            },
            {
                "User": "Assign staff member with ID 170 to hotel with ID 123.",
                "Answer": "INSERT INTO Hotel_Staff (Hotel_Staff_ID, Staff_ID, Hotel_ID) VALUES (5001, 170, 123)"
            },
            {
                "User": "How many staff members are assigned to each hotel?",
                "Answer": "SELECT Hotel_ID, count(Staff_ID) as Staff_Count FROM Hotel_Staff GROUP BY Hotel_ID"
            },
            {
                "User": "Can we add a new tourist attraction called 'Lunar Lagoon'?",
                "Answer": "INSERT INTO Tourist_Attractions (Tourist_Attraction_ID, Attraction_Type_Code, Location_ID, How_to_Get_There, Name, Description) VALUES (8001, '2', 333, 'shuttle', 'Lunar Lagoon', 'A tranquil water feature with a space theme')"
            },
            {
                "User": "I want to update the 'Lunar Lagoon' attraction to include opening hours from 9 AM to 9 PM.",
                "Answer": "UPDATE Tourist_Attractions SET Opening_Hours = '09:00-21:00' WHERE Name = 'Lunar Lagoon'"
            },
            {
                "User": "Let's add a new record for a street market called 'Spice Bazaar' with details.",
                "Answer": "INSERT INTO Street_Markets (Market_ID, Market_Details) VALUES (8002, 'A vibrant market selling exotic spices and herbs')"
            },
            {
                "User": "Can we see a list of all street markets now?",
                "Answer": "SELECT * FROM Street_Markets"
            },
            {
                "User": "Let's create a new column in the Locations table to store the number of attractions at each location.",
                "Answer": "ALTER TABLE Locations ADD COLUMN number_of_attractions number"
            },
            {
                "User": "Update the number of attractions for 'Astro Orbiter' location to 3.",
                "Answer": "UPDATE Locations SET number_of_attractions = 3 WHERE Location_Name = 'Astro Orbiter'"
            }
        ]
    },
    {
        "idx": 753,
        "db": "customers_campaigns_ecommerce",
        "interaction": [
            {
                "User": "Can we add a loyalty points column to the Customers table to track reward points?",
                "Answer": "ALTER TABLE Customers ADD COLUMN loyalty_points number DEFAULT 0;"
            },
            {
                "User": "Great, now please insert a new customer with the name 'Alice', using a credit card, with 200 loyalty points.",
                "Answer": "INSERT INTO Customers (customer_id, payment_method, customer_name, loyalty_points) VALUES (16, 'Credit Card', 'Alice', 200);"
            },
            {
                "User": "I would like to update Wendell's loyalty points to 150. Can you do that?",
                "Answer": "UPDATE Customers SET loyalty_points = 150 WHERE customer_name = 'Wendell';"
            },
            {
                "User": "Can we create a new table for customer feedback with columns for feedback_id, customer_id, comments, and a satisfaction rating?",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, comments text, satisfaction_rating number);"
            },
            {
                "User": "Please insert a feedback record for customer with ID 1, stating 'Very satisfied with the service', and a satisfaction rating of 5.",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, comments, satisfaction_rating) VALUES (1, 1, 'Very satisfied with the service', 5);"
            },
            {
                "User": "Now, can we see a list of all customers with their loyalty points and satisfaction ratings?",
                "Answer": "SELECT T1.customer_name, T1.loyalty_points, T2.satisfaction_rating FROM Customers AS T1 LEFT JOIN Customer_Feedback AS T2 ON T1.customer_id = T2.customer_id;"
            },
            {
                "User": "Let's update the product category for 'Coffee Bean' to 'Beverages'.",
                "Answer": "UPDATE Products SET product_category = 'Beverages' WHERE product_name = 'Coffee Bean';"
            },
            {
                "User": "Can you show me all the products in the 'Beverages' category now?",
                "Answer": "SELECT product_name FROM Products WHERE product_category = 'Beverages';"
            },
            {
                "User": "I'd like to add a new 'Electronics' product called 'Smart Watch'.",
                "Answer": "INSERT INTO Products (product_id, product_category, product_name) VALUES (16, 'Electronics', 'Smart Watch');"
            },
            {
                "User": "Can we see a list of all orders placed by customers who have a 'No Response' outcome for mailshots?",
                "Answer": "SELECT T3.order_id, T3.order_status_code FROM Mailshot_Customers AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id JOIN Customer_Orders AS T3 ON T2.customer_id = T3.customer_id WHERE T1.outcome_code = 'No Response';"
            }
        ]
    },
    {
        "idx": 754,
        "db": "browser_web",
        "interaction": [
            {
                "User": "Can you add a new accelerator called 'Speedster' that is compatible with Safari since 2000?",
                "Answer": [
                    "INSERT INTO Web_client_accelerator (id, name, Operating_system, Client, Connection) VALUES (20, 'Speedster', 'Various', 'user', 'Broadband');",
                    "INSERT INTO accelerator_compatible_browser (accelerator_id, browser_id, compatible_since_year) VALUES (20, 3, 2000)"
                ]
            },
            {
                "User": "What is the market share of browsers that are compatible with 'Speedster'?",
                "Answer": "SELECT T3.market_share FROM browser AS T3 JOIN accelerator_compatible_browser AS T2 ON T3.id = T2.browser_id JOIN Web_client_accelerator AS T1 ON T2.accelerator_id = T1.id WHERE T1.name = 'Speedster'"
            },
            {
                "User": "Please update the market share of Internet Explorer to 25.5.",
                "Answer": "UPDATE browser SET market_share = 25.5 WHERE name = 'Internet Explorer'"
            },
            {
                "User": "Can you show me the updated market share of all browsers?",
                "Answer": "SELECT name, market_share FROM browser"
            },
            {
                "User": "I'd like to add a new column 'last_update_year' to the 'Web_client_accelerator' table to track the last update year for each accelerator.",
                "Answer": "ALTER TABLE Web_client_accelerator ADD COLUMN last_update_year number"
            },
            {
                "User": "Now set the 'last_update_year' for 'CACHEbox' to 2021.",
                "Answer": "UPDATE Web_client_accelerator SET last_update_year = 2021 WHERE name = 'CACHEbox'"
            },
            {
                "User": "Which accelerators have been updated after 2019?",
                "Answer": "SELECT name FROM Web_client_accelerator WHERE last_update_year > 2019"
            },
            {
                "User": "Create a new table 'user_feedback' with columns 'id', 'accelerator_name', 'rating' (out of 5), and 'comment'.",
                "Answer": "CREATE TABLE user_feedback (id number PRIMARY KEY, accelerator_name text, rating number, comment text)"
            },
            {
                "User": "Insert a user feedback for 'Fasterfox' with a rating of 4 and a positive comment.",
                "Answer": "INSERT INTO user_feedback (id, accelerator_name, rating, comment) VALUES (1, 'Fasterfox', 4, 'Great performance on multiple devices')"
            },
            {
                "User": "Can you give me the average rating of all accelerators from the user feedback?",
                "Answer": "SELECT AVG(rating) FROM user_feedback"
            },
            {
                "User": "Let's add a new browser called 'Edge' with a market share of 5.6, with id is 4",
                "Answer": "INSERT INTO browser (id, name, market_share) VALUES (5, 'Edge', 5.6)"
            },
            {
                "User": "Which browsers have a market share of less than 10?",
                "Answer": "SELECT name FROM browser WHERE market_share < 10"
            },
            {
                "User": "Can you show me all the accelerators that are compatible with 'Edge'?",
                "Answer": "SELECT T1.name FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T3.name = 'Edge'"
            },
            {
                "User": "How many accelerators are compatible with browsers with a market share of more than 10?",
                "Answer": "SELECT COUNT(DISTINCT T1.id) FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T3.market_share > 10"
            },
            {
                "User": "Update the 'Connection' type for 'CProxy' to include 'Fiber'.",
                "Answer": "UPDATE Web_client_accelerator SET Connection = 'up to 756kbit/s, Fiber' WHERE name = 'CProxy'"
            }
        ]
    },
    {
        "idx": 755,
        "db": "game_1",
        "interaction": [
            {
                "User": "Can you add a new student record for John Doe, a 20-year-old male majoring in 500 with advisor 2211 from city code 'NYC'?",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 500, 2211, 'NYC')"
            },
            {
                "User": "How many students are now in the database after adding John Doe?",
                "Answer": "SELECT COUNT(*) FROM Student"
            },
            {
                "User": "I'd like to update Sheila Jones's major to 700. Can you do that?",
                "Answer": "UPDATE Student SET Major = 700 WHERE LName = 'Jones' AND Fname = 'Shiela'"
            },
            {
                "User": "Can you show me the updated record of Sheila Jones?",
                "Answer": "SELECT * FROM Student WHERE LName = 'Jones' AND Fname = 'Shiela'"
            },
            {
                "User": "What is the total number of hours played by John Doe across all games?",
                "Answer": "SELECT SUM(Hours_Played) FROM Plays_Games WHERE StuID = 1004"
            },
            {
                "User": "Can we add a new column 'YearJoined' to the Student table for the year they joined the database?",
                "Answer": "ALTER TABLE Student ADD YearJoined number"
            },
            {
                "User": "Please set the 'YearJoined' for all current students to 2022.",
                "Answer": "UPDATE Student SET YearJoined = 2022"
            },
            {
                "User": "Can you create a new table for 'Game_Reviews' with columns 'ReviewID', 'GameID', 'StuID', 'Rating', and 'Comment'?",
                "Answer": "CREATE TABLE Game_Reviews (ReviewID number PRIMARY KEY, GameID number, StuID number, Rating number, Comment text)"
            },
            {
                "User": "Add a review for the game 'RNG Stone' by Linda Smith with a rating of 4 and a comment 'Challenging and fun'.",
                "Answer": "INSERT INTO Game_Reviews (ReviewID, GameID, StuID, Rating, Comment) VALUES (1, 1, 1001, 4, 'Challenging and fun')"
            },
            {
                "User": "What is the average rating for each game type based on the reviews?",
                "Answer": "SELECT T2.GType, AVG(T1.Rating) FROM Game_Reviews AS T1 JOIN Video_Games AS T2 ON T1.GameID = T2.GameID GROUP BY T2.GType"
            },
            {
                "User": "Can you show me all the reviews that have a rating of 5?",
                "Answer": "SELECT * FROM Game_Reviews WHERE Rating = 5"
            },
            {
                "User": "Update John Doe's city code to 'LAX' since he has moved to Los Angeles.",
                "Answer": "UPDATE Student SET city_code = 'LAX' WHERE LName = 'Doe' AND Fname = 'John'"
            },
            {
                "User": "Show me the list of students who are on a sports scholarship.",
                "Answer": "SELECT * FROM Student WHERE StuID IN (SELECT StuID FROM SportsInfo WHERE OnScholarship = 'Y')"
            },
            {
                "User": "Can we track the favorite game for each student by adding a 'FavoriteGameID' column to the Student table?",
                "Answer": "ALTER TABLE Student ADD FavoriteGameID number"
            },
            {
                "User": "Set 'RNG Stone' as Linda Smith's favorite game.",
                "Answer": "UPDATE Student SET FavoriteGameID = (SELECT GameID FROM Video_Games WHERE GName = 'RNG Stone') WHERE LName = 'Smith' AND Fname = 'Linda'"
            }
        ]
    },
    {
        "idx": 756,
        "db": "aircraft",
        "interaction": [
            {
                "User": "Can we add a new column to track the pilot's nationality in the pilot table?",
                "Answer": "ALTER TABLE pilot ADD COLUMN Nationality text;"
            },
            {
                "User": "Now, please set the nationality for Prof. Zackery Collins to 'USA'.",
                "Answer": "UPDATE pilot SET Nationality = 'USA' WHERE Name = 'Prof. Zackery Collins';"
            },
            {
                "User": "What is the nationality of Prof. Zackery Collins?",
                "Answer": "SELECT Nationality FROM pilot WHERE Name = 'Prof. Zackery Collins';"
            },
            {
                "User": "I would like to record a new aircraft. Can you add 'Airbus A320' with the description 'Narrow-body airliner', max gross weight '174,200 lb', total disk area '1,320 ft²', and max disk loading '4.5 lb/ft²' to the aircraft table?",
                "Answer": "INSERT INTO aircraft (Aircraft_ID, Aircraft, Description, Max_Gross_Weight, Total_disk_area, Max_disk_Loading) VALUES (6, 'Airbus A320', 'Narrow-body airliner', '174,200 lb', '1,320 ft²', '4.5 lb/ft²');"
            },
            {
                "User": "List all aircraft with a max gross weight over 10,000 lb.",
                "Answer": "SELECT * FROM aircraft WHERE CAST(REPLACE(Max_Gross_Weight, ' lb', '') AS number) > 10000;"
            },
            {
                "User": "We need to update the total passengers count for London Heathrow to 68 million. Can you do that?",
                "Answer": "UPDATE airport SET Total_Passengers = 68000000 WHERE Airport_Name = 'London Heathrow';"
            },
            {
                "User": "Show me the top 3 airports by total passengers after the update.",
                "Answer": "SELECT * FROM airport ORDER BY Total_Passengers DESC LIMIT 3;"
            },
            {
                "User": "Can we create a new table to track maintenance records for aircraft?",
                "Answer": "CREATE TABLE maintenance (Record_ID number PRIMARY KEY, Aircraft_ID number, Maintenance_Date text, Description text);"
            },
            {
                "User": "Let's log a maintenance record for the Robinson R-22. It had a routine check on April 1st, 2023. The description should read 'Annual routine maintenance'.",
                "Answer": "INSERT INTO maintenance (Record_ID, Aircraft_ID, Maintenance_Date, Description) VALUES (1, 1, 'April 1st, 2023', 'Annual routine maintenance');"
            },
            {
                "User": "Which aircraft had maintenance on 'April 1st, 2023'?",
                "Answer": "SELECT Aircraft_ID FROM maintenance WHERE Maintenance_Date = 'April 1st, 2023';"
            },
            {
                "User": "Add a new match that took place in 'Central Park, New York' in the USA on 'June 5th' with the fastest qualifying time by 'Pilot 2' and the winning aircraft was '3'.",
                "Answer": "INSERT INTO match (Round, Location, Country, Date, Fastest_Qualifying, Winning_Pilot, Winning_Aircraft) VALUES (8, 'Central Park, New York', 'USA', 'June 5th', '2', '2', '3');"
            },
            {
                "User": "Show me all matches where the winning aircraft was the CH-47D Chinook.",
                "Answer": "SELECT * FROM match WHERE Winning_Aircraft = (SELECT Aircraft_ID FROM aircraft WHERE Aircraft = 'CH-47D Chinook');"
            },
            {
                "User": "I'd like to know the number of international passengers for London Gatwick.",
                "Answer": "SELECT International_Passengers FROM airport WHERE Airport_Name = 'London Gatwick';"
            },
            {
                "User": "Can we track the type of runways at each airport? We need to add a new column 'Runway_Type' to the airport table.",
                "Answer": "ALTER TABLE airport ADD COLUMN Runway_Type text;"
            },
            {
                "User": "Set the runway type for 'London Heathrow' to 'Asphalt'.",
                "Answer": "UPDATE airport SET Runway_Type = 'Asphalt' WHERE Airport_Name = 'London Heathrow';"
            }
        ]
    },
    {
        "idx": 757,
        "db": "program_share",
        "interaction": [
            {
                "User": "How many channels do we have?",
                "Answer": "SELECT COUNT(*) FROM channel"
            },
            {
                "User": "Can you add a new channel to the list?",
                "Answer": "INSERT INTO channel (Channel_ID, Name, Owner, Share_in_percent, Rating_in_percent) VALUES (11, 'New Channel', 'NC Owner', 2.5, 0.25)"
            },
            {
                "User": "Update the share percentage of 'New Channel' to 3.0",
                "Answer": "UPDATE channel SET Share_in_percent = 3.0 WHERE Name = 'New Channel'"
            },
            {
                "User": "Show the updated share percentage of 'New Channel'",
                "Answer": "SELECT Share_in_percent FROM channel WHERE Name = 'New Channel'"
            },
            {
                "User": "Create a table to track viewer feedback on programs",
                "Answer": "CREATE TABLE program_feedback (Feedback_ID number PRIMARY KEY, Program_ID number, Feedback_text text, Rating number)"
            },
            {
                "User": "Add feedback for the program with ID 1",
                "Answer": "INSERT INTO program_feedback (Feedback_ID, Program_ID, Feedback_text, Rating) VALUES (1, 1, 'Great show!', 5)"
            },
            {
                "User": "Show me all feedback with a rating of 5",
                "Answer": "SELECT * FROM program_feedback WHERE Rating = 5"
            },
            {
                "User": "I want to track the duration of each broadcast. Can we add a column for that?",
                "Answer": "ALTER TABLE broadcast ADD COLUMN Duration_minutes number"
            },
            {
                "User": "Set the duration of the morning broadcast of program 1 to 45 minutes",
                "Answer": "UPDATE broadcast SET Duration_minutes = 45 WHERE Program_ID = 1 AND Time_of_day = 'Morning'"
            },
            {
                "User": "List all broadcasts longer than 30 minutes",
                "Answer": "SELECT * FROM broadcast WHERE Duration_minutes > 30"
            },
            {
                "User": "What is the average share percentage of all channels?",
                "Answer": "SELECT AVG(Share_in_percent) FROM channel"
            },
            {
                "User": "Can you show me the total number of broadcasts for each program?",
                "Answer": "SELECT Program_ID, COUNT(*) AS Total_Broadcasts FROM broadcast GROUP BY Program_ID"
            },
            {
                "User": "List the names of programs with more than one broadcast",
                "Answer": "SELECT t1.Name FROM program AS t1 JOIN (SELECT Program_ID, COUNT(*) AS Total_Broadcasts FROM broadcast GROUP BY Program_ID HAVING COUNT(*) > 1) AS t2 ON t1.Program_ID = t2.Program_ID"
            },
            {
                "User": "Which program has the highest share percentage according to the latest data?",
                "Answer": "SELECT t1.Name FROM program AS t1 JOIN broadcast_share AS t2 ON t1.Program_ID = t2.Program_ID ORDER BY t2.Share_in_percent DESC LIMIT 1"
            },
            {
                "User": "How can we track the change in share percentage over time? Can we add a column for that?",
                "Answer": "ALTER TABLE broadcast_share ADD COLUMN Previous_Share_in_percent number"
            },
            {
                "User": "Record that the previous share percentage of program 1 on '01,May' was 2.9",
                "Answer": "UPDATE broadcast_share SET Previous_Share_in_percent = 2.9 WHERE Program_ID = 1 AND Date = '01,May'"
            }
        ]
    },
    {
        "idx": 758,
        "db": "film_rank",
        "interaction": [
            {
                "User": "Can we track the budget for each film as well?",
                "Answer": "ALTER TABLE film ADD COLUMN Budget_in_dollar number"
            },
            {
                "User": "Add the budget information for 'ET the Extra-Terrestrial', which had a budget of 10.5 million dollars.",
                "Answer": "UPDATE film SET Budget_in_dollar = 10500000 WHERE Title = 'ET the Extra-Terrestrial'"
            },
            {
                "User": "What is the budget for the film titled 'ET the Extra-Terrestrial'?",
                "Answer": "SELECT Budget_in_dollar FROM film WHERE Title = 'ET the Extra-Terrestrial'"
            },
            {
                "User": "Create a new table to record awards received by films.",
                "Answer": "CREATE TABLE film_awards (Award_ID number PRIMARY KEY, Film_ID number, Award_Name text, Year number)"
            },
            {
                "User": "Insert a record of 'ET the Extra-Terrestrial' winning the 'Best Original Score' Oscar in 1983.",
                "Answer": "INSERT INTO film_awards (Award_ID, Film_ID, Award_Name, Year) VALUES (1, 1, 'Best Original Score', 1983)"
            },
            {
                "User": "List all the awards won by the film with Film_ID 1.",
                "Answer": "SELECT Award_Name, Year FROM film_awards WHERE Film_ID = 1"
            },
            {
                "User": "How many films have an estimated high market value greater than 50,000 in the USA?",
                "Answer": "SELECT COUNT(*) FROM film_market_estimation AS fme JOIN market AS m ON fme.Market_ID = m.Market_ID WHERE m.Country = 'USA' AND fme.High_Estimate > 50000"
            },
            {
                "User": "Update the number of cities for China to 550.",
                "Answer": "UPDATE market SET Number_cities = 550 WHERE Country = 'China'"
            },
            {
                "User": "How many cities are there in the Chinese market now?",
                "Answer": "SELECT Number_cities FROM market WHERE Country = 'China'"
            },
            {
                "User": "I want to add a column to track the main actor for each film.",
                "Answer": "ALTER TABLE film ADD COLUMN Main_Actor text"
            },
            {
                "User": "Set 'Henry Thomas' as the main actor for 'ET the Extra-Terrestrial'.",
                "Answer": "UPDATE film SET Main_Actor = 'Henry Thomas' WHERE Title = 'ET the Extra-Terrestrial'"
            },
            {
                "User": "Who is the main actor in the film 'ET the Extra-Terrestrial'?",
                "Answer": "SELECT Main_Actor FROM film WHERE Title = 'ET the Extra-Terrestrial'"
            }
        ]
    },
    {
        "idx": 759,
        "db": "cinema",
        "interaction": [
            {
                "User": "I want to add a new film called 'The Last Stand' directed by 'John Smith' that aired on 'March 12, 2023'.",
                "Answer": "INSERT INTO film (Film_ID, Rank_in_series, Number_in_season, Title, Directed_by, Original_air_date) VALUES (6, 29, 4, 'The Last Stand', 'John Smith', 'March 12, 2023')"
            },
            {
                "User": "Can you show me all the films directed by John Smith?",
                "Answer": "SELECT * FROM film WHERE Directed_by = 'John Smith'"
            },
            {
                "User": "I'd like to update the opening year of the 'Codling' cinema to 2011.",
                "Answer": "UPDATE cinema SET Openning_year = 2011 WHERE Name = 'Codling'"
            },
            {
                "User": "What is the capacity of the cinema named 'Codling' now?",
                "Answer": "SELECT Capacity FROM cinema WHERE Name = 'Codling'"
            },
            {
                "User": "Let's schedule 'The Last Stand' to show in the 'Dublin Array' cinema on 'April 1' with 4 showtimes per day at a price of 10.99.",
                "Answer": "INSERT INTO schedule (Cinema_ID, Film_ID, Date, Show_times_per_day, Price) VALUES (3, 6, 'April 1', 4, 10.99)"
            },
            {
                "User": "How many films are showing in 'County Dublin' on 'April 1'?",
                "Answer": "SELECT count(*) FROM schedule JOIN cinema ON schedule.Cinema_ID = cinema.Cinema_ID WHERE cinema.Location = 'County Dublin' AND schedule.Date = 'April 1'"
            },
            {
                "User": "I want to add a new column 'Genre' to the film table to categorize each film.",
                "Answer": "ALTER TABLE film ADD COLUMN Genre text"
            },
            {
                "User": "Please categorize 'The Last Stand' as an 'Action' film.",
                "Answer": "UPDATE film SET Genre = 'Action' WHERE Title = 'The Last Stand'"
            },
            {
                "User": "Can we get a list of all action films?",
                "Answer": "SELECT * FROM film WHERE Genre = 'Action'"
            },
            {
                "User": "I'd like to create a new table for film reviews with columns for review ID, film ID, review text, and rating.",
                "Answer": "CREATE TABLE reviews (Review_ID number PRIMARY KEY, Film_ID number, Review_text text, Rating number)"
            },
            {
                "User": "Let's add a review for 'The Last Stand' with a rating of 8.5 out of 10.",
                "Answer": "INSERT INTO reviews (Review_ID, Film_ID, Review_text, Rating) VALUES (1, 6, 'Great action sequences and compelling storytelling.', 8.5)"
            },
            {
                "User": "What's the average rating for all films directed by 'Bill Schreiner'?",
                "Answer": "SELECT AVG(Rating) FROM reviews JOIN film ON reviews.Film_ID = film.Film_ID WHERE film.Directed_by = 'Bill Schreiner'"
            },
            {
                "User": "I need to correct the title of film ID 6 to 'The Final Stand'.",
                "Answer": "UPDATE film SET Title = 'The Final Stand' WHERE Film_ID = 6"
            }
        ]
    },
    {
        "idx": 760,
        "db": "party_host",
        "interaction": [
            {
                "User": "Can we add a new column to track the duration of each party?",
                "Answer": "ALTER TABLE party ADD COLUMN Duration_days number;"
            },
            {
                "User": "What is the duration of the 'Spring' party?",
                "Answer": "SELECT Duration_days FROM party WHERE Party_Theme = 'Spring';"
            },
            {
                "User": "Please update the duration of the 'Spring' party to 3 days.",
                "Answer": "UPDATE party SET Duration_days = 3 WHERE Party_Theme = 'Spring';"
            },
            {
                "User": "How many parties have a duration longer than 2 days?",
                "Answer": "SELECT COUNT(*) FROM party WHERE Duration_days > 2;"
            },
            {
                "User": "Insert a new party with ID 9, theme 'Summer Fiesta', location 'Sunny Beach', first year '2021', last year '2021', number of hosts 15, and duration 2 days.",
                "Answer": "INSERT INTO party (Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts, Duration_days) VALUES (9, 'Summer Fiesta', 'Sunny Beach', '2021', '2021', 15, 2);"
            },
            {
                "User": "Can we track if a host is currently active?",
                "Answer": "ALTER TABLE host ADD COLUMN IsActive boolean;"
            },
            {
                "User": "Set the host with ID 1 as active.",
                "Answer": "UPDATE host SET IsActive = TRUE WHERE Host_ID = 1;"
            },
            {
                "User": "How many hosts are currently active?",
                "Answer": "SELECT COUNT(*) FROM host WHERE IsActive = TRUE;"
            },
            {
                "User": "Create a new table to track the feedback of each party with columns for Party_ID, Host_ID, Rating out of 5, and Feedback text.",
                "Answer": "CREATE TABLE party_feedback (Party_ID number, Host_ID number, Rating number, Feedback text, PRIMARY KEY (Party_ID, Host_ID));"
            },
            {
                "User": "Add feedback for the 'Spring' party with a rating of 4 and positive feedback from the main host.",
                "Answer": "INSERT INTO party_feedback (Party_ID, Host_ID, Rating, Feedback) VALUES ((SELECT Party_ID FROM party WHERE Party_Theme = 'Spring'), (SELECT Host_ID FROM party_host WHERE Party_ID = (SELECT Party_ID FROM party WHERE Party_Theme = 'Spring') AND Is_Main_in_Charge = 'T'), 4, 'Great success!');"
            },
            {
                "User": "What's the average rating for all parties?",
                "Answer": "SELECT AVG(Rating) FROM party_feedback;"
            }
        ]
    },
    {
        "idx": 761,
        "db": "twitter_1",
        "interaction": [
            {
                "User": "Can you add a new column to user_profiles to track the number of tweets each user has made?",
                "Answer": "ALTER TABLE user_profiles ADD COLUMN tweet_count number"
            },
            {
                "User": "Update the new tweet_count column with the current number of tweets for each user.",
                "Answer": "UPDATE user_profiles SET tweet_count = (SELECT COUNT(*) FROM tweets WHERE tweets.uid = user_profiles.uid)"
            },
            {
                "User": "Which user has tweeted the most?",
                "Answer": "SELECT name FROM user_profiles ORDER BY tweet_count DESC LIMIT 1"
            },
            {
                "User": "I want to follow Iron Man. Can you insert a record for that?",
                "Answer": "INSERT INTO follows (f1, f2) VALUES ((SELECT uid FROM user_profiles WHERE name = 'Mary'), (SELECT uid FROM user_profiles WHERE name = 'Iron Man'))"
            },
            {
                "User": "Iron Man just tweeted 'Excited about the new Stark Industries project!'. Add this tweet.",
                "Answer": "INSERT INTO tweets (id, uid, text, createdate) VALUES ((SELECT MAX(id) + 1 FROM tweets), (SELECT uid FROM user_profiles WHERE name = 'Iron Man'), 'Excited about the new Stark Industries project!', CURRENT_TIMESTAMP)"
            },
            {
                "User": "How many followers does Iron Man have now?",
                "Answer": "SELECT followers FROM user_profiles WHERE name = 'Iron Man'"
            },
            {
                "User": "Create a new table to log user login activities with fields for uid, login_time, and ip_address.",
                "Answer": "CREATE TABLE user_logins (uid number, login_time time, ip_address text, PRIMARY KEY (uid, login_time))"
            },
            {
                "User": "Log a new sign-in for Mary from IP address 192.168.1.5.",
                "Answer": "INSERT INTO user_logins (uid, login_time, ip_address) VALUES ((SELECT uid FROM user_profiles WHERE name = 'Mary'), CURRENT_TIMESTAMP, '192.168.1.5')"
            },
            {
                "User": "Who was the last user to log in?",
                "Answer": "SELECT name FROM user_profiles JOIN user_logins ON user_profiles.uid = user_logins.uid ORDER BY login_time DESC LIMIT 1"
            },
            {
                "User": "Can we track the locations where users have logged in from? Add a column for location to the user_logins table.",
                "Answer": "ALTER TABLE user_logins ADD COLUMN location text"
            },
            {
                "User": "Update the location for Mary's last login to 'New Haven'.",
                "Answer": "UPDATE user_logins SET location = 'New Haven' WHERE uid = (SELECT uid FROM user_profiles WHERE name = 'Mary') AND login_time = (SELECT MAX(login_time) FROM user_logins WHERE uid = (SELECT uid FROM user_profiles WHERE name = 'Mary'))"
            }
        ]
    },
    {
        "idx": 762,
        "db": "swimming",
        "interaction": [
            {
                "User": "Can you tell me which events took place in Spain?",
                "Answer": "SELECT event.Name FROM event JOIN stadium ON event.Stadium_ID = stadium.ID WHERE stadium.Country = 'Spain'"
            },
            {
                "User": "I'd like to add a new swimmer to the database. Their name is Alex Morgan, nationality is USA, and their best 100 meter time is 56.78. Could you do that?",
                "Answer": "INSERT INTO swimmer (name, Nationality, meter_100) VALUES ('Alex Morgan', 'USA', 56.78)"
            },
            {
                "User": "Great, now can you update Alex Morgan's 200 meter time to 1:53.45?",
                "Answer": "UPDATE swimmer SET meter_200 = '1:53.45' WHERE name = 'Alex Morgan'"
            },
            {
                "User": "Let's add a new event called 'Euro Championship' that took place in stadium ID 3 in the year 2020.",
                "Answer": "INSERT INTO event (Name, Stadium_ID, Year) VALUES ('Euro Championship', 3, '2020')"
            },
            {
                "User": "I realized we don't have a column for the coach's name in the swimmer table. Can we add that?",
                "Answer": "ALTER TABLE swimmer ADD COLUMN coach_name text"
            },
            {
                "User": "Now, please add 'John Smith' as the coach for Alex Morgan.",
                "Answer": "UPDATE swimmer SET coach_name = 'John Smith' WHERE name = 'Alex Morgan'"
            },
            {
                "User": "Can you create a new table for swimmer's diet plans with columns ID, Swimmer_ID, Diet_Type, and Start_Date?",
                "Answer": "CREATE TABLE diet_plan (ID number PRIMARY KEY, Swimmer_ID number, Diet_Type text, Start_Date text)"
            },
            {
                "User": "Insert a diet plan for Swimmer ID 7 with Diet_Type 'High Protein' starting from '2023-01-01'.",
                "Answer": "INSERT INTO diet_plan (Swimmer_ID, Diet_Type, Start_Date) VALUES (7, 'High Protein', '2023-01-01')"
            },
            {
                "User": "Which swimmers have a record of 'Win' in the 'FINA' event?",
                "Answer": "SELECT swimmer.name FROM swimmer JOIN record ON swimmer.ID = record.Swimmer_ID JOIN event ON record.Event_ID = event.ID WHERE record.Result = 'Win' AND event.Name = 'FINA'"
            },
            {
                "User": "Can we see the list of swimmers along with their coaches?",
                "Answer": "SELECT name, coach_name FROM swimmer WHERE coach_name IS NOT NULL"
            }
        ]
    },
    {
        "idx": 763,
        "db": "behavior_monitoring",
        "interaction": [
            {
                "User": "What is the average rental cost for student accommodations?",
                "Answer": "SELECT AVG(monthly_rental) AS average_rental FROM Student_Addresses"
            },
            {
                "User": "Add a new detention type for weekend detention.",
                "Answer": "INSERT INTO Ref_Detention_Type (detention_type_code, detention_type_description) VALUES ('WEEKEND', 'Weekend detention')"
            },
            {
                "User": "Update the email address for student Emma Rohan.",
                "Answer": "UPDATE Students SET email_address = 'emma.rohan@university.edu' WHERE first_name = 'Emma' AND last_name = 'Rohan'"
            },
            {
                "User": "Create a new table to log student visitations to the campus health center.",
                "Answer": "CREATE TABLE Health_Center_Visits (visit_id number PRIMARY KEY, student_id number, date_of_visit time, reason_for_visit text, treatment_given text)"
            },
            {
                "User": "Log a new visit for student Rhea Bergnaum to the health center for a flu shot.",
                "Answer": "INSERT INTO Health_Center_Visits (visit_id, student_id, date_of_visit, reason_for_visit, treatment_given) VALUES (1, 3, CURRENT_TIMESTAMP, 'Flu shot', 'Vaccination administered')"
            },
            {
                "User": "Add a new column to track the follow-up date for the health center visits.",
                "Answer": "ALTER TABLE Health_Center_Visits ADD COLUMN follow_up_date time"
            },
            {
                "User": "What are the details of the last incident involving student Emma Rohan?",
                "Answer": "SELECT * FROM Behavior_Incident WHERE student_id = (SELECT student_id FROM Students WHERE first_name = 'Emma' AND last_name = 'Rohan') ORDER BY date_incident_start DESC LIMIT 1"
            },
            {
                "User": "The address for Emma Rohan has changed. Update her address to '123 University Ave, College Town, CT 12345'.",
                "Answer": "UPDATE Addresses SET line_1 = '123 University Ave', city = 'College Town', zip_postcode = '12345', state_province_county = 'CT' WHERE address_id = (SELECT address_id FROM Students WHERE first_name = 'Emma' AND last_name = 'Rohan')"
            },
            {
                "User": "Create a new table to track extracurricular activities for students.",
                "Answer": "CREATE TABLE Extracurricular_Activities (activity_id number PRIMARY KEY, activity_name text, description text)"
            },
            {
                "User": "Add a new extracurricular activity called 'Robotics Club'.",
                "Answer": "INSERT INTO Extracurricular_Activities (activity_id, activity_name, description) VALUES (1, 'Robotics Club', 'A club for students interested in robotics and engineering')"
            }
        ]
    },
    {
        "idx": 764,
        "db": "mountain_photos",
        "interaction": [
            {
                "User": "What is the highest mountain in the database?",
                "Answer": "SELECT name FROM mountain ORDER BY Height DESC LIMIT 1"
            },
            {
                "User": "Can you add a new mountain record for 'Mount Fictional' with a height of 4500 meters and a prominence of 2000 meters located in 'Fantasyland'?",
                "Answer": "INSERT INTO mountain (name, Height, Prominence, Range, Country) VALUES ('Mount Fictional', 4500, 2000, 'Imaginary Range', 'Fantasyland')"
            },
            {
                "User": "I'd like to update the color of the photo with id 1 to 'RGB' instead of 'RBG'.",
                "Answer": "UPDATE photos SET color = 'RGB' WHERE id = 1"
            },
            {
                "User": "Can we create a new table to track photographers with columns for id, name, and country?",
                "Answer": "CREATE TABLE photographers (id number PRIMARY KEY, name text, country text)"
            },
            {
                "User": "Please add a photographer named 'John Doe' from 'USA' to the new photographers table.",
                "Answer": "INSERT INTO photographers (name, country) VALUES ('John Doe', 'USA')"
            },
            {
                "User": "Can you show me all photos taken with a lens that has a focal length less than 50mm?",
                "Answer": "SELECT p.* FROM photos p JOIN camera_lens cl ON p.camera_lens_id = cl.id WHERE cl.focal_length_mm < 50"
            },
            {
                "User": "Let's add a column to track the date when the photo was taken in the photos table.",
                "Answer": "ALTER TABLE photos ADD COLUMN date_taken date"
            },
            {
                "User": "Now, update the 'date_taken' for the photo with id 2 to '2023-04-01'.",
                "Answer": "UPDATE photos SET date_taken = '2023-04-01' WHERE id = 2"
            },
            {
                "User": "Can I see the list of mountains along with the number of photos taken for each mountain?",
                "Answer": "SELECT m.name, COUNT(p.id) as photo_count FROM mountain m LEFT JOIN photos p ON m.id = p.mountain_id GROUP BY m.id"
            },
            {
                "User": "I want to know the average height of mountains in Ethiopia.",
                "Answer": "SELECT AVG(Height) FROM mountain WHERE Country = 'Ethiopia'"
            },
            {
                "User": "Please insert a new camera lens record for 'Canon' brand with the name 'Canon EF 50mm f/1.2L', focal length of 50mm, and max aperture of 1.2.",
                "Answer": "INSERT INTO camera_lens (brand, name, focal_length_mm, max_aperture) VALUES ('Canon', 'Canon EF 50mm f/1.2L', 50, 1.2)"
            },
            {
                "User": "Can we see all photos that are in 'Black/White' color?",
                "Answer": "SELECT * FROM photos WHERE color = 'Black/White'"
            },
            {
                "User": "I would like to add a 'description' column to the mountain table to store additional information.",
                "Answer": "ALTER TABLE mountain ADD COLUMN description text"
            },
            {
                "User": "Update the 'description' for 'Mount Fictional' to say 'A mystical mountain surrounded by clouds.'",
                "Answer": "UPDATE mountain SET description = 'A mystical mountain surrounded by clouds.' WHERE name = 'Mount Fictional'"
            }
        ]
    },
    {
        "idx": 765,
        "db": "college_3",
        "interaction": [
            {
                "User": "Can we add a new student named John Doe, aged 20, majoring in Biology with DNO 20?",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 20, NULL, NULL)"
            },
            {
                "User": "How many students are there in the Biology department now?",
                "Answer": "SELECT COUNT(*) FROM Student WHERE Major = 20"
            },
            {
                "User": "I need to update John Doe's advisor to FacID 1121 and city code to 'NYC'.",
                "Answer": "UPDATE Student SET Advisor = 1121, city_code = 'NYC' WHERE LName = 'Doe' AND Fname = 'John'"
            },
            {
                "User": "What is the phone number of John Doe's advisor?",
                "Answer": "SELECT Phone FROM Faculty WHERE FacID = (SELECT Advisor FROM Student WHERE LName = 'Doe' AND Fname = 'John')"
            },
            {
                "User": "Can we create a new table to track students' extracurricular activities?",
                "Answer": "CREATE TABLE Extracurricular (StuID number, Activity text, Position text, HoursPerWeek number)"
            },
            {
                "User": "Let's add John Doe's participation in the 'Robotics Club' as 'Member' for 5 hours per week.",
                "Answer": "INSERT INTO Extracurricular (StuID, Activity, Position, HoursPerWeek) VALUES (1004, 'Robotics Club', 'Member', 5)"
            },
            {
                "User": "Can you show me all students who are involved in extracurricular activities for more than 3 hours per week?",
                "Answer": "SELECT S.LName, S.Fname, E.Activity, E.HoursPerWeek FROM Student S JOIN Extracurricular E ON S.StuID = E.StuID WHERE E.HoursPerWeek > 3"
            },
            {
                "User": "We need to track the students' minor subjects. Can we add a 'Minor' column to the Student table?",
                "Answer": "ALTER TABLE Student ADD COLUMN Minor number"
            },
            {
                "User": "John Doe decided to minor in Chemistry with DNO 30. Please update his record.",
                "Answer": "UPDATE Student SET Minor = 30 WHERE LName = 'Doe' AND Fname = 'John'"
            },
            {
                "User": "Which students are minoring in the same subject as John Doe?",
                "Answer": "SELECT S.LName, S.Fname FROM Student S WHERE S.Minor = (SELECT Minor FROM Student WHERE LName = 'Doe' AND Fname = 'John')"
            },
            {
                "User": "Can we enroll John Doe in course '600.107' and assign him grade 'A-'?",
                "Answer": "INSERT INTO Enrolled_in (StuID, CID, Grade) VALUES (1004, '600.107', 'A-')"
            }
        ]
    },
    {
        "idx": 766,
        "db": "pilot_record",
        "interaction": [
            {
                "User": "Can you add a new aircraft to the fleet with the following details? Aircraft ID: 8, Order Year: 2021, Manufacturer: Airbus, Model: A320neo, Fleet Series: '800-810', Powertrain: 'CFM LEAP-1A', Fuel Propulsion: 'Jet Fuel'",
                "Answer": "INSERT INTO aircraft (Aircraft_ID, Order_Year, Manufacturer, Model, Fleet_Series, Powertrain, Fuel_Propulsion) VALUES (8, 2021, 'Airbus', 'A320neo', '800-810', 'CFM LEAP-1A', 'Jet Fuel')"
            },
            {
                "User": "Update the rank of pilot Patrick O'Bryant to 14.",
                "Answer": "UPDATE pilot SET Rank = 14 WHERE Pilot_name = 'Patrick O''Bryant'"
            },
            {
                "User": "I'd like to see the updated rank of Patrick O'Bryant.",
                "Answer": "SELECT Rank FROM pilot WHERE Pilot_name = 'Patrick O''Bryant'"
            },
            {
                "User": "Create a new table to track maintenance records for aircrafts with columns for Record_ID, Aircraft_ID, Maintenance_Date, and Description.",
                "Answer": "CREATE TABLE maintenance_record (Record_ID number PRIMARY KEY, Aircraft_ID number, Maintenance_Date text, Description text)"
            },
            {
                "User": "Add a new column 'Hours_Flown' to the aircraft table to record the total flight hours.",
                "Answer": "ALTER TABLE aircraft ADD Hours_Flown number"
            },
            {
                "User": "Record a new flight for pilot Dan O'Sullivan on aircraft ID 3 with the record ID 7 on the date 2023/03/15.",
                "Answer": "INSERT INTO pilot_record (Record_ID, Pilot_ID, Aircraft_ID, Date) VALUES (7, 3, 3, '2023/03/15')"
            },
            {
                "User": "Can you show me the total number of pilots who joined each team?",
                "Answer": "SELECT Team, COUNT(Pilot_ID) as Total_Pilots FROM pilot GROUP BY Team"
            },
            {
                "User": "Insert a maintenance record for aircraft ID 2, with Record_ID 1, performed on 2023/04/01, with a description of 'Annual engine overhaul'.",
                "Answer": "INSERT INTO maintenance_record (Record_ID, Aircraft_ID, Maintenance_Date, Description) VALUES (1, 2, '2023/04/01', 'Annual engine overhaul')"
            },
            {
                "User": "Show me all aircraft that have been ordered after 2010.",
                "Answer": "SELECT * FROM aircraft WHERE Order_Year > 2010"
            },
            {
                "User": "Can you update the Hours_Flown for aircraft ID 1 to 15000 hours?",
                "Answer": "UPDATE aircraft SET Hours_Flown = 15000 WHERE Aircraft_ID = 1"
            },
            {
                "User": "Let's add a column to pilot_record to track the duration of each flight in hours.",
                "Answer": "ALTER TABLE pilot_record ADD Flight_Duration number"
            }
        ]
    },
    {
        "idx": 767,
        "db": "storm_record",
        "interaction": [
            {
                "User": "Can we track the economic impact of storms on each region? We need a new table for that.",
                "Answer": "CREATE TABLE economic_impact (Region_id number, Storm_ID number, Estimated_losses_millions_USD number, PRIMARY KEY (Region_id, Storm_ID))"
            },
            {
                "User": "Please add the economic impact for storm 'One' in region with ID 1, estimated at 20 million USD.",
                "Answer": "INSERT INTO economic_impact (Region_id, Storm_ID, Estimated_losses_millions_USD) VALUES (1, 1, 20)"
            },
            {
                "User": "Update the economic impact for storm 'One' in region with ID 1 to 25 million USD.",
                "Answer": "UPDATE economic_impact SET Estimated_losses_millions_USD = 25 WHERE Region_id = 1 AND Storm_ID = 1"
            },
            {
                "User": "How many cities were affected by storm 'Two' and what was the economic impact?",
                "Answer": "SELECT T1.Number_city_affected, T2.Estimated_losses_millions_USD FROM affected_region AS T1 JOIN economic_impact AS T2 ON T1.Storm_ID = T2.Storm_ID WHERE T1.Storm_ID = 2"
            },
            {
                "User": "Let's record the intensity of storms. Add a column 'Category' to the 'storm' table to classify them.",
                "Answer": "ALTER TABLE storm ADD Category text"
            },
            {
                "User": "Classify storm 'One' as Category 3.",
                "Answer": "UPDATE storm SET Category = 'Category 3' WHERE Storm_ID = 1"
            },
            {
                "User": "What are the names and categories of all storms with a maximum speed over 970?",
                "Answer": "SELECT Name, Category FROM storm WHERE Max_speed > 970"
            },
            {
                "User": "I want to add a new region 'AR' for 'Argentina'. With region id 14",
                "Answer": "INSERT INTO region (Region_id, Region_code, Region_name) VALUES (14, 'AR', 'Argentina')"
            },
            {
                "User": "How many deaths were caused by storms in regions where at least 20 cities were affected?",
                "Answer": "SELECT T1.Name, SUM(T1.Number_Deaths) FROM storm AS T1 JOIN affected_region AS T2 ON T1.Storm_ID = T2.Storm_ID GROUP BY T1.Storm_ID HAVING SUM(T2.Number_city_affected) >= 20"
            },
            {
                "User": "We need to track the duration of storms. Add a 'Duration_days' column to the 'storm' table.",
                "Answer": "ALTER TABLE storm ADD Duration_days number"
            },
            {
                "User": "Calculate the duration in days for storm 'One' which started on May 19 and ended on May 25.",
                "Answer": "UPDATE storm \nSET Duration_days = julianday('2024-05-25') - julianday('2024-05-19') \nWHERE Storm_ID = 1;\n"
            },
            {
                "User": "Which storms lasted more than a week?",
                "Answer": "SELECT Name FROM storm WHERE Duration_days > 7"
            },
            {
                "User": "Show me the total damage in USD and total deaths for each storm category.",
                "Answer": "SELECT Category, SUM(Damage_millions_USD) AS Total_Damage, SUM(Number_Deaths) AS Total_Deaths FROM storm GROUP BY Category"
            },
            {
                "User": "For storm 'Three', update the number of affected cities in region with ID 3 to 35.",
                "Answer": "UPDATE affected_region SET Number_city_affected = 35 WHERE Region_id = 3 AND Storm_ID = 3"
            }
        ]
    },
    {
        "idx": 768,
        "db": "manufacturer",
        "interaction": [
            {
                "User": "How many manufacturers do we have in the database?",
                "Answer": "SELECT COUNT(*) FROM manufacturer"
            },
            {
                "User": "Please add a new manufacturer named 'Oak Furniture Co' that opened in 2021 with 5 factories and 3 shops.",
                "Answer": "INSERT INTO manufacturer (Manufacturer_ID, Open_Year, Name, Num_of_Factories, Num_of_Shops) VALUES (8, 2021, 'Oak Furniture Co', 5, 3)"
            },
            {
                "User": "Can you show me the updated list of manufacturers including the new one?",
                "Answer": "SELECT * FROM manufacturer"
            },
            {
                "User": "I'd like to update the number of shops for 'IKEA' to 20. Can you do that?",
                "Answer": "UPDATE manufacturer SET Num_of_Shops = 20 WHERE Name = 'IKEA'"
            },
            {
                "User": "Now, how many shops does IKEA have?",
                "Answer": "SELECT Num_of_Shops FROM manufacturer WHERE Name = 'IKEA'"
            },
            {
                "User": "Let's add a new column 'Country' to the manufacturer table to store the country where the manufacturer is located.",
                "Answer": "ALTER TABLE manufacturer ADD Country text"
            },
            {
                "User": "Please set the country for 'Chevrolet House' to 'USA'.",
                "Answer": "UPDATE manufacturer SET Country = 'USA' WHERE Name = 'Chevrolet House'"
            },
            {
                "User": "Can we create a new table for storing customer feedback with columns Feedback_ID, Manufacturer_ID, Furniture_ID, Rating, and Comment?",
                "Answer": "CREATE TABLE customer_feedback (Feedback_ID number PRIMARY KEY, Manufacturer_ID number, Furniture_ID number, Rating number, Comment text)"
            },
            {
                "User": "Insert a feedback record for the manufacturer with ID 2 and furniture with ID 1, with a rating of 5 and a comment 'Excellent quality'.",
                "Answer": "INSERT INTO customer_feedback (Feedback_ID, Manufacturer_ID, Furniture_ID, Rating, Comment) VALUES (1, 2, 1, 5, 'Excellent quality')"
            },
            {
                "User": "Can we see the average market rate for furniture produced by 'IKEA'?",
                "Answer": "SELECT AVG(f.Market_Rate) FROM furniture f JOIN furniture_manufacte fm ON f.Furniture_ID = fm.Furniture_ID WHERE fm.Manufacturer_ID = (SELECT Manufacturer_ID FROM manufacturer WHERE Name = 'IKEA')"
            },
            {
                "User": "Let's update the price of furniture with ID 3 manufactured by manufacturer with ID 1 to $250.",
                "Answer": "UPDATE furniture_manufacte SET Price_in_Dollar = 250 WHERE Manufacturer_ID = 1 AND Furniture_ID = 3"
            }
        ]
    },
    {
        "idx": 769,
        "db": "customers_card_transactions",
        "interaction": [
            {
                "User": "I'd like to add a new customer named John Doe with the phone number (555)555-5555 and email john.doe@example.com. What's the next available customer ID?",
                "Answer": "SELECT MAX(customer_id) + 1 AS next_available_id FROM Customers"
            },
            {
                "User": "Great, please add John Doe to the database with the next available customer ID.",
                "Answer": "INSERT INTO Customers (customer_id, customer_first_name, customer_last_name, customer_phone, customer_email) VALUES ((SELECT MAX(customer_id) + 1 FROM Customers), 'John', 'Doe', '(555)555-5555', 'john.doe@example.com')"
            },
            {
                "User": "I want to update Susie Wiza's address to '1234 New Address Lane, Cityville, NY 12345'.",
                "Answer": "UPDATE Customers SET customer_address = '1234 New Address Lane, Cityville, NY 12345' WHERE customer_first_name = 'Susie' AND customer_last_name = 'Wiza'"
            },
            {
                "User": "Can we track the preferred contact method for customers? We need a new field for that.",
                "Answer": "ALTER TABLE Customers ADD COLUMN preferred_contact_method text"
            },
            {
                "User": "Set the preferred contact method for customer Marcel Brekke to 'Email'.",
                "Answer": "UPDATE Customers SET preferred_contact_method = 'Email' WHERE customer_first_name = 'Marcel' AND customer_last_name = 'Brekke'"
            },
            {
                "User": "Create a new table for customer feedback with fields for feedback ID, customer ID, feedback text, and feedback date.",
                "Answer": "CREATE TABLE Customer_Feedback (feedback_id number PRIMARY KEY, customer_id number, feedback_text text, feedback_date time)"
            },
            {
                "User": "Insert a feedback record for customer ID 2, saying 'Great service!' on today's date.",
                "Answer": "INSERT INTO Customer_Feedback (feedback_id, customer_id, feedback_text, feedback_date) VALUES ((SELECT MAX(feedback_id) + 1 FROM Customer_Feedback), 2, 'Great service!', CURRENT_TIMESTAMP)"
            },
            {
                "User": "Can we see a list of all customers who have a 'Credit' card type and their card numbers?",
                "Answer": "SELECT c.customer_first_name, c.customer_last_name, cc.card_number FROM Customers c JOIN Customers_Cards cc ON c.customer_id = cc.customer_id WHERE cc.card_type_code = 'Credit'"
            },
            {
                "User": "I need to correct the card number for the customer with card ID 3, it should be '348237249146949'.",
                "Answer": "UPDATE Customers_Cards SET card_number = '348237249146949' WHERE card_id = 3"
            },
            {
                "User": "Some customers have updated their email. Can we add a new column to track the date when the email was last updated?",
                "Answer": "ALTER TABLE Customers ADD COLUMN email_last_updated time"
            },
            {
                "User": "Update the email_last_updated field to today's date for customer John Doe whose email was just changed.",
                "Answer": "UPDATE Customers SET email_last_updated = CURRENT_TIMESTAMP WHERE customer_first_name = 'John' AND customer_last_name = 'Doe'"
            }
        ]
    },
    {
        "idx": 770,
        "db": "protein_institute",
        "interaction": [
            {
                "User": "Can we track the number of research publications for each institution?",
                "Answer": "ALTER TABLE Institution ADD COLUMN Publications integer DEFAULT 0;"
            },
            {
                "User": "Please add the publication count for Ave Maria University as 75.",
                "Answer": "UPDATE Institution SET Publications = 75 WHERE Institution_id = '0';"
            },
            {
                "User": "Set the publication count for Dakota State University to 150.",
                "Answer": "UPDATE Institution SET Publications = 150 WHERE Institution_id = '1';"
            },
            {
                "User": "Edward Waters College has reported 30 new publications, update the records.",
                "Answer": "UPDATE Institution SET Publications = Publications + 30 WHERE Institution_id = '2';"
            },
            {
                "User": "Which institution has the highest number of publications?",
                "Answer": "SELECT Institution FROM Institution ORDER BY Publications DESC LIMIT 1;"
            },
            {
                "User": "Create a new table to keep track of protein patents.",
                "Answer": "CREATE TABLE protein_patents (patent_id text PRIMARY KEY, common_name text, patent_title text, filing_date date, Institution_id text, FOREIGN KEY (Institution_id) REFERENCES Institution(Institution_id));"
            },
            {
                "User": "Add a patent for the 'Tropical Clawed Frog' protein with the title 'Antifungal Peptide' filed on 2021-06-15.",
                "Answer": "INSERT INTO protein_patents (patent_id, common_name, patent_title, filing_date, Institution_id) VALUES ('P-001', 'Tropical Clawed Frog', 'Antifungal Peptide', '2021-06-15', '1');"
            },
            {
                "User": "Insert a new record for a building named 'BioTech Tower', with an address of '123 Innovation Drive', built in 2021, height 350 feet, and 25 floors.",
                "Answer": "INSERT INTO building (building_id, Name, Street_address, Years_as_tallest, Height_feet, Floors) VALUES ('8', 'BioTech Tower', '123 Innovation Drive', '2021', 350, 25);"
            },
            {
                "User": "Update the 'BioTech Tower' record to reflect that it is the tallest building since 2021.",
                "Answer": "UPDATE building SET Years_as_tallest = '2021–present' WHERE Name = 'BioTech Tower';"
            },
            {
                "User": "How many floors does the 'BioTech Tower' have?",
                "Answer": "SELECT Floors FROM building WHERE Name = 'BioTech Tower';"
            },
            {
                "User": "Which institutions are located in Florida?",
                "Answer": "SELECT Institution FROM Institution WHERE Location LIKE '%Florida%';"
            },
            {
                "User": "Add a column to track the founding year in the Roman numeral format.",
                "Answer": "ALTER TABLE Institution ADD COLUMN Founded_Roman text;"
            },
            {
                "User": "Update the founding year in Roman numerals for 'Ave Maria University' as 'MCMXCVIII'.",
                "Answer": "UPDATE Institution SET Founded_Roman = 'MCMXCVIII' WHERE Institution_id = '0';"
            }
        ]
    },
    {
        "idx": 771,
        "db": "formula_1",
        "interaction": [
            {
                "User": "Can you create a table to track the performance of pit crew teams?",
                "Answer": "CREATE TABLE pitCrewPerformance (performanceId number PRIMARY KEY, raceId number, teamName text, pitStopTime number, mistakes number, FOREIGN KEY (raceId) REFERENCES races(raceId))"
            },
            {
                "User": "Please insert a record for the pit crew team 'RedBull Racing' with an average pit stop time of 2.4 seconds and 0 mistakes for the Australian Grand Prix.",
                "Answer": "INSERT INTO pitCrewPerformance (performanceId, raceId, teamName, pitStopTime, mistakes) VALUES (1, 1, 'RedBull Racing', 2.4, 0)"
            },
            {
                "User": "Now, can you update the pit stop time for 'RedBull Racing' to 2.3 seconds for the Australian Grand Prix?",
                "Answer": "UPDATE pitCrewPerformance SET pitStopTime = 2.3 WHERE teamName = 'RedBull Racing' AND raceId = 1"
            },
            {
                "User": "Can you show me the teams with zero mistakes during the Australian Grand Prix?",
                "Answer": "SELECT teamName FROM pitCrewPerformance WHERE mistakes = 0 AND raceId = 1"
            },
            {
                "User": "I'd like to add a column to track the location of each race in the races table, can you do that?",
                "Answer": "ALTER TABLE races ADD COLUMN location text"
            },
            {
                "User": "Please update the location for the Australian Grand Prix to 'Melbourne'.",
                "Answer": "UPDATE races SET location = 'Melbourne' WHERE name = 'Australian Grand Prix'"
            },
            {
                "User": "Can you list all the races that took place in Melbourne?",
                "Answer": "SELECT name, year FROM races WHERE location = 'Melbourne'"
            },
            {
                "User": "Let's add a new table to track the fan attendance for each race. Can you create that?",
                "Answer": "CREATE TABLE raceAttendance (attendanceId number PRIMARY KEY, raceId number, attendanceNumber number, FOREIGN KEY (raceId) REFERENCES races(raceId))"
            },
            {
                "User": "Insert the attendance for the Australian Grand Prix as 100000 fans.",
                "Answer": "INSERT INTO raceAttendance (attendanceId, raceId, attendanceNumber) VALUES (1, 1, 100000)"
            },
            {
                "User": "I realized we should also track the year of the race in the pitCrewPerformance table. Can you add this column?",
                "Answer": "ALTER TABLE pitCrewPerformance ADD COLUMN raceYear number"
            },
            {
                "User": "Update the race year for the RedBull Racing performance to 2009 for the Australian Grand Prix.",
                "Answer": "UPDATE pitCrewPerformance SET raceYear = 2009 WHERE teamName = 'RedBull Racing' AND raceId = 1"
            },
            {
                "User": "Can you show me the pit crew performance for teams in the year 2009 with no mistakes?",
                "Answer": "SELECT teamName, pitStopTime FROM pitCrewPerformance WHERE raceYear = 2009 AND mistakes = 0"
            },
            {
                "User": "Let's create a new table to store potential sponsors for races. Can you do that?",
                "Answer": "CREATE TABLE raceSponsors (sponsorId number PRIMARY KEY, raceId number, sponsorName text, sponsorshipAmount number, FOREIGN KEY (raceId) REFERENCES races(raceId))"
            },
            {
                "User": "Insert a new sponsor 'Acme Corp' for the Australian Grand Prix with a sponsorship amount of 500000.",
                "Answer": "INSERT INTO raceSponsors (sponsorId, raceId, sponsorName, sponsorshipAmount) VALUES (1, 1, 'Acme Corp', 500000)"
            }
        ]
    },
    {
        "idx": 772,
        "db": "e_government",
        "interaction": [
            {
                "User": "I'd like to register a new individual named John Doe with the phone number '123-456-7890' and email 'john.doe@example.com' living at '123 Main St, Anytown, CO, 12345, USA'.",
                "Answer": "INSERT INTO Individuals (individual_id, individual_first_name, individual_last_name, inidividual_phone, individual_email, individual_address) VALUES ((SELECT MAX(individual_id)+1 FROM Individuals), 'John', 'Doe', '123-456-7890', 'john.doe@example.com', '123 Main St, Anytown, CO, 12345, USA')"
            },
            {
                "User": "Can you update John Doe's email to 'john.d.new@example.com'?",
                "Answer": "UPDATE Individuals SET individual_email = 'john.d.new@example.com' WHERE individual_first_name = 'John' AND individual_last_name = 'Doe'"
            },
            {
                "User": "I want to create a new table to track individual login activities with columns for individual_id, login_time, and login_ip.",
                "Answer": "CREATE TABLE Individual_Login_Activities (individual_id NUMBER, login_time TIME, login_ip TEXT, FOREIGN KEY (individual_id) REFERENCES Individuals(individual_id))"
            },
            {
                "User": "What's the address of the organization with the name 'Labour Party'?",
                "Answer": "SELECT a.line_1_number_building, a.town_city, a.zip_postcode, a.state_province_county, a.country FROM Addresses AS a JOIN Organization_Contact_Individuals AS oci ON a.address_id = oci.organization_id JOIN Organizations AS o ON oci.organization_id = o.organization_id WHERE o.organization_name = 'Labour Party'"
            },
            {
                "User": "Log a new login activity for John Doe with IP '192.168.1.100' at the current time.",
                "Answer": "INSERT INTO Individual_Login_Activities (individual_id, login_time, login_ip) VALUES ((SELECT individual_id FROM Individuals WHERE individual_first_name = 'John' AND individual_last_name = 'Doe'), CURRENT_TIMESTAMP, '192.168.1.100')"
            },
            {
                "User": "Add a new column 'individual_dob' to store the date of birth of individuals.",
                "Answer": "ALTER TABLE Individuals ADD COLUMN individual_dob DATE"
            },
            {
                "User": "Set the date of birth for John Doe to January 1st, 1990.",
                "Answer": "UPDATE Individuals SET individual_dob = '1990-01-01' WHERE individual_first_name = 'John' AND individual_last_name = 'Doe'"
            },
            {
                "User": "I need to record a new service called 'Tax Assistance' with a description 'Assistance with tax filing'.",
                "Answer": "INSERT INTO Services (service_id, service_type_code, service_name, service_descriptio) VALUES ((SELECT MAX(service_id)+1 FROM Services), 'Assistance', 'Tax Assistance', 'Assistance with tax filing')"
            },
            {
                "User": "How many login activities have been recorded for John Doe?",
                "Answer": "SELECT COUNT(*) FROM Individual_Login_Activities WHERE individual_id = (SELECT individual_id FROM Individuals WHERE individual_first_name = 'John' AND individual_last_name = 'Doe')"
            },
            {
                "User": "Can you show me all services available in the 'Education' category?",
                "Answer": "SELECT * FROM Services WHERE service_type_code = 'Education'"
            }
        ]
    },
    {
        "idx": 773,
        "db": "chinook_1",
        "interaction": [
            {
                "User": "Can you add a new album for the artist 'AC/DC' called 'Power Up'?",
                "Answer": "INSERT INTO Album (Title, ArtistId) VALUES ('Power Up', (SELECT ArtistId FROM Artist WHERE Name = 'AC/DC'))"
            },
            {
                "User": "How many albums do we have now?",
                "Answer": "SELECT COUNT(*) FROM Album"
            },
            {
                "User": "Please list all albums by 'AC/DC'.",
                "Answer": "SELECT Title FROM Album WHERE ArtistId = (SELECT ArtistId FROM Artist WHERE Name = 'AC/DC')"
            },
            {
                "User": "I want to update the company name of customer Luís Gonçalves to 'Embraer Aerospace'.",
                "Answer": "UPDATE Customer SET Company = 'Embraer Aerospace' WHERE FirstName = 'Luís' AND LastName = 'Gonçalves'"
            },
            {
                "User": "What is the new company name of Luís Gonçalves?",
                "Answer": "SELECT Company FROM Customer WHERE FirstName = 'Luís' AND LastName = 'Gonçalves'"
            },
            {
                "User": "Can we add a new genre called 'Podcast'?",
                "Answer": "INSERT INTO Genre (Name) VALUES ('Podcast')"
            },
            {
                "User": "How many genres do we have now?",
                "Answer": "SELECT COUNT(*) FROM Genre"
            },
            {
                "User": "I'd like to create a new playlist for workouts. Can you do that?",
                "Answer": "INSERT INTO Playlist (Name) VALUES ('Workout')"
            },
            {
                "User": "How many playlists are there in total?",
                "Answer": "SELECT COUNT(*) FROM Playlist"
            },
            {
                "User": "Please add a new employee with the following details: FirstName: 'Alex', LastName: 'Turner', Title: 'Marketing Manager', ReportsTo: 2, BirthDate: '1986-01-06', HireDate: '2021-05-10', Address: '10 Downing St', City: 'London', State: 'LN', Country: 'UK', PostalCode: 'SW1A 2AA', Phone: '+44 20 7925 0918', Fax: '+44 20 7930 9456', Email: 'alex.turner@chinookcorp.com'.",
                "Answer": "INSERT INTO Employee (LastName, FirstName, Title, ReportsTo, BirthDate, HireDate, Address, City, State, Country, PostalCode, Phone, Fax, Email) VALUES ('Turner', 'Alex', 'Marketing Manager', 2, '1986-01-06', '2021-05-10', '10 Downing St', 'London', 'LN', 'UK', 'SW1A 2AA', '+44 20 7925 0918', '+44 20 7930 9456', 'alex.turner@chinookcorp.com')"
            },
            {
                "User": "Can you show me the list of all employees with their titles?",
                "Answer": "SELECT FirstName, LastName, Title FROM Employee"
            },
            {
                "User": "Let's add a new column 'Nickname' to the Customer table for their nicknames.",
                "Answer": "ALTER TABLE Customer ADD COLUMN Nickname text"
            },
            {
                "User": "Now, set the nickname for customer Luís Gonçalves to 'Louie'.",
                "Answer": "UPDATE Customer SET Nickname = 'Louie' WHERE FirstName = 'Luís' AND LastName = 'Gonçalves'"
            },
            {
                "User": "How many customers have we set nicknames for?",
                "Answer": "SELECT COUNT(*) FROM Customer WHERE Nickname IS NOT NULL"
            },
            {
                "User": "Create a new table to track customer feedback with columns FeedbackId, CustomerId, Comments, and DateReceived.",
                "Answer": "CREATE TABLE CustomerFeedback (FeedbackId number PRIMARY KEY, CustomerId number, Comments text, DateReceived time)"
            },
            {
                "User": "Add a feedback record for customer Luís Gonçalves with the comment 'Great service!' received on 2023-04-01.",
                "Answer": "INSERT INTO CustomerFeedback (FeedbackId, CustomerId, Comments, DateReceived) VALUES (1, (SELECT CustomerId FROM Customer WHERE FirstName = 'Luís' AND LastName = 'Gonçalves'), 'Great service!', '2023-04-01')"
            }
        ]
    },
    {
        "idx": 774,
        "db": "cre_Doc_Control_Systems",
        "interaction": [
            {
                "User": "Can you tell me how many documents are currently being worked on?",
                "Answer": "SELECT COUNT(*) FROM Documents WHERE document_status_code = 'working'"
            },
            {
                "User": "Please add a new document type for 'Digital' with a description of 'Electronic Format'.",
                "Answer": "INSERT INTO Ref_Document_Types (document_type_code, document_type_description) VALUES ('Digital', 'Electronic Format')"
            },
            {
                "User": "Now, how many different types of documents do we have?",
                "Answer": "SELECT COUNT(*) FROM Ref_Document_Types"
            },
            {
                "User": "I need to update the description of the 'Paper' document type to 'Printed Format'.",
                "Answer": "UPDATE Ref_Document_Types SET document_type_description = 'Printed Format' WHERE document_type_code = 'Paper'"
            },
            {
                "User": "Let's add a new role called 'Archivist' with a description 'Manages Archives'.",
                "Answer": "INSERT INTO Roles (role_code, role_description) VALUES ('AR', 'Manages Archives')"
            },
            {
                "User": "How many roles are in the system now?",
                "Answer": "SELECT COUNT(*) FROM Roles"
            },
            {
                "User": "Can you create a table to track document edits with columns for document_id, editor_employee_id, and edit_timestamp?",
                "Answer": "CREATE TABLE Document_Edits (document_id number, editor_employee_id number, edit_timestamp time, PRIMARY KEY (document_id, editor_employee_id))"
            },
            {
                "User": "Let's record a new edit for document ID 1 by employee ID 2 with the current timestamp.",
                "Answer": "INSERT INTO Document_Edits (document_id, editor_employee_id, edit_timestamp) VALUES (1, 2, CURRENT_TIMESTAMP)"
            },
            {
                "User": "I want to see a list of all employees who are editors.",
                "Answer": "SELECT * FROM Employees WHERE role_code = 'ED'"
            },
            {
                "User": "Could you tell me which employee edited document ID 1 last?",
                "Answer": "SELECT t1.employee_name FROM Employees as t1 JOIN Document_Edits as t2 ON t1.employee_id = t2.editor_employee_id WHERE t2.document_id = 1 ORDER BY t2.edit_timestamp DESC LIMIT 1"
            },
            {
                "User": "Please add a column 'last_edited_timestamp' to the 'Documents' table to track the last edit time.",
                "Answer": "ALTER TABLE Documents ADD COLUMN last_edited_timestamp time"
            },
            {
                "User": "Now, update the 'last_edited_timestamp' for document ID 1 with the current timestamp.",
                "Answer": "UPDATE Documents SET last_edited_timestamp = CURRENT_TIMESTAMP WHERE document_id = 1"
            },
            {
                "User": "Show me all documents that have been mailed with their mailing date and last edited timestamp.",
                "Answer": "SELECT t1.document_id, t1.mailing_date, t2.last_edited_timestamp FROM Documents_Mailed as t1 JOIN Documents as t2 ON t1.document_id = t2.document_id"
            }
        ]
    },
    {
        "idx": 775,
        "db": "storm_record",
        "interaction": [
            {
                "User": "Can we track the economic impact of storms on regions over time?",
                "Answer": "ALTER TABLE region ADD COLUMN Economic_impact_millions_USD number"
            },
            {
                "User": "Add a record for the economic impact of storm 'One' on Afghanistan, which was $5 million.",
                "Answer": "UPDATE region SET Economic_impact_millions_USD = 5 WHERE Region_code = 'AF'"
            },
            {
                "User": "How many storms have caused more than $10 million in damage?",
                "Answer": "SELECT COUNT(*) FROM storm WHERE Damage_millions_USD > 10"
            },
            {
                "User": "Insert a new storm record with ID 11, named 'Eleven', active from 'September1–September5', with a max speed of 980, damage of $20 million, and 10 deaths.",
                "Answer": "INSERT INTO storm (Storm_ID, Name, Dates_active, Max_speed, Damage_millions_USD, Number_Deaths) VALUES (11, 'Eleven', 'September1–September5', 980, 20, 10)"
            },
            {
                "User": "Which region has the highest economic impact from storms?",
                "Answer": "SELECT Region_name FROM region ORDER BY Economic_impact_millions_USD DESC LIMIT 1"
            },
            {
                "User": "Create a new table to log the storm updates with columns for update_id, storm_id, update_date, and update_description.",
                "Answer": "CREATE TABLE storm_updates (Update_ID number PRIMARY KEY, Storm_ID number, Update_date text, Update_description text)"
            },
            {
                "User": "Log an update for storm 'Eleven' stating it has been downgraded on 'September3'.",
                "Answer": "INSERT INTO storm_updates (Update_ID, Storm_ID, Update_date, Update_description) VALUES (1, 11, 'September3', 'Storm has been downgraded')"
            },
            {
                "User": "What is the total number of deaths from all the storms?",
                "Answer": "SELECT SUM(Number_Deaths) FROM storm"
            },
            {
                "User": "Increase the damage estimate for storm 'Two' by $2 million due to new reports.",
                "Answer": "UPDATE storm SET Damage_millions_USD = Damage_millions_USD + 2 WHERE Name = 'Two'"
            },
            {
                "User": "How many cities were affected by storm 'Three'?",
                "Answer": "SELECT SUM(Number_city_affected) FROM affected_region WHERE Storm_ID = (SELECT Storm_ID FROM storm WHERE Name = 'Three')"
            },
            {
                "User": "Add a new column to track the number of displaced people for each affected region.",
                "Answer": "ALTER TABLE affected_region ADD COLUMN Number_displaced_people number"
            },
            {
                "User": "Update the number of displaced people in Afghanistan due to storm 'One' to 1000.",
                "Answer": "UPDATE affected_region SET Number_displaced_people = 1000 WHERE Region_id = (SELECT Region_id FROM region WHERE Region_code = 'AF') AND Storm_ID = (SELECT Storm_ID FROM storm WHERE Name = 'One')"
            },
            {
                "User": "Show the details of all storms that caused displacement of more than 500 people.",
                "Answer": "SELECT * FROM storm WHERE Storm_ID IN (SELECT Storm_ID FROM affected_region WHERE Number_displaced_people > 500)"
            }
        ]
    },
    {
        "idx": 776,
        "db": "party_host",
        "interaction": [
            {
                "User": "Could you add a new party with the theme 'Retro', located at 'Club Vintage', starting from 1999 to 2003, with 7 hosts?",
                "Answer": "INSERT INTO party (Party_ID, Party_Theme, Location, First_year, Last_year, Number_of_hosts) VALUES (9, 'Retro', 'Club Vintage', '1999', '2003', 7)"
            },
            {
                "User": "I just realized that the 'Retro' party should have 8 hosts instead of 7. Can we update this information?",
                "Answer": "UPDATE party SET Number_of_hosts = 8 WHERE Party_ID = 9"
            },
            {
                "User": "Let's add a new host named 'Jamie Smith' from 'Canada', who is 29 years old.",
                "Answer": "INSERT INTO host (Host_ID, Name, Nationality, Age) VALUES (11, 'Jamie Smith', 'Canada', '29')"
            },
            {
                "User": "Now, I'd like for Jamie Smith to be the main host in charge of the 'Retro' party.",
                "Answer": "INSERT INTO party_host (Party_ID, Host_ID, Is_Main_in_Charge) VALUES (9, 11, 'T')"
            },
            {
                "User": "Can you show me all the hosts from the United States?",
                "Answer": "SELECT * FROM host WHERE Nationality = 'United States'"
            },
            {
                "User": "Please create a new table for party reviews with columns for review ID, party ID, review text, and rating out of 5.",
                "Answer": "CREATE TABLE party_reviews (Review_ID number PRIMARY KEY, Party_ID number, Review_Text text, Rating number)"
            },
            {
                "User": "Let's add a review for the 'Spring' party with a rating of 4. The review text should be 'Amazing experience, loved the vibe!'",
                "Answer": "INSERT INTO party_reviews (Review_ID, Party_ID, Review_Text, Rating) VALUES (1, 1, 'Amazing experience, loved the vibe!', 4)"
            },
            {
                "User": "We should also track the date when a review was posted. Can we add a new column for the review date?",
                "Answer": "ALTER TABLE party_reviews ADD COLUMN Review_Date text"
            },
            {
                "User": "I want to update the review for the 'Spring' party with today's date, '2023-04-01'.",
                "Answer": "UPDATE party_reviews SET Review_Date = '2023-04-01' WHERE Review_ID = 1"
            },
            {
                "User": "Can you provide me with a list of all parties that occurred in the year 2000?",
                "Answer": "SELECT * FROM party WHERE '2000' BETWEEN First_year AND Last_year"
            }
        ]
    },
    {
        "idx": 777,
        "db": "wedding",
        "interaction": [
            {
                "User": "Can we record the occupation of each person in the database?",
                "Answer": "ALTER TABLE people ADD COLUMN Occupation text;"
            },
            {
                "User": "Please add 'Teacher' as the occupation for Juli Hanson.",
                "Answer": "UPDATE people SET Occupation = 'Teacher' WHERE Name = 'Juli Hanson';"
            },
            {
                "User": "Who are the teachers in our database?",
                "Answer": "SELECT Name FROM people WHERE Occupation = 'Teacher';"
            },
            {
                "User": "I would like to add a new church called 'Unity Church' organized by 'Anna Smith' that opened in 2020 and is a continuation of 'Independent Church'.",
                "Answer": "INSERT INTO church (Name, Organized_by, Open_Date, Continuation_of) VALUES ('Unity Church', 'Anna Smith', 2020, 'Independent Church');"
            },
            {
                "User": "Can we get a list of all churches that opened after 2015 and their organizers?",
                "Answer": "SELECT Name, Organized_by FROM church WHERE Open_Date > 2015;"
            },
            {
                "User": "Let's create a new table to record wedding guests with columns for guest ID, wedding ID, name, and RSVP status.",
                "Answer": "CREATE TABLE wedding_guests (Guest_ID number PRIMARY KEY, Wedding_ID number, Name text, RSVP text, FOREIGN KEY (Wedding_ID) REFERENCES wedding (Church_ID));"
            },
            {
                "User": "Add 'John Doe' as a guest for the first wedding with an RSVP status of 'Yes'.",
                "Answer": "INSERT INTO wedding_guests (Guest_ID, Wedding_ID, Name, RSVP) VALUES (1, 1, 'John Doe', 'Yes');"
            },
            {
                "User": "How many guests have RSVP'd 'Yes' for the first wedding?",
                "Answer": "SELECT COUNT(*) FROM wedding_guests WHERE Wedding_ID = 1 AND RSVP = 'Yes';"
            },
            {
                "User": "Update the RSVP status of 'John Doe' to 'No' for the first wedding.",
                "Answer": "UPDATE wedding_guests SET RSVP = 'No' WHERE Name = 'John Doe' AND Wedding_ID = 1;"
            },
            {
                "User": "List all the weddings and the number of guests who have RSVP'd 'Yes' for each.",
                "Answer": "SELECT Wedding_ID, COUNT(*) AS Yes_RSVPs FROM wedding_guests WHERE RSVP = 'Yes' GROUP BY Wedding_ID;"
            },
            {
                "User": "Who organized the church where Mike Weir got married?",
                "Answer": "SELECT T2.Organized_by FROM wedding AS T1 JOIN church AS T2 ON T1.Church_ID = T2.Church_ID JOIN people AS T3 ON T1.Male_ID = T3.People_ID WHERE T3.Name = 'Mike Weir';"
            },
            {
                "User": "Create a new table to record the relationship between people with columns for person ID, spouse ID, and date of marriage.",
                "Answer": "CREATE TABLE relationships (Person_ID number, Spouse_ID number, Marriage_Date number, FOREIGN KEY (Person_ID) REFERENCES people (People_ID), FOREIGN KEY (Spouse_ID) REFERENCES people (People_ID));"
            },
            {
                "User": "Record the marriage of Mike Weir and Juli Hanson with the date 2014.",
                "Answer": "INSERT INTO relationships (Person_ID, Spouse_ID, Marriage_Date) VALUES ((SELECT People_ID FROM people WHERE Name = 'Mike Weir'), (SELECT People_ID FROM people WHERE Name = 'Juli Hanson'), 2014);"
            }
        ]
    },
    {
        "idx": 778,
        "db": "voter_2",
        "interaction": [
            {
                "User": "How many students are registered to vote in the 'Spring' election cycle?",
                "Answer": "SELECT COUNT(*) FROM Voting_record WHERE Election_Cycle = 'Spring'"
            },
            {
                "User": "I want to add a new student named John Doe, aged 20, studying major number 610 with advisor 7712 from city 'NYC'.",
                "Answer": "INSERT INTO Student (StuID, LName, Fname, Age, Sex, Major, Advisor, city_code) VALUES (1036, 'Doe', 'John', 20, 'M', 610, 7712, 'NYC')"
            },
            {
                "User": "Update the major for Tracy Kim to 610.",
                "Answer": "UPDATE Student SET Major = 610 WHERE LName = 'Kim' AND Fname = 'Tracy'"
            },
            {
                "User": "Create a new table to track the student council members with columns for ID, position, and term start date.",
                "Answer": "CREATE TABLE Student_Council (ID number PRIMARY KEY, Position text, Term_Start_Date text)"
            },
            {
                "User": "Add John Doe to the student council as the Treasurer starting from '04/01/2023'.",
                "Answer": "INSERT INTO Student_Council (ID, Position, Term_Start_Date) VALUES (1004, 'Treasurer', '04/01/2023')"
            },
            {
                "User": "Who is the advisor for students who live in 'BAL'?",
                "Answer": "SELECT DISTINCT Advisor FROM Student WHERE city_code = 'BAL'"
            },
            {
                "User": "Add a new column 'Email' to the Student table to store student email addresses.",
                "Answer": "ALTER TABLE Student ADD COLUMN Email text"
            },
            {
                "User": "Set the email for Linda Smith to 'linda.smith@email.com'.",
                "Answer": "UPDATE Student SET Email = 'linda.smith@email.com' WHERE LName = 'Smith' AND Fname = 'Linda'"
            },
            {
                "User": "Give me the list of student council members and their emails.",
                "Answer": "SELECT SC.ID, SC.Position, S.Email FROM Student_Council SC JOIN Student S ON SC.ID = S.StuID"
            },
            {
                "User": "I need to correct John Doe's advisor to 1121.",
                "Answer": "UPDATE Student SET Advisor = 1121 WHERE LName = 'Doe' AND Fname = 'John'"
            },
            {
                "User": "How many students are majoring in 600 now?",
                "Answer": "SELECT COUNT(*) FROM Student WHERE Major = 600"
            }
        ]
    },
    {
        "idx": 779,
        "db": "loan_1",
        "interaction": [
            {
                "User": "What is the total number of loans for each branch?",
                "Answer": "SELECT branch_ID, COUNT(*) AS total_loans FROM loan GROUP BY branch_ID"
            },
            {
                "User": "Can you update the number of customers for the 'morningside' branch to 210?",
                "Answer": "UPDATE bank SET no_of_customers = 210 WHERE bname = 'morningside'"
            },
            {
                "User": "I'd like to add a new customer named 'Lucy' with a checking account, a balance of 1500, no loans, a credit score of 75, and she belongs to the 'morningside' branch. What would be the SQL statement for that?",
                "Answer": "INSERT INTO customer (cust_ID, cust_name, acc_type, acc_bal, no_of_loans, credit_score, branch_ID, state) VALUES ('4', 'Lucy', 'checking', 1500, 0, 75, 1, 'New York')"
            },
            {
                "User": "Now, can you show me all customers from the 'morningside' branch including the new one?",
                "Answer": "SELECT * FROM customer WHERE branch_ID = 1"
            },
            {
                "User": "Could we add a new column to the customer table to track their email addresses?",
                "Answer": "ALTER TABLE customer ADD COLUMN email_address text"
            },
            {
                "User": "Please insert the email address 'mary@email.com' for the customer with cust_ID '1'.",
                "Answer": "UPDATE customer SET email_address = 'mary@email.com' WHERE cust_ID = '1'"
            },
            {
                "User": "Let's create a new table to track bank managers with their ID, name, and the branch they manage. What's the SQL command for that?",
                "Answer": "CREATE TABLE bank_manager (manager_ID number PRIMARY KEY, manager_name text, branch_ID number)"
            },
            {
                "User": "Insert a record for a manager named 'Alice' who manages the 'morningside' branch.",
                "Answer": "INSERT INTO bank_manager (manager_ID, manager_name, branch_ID) VALUES (1, 'Alice', 1)"
            },
            {
                "User": "Can you provide a list of branches along with their manager's name?",
                "Answer": "SELECT b.branch_ID, b.bname, bm.manager_name FROM bank b LEFT JOIN bank_manager bm ON b.branch_ID = bm.branch_ID"
            },
            {
                "User": "Let's update the 'downtown' branch to have 130 customers.",
                "Answer": "UPDATE bank SET no_of_customers = 130 WHERE bname = 'downtown'"
            },
            {
                "User": "Can you show me the total loan amount for each branch?",
                "Answer": "SELECT branch_ID, SUM(amount) AS total_loan_amount FROM loan GROUP BY branch_ID"
            }
        ]
    },
    {
        "idx": 780,
        "db": "activity_1",
        "interaction": [
            {
                "User": "How many students are there in each major?",
                "Answer": "SELECT Major, COUNT(*) AS NumberOfStudents FROM Student GROUP BY Major"
            },
            {
                "User": "Can you add a new activity called 'Skiing' to the activities list?, the actid is 800",
                "Answer": "INSERT INTO Activity (actid, activity_name) VALUES (800, 'Skiing')"
            },
            {
                "User": "Which students are participating in 'Mountain Climbing'?",
                "Answer": "SELECT S.StuID, S.Fname, S.LName FROM Student AS S JOIN Participates_in AS P ON S.StuID = P.stuid WHERE P.actid = (SELECT actid FROM Activity WHERE activity_name = 'Mountain Climbing')"
            },
            {
                "User": "Can you update the phone number of faculty member with FacID 1082 to 2425?",
                "Answer": "UPDATE Faculty SET Phone = 2425 WHERE FacID = 1082"
            },
            {
                "User": "I want to track the email addresses of faculty. Can you add a new column for email to the Faculty table?",
                "Answer": "ALTER TABLE Faculty ADD COLUMN Email text"
            },
            {
                "User": "Please insert the email address 'mark.giuliano@university.edu' for faculty member with FacID 1082.",
                "Answer": "UPDATE Faculty SET Email = 'mark.giuliano@university.edu' WHERE FacID = 1082"
            },
            {
                "User": "Can you show me the updated contact information for faculty member Mark Giuliano?",
                "Answer": "SELECT FacID, Fname, Lname, Phone, Email FROM Faculty WHERE Lname = 'Giuliano'"
            },
            {
                "User": "Is there a way to track the duration of each activity? We need to add a column for that.",
                "Answer": "ALTER TABLE Activity ADD COLUMN Duration_hours number"
            },
            {
                "User": "Let's set the duration of 'Skiing' to 4 hours.",
                "Answer": "UPDATE Activity SET Duration_hours = 4 WHERE activity_name = 'Skiing'"
            },
            {
                "User": "What are the details of the activity 'Skiing' now?",
                "Answer": "SELECT * FROM Activity WHERE activity_name = 'Skiing'"
            },
            {
                "User": "Create a new table to track equipment needed for each activity.",
                "Answer": "CREATE TABLE Activity_Equipment (actid number, equipment_name text, quantity number, PRIMARY KEY (actid, equipment_name))"
            },
            {
                "User": "Add skiing equipment with 20 sets of skis and 20 helmets to the new table.",
                "Answer": "INSERT INTO Activity_Equipment (actid, equipment_name, quantity) VALUES (773, 'Skis', 20), (773, 'Helmets', 20)"
            },
            {
                "User": "Can you show me the list of equipment needed for 'Skiing'?",
                "Answer": "SELECT equipment_name, quantity FROM Activity_Equipment WHERE actid = (SELECT actid FROM Activity WHERE activity_name = 'Skiing')"
            },
            {
                "User": "I've noticed that we don't have the city names for students, only codes. Can we add a new table for city codes and names?",
                "Answer": "CREATE TABLE City_Codes (city_code text PRIMARY KEY, city_name text)"
            },
            {
                "User": "Let's add city names for the codes 'BAL', 'HKG', and 'WAS'.",
                "Answer": "INSERT INTO City_Codes (city_code, city_name) VALUES ('BAL', 'Baltimore'), ('HKG', 'Hong Kong'), ('WAS', 'Washington D.C.')"
            }
        ]
    },
    {
        "idx": 781,
        "db": "phone_1",
        "interaction": [
            {
                "User": "Can we add a new chip model called 'X9 Power' launched in 2021 with 128 MiB RAM, 256 MiB ROM, 2 SIM slots, with WiFi and Bluetooth capabilities?",
                "Answer": "INSERT INTO chip_model (Model_name, Launch_year, RAM_MiB, ROM_MiB, Slots, WiFi, Bluetooth) VALUES ('X9 Power', 2021, 128, 256, '2SIM', 'Yes', 'Yes')"
            },
            {
                "User": "How many chip models have been launched after the year 2010?",
                "Answer": "SELECT count ( * ) FROM chip_model WHERE Launch_year > 2010"
            },
            {
                "User": "I want to track the battery life of each phone model. Can we add a 'Battery_life_hours' column to the 'phone' table?",
                "Answer": "ALTER TABLE phone ADD Battery_life_hours number"
            },
            {
                "User": "What is the battery life of the 'LG-P760' model?",
                "Answer": "SELECT Battery_life_hours FROM phone WHERE Hardware_Model_name = 'LG-P760'"
            },
            {
                "User": "Update the battery life for 'LG-P760' to 48 hours.",
                "Answer": "UPDATE phone SET Battery_life_hours = 48 WHERE Hardware_Model_name = 'LG-P760'"
            },
            {
                "User": "Create a new table to track the repair history of the phones with columns 'Hardware_Model_name', 'Repair_Date', and 'Repair_Description'.",
                "Answer": "CREATE TABLE repair_history (Hardware_Model_name text, Repair_Date text, Repair_Description text, FOREIGN KEY (Hardware_Model_name) REFERENCES phone (Hardware_Model_name))"
            },
            {
                "User": "Insert a repair record for 'XPERIA T' with the repair date '2023-01-15' and description 'Screen replacement'.",
                "Answer": "INSERT INTO repair_history (Hardware_Model_name, Repair_Date, Repair_Description) VALUES ('XPERIA T', '2023-01-15', 'Screen replacement')"
            },
            {
                "User": "How many repairs were carried out in January 2023?",
                "Answer": "SELECT count ( * ) FROM repair_history WHERE Repair_Date BETWEEN '2023-01-01' AND '2023-01-31'"
            },
            {
                "User": "Can we track the software version of each phone? Let's add a 'Software_Version' column to the 'phone' table.",
                "Answer": "ALTER TABLE phone ADD Software_Version text"
            },
            {
                "User": "Set the software version for 'Lumia 920' to 'Windows 10 Mobile'.",
                "Answer": "UPDATE phone SET Software_Version = 'Windows 10 Mobile' WHERE Hardware_Model_name LIKE '%Lumia 920%'"
            },
            {
                "User": "Which phones have software versions that are not updated to the latest?",
                "Answer": "SELECT Hardware_Model_name, Software_Version FROM phone WHERE Software_Version != 'Latest'"
            }
        ]
    },
    {
        "idx": 782,
        "db": "department_store",
        "interaction": [
            {
                "User": "Can we add a new supplier called 'FreshFarm' with the phone number '(123)456-7890', with id is 5?",
                "Answer": "INSERT INTO Suppliers (supplier_id, supplier_name, supplier_phone) VALUES (5, 'FreshFarm', '(123)456-7890')"
            },
            {
                "User": "Now, I would like to record FreshFarm's address as '123 Green St, Farmville, FV 12345'.",
                "Answer": "INSERT INTO Addresses (address_id, address_details) VALUES (16, '123 Green St, Farmville, FV 12345')"
            },
            {
                "User": "Please link the new supplier to their address.",
                "Answer": "INSERT INTO Supplier_Addresses (supplier_id, address_id, date_from, date_to) VALUES (4, 16, CURRENT_TIMESTAMP, NULL)"
            },
            {
                "User": "I want to add a new product type called 'Electronics'. Can we do that?",
                "Answer": "ALTER TABLE Products ADD COLUMN product_type_description text"
            },
            {
                "User": "Great, now add a product called 'Smartphone' with type 'Electronics' and price of 299.99.",
                "Answer": "INSERT INTO Products (product_id, product_type_code, product_name, product_price, product_type_description) VALUES (16, 'Electronics', 'Smartphone', 299.99, 'Electronics')"
            },
            {
                "User": "Can we update the product name of product ID 8 to 'Blue Jeans'?",
                "Answer": "UPDATE Products SET product_name = 'Blue Jeans' WHERE product_id = 8"
            },
            {
                "User": "I'd like to see all products of type 'Clothes' that have a price higher than 700.",
                "Answer": "SELECT product_name FROM Products WHERE product_type_code = 'Clothes' AND product_price > 700"
            },
            {
                "User": "Can we add a new customer named 'Alice Smith' with email 'alice.smith@example.com'?",
                "Answer": "INSERT INTO Customers (customer_id, payment_method_code, customer_code, customer_name, customer_address, customer_phone, customer_email) VALUES (16, 'Credit Card', '999', 'Alice Smith', '456 Oak St, Cityville, CT 67890', '(321)654-0987', 'alice.smith@example.com')"
            },
            {
                "User": "How many departments are there in the department store chain with id 2?",
                "Answer": "SELECT COUNT(*) FROM Departments WHERE dept_store_id IN (SELECT dept_store_id FROM Department_Stores WHERE dept_store_chain_id = 2)"
            },
            {
                "User": "Let's create a new table to track promotional events. It should have event_id, department_id, and event_details.",
                "Answer": "CREATE TABLE Promotional_Events (event_id number PRIMARY KEY, department_id number, event_details text)"
            },
            {
                "User": "Now, add a promotional event for department 2 with details 'Spring Sale 50% off'.",
                "Answer": "INSERT INTO Promotional_Events (event_id, department_id, event_details) VALUES (1, 2, 'Spring Sale 50% off')"
            },
            {
                "User": "Can you show me the total value purchased from supplier id 3?",
                "Answer": "SELECT SUM(total_value_purchased) FROM Product_Suppliers WHERE supplier_id = 3"
            },
            {
                "User": "Let's update the address of customer id 3 to the new address id 16.",
                "Answer": "UPDATE Customer_Addresses SET address_id = 16 WHERE customer_id = 3"
            },
            {
                "User": "I need to register a new order for customer id 16. The status should be 'New' and the order date is today.",
                "Answer": "INSERT INTO Customer_Orders (order_id, customer_id, order_status_code, order_date) VALUES (16, 16, 'New', CURRENT_TIMESTAMP)"
            }
        ]
    },
    {
        "idx": 783,
        "db": "insurance_policies",
        "interaction": [
            {
                "User": "How many customers do we have?",
                "Answer": "SELECT COUNT(*) FROM Customers"
            },
            {
                "User": "I want to add a new customer named 'John Doe' with customer ID 92.",
                "Answer": "INSERT INTO Customers (Customer_ID, Customer_Details) VALUES (92, 'John Doe')"
            },
            {
                "User": "Can you show me the updated list of all customers?",
                "Answer": "SELECT * FROM Customers"
            },
            {
                "User": "Let's add a new column 'Email' to the Customers table to store their email addresses.",
                "Answer": "ALTER TABLE Customers ADD Email text"
            },
            {
                "User": "Please update the email of customer John Doe to 'johndoe@example.com'.",
                "Answer": "UPDATE Customers SET Email = 'johndoe@example.com' WHERE Customer_Details = 'John Doe'"
            },
            {
                "User": "Create a new table for storing customer feedback with columns Feedback_ID, Customer_ID, and Feedback_Text.",
                "Answer": "CREATE TABLE Customer_Feedback (Feedback_ID number PRIMARY KEY, Customer_ID number, Feedback_Text text)"
            },
            {
                "User": "Insert a feedback record for John Doe with Feedback_ID 1 and the text 'Very satisfied with the service'.",
                "Answer": "INSERT INTO Customer_Feedback (Feedback_ID, Customer_ID, Feedback_Text) VALUES (1, 16, 'Very satisfied with the service')"
            },
            {
                "User": "Show me all policies that have expired.",
                "Answer": "SELECT * FROM Customer_Policies WHERE End_Date < CURRENT_DATE"
            },
            {
                "User": "I need to correct the Amount_Claimed for Claim_ID 143 to 45000. Update it please.",
                "Answer": "UPDATE Claims SET Amount_Claimed = 45000 WHERE Claim_ID = 143"
            },
            {
                "User": "How many claims have been settled for more than the amount claimed?",
                "Answer": "SELECT COUNT(*) FROM Claims WHERE Amount_Settled > Amount_Claimed"
            },
            {
                "User": "List all payments made by 'MasterCard' that are greater than 300000.",
                "Answer": "SELECT * FROM Payments WHERE Payment_Method_Code = 'MasterCard' AND Amount_Payment > 300000"
            },
            {
                "User": "Add a new column 'Status' to the Customer_Policies table to indicate if a policy is active or expired.",
                "Answer": "ALTER TABLE Customer_Policies ADD Status text"
            },
            {
                "User": "For all expired policies, set the 'Status' column to 'Expired'.",
                "Answer": "UPDATE Customer_Policies SET Status = 'Expired' WHERE End_Date < CURRENT_DATE"
            },
            {
                "User": "How many active policies do we currently have?",
                "Answer": "SELECT COUNT(*) FROM Customer_Policies WHERE Status IS NULL OR Status = 'Active'"
            }
        ]
    }
]